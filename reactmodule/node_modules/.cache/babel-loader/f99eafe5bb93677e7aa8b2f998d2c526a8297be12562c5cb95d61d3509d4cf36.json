{"ast":null,"code":"var __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n    r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n    d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport customElement from \"@ui5/webcomponents-base/dist/decorators/customElement.js\";\nimport property from \"@ui5/webcomponents-base/dist/decorators/property.js\";\nimport event from \"@ui5/webcomponents-base/dist/decorators/event.js\";\nimport Button from \"./Button.js\";\nimport ToolbarItem from \"./ToolbarItem.js\";\nimport ToolbarButtonTemplate from \"./generated/templates/ToolbarButtonTemplate.lit.js\";\nimport ToolbarPopoverButtonTemplate from \"./generated/templates/ToolbarPopoverButtonTemplate.lit.js\";\nimport ToolbarButtonPopoverCss from \"./generated/themes/ToolbarButtonPopover.css.js\";\nimport { registerToolbarItem } from \"./ToolbarRegistry.js\";\n/**\n * @class\n *\n * ### Overview\n * The `ui5-toolbar-button` represents an abstract action,\n * used in the `ui5-toolbar`.\n *\n * ### ES6 Module Import\n * `import \"@ui5/webcomponents/dist/ToolbarButton.js\";`\n * @constructor\n * @abstract\n * @extends ToolbarItem\n * @public\n * @since 1.17.0\n */\nlet ToolbarButton = class ToolbarButton extends ToolbarItem {\n  constructor() {\n    super(...arguments);\n    /**\n     * Defines if the action is disabled.\n     *\n     * **Note:** a disabled action can't be pressed or focused, and it is not in the tab chain.\n     * @default false\n     * @public\n     */\n    this.disabled = false;\n    /**\n     * Defines the action design.\n     * @default \"Default\"\n     * @public\n     */\n    this.design = \"Default\";\n    /**\n     * Defines the additional accessibility attributes that will be applied to the component.\n     *\n     * The following fields are supported:\n     *\n     * - **expanded**: Indicates whether the button, or another grouping element it controls, is currently expanded or collapsed.\n     * Accepts the following string values: `true` or `false`\n     *\n     * - **hasPopup**: Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by the button.\n     * Accepts the following string values: `dialog`, `grid`, `listbox`, `menu` or `tree`.\n     *\n     * - **controls**: Identifies the element (or elements) whose contents or presence are controlled by the button element.\n     * Accepts a lowercase string value.\n     *\n     * @default {}\n     * @public\n     */\n    this.accessibilityAttributes = {};\n  }\n  get styles() {\n    return {\n      width: this.width,\n      display: this.hidden ? \"none\" : \"inline-block\"\n    };\n  }\n  get containsText() {\n    return true;\n  }\n  static get toolbarTemplate() {\n    return ToolbarButtonTemplate;\n  }\n  static get toolbarPopoverTemplate() {\n    return ToolbarPopoverButtonTemplate;\n  }\n  get subscribedEvents() {\n    const map = new Map();\n    map.set(\"click\", {\n      preventClosing: false\n    });\n    return map;\n  }\n};\n__decorate([property({\n  type: Boolean\n})], ToolbarButton.prototype, \"disabled\", void 0);\n__decorate([property()], ToolbarButton.prototype, \"design\", void 0);\n__decorate([property()], ToolbarButton.prototype, \"icon\", void 0);\n__decorate([property()], ToolbarButton.prototype, \"endIcon\", void 0);\n__decorate([property()], ToolbarButton.prototype, \"tooltip\", void 0);\n__decorate([property()], ToolbarButton.prototype, \"accessibleName\", void 0);\n__decorate([property()], ToolbarButton.prototype, \"accessibleNameRef\", void 0);\n__decorate([property({\n  type: Object\n})], ToolbarButton.prototype, \"accessibilityAttributes\", void 0);\n__decorate([property()], ToolbarButton.prototype, \"text\", void 0);\n__decorate([property()], ToolbarButton.prototype, \"width\", void 0);\nToolbarButton = __decorate([customElement({\n  tag: \"ui5-toolbar-button\",\n  dependencies: [Button],\n  styles: ToolbarButtonPopoverCss\n})\n/**\n * Fired when the component is activated either with a\n * mouse/tap or by using the Enter or Space key.\n *\n * **Note:** The event will not be fired if the `disabled`\n * property is set to `true`.\n * @public\n */, event(\"click\")], ToolbarButton);\nregisterToolbarItem(ToolbarButton);\nToolbarButton.define();\nexport default ToolbarButton;","map":{"version":3,"names":["customElement","property","event","Button","ToolbarItem","ToolbarButtonTemplate","ToolbarPopoverButtonTemplate","ToolbarButtonPopoverCss","registerToolbarItem","ToolbarButton","constructor","disabled","design","accessibilityAttributes","styles","width","display","hidden","containsText","toolbarTemplate","toolbarPopoverTemplate","subscribedEvents","map","Map","set","preventClosing","__decorate","type","Boolean","Object","tag","dependencies","define"],"sources":["/home/user/projects/reactproj/node_modules/@ui5/webcomponents/src/ToolbarButton.ts"],"sourcesContent":["import customElement from \"@ui5/webcomponents-base/dist/decorators/customElement.js\";\nimport property from \"@ui5/webcomponents-base/dist/decorators/property.js\";\nimport event from \"@ui5/webcomponents-base/dist/decorators/event.js\";\nimport Button from \"./Button.js\";\nimport type { ButtonAccessibilityAttributes } from \"./Button.js\";\nimport type ButtonDesign from \"./types/ButtonDesign.js\";\n\nimport ToolbarItem from \"./ToolbarItem.js\";\nimport type { IEventOptions } from \"./ToolbarItem.js\";\nimport ToolbarButtonTemplate from \"./generated/templates/ToolbarButtonTemplate.lit.js\";\nimport ToolbarPopoverButtonTemplate from \"./generated/templates/ToolbarPopoverButtonTemplate.lit.js\";\n\nimport ToolbarButtonPopoverCss from \"./generated/themes/ToolbarButtonPopover.css.js\";\n\nimport { registerToolbarItem } from \"./ToolbarRegistry.js\";\n\ntype ToolbarButtonAccessibilityAttributes = ButtonAccessibilityAttributes;\n\n/**\n * @class\n *\n * ### Overview\n * The `ui5-toolbar-button` represents an abstract action,\n * used in the `ui5-toolbar`.\n *\n * ### ES6 Module Import\n * `import \"@ui5/webcomponents/dist/ToolbarButton.js\";`\n * @constructor\n * @abstract\n * @extends ToolbarItem\n * @public\n * @since 1.17.0\n */\n@customElement({\n\ttag: \"ui5-toolbar-button\",\n\tdependencies: [Button],\n\tstyles: ToolbarButtonPopoverCss,\n})\n\n/**\n * Fired when the component is activated either with a\n * mouse/tap or by using the Enter or Space key.\n *\n * **Note:** The event will not be fired if the `disabled`\n * property is set to `true`.\n * @public\n */\n@event(\"click\")\nclass ToolbarButton extends ToolbarItem {\n\t/**\n\t * Defines if the action is disabled.\n\t *\n\t * **Note:** a disabled action can't be pressed or focused, and it is not in the tab chain.\n\t * @default false\n\t * @public\n\t */\n\t@property({ type: Boolean })\n\tdisabled = false;\n\n\t/**\n\t * Defines the action design.\n\t * @default \"Default\"\n\t * @public\n\t */\n\t@property()\n\tdesign: `${ButtonDesign}` = \"Default\";\n\n\t/**\n\t * Defines the `icon` source URI.\n\t *\n\t * **Note:** SAP-icons font provides numerous buil-in icons. To find all the available icons, see the\n\t * [Icon Explorer](https://sdk.openui5.org/test-resources/sap/m/demokit/iconExplorer/webapp/index.html).\n\t * @default undefined\n\t * @public\n\t */\n\t@property()\n\ticon?: string\n\n\t/**\n\t * Defines the icon, displayed as graphical element within the component after the button text.\n\t *\n\t * **Note:** It is highly recommended to use `endIcon` property only together with `icon` and/or `text` properties.\n\t * Usage of `endIcon` only should be avoided.\n\t *\n\t * The SAP-icons font provides numerous options.\n\t *\n\t * Example:\n\t * See all the available icons within the [Icon Explorer](https://sdk.openui5.org/test-resources/sap/m/demokit/iconExplorer/webapp/index.html).\n\t * @default undefined\n\t * @public\n\t */\n\t@property()\n\tendIcon?: string;\n\n\t/**\n\t * Defines the tooltip of the component.\n\t *\n\t * **Note:** A tooltip attribute should be provided for icon-only buttons, in order to represent their exact meaning/function.\n\t * @default undefined\n\t * @public\n\t */\n\t@property()\n\ttooltip?: string\n\n\t/**\n\t * Defines the accessible ARIA name of the component.\n\t * @default undefined\n\t * @public\n\t */\n\t@property()\n\taccessibleName?: string;\n\n\t/**\n\t * Receives id(or many ids) of the elements that label the component.\n\t * @default undefined\n\t * @public\n\t */\n\t@property()\n\taccessibleNameRef?: string;\n\n\t/**\n\t * Defines the additional accessibility attributes that will be applied to the component.\n\t *\n\t * The following fields are supported:\n\t *\n\t * - **expanded**: Indicates whether the button, or another grouping element it controls, is currently expanded or collapsed.\n\t * Accepts the following string values: `true` or `false`\n\t *\n\t * - **hasPopup**: Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by the button.\n\t * Accepts the following string values: `dialog`, `grid`, `listbox`, `menu` or `tree`.\n\t *\n\t * - **controls**: Identifies the element (or elements) whose contents or presence are controlled by the button element.\n\t * Accepts a lowercase string value.\n\t *\n\t * @default {}\n\t * @public\n\t */\n\t@property({ type: Object })\n\taccessibilityAttributes: ToolbarButtonAccessibilityAttributes = {};\n\n\t/**\n\t * Button text\n\t * @public\n\t * @default undefined\n\t */\n\t@property()\n\ttext?: string;\n\n\t/**\n\t * Defines the width of the button.\n\t *\n\t * **Note:** all CSS sizes are supported - 'percentage', 'px', 'rem', 'auto', etc.\n\t * @default undefined\n\t * @public\n\t */\n\t@property()\n\twidth?: string;\n\n\tget styles() {\n\t\treturn {\n\t\t\twidth: this.width,\n\t\t\tdisplay: this.hidden ? \"none\" : \"inline-block\",\n\t\t};\n\t}\n\n\tget containsText() {\n\t\treturn true;\n\t}\n\n\tstatic get toolbarTemplate() {\n\t\treturn ToolbarButtonTemplate;\n\t}\n\n\tstatic get toolbarPopoverTemplate() {\n\t\treturn ToolbarPopoverButtonTemplate;\n\t}\n\n\tget subscribedEvents(): Map<string, IEventOptions> {\n\t\tconst map = new Map();\n\t\tmap.set(\"click\", { preventClosing: false });\n\t\treturn map;\n\t}\n}\n\nregisterToolbarItem(ToolbarButton);\n\nToolbarButton.define();\n\nexport default ToolbarButton;\n\nexport type {\n\tToolbarButtonAccessibilityAttributes,\n};\n"],"mappings":";;;;;;;AAAA,OAAOA,aAAa,MAAM,0DAA0D;AACpF,OAAOC,QAAQ,MAAM,qDAAqD;AAC1E,OAAOC,KAAK,MAAM,kDAAkD;AACpE,OAAOC,MAAM,MAAM,aAAa;AAIhC,OAAOC,WAAW,MAAM,kBAAkB;AAE1C,OAAOC,qBAAqB,MAAM,oDAAoD;AACtF,OAAOC,4BAA4B,MAAM,2DAA2D;AAEpG,OAAOC,uBAAuB,MAAM,gDAAgD;AAEpF,SAASC,mBAAmB,QAAQ,sBAAsB;AAI1D;;;;;;;;;;;;;;;AA8BA,IAAMC,aAAa,GAAnB,MAAMA,aAAc,SAAQL,WAAW;EAAvCM,YAAA;;IACC;;;;;;;IAQA,KAAAC,QAAQ,GAAG,KAAK;IAEhB;;;;;IAMA,KAAAC,MAAM,GAAsB,SAAS;IAuDrC;;;;;;;;;;;;;;;;;IAkBA,KAAAC,uBAAuB,GAAyC,EAAE;EA4CnE;EAxBC,IAAIC,MAAMA,CAAA;IACT,OAAO;MACNC,KAAK,EAAE,IAAI,CAACA,KAAK;MACjBC,OAAO,EAAE,IAAI,CAACC,MAAM,GAAG,MAAM,GAAG;KAChC;EACF;EAEA,IAAIC,YAAYA,CAAA;IACf,OAAO,IAAI;EACZ;EAEA,WAAWC,eAAeA,CAAA;IACzB,OAAOd,qBAAqB;EAC7B;EAEA,WAAWe,sBAAsBA,CAAA;IAChC,OAAOd,4BAA4B;EACpC;EAEA,IAAIe,gBAAgBA,CAAA;IACnB,MAAMC,GAAG,GAAG,IAAIC,GAAG,EAAE;IACrBD,GAAG,CAACE,GAAG,CAAC,OAAO,EAAE;MAAEC,cAAc,EAAE;IAAK,CAAE,CAAC;IAC3C,OAAOH,GAAG;EACX;CACA;AA7HAI,UAAA,EADCzB,QAAQ,CAAC;EAAE0B,IAAI,EAAEC;AAAO,CAAE,CAAC,C,8CACX;AAQjBF,UAAA,EADCzB,QAAQ,EAAE,C,4CAC2B;AAWtCyB,UAAA,EADCzB,QAAQ,EAAE,C,0CACE;AAgBbyB,UAAA,EADCzB,QAAQ,EAAE,C,6CACM;AAUjByB,UAAA,EADCzB,QAAQ,EAAE,C,6CACK;AAQhByB,UAAA,EADCzB,QAAQ,EAAE,C,oDACa;AAQxByB,UAAA,EADCzB,QAAQ,EAAE,C,uDACgB;AAoB3ByB,UAAA,EADCzB,QAAQ,CAAC;EAAE0B,IAAI,EAAEE;AAAM,CAAE,CAAC,C,6DACwC;AAQnEH,UAAA,EADCzB,QAAQ,EAAE,C,0CACG;AAUdyB,UAAA,EADCzB,QAAQ,EAAE,C,2CACI;AA5GVQ,aAAa,GAAAiB,UAAA,EAflB1B,aAAa,CAAC;EACd8B,GAAG,EAAE,oBAAoB;EACzBC,YAAY,EAAE,CAAC5B,MAAM,CAAC;EACtBW,MAAM,EAAEP;CACR;AAED;;;;;;;GAAA,EAQCL,KAAK,CAAC,OAAO,CAAC,C,EACTO,aAAa,CAsIlB;AAEDD,mBAAmB,CAACC,aAAa,CAAC;AAElCA,aAAa,CAACuB,MAAM,EAAE;AAEtB,eAAevB,aAAa","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}