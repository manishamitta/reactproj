{"ast":null,"code":"\"use strict\";\n\nimport d from \"./util/whenDOMReady.js\";\nimport c from \"./EventProvider.js\";\nimport u from \"./FontFace.js\";\nimport v from \"./SystemCSSVars.js\";\nimport { getTheme as i } from \"./config/Theme.js\";\nimport a from \"./theming/applyTheme.js\";\nimport { registerCurrentRuntime as y } from \"./Runtimes.js\";\nimport { getFeature as p } from \"./FeaturesRegistry.js\";\nimport { attachThemeRegistered as g } from \"./theming/ThemeRegistered.js\";\nlet o = !1,\n  r;\nconst m = new c(),\n  h = () => o,\n  P = e => {\n    if (!o) {\n      m.attachEvent(\"boot\", e);\n      return;\n    }\n    e();\n  },\n  l = async () => {\n    if (r !== void 0) return r;\n    const e = async n => {\n      if (y(), typeof document > \"u\") {\n        n();\n        return;\n      }\n      g(S);\n      const t = p(\"OpenUI5Support\"),\n        f = t ? t.isOpenUI5Detected() : !1,\n        s = p(\"F6Navigation\");\n      t && (await t.init()), s && !f && s.init(), await d(), await a(i()), t && t.attachListeners(), u(), v(), n(), o = !0, await m.fireEventAsync(\"boot\");\n    };\n    return r = new Promise(e), r;\n  },\n  S = e => {\n    o && e === i() && a(i());\n  };\nexport { l as boot, P as attachBoot, h as isBooted };","map":{"version":3,"names":["d","c","u","v","getTheme","i","a","registerCurrentRuntime","y","getFeature","p","attachThemeRegistered","g","o","r","m","h","isBooted","P","e","attachEvent","l","boot","n","document","S","t","f","isOpenUI5Detected","s","init","attachListeners","fireEventAsync","Promise","attachBoot"],"sources":["/home/user/projects/reactproj/node_modules/@ui5/webcomponents-base/src/Boot.ts"],"sourcesContent":["import whenDOMReady from \"./util/whenDOMReady.js\";\nimport EventProvider from \"./EventProvider.js\";\nimport insertFontFace from \"./FontFace.js\";\nimport insertSystemCSSVars from \"./SystemCSSVars.js\";\nimport { getTheme } from \"./config/Theme.js\";\nimport applyTheme from \"./theming/applyTheme.js\";\nimport { registerCurrentRuntime } from \"./Runtimes.js\";\nimport { getFeature } from \"./FeaturesRegistry.js\";\nimport type OpenUI5Support from \"./features/OpenUI5Support.js\";\nimport type F6Navigation from \"./features/F6Navigation.js\";\nimport type { PromiseResolve } from \"./types.js\";\nimport { attachThemeRegistered } from \"./theming/ThemeRegistered.js\";\n\nlet booted = false;\nlet bootPromise: Promise<void>;\nconst eventProvider = new EventProvider<void, void>();\n\nconst isBooted = (): boolean => {\n\treturn booted;\n};\n\n/**\n * Attaches a callback that will be executed after boot finishes.\n * **Note:** If the framework already booted, the callback will be immediately executed.\n * @public\n * @param { Function } listener\n */\nconst attachBoot = (listener: () => void) => {\n\tif (!booted) {\n\t\teventProvider.attachEvent(\"boot\", listener);\n\t\treturn;\n\t}\n\n\tlistener();\n};\n\nconst boot = async (): Promise<void> => {\n\tif (bootPromise !== undefined) {\n\t\treturn bootPromise;\n\t}\n\n\tconst bootExecutor = async (resolve: PromiseResolve) => {\n\t\tregisterCurrentRuntime();\n\n\t\tif (typeof document === \"undefined\") {\n\t\t\tresolve();\n\t\t\treturn;\n\t\t}\n\n\t\tattachThemeRegistered(onThemeRegistered);\n\n\t\tconst openUI5Support = getFeature<typeof OpenUI5Support>(\"OpenUI5Support\");\n\t\tconst isOpenUI5Loaded = openUI5Support ? openUI5Support.isOpenUI5Detected() : false;\n\t\tconst f6Navigation = getFeature<typeof F6Navigation>(\"F6Navigation\");\n\n\t\tif (openUI5Support) {\n\t\t\tawait openUI5Support.init();\n\t\t}\n\n\t\tif (f6Navigation && !isOpenUI5Loaded) {\n\t\t\tf6Navigation.init();\n\t\t}\n\n\t\tawait whenDOMReady();\n\t\tawait applyTheme(getTheme());\n\t\topenUI5Support && openUI5Support.attachListeners();\n\t\tinsertFontFace();\n\t\tinsertSystemCSSVars();\n\n\t\tresolve();\n\n\t\tbooted = true;\n\t\tawait eventProvider.fireEventAsync(\"boot\");\n\t};\n\n\tbootPromise = new Promise(bootExecutor as (resolve: PromiseResolve) => void);\n\treturn bootPromise;\n};\n\n/**\n * Callback, executed after theme properties registration\n * to apply the newly registered theme.\n * @private\n * @param { string } theme\n */\nconst onThemeRegistered = (theme: string) => {\n\tif (booted && theme === getTheme()) { // getTheme should only be called if \"booted\" is true\n\t\tapplyTheme(getTheme());\n\t}\n};\n\nexport {\n\tboot,\n\tattachBoot,\n\tisBooted,\n};\n"],"mappings":";;AAAA,OAAOA,CAAA,MAAkB;AACzB,OAAOC,CAAA,MAAmB;AAC1B,OAAOC,CAAA,MAAoB;AAC3B,OAAOC,CAAA,MAAyB;AAChC,SAASC,QAAA,IAAAC,CAAA,QAAgB;AACzB,OAAOC,CAAA,MAAgB;AACvB,SAASC,sBAAA,IAAAC,CAAA,QAA8B;AACvC,SAASC,UAAA,IAAAC,CAAA,QAAkB;AAI3B,SAASC,qBAAA,IAAAC,CAAA,QAA6B;AAEtC,IAAIC,CAAA,GAAS;EACTC,CAAA;AACJ,MAAMC,CAAA,GAAgB,IAAId,CAAA;EAEpBe,CAAA,GAAWC,CAAA,KACTJ,CAAA;EASFK,CAAA,GAAcC,CAAA,IAAyB;IAC5C,IAAI,CAACN,CAAA,EAAQ;MACZE,CAAA,CAAcK,WAAA,CAAY,QAAQD,CAAQ;MAC1C;IACD;IAEAA,CAAA,CAAS,CACV;EAAA;EAEME,CAAA,GAAO,MAAAC,CAAA,KAA2B;IACvC,IAAIR,CAAA,KAAgB,QACnB,OAAOA,CAAA;IAGR,MAAMK,CAAA,GAAe,MAAOI,CAAA,IAA4B;MAGvD,IAFAf,CAAA,CAAuB,GAEnB,OAAOgB,QAAA,GAAa,KAAa;QACpCD,CAAA,CAAQ;QACR;MACD;MAEAX,CAAA,CAAsBa,CAAiB;MAEvC,MAAMC,CAAA,GAAiBhB,CAAA,CAAkC,gBAAgB;QACnEiB,CAAA,GAAkBD,CAAA,GAAiBA,CAAA,CAAeE,iBAAA,CAAkB,IAAI;QACxEC,CAAA,GAAenB,CAAA,CAAgC,cAAc;MAE/DgB,CAAA,KACH,MAAMA,CAAA,CAAeI,IAAA,CAAK,IAGvBD,CAAA,IAAgB,CAACF,CAAA,IACpBE,CAAA,CAAaC,IAAA,CAAK,GAGnB,MAAM9B,CAAA,CAAa,GACnB,MAAMM,CAAA,CAAWD,CAAA,CAAS,CAAC,GAC3BqB,CAAA,IAAkBA,CAAA,CAAeK,eAAA,CAAgB,GACjD7B,CAAA,CAAe,GACfC,CAAA,CAAoB,GAEpBoB,CAAA,CAAQ,GAERV,CAAA,GAAS,IACT,MAAME,CAAA,CAAciB,cAAA,CAAe,MAAM,CAC1C;IAAA;IAEA,OAAAlB,CAAA,GAAc,IAAImB,OAAA,CAAQd,CAAiD,GACpEL,CACR;EAAA;EAQMW,CAAA,GAAqBN,CAAA,IAAkB;IACxCN,CAAA,IAAUM,CAAA,KAAUd,CAAA,CAAS,KAChCC,CAAA,CAAWD,CAAA,CAAS,CAAC,CAEvB;EAAA;AAEA,SACCgB,CAAA,IAAAC,IAAA,EACAJ,CAAA,IAAAgB,UAAA,EACAlB,CAAA,IAAAC,QAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}