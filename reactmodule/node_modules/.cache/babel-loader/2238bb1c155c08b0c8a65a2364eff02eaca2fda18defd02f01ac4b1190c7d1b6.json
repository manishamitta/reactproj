{"ast":null,"code":"'use client';\n\nimport '@ui5/webcomponents/dist/FileUploader.js';\nimport { withWebComponent } from '../../internal/withWebComponent.js';\n/**\n * The `FileUploader` opens a file explorer dialog and enables users to upload files.\n * The component consists of input field, but you can provide an HTML element by your choice\n * to trigger the file upload, by using the default slot.\n * Furthermore, you can set the property \"hideInput\" to \"true\" to hide the input field.\n *\n * To get all selected files, you can simply use the read-only \"files\" property.\n * To restrict the types of files the user can select, you can use the \"accept\" property.\n *\n * And, similar to all input based components, the FileUploader supports \"valueState\", \"placeholder\", \"name\", and \"disabled\" properties.\n *\n * For the `FileUploader`\n *\n *\n * __Note__: This is a UI5 Web Component! [Repository](https://github.com/SAP/ui5-webcomponents) | [Documentation](https://sap.github.io/ui5-webcomponents/)\n */\nconst FileUploader = withWebComponent('ui5-file-uploader', ['accept', 'maxFileSize', 'name', 'placeholder', 'value', 'valueState'], ['disabled', 'hideInput', 'multiple'], ['valueStateMessage'], ['change', 'file-size-exceed']);\nFileUploader.displayName = 'FileUploader';\nexport { FileUploader };","map":{"version":3,"names":["withWebComponent","FileUploader","displayName"],"sources":["/home/user/projects/reactproj/node_modules/@ui5/webcomponents-react/dist/webComponents/FileUploader/index.js"],"sourcesContent":["'use client';\n\nimport '@ui5/webcomponents/dist/FileUploader.js';\nimport { withWebComponent } from '../../internal/withWebComponent.js';\n/**\n * The `FileUploader` opens a file explorer dialog and enables users to upload files.\n * The component consists of input field, but you can provide an HTML element by your choice\n * to trigger the file upload, by using the default slot.\n * Furthermore, you can set the property \"hideInput\" to \"true\" to hide the input field.\n *\n * To get all selected files, you can simply use the read-only \"files\" property.\n * To restrict the types of files the user can select, you can use the \"accept\" property.\n *\n * And, similar to all input based components, the FileUploader supports \"valueState\", \"placeholder\", \"name\", and \"disabled\" properties.\n *\n * For the `FileUploader`\n *\n *\n * __Note__: This is a UI5 Web Component! [Repository](https://github.com/SAP/ui5-webcomponents) | [Documentation](https://sap.github.io/ui5-webcomponents/)\n */\nconst FileUploader = withWebComponent('ui5-file-uploader', ['accept', 'maxFileSize', 'name', 'placeholder', 'value', 'valueState'], ['disabled', 'hideInput', 'multiple'], ['valueStateMessage'], ['change', 'file-size-exceed']);\nFileUploader.displayName = 'FileUploader';\nexport { FileUploader };"],"mappings":"AAAA,YAAY;;AAEZ,OAAO,yCAAyC;AAChD,SAASA,gBAAgB,QAAQ,oCAAoC;AACrE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMC,YAAY,GAAGD,gBAAgB,CAAC,mBAAmB,EAAE,CAAC,QAAQ,EAAE,aAAa,EAAE,MAAM,EAAE,aAAa,EAAE,OAAO,EAAE,YAAY,CAAC,EAAE,CAAC,UAAU,EAAE,WAAW,EAAE,UAAU,CAAC,EAAE,CAAC,mBAAmB,CAAC,EAAE,CAAC,QAAQ,EAAE,kBAAkB,CAAC,CAAC;AACjOC,YAAY,CAACC,WAAW,GAAG,cAAc;AACzC,SAASD,YAAY","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}