{"ast":null,"code":"\"use strict\";\n\nimport { isDown as _, isUp as d, isLeft as h, isRight as a, isHome as I, isEnd as c, isPageDown as m, isPageUp as l } from \"../Keys.js\";\nimport u from \"../util/getActiveElement.js\";\nimport n from \"../types/NavigationMode.js\";\nimport r from \"../types/ItemNavigationBehavior.js\";\nimport { instanceOfUI5Element as g } from \"../UI5Element.js\";\nclass f {\n  constructor(e, t) {\n    if (!e.isUI5Element) throw new Error(\"The root web component must be a UI5 Element instance\");\n    if (this.rootWebComponent = e, this.rootWebComponent.addEventListener(\"keydown\", this._onkeydown.bind(this)), this._initBound = this._init.bind(this), this.rootWebComponent.attachComponentStateFinalized(this._initBound), typeof t.getItemsCallback != \"function\") throw new Error(\"getItemsCallback is required\");\n    this._getItems = t.getItemsCallback, this._currentIndex = t.currentIndex || 0, this._rowSize = t.rowSize || 1, this._behavior = t.behavior || r.Static, this._navigationMode = t.navigationMode || n.Auto, this._affectedPropertiesNames = t.affectedPropertiesNames || [], this._skipItemsSize = t.skipItemsSize || null;\n  }\n  setCurrentItem(e) {\n    const t = this._getItems().indexOf(e);\n    if (t === -1) {\n      console.warn(\"The provided item is not managed by ItemNavigation\", e);\n      return;\n    }\n    this._currentIndex = t, this._applyTabIndex();\n  }\n  setRowSize(e) {\n    this._rowSize = e;\n  }\n  _init() {\n    this._getItems().forEach((e, t) => {\n      e.forcedTabIndex = t === this._currentIndex ? \"0\" : \"-1\";\n    });\n  }\n  _onkeydown(e) {\n    if (!this._canNavigate()) return;\n    const t = this._navigationMode === n.Horizontal || this._navigationMode === n.Auto,\n      i = this._navigationMode === n.Vertical || this._navigationMode === n.Auto,\n      s = this.rootWebComponent.effectiveDir === \"rtl\";\n    if (s && h(e) && t) this._handleRight();else if (s && a(e) && t) this._handleLeft();else if (h(e) && t) this._handleLeft();else if (a(e) && t) this._handleRight();else if (d(e) && i) this._handleUp();else if (_(e) && i) this._handleDown();else if (I(e)) this._handleHome();else if (c(e)) this._handleEnd();else if (l(e)) this._handlePageUp();else if (m(e)) this._handlePageDown();else return;\n    e.preventDefault(), this._applyTabIndex(), this._focusCurrentItem();\n  }\n  _handleUp() {\n    const e = this._getItems().length;\n    if (this._currentIndex - this._rowSize >= 0) {\n      this._currentIndex -= this._rowSize;\n      return;\n    }\n    if (this._behavior === r.Cyclic) {\n      const t = this._currentIndex % this._rowSize,\n        i = t === 0 ? this._rowSize - 1 : t - 1,\n        s = Math.ceil(e / this._rowSize);\n      let o = i + (s - 1) * this._rowSize;\n      o > e - 1 && (o -= this._rowSize), this._currentIndex = o;\n    } else this._currentIndex = 0;\n  }\n  _handleDown() {\n    const e = this._getItems().length;\n    if (this._currentIndex + this._rowSize < e) {\n      this._currentIndex += this._rowSize;\n      return;\n    }\n    if (this._behavior === r.Cyclic) {\n      const i = (this._currentIndex % this._rowSize + 1) % this._rowSize;\n      this._currentIndex = i;\n    } else this._currentIndex = e - 1;\n  }\n  _handleLeft() {\n    const e = this._getItems().length;\n    if (this._currentIndex > 0) {\n      this._currentIndex -= 1;\n      return;\n    }\n    this._behavior === r.Cyclic && (this._currentIndex = e - 1);\n  }\n  _handleRight() {\n    const e = this._getItems().length;\n    if (this._currentIndex < e - 1) {\n      this._currentIndex += 1;\n      return;\n    }\n    this._behavior === r.Cyclic && (this._currentIndex = 0);\n  }\n  _handleHome() {\n    const e = this._rowSize > 1 ? this._rowSize : this._getItems().length;\n    this._currentIndex -= this._currentIndex % e;\n  }\n  _handleEnd() {\n    const e = this._rowSize > 1 ? this._rowSize : this._getItems().length;\n    this._currentIndex += e - 1 - this._currentIndex % e;\n  }\n  _handlePageUp() {\n    this._rowSize > 1 || this._handlePageUpFlat();\n  }\n  _handlePageDown() {\n    this._rowSize > 1 || this._handlePageDownFlat();\n  }\n  _handlePageUpFlat() {\n    if (this._skipItemsSize === null) {\n      this._currentIndex -= this._currentIndex;\n      return;\n    }\n    this._currentIndex + 1 > this._skipItemsSize ? this._currentIndex -= this._skipItemsSize : this._currentIndex -= this._currentIndex;\n  }\n  _handlePageDownFlat() {\n    if (this._skipItemsSize === null) {\n      this._currentIndex = this._getItems().length - 1;\n      return;\n    }\n    this._getItems().length - this._currentIndex - 1 > this._skipItemsSize ? this._currentIndex += this._skipItemsSize : this._currentIndex = this._getItems().length - 1;\n  }\n  _applyTabIndex() {\n    const e = this._getItems();\n    for (let t = 0; t < e.length; t++) e[t].forcedTabIndex = t === this._currentIndex ? \"0\" : \"-1\";\n    this._affectedPropertiesNames.forEach(t => {\n      const i = this.rootWebComponent[t];\n      this.rootWebComponent[t] = Array.isArray(i) ? [...i] : {\n        ...i\n      };\n    });\n  }\n  _focusCurrentItem() {\n    const e = this._getCurrentItem();\n    e && e.focus();\n  }\n  _canNavigate() {\n    const e = this._getCurrentItem(),\n      t = u();\n    return e && e === t;\n  }\n  _getCurrentItem() {\n    const e = this._getItems();\n    if (!e.length) return;\n    for (; this._currentIndex >= e.length;) this._currentIndex -= this._rowSize;\n    this._currentIndex < 0 && (this._currentIndex = 0);\n    const t = e[this._currentIndex];\n    if (!t) return;\n    if (g(t)) return t.getFocusDomRef();\n    const i = this.rootWebComponent.getDomRef();\n    if (i && t.id) return i.querySelector(`[id=\"${t.id}\"]`);\n  }\n}\nexport default f;\nexport {};","map":{"version":3,"names":["isDown","_","isUp","d","isLeft","h","isRight","a","isHome","I","isEnd","c","isPageDown","m","isPageUp","l","u","n","r","instanceOfUI5Element","g","f","constructor","e","t","isUI5Element","Error","rootWebComponent","addEventListener","_onkeydown","bind","_initBound","_init","attachComponentStateFinalized","getItemsCallback","_getItems","_currentIndex","currentIndex","_rowSize","rowSize","_behavior","behavior","Static","_navigationMode","navigationMode","Auto","_affectedPropertiesNames","affectedPropertiesNames","_skipItemsSize","skipItemsSize","setCurrentItem","indexOf","console","warn","_applyTabIndex","setRowSize","forEach","forcedTabIndex","_canNavigate","Horizontal","i","Vertical","s","effectiveDir","_handleRight","_handleLeft","_handleUp","_handleDown","_handleHome","_handleEnd","_handlePageUp","_handlePageDown","preventDefault","_focusCurrentItem","length","Cyclic","Math","ceil","o","_handlePageUpFlat","_handlePageDownFlat","Array","isArray","_getCurrentItem","focus","getFocusDomRef","getDomRef","id","querySelector"],"sources":["/home/user/projects/reactproj/node_modules/@ui5/webcomponents-base/src/delegate/ItemNavigation.ts"],"sourcesContent":["import {\n\tisDown,\n\tisUp,\n\tisLeft,\n\tisRight,\n\tisHome,\n\tisEnd,\n\tisPageDown,\n\tisPageUp,\n} from \"../Keys.js\";\nimport getActiveElement from \"../util/getActiveElement.js\";\n\nimport NavigationMode from \"../types/NavigationMode.js\";\nimport ItemNavigationBehavior from \"../types/ItemNavigationBehavior.js\";\n\nimport type UI5Element from \"../UI5Element.js\";\nimport { instanceOfUI5Element } from \"../UI5Element.js\";\n\ninterface ITabbable {\n\tid: string,\n\tforcedTabIndex?: string,\n}\n\ntype ItemNavigationOptions = {\n\tcurrentIndex?: number,\n\tnavigationMode?: NavigationMode,\n\trowSize?: number\n\tskipItemsSize?: number,\n\tbehavior?: ItemNavigationBehavior,\n\tgetItemsCallback: () => Array<ITabbable>,\n\taffectedPropertiesNames?: Array<string>,\n};\n\n/**\n * The ItemNavigation class manages the calculations to determine the correct \"tabindex\" for a group of related items inside a root component.\n * Important: ItemNavigation only does the calculations and does not change \"tabindex\" directly, this is a responsibility of the developer.\n *\n * The keys that trigger ItemNavigation are:\n *  - Up/down\n *  - Left/right\n *  - Home/End\n *\n * Usage:\n * 1) Use the \"getItemsCallback\" constructor property to pass a callback to ItemNavigation, which, whenever called, will return the list of items to navigate among.\n *\n * Each item passed to ItemNavigation via \"getItemsCallback\" must be:\n *  - A) either a UI5Element with a \"forcedTabIndex\" property\n *  - B) or an Object with \"id\" and \"forcedTabIndex\" properties which represents a part of the root component's shadow DOM.\n *    The \"id\" must be a valid ID within the shadow root of the component ItemNavigation operates on.\n *    This object must not be a DOM object because, as said, ItemNavigation will not set \"tabindex\" on it. It must be a representation of a DOM object only\n *    and the developer has the responsibility to update the \"tabindex\" in the component's DOM.\n *  - C) a combination of the above\n *\n * Whenever the user navigates with the keyboard, ItemNavigation will modify the \"forcedTabIndex\" properties of the items.\n * It is the items' responsibilities to re-render themselves and apply the correct value of \"tabindex\" (i.e. to map the \"forcedTabIndex\" ItemNavigation set to them to the \"tabindex\" property).\n * If the items of the ItemNavigation are UI5Elements themselves, this can happen naturally since they will be invalidated by their \"forcedTabIndex\" property.\n * If the items are Objects with \"id\" and \"forcedTabIndex\" however, it is the developer's responsibility to apply these and the easiest way is to have the root component invalidated by ItemNavigation.\n * To do so, set the \"affectedPropertiesNames\" constructor property to point to one or more of the root component's properties that need refreshing when \"forcedTabIndex\" is changed deeply.\n *\n * 2) Call the \"setCurrentItem\" method of ItemNavigation whenever you want to change the current item.\n * This is most commonly required if the user for example clicks on an item and thus selects it directly.\n * Pass as the only argument to \"setCurrentItem\" the item that becomes current (must be one of the items, returned by \"getItemsCallback\").\n *\n * @class\n * @public\n */\nclass ItemNavigation {\n\trootWebComponent: UI5Element;\n\n\t_getItems: () => Array<ITabbable>;\n\n\t_currentIndex: number;\n\n\t_rowSize: number;\n\n\t_behavior: ItemNavigationBehavior;\n\n\t_navigationMode: NavigationMode;\n\n\t_affectedPropertiesNames: Array<string>;\n\n\t_skipItemsSize: number | null;\n\n\t_initBound: () => void;\n\n\t/**\n\t *\n\t * @param rootWebComponent the component to operate on (component that slots or contains within its shadow root the items the user navigates among)\n\t * @param {ItemNavigationOptions} options Object with configuration options:\n\t *  - currentIndex: the index of the item that will be initially selected (from which navigation will begin)\n\t *  - navigationMode (Auto|Horizontal|Vertical): whether the items are displayed horizontally (Horizontal), vertically (Vertical) or as a matrix (Auto) meaning the user can navigate in both directions (up/down and left/right)\n\t *  - rowSize: tells how many items per row there are when the items are not rendered as a flat list but rather as a matrix. Relevant for navigationMode=Auto\n\t * \t- skipItemsSize: tells how many items upon PAGE_UP and PAGE_DOWN should be skipped to applying the focus on the next item\n\t *  - behavior (Static|Cycling): tells what to do when trying to navigate beyond the first and last items\n\t *    Static means that nothing happens if the user tries to navigate beyond the first/last item.\n\t *    Cycling means that when the user navigates beyond the last item they go to the first and vice versa.\n\t *  - getItemsCallback: function that, when called, returns an array with all items the user can navigate among\n\t *  - affectedPropertiesNames: a list of metadata properties on the root component which, upon user navigation, will be reassigned by address thus causing the root component to invalidate\n\t */\n\tconstructor(rootWebComponent: UI5Element, options: ItemNavigationOptions) {\n\t\tif (!rootWebComponent.isUI5Element) {\n\t\t\tthrow new Error(\"The root web component must be a UI5 Element instance\");\n\t\t}\n\n\t\tthis.rootWebComponent = rootWebComponent;\n\t\tthis.rootWebComponent.addEventListener(\"keydown\", this._onkeydown.bind(this));\n\t\tthis._initBound = this._init.bind(this);\n\t\tthis.rootWebComponent.attachComponentStateFinalized(this._initBound);\n\n\t\tif (typeof options.getItemsCallback !== \"function\") {\n\t\t\tthrow new Error(\"getItemsCallback is required\");\n\t\t}\n\n\t\tthis._getItems = options.getItemsCallback;\n\t\tthis._currentIndex = options.currentIndex || 0;\n\t\tthis._rowSize = options.rowSize || 1;\n\t\tthis._behavior = options.behavior || ItemNavigationBehavior.Static;\n\t\tthis._navigationMode = options.navigationMode || NavigationMode.Auto;\n\t\tthis._affectedPropertiesNames = options.affectedPropertiesNames || [];\n\t\tthis._skipItemsSize = options.skipItemsSize || null;\n\t}\n\n\t/**\n\t * Call this method to set a new \"current\" (selected) item in the item navigation\n\t * Note: the item passed to this function must be one of the items, returned by the getItemsCallback function\n\t *\n\t * @public\n\t * @param current the new selected item\n\t */\n\tsetCurrentItem(current: ITabbable): void {\n\t\tconst currentItemIndex = this._getItems().indexOf(current);\n\n\t\tif (currentItemIndex === -1) {\n\t\t\tconsole.warn(`The provided item is not managed by ItemNavigation`, current); // eslint-disable-line\n\t\t\treturn;\n\t\t}\n\n\t\tthis._currentIndex = currentItemIndex;\n\t\tthis._applyTabIndex();\n\t}\n\n\t/**\n\t * Call this method to dynamically change the row size\n\t *\n\t * @public\n\t * @param newRowSize\n\t */\n\tsetRowSize(newRowSize: number): void {\n\t\tthis._rowSize = newRowSize;\n\t}\n\n\t_init() {\n\t\tthis._getItems().forEach((item, idx) => {\n\t\t\titem.forcedTabIndex = (idx === this._currentIndex) ? \"0\" : \"-1\";\n\t\t});\n\t}\n\n\t_onkeydown(event: KeyboardEvent) {\n\t\tif (!this._canNavigate()) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst horizontalNavigationOn = this._navigationMode === NavigationMode.Horizontal || this._navigationMode === NavigationMode.Auto;\n\t\tconst verticalNavigationOn = this._navigationMode === NavigationMode.Vertical || this._navigationMode === NavigationMode.Auto;\n\t\tconst isRTL = this.rootWebComponent.effectiveDir === \"rtl\";\n\n\t\tif (isRTL && isLeft(event) && horizontalNavigationOn) {\n\t\t\tthis._handleRight();\n\t\t} else if (isRTL && isRight(event) && horizontalNavigationOn) {\n\t\t\tthis._handleLeft();\n\t\t} else if (isLeft(event) && horizontalNavigationOn) {\n\t\t\tthis._handleLeft();\n\t\t} else if (isRight(event) && horizontalNavigationOn) {\n\t\t\tthis._handleRight();\n\t\t} else if (isUp(event) && verticalNavigationOn) {\n\t\t\tthis._handleUp();\n\t\t} else if (isDown(event) && verticalNavigationOn) {\n\t\t\tthis._handleDown();\n\t\t} else if (isHome(event)) {\n\t\t\tthis._handleHome();\n\t\t} else if (isEnd(event)) {\n\t\t\tthis._handleEnd();\n\t\t} else if (isPageUp(event)) {\n\t\t\tthis._handlePageUp();\n\t\t} else if (isPageDown(event)) {\n\t\t\tthis._handlePageDown();\n\t\t} else {\n\t\t\treturn; // if none of the supported keys is pressed, we don't want to prevent the event or update the item navigation\n\t\t}\n\n\t\tevent.preventDefault();\n\t\tthis._applyTabIndex();\n\t\tthis._focusCurrentItem();\n\t}\n\n\t_handleUp() {\n\t\tconst itemsLength = this._getItems().length;\n\t\tif (this._currentIndex - this._rowSize >= 0) { // no border reached, just decrease the index by a row\n\t\t\tthis._currentIndex -= this._rowSize;\n\t\t\treturn;\n\t\t}\n\n\t\tif (this._behavior === ItemNavigationBehavior.Cyclic) { // if cyclic, go to the **last** item in the **previous** column\n\t\t\tconst firstItemInThisColumnIndex = this._currentIndex % this._rowSize;\n\t\t\tconst firstItemInPreviousColumnIndex = firstItemInThisColumnIndex === 0 ? this._rowSize - 1 : firstItemInThisColumnIndex - 1; // find the first item in the previous column (if the current column is the first column -> move to the last column)\n\t\t\tconst rows = Math.ceil(itemsLength / this._rowSize); // how many rows there are (even if incomplete, f.e. for 14 items and _rowSize=4 -> 4 rows total, although only 2 items on the last row)\n\t\t\tlet lastItemInPreviousColumnIndex = firstItemInPreviousColumnIndex + (rows - 1) * this._rowSize; // multiply rows by columns, and add the column's first item's index\n\t\t\tif (lastItemInPreviousColumnIndex > itemsLength - 1) { // for incomplete rows, use the previous row's last item, as for them the last item is missing\n\t\t\t\tlastItemInPreviousColumnIndex -= this._rowSize;\n\t\t\t}\n\t\t\tthis._currentIndex = lastItemInPreviousColumnIndex;\n\t\t} else { // not cyclic, so just go to the first item\n\t\t\tthis._currentIndex = 0;\n\t\t}\n\t}\n\n\t_handleDown() {\n\t\tconst itemsLength = this._getItems().length;\n\t\tif (this._currentIndex + this._rowSize < itemsLength) { // no border reached, just increase the index by a row\n\t\t\tthis._currentIndex += this._rowSize;\n\t\t\treturn;\n\t\t}\n\n\t\tif (this._behavior === ItemNavigationBehavior.Cyclic) { // if cyclic, go to the **first** item in the **next** column\n\t\t\tconst firstItemInThisColumnIndex = this._currentIndex % this._rowSize; // find the first item in the current column first\n\t\t\tconst firstItemInNextColumnIndex = (firstItemInThisColumnIndex + 1) % this._rowSize; // to get the first item in the next column, just increase the index by 1. The modulo by rows is for the case when we are at the last column\n\t\t\tthis._currentIndex = firstItemInNextColumnIndex;\n\t\t} else { // not cyclic, so just go to the last item\n\t\t\tthis._currentIndex = itemsLength - 1;\n\t\t}\n\t}\n\n\t_handleLeft() {\n\t\tconst itemsLength = this._getItems().length;\n\t\tif (this._currentIndex > 0) {\n\t\t\tthis._currentIndex -= 1;\n\t\t\treturn;\n\t\t}\n\n\t\tif (this._behavior === ItemNavigationBehavior.Cyclic) { // go to the first item in the next column\n\t\t\tthis._currentIndex = itemsLength - 1;\n\t\t}\n\t}\n\n\t_handleRight() {\n\t\tconst itemsLength = this._getItems().length;\n\t\tif (this._currentIndex < itemsLength - 1) {\n\t\t\tthis._currentIndex += 1;\n\t\t\treturn;\n\t\t}\n\n\t\tif (this._behavior === ItemNavigationBehavior.Cyclic) { // go to the first item in the next column\n\t\t\tthis._currentIndex = 0;\n\t\t}\n\t}\n\n\t_handleHome() {\n\t\tconst homeEndRange = this._rowSize > 1 ? this._rowSize : this._getItems().length;\n\t\tthis._currentIndex -= this._currentIndex % homeEndRange;\n\t}\n\n\t_handleEnd() {\n\t\tconst homeEndRange = this._rowSize > 1 ? this._rowSize : this._getItems().length;\n\t\tthis._currentIndex += (homeEndRange - 1 - this._currentIndex % homeEndRange); // eslint-disable-line\n\t}\n\n\t_handlePageUp() {\n\t\tif (this._rowSize > 1) {\n\t\t\t// eslint-disable-next-line\n\t\t\t// TODO: handle page up on matrix (grid) layout - ColorPalette, ProductSwitch.\n\t\t\treturn;\n\t\t}\n\t\tthis._handlePageUpFlat();\n\t}\n\n\t_handlePageDown() {\n\t\tif (this._rowSize > 1) {\n\t\t\t// eslint-disable-next-line\n\t\t\t// TODO: handle page up on matrix (grid) layout - ColorPalette, ProductSwitch.\n\t\t\treturn;\n\t\t}\n\t\tthis._handlePageDownFlat();\n\t}\n\n\t/**\n\t * Handles PAGE_UP in a flat list-like structure, both vertically and horizontally.\n\t */\n\t_handlePageUpFlat() {\n\t\tif (this._skipItemsSize === null) {\n\t\t\t// Move the focus to the very top (as Home).\n\t\t\tthis._currentIndex -= this._currentIndex;\n\t\t\treturn;\n\t\t}\n\n\t\tif (this._currentIndex + 1 > this._skipItemsSize) {\n\t\t\t// When there are more than \"skipItemsSize\" number of items to the top,\n\t\t\t// move the focus up/left with the predefined number.\n\t\t\tthis._currentIndex -= this._skipItemsSize;\n\t\t} else {\n\t\t\t// Otherwise, move the focus to the very top (as Home).\n\t\t\tthis._currentIndex -= this._currentIndex;\n\t\t}\n\t}\n\n\t/**\n\t * Handles PAGE_DOWN in a flat list-like structure, both vertically and horizontally.\n\t */\n\t_handlePageDownFlat() {\n\t\tif (this._skipItemsSize === null) {\n\t\t\t// Move the focus to the very bottom (as End).\n\t\t\tthis._currentIndex = this._getItems().length - 1;\n\t\t\treturn;\n\t\t}\n\n\t\tconst currentToEndRange = this._getItems().length - this._currentIndex - 1;\n\n\t\tif (currentToEndRange > this._skipItemsSize) {\n\t\t\t// When there are more than \"skipItemsSize\" number of items until the bottom,\n\t\t\t// move the focus down/right with the predefined number.\n\t\t\tthis._currentIndex += this._skipItemsSize;\n\t\t} else {\n\t\t\t// Otherwise, move the focus to the very bottom (as End).\n\t\t\tthis._currentIndex = this._getItems().length - 1;\n\t\t}\n\t}\n\n\t_applyTabIndex() {\n\t\tconst items = this._getItems();\n\t\tfor (let i = 0; i < items.length; i++) {\n\t\t\titems[i].forcedTabIndex = i === this._currentIndex ? \"0\" : \"-1\";\n\t\t}\n\n\t\tthis._affectedPropertiesNames.forEach(propName => {\n\t\t\tconst prop = (this.rootWebComponent as Record<string, any>)[propName];\n\t\t\t(this.rootWebComponent as Record<string, any>)[propName] = Array.isArray(prop) ? [...prop] : { ...prop };\n\t\t});\n\t}\n\n\t_focusCurrentItem() {\n\t\tconst currentItem = this._getCurrentItem();\n\t\tif (currentItem) {\n\t\t\tcurrentItem.focus();\n\t\t}\n\t}\n\n\t_canNavigate() {\n\t\tconst currentItem = this._getCurrentItem();\n\t\tconst activeElement = getActiveElement();\n\n\t\treturn currentItem && currentItem === activeElement;\n\t}\n\n\t_getCurrentItem() {\n\t\tconst items = this._getItems();\n\n\t\tif (!items.length) {\n\t\t\treturn;\n\t\t}\n\n\t\t// normalize the index\n\t\twhile (this._currentIndex >= items.length) {\n\t\t\tthis._currentIndex -= this._rowSize;\n\t\t}\n\n\t\tif (this._currentIndex < 0) {\n\t\t\tthis._currentIndex = 0;\n\t\t}\n\n\t\tconst currentItem = items[this._currentIndex];\n\n\t\tif (!currentItem) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (instanceOfUI5Element(currentItem)) {\n\t\t\treturn currentItem.getFocusDomRef();\n\t\t}\n\n\t\tconst currentItemDOMRef = this.rootWebComponent.getDomRef();\n\t\tif (!currentItemDOMRef) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (currentItem.id) {\n\t\t\treturn currentItemDOMRef.querySelector(`[id=\"${currentItem.id}\"]`) as HTMLElement;\n\t\t}\n\t}\n}\n\nexport default ItemNavigation;\n\nexport {\n\tITabbable,\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}