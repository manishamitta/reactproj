{"ast":null,"code":"/*!\n * OpenUI5\n * (c) Copyright 2009-2024 SAP SE or an SAP affiliate company.\n * Licensed under the Apache License, Version 2.0 - see LICENSE.txt.\n */\nimport isPlainObject from \"./isPlainObject.js\";\nvar oToken = Object.create(null);\n\n/**\n * Performs object extension by merging source objects into a target object.\n *\n * @example\n * var oMerged = _merge(true, false, {}, {prop1:1}, {prop2:2});\n *\n * @function\n * @since 1.71\n * @private\n * @alias module:sap/base/util/_merge\n * @param {boolean} deep Shallow copy or deep merge\n * @param {boolean} skipUndefined Whether <code>undefined</code> values will be skipped, otherwise <code>undefined</code> values will overwrite existing values\n * @param {object} target The object that will receive new properties\n * @param {...object} [source] One or more objects which get merged into the target object\n * @return {object} the target object which is the result of the merge\n */\nvar fnMerge = function () {\n  /*\n   * The code in this function is taken from jQuery 3.6.0 \"jQuery.extend\" and got modified.\n   *\n   * jQuery JavaScript Library v3.6.0\n   * https://jquery.com/\n   *\n   * Copyright OpenJS Foundation and other contributors\n   * Released under the MIT license\n   * https://jquery.org/license\n   */\n  var src,\n    copyIsArray,\n    copy,\n    name,\n    options,\n    clone,\n    target = arguments[2] || {},\n    i = 3,\n    length = arguments.length,\n    deep = arguments[0] || false,\n    skipToken = arguments[1] ? undefined : oToken;\n\n  // Handle case when target is a string or something (possible in deep copy)\n  if (typeof target !== \"object\" && typeof target !== \"function\") {\n    target = {};\n  }\n  for (; i < length; i++) {\n    if ((options = arguments[i]) != null) {\n      // Extend the base object\n      for (name in options) {\n        src = target[name];\n        copy = options[name];\n\n        // Prevent never-ending loop\n        // Prevent Object.prototype pollution for $.extend( true, ... )\n        // For further information, please visit https://github.com/jquery/jquery/pull/4333\n        if (name === \"__proto__\" || target === copy) {\n          continue;\n        }\n\n        // Recurse if we're merging plain objects or arrays\n        if (deep && copy && (isPlainObject(copy) || (copyIsArray = Array.isArray(copy)))) {\n          if (copyIsArray) {\n            copyIsArray = false;\n            clone = src && Array.isArray(src) ? src : [];\n          } else {\n            clone = src && isPlainObject(src) ? src : {};\n          }\n\n          // Never move original objects, clone them\n          target[name] = fnMerge(deep, arguments[1], clone, copy);\n\n          // Don't bring in undefined values\n        } else if (copy !== skipToken) {\n          target[name] = copy;\n        }\n      }\n    }\n  }\n\n  // Return the modified object\n  return target;\n};\nexport default fnMerge;","map":{"version":3,"names":["isPlainObject","oToken","Object","create","fnMerge","src","copyIsArray","copy","name","options","clone","target","arguments","i","length","deep","skipToken","undefined","Array","isArray"],"sources":["/home/user/projects/reactproj/node_modules/@ui5/webcomponents-localization/dist/sap/base/util/_merge.js"],"sourcesContent":["/*!\n * OpenUI5\n * (c) Copyright 2009-2024 SAP SE or an SAP affiliate company.\n * Licensed under the Apache License, Version 2.0 - see LICENSE.txt.\n */\nimport isPlainObject from \"./isPlainObject.js\";\nvar oToken = Object.create(null);\n\n/**\n * Performs object extension by merging source objects into a target object.\n *\n * @example\n * var oMerged = _merge(true, false, {}, {prop1:1}, {prop2:2});\n *\n * @function\n * @since 1.71\n * @private\n * @alias module:sap/base/util/_merge\n * @param {boolean} deep Shallow copy or deep merge\n * @param {boolean} skipUndefined Whether <code>undefined</code> values will be skipped, otherwise <code>undefined</code> values will overwrite existing values\n * @param {object} target The object that will receive new properties\n * @param {...object} [source] One or more objects which get merged into the target object\n * @return {object} the target object which is the result of the merge\n */\nvar fnMerge = function () {\n  /*\n   * The code in this function is taken from jQuery 3.6.0 \"jQuery.extend\" and got modified.\n   *\n   * jQuery JavaScript Library v3.6.0\n   * https://jquery.com/\n   *\n   * Copyright OpenJS Foundation and other contributors\n   * Released under the MIT license\n   * https://jquery.org/license\n   */\n  var src,\n    copyIsArray,\n    copy,\n    name,\n    options,\n    clone,\n    target = arguments[2] || {},\n    i = 3,\n    length = arguments.length,\n    deep = arguments[0] || false,\n    skipToken = arguments[1] ? undefined : oToken;\n\n  // Handle case when target is a string or something (possible in deep copy)\n  if (typeof target !== \"object\" && typeof target !== \"function\") {\n    target = {};\n  }\n  for (; i < length; i++) {\n    if ((options = arguments[i]) != null) {\n      // Extend the base object\n      for (name in options) {\n        src = target[name];\n        copy = options[name];\n\n        // Prevent never-ending loop\n        // Prevent Object.prototype pollution for $.extend( true, ... )\n        // For further information, please visit https://github.com/jquery/jquery/pull/4333\n        if (name === \"__proto__\" || target === copy) {\n          continue;\n        }\n\n        // Recurse if we're merging plain objects or arrays\n        if (deep && copy && (isPlainObject(copy) || (copyIsArray = Array.isArray(copy)))) {\n          if (copyIsArray) {\n            copyIsArray = false;\n            clone = src && Array.isArray(src) ? src : [];\n          } else {\n            clone = src && isPlainObject(src) ? src : {};\n          }\n\n          // Never move original objects, clone them\n          target[name] = fnMerge(deep, arguments[1], clone, copy);\n\n          // Don't bring in undefined values\n        } else if (copy !== skipToken) {\n          target[name] = copy;\n        }\n      }\n    }\n  }\n\n  // Return the modified object\n  return target;\n};\nexport default fnMerge;"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA,OAAOA,aAAa,MAAM,oBAAoB;AAC9C,IAAIC,MAAM,GAAGC,MAAM,CAACC,MAAM,CAAC,IAAI,CAAC;;AAEhC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAIC,OAAO,GAAG,SAAAA,CAAA,EAAY;EACxB;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,IAAIC,GAAG;IACLC,WAAW;IACXC,IAAI;IACJC,IAAI;IACJC,OAAO;IACPC,KAAK;IACLC,MAAM,GAAGC,SAAS,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;IAC3BC,CAAC,GAAG,CAAC;IACLC,MAAM,GAAGF,SAAS,CAACE,MAAM;IACzBC,IAAI,GAAGH,SAAS,CAAC,CAAC,CAAC,IAAI,KAAK;IAC5BI,SAAS,GAAGJ,SAAS,CAAC,CAAC,CAAC,GAAGK,SAAS,GAAGhB,MAAM;;EAE/C;EACA,IAAI,OAAOU,MAAM,KAAK,QAAQ,IAAI,OAAOA,MAAM,KAAK,UAAU,EAAE;IAC9DA,MAAM,GAAG,CAAC,CAAC;EACb;EACA,OAAOE,CAAC,GAAGC,MAAM,EAAED,CAAC,EAAE,EAAE;IACtB,IAAI,CAACJ,OAAO,GAAGG,SAAS,CAACC,CAAC,CAAC,KAAK,IAAI,EAAE;MACpC;MACA,KAAKL,IAAI,IAAIC,OAAO,EAAE;QACpBJ,GAAG,GAAGM,MAAM,CAACH,IAAI,CAAC;QAClBD,IAAI,GAAGE,OAAO,CAACD,IAAI,CAAC;;QAEpB;QACA;QACA;QACA,IAAIA,IAAI,KAAK,WAAW,IAAIG,MAAM,KAAKJ,IAAI,EAAE;UAC3C;QACF;;QAEA;QACA,IAAIQ,IAAI,IAAIR,IAAI,KAAKP,aAAa,CAACO,IAAI,CAAC,KAAKD,WAAW,GAAGY,KAAK,CAACC,OAAO,CAACZ,IAAI,CAAC,CAAC,CAAC,EAAE;UAChF,IAAID,WAAW,EAAE;YACfA,WAAW,GAAG,KAAK;YACnBI,KAAK,GAAGL,GAAG,IAAIa,KAAK,CAACC,OAAO,CAACd,GAAG,CAAC,GAAGA,GAAG,GAAG,EAAE;UAC9C,CAAC,MAAM;YACLK,KAAK,GAAGL,GAAG,IAAIL,aAAa,CAACK,GAAG,CAAC,GAAGA,GAAG,GAAG,CAAC,CAAC;UAC9C;;UAEA;UACAM,MAAM,CAACH,IAAI,CAAC,GAAGJ,OAAO,CAACW,IAAI,EAAEH,SAAS,CAAC,CAAC,CAAC,EAAEF,KAAK,EAAEH,IAAI,CAAC;;UAEvD;QACF,CAAC,MAAM,IAAIA,IAAI,KAAKS,SAAS,EAAE;UAC7BL,MAAM,CAACH,IAAI,CAAC,GAAGD,IAAI;QACrB;MACF;IACF;EACF;;EAEA;EACA,OAAOI,MAAM;AACf,CAAC;AACD,eAAeP,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}