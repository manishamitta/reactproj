{"ast":null,"code":"var __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n    r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n    d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar List_1;\nimport UI5Element from \"@ui5/webcomponents-base/dist/UI5Element.js\";\nimport litRender from \"@ui5/webcomponents-base/dist/renderer/LitRenderer.js\";\nimport ResizeHandler from \"@ui5/webcomponents-base/dist/delegate/ResizeHandler.js\";\nimport ItemNavigation from \"@ui5/webcomponents-base/dist/delegate/ItemNavigation.js\";\nimport property from \"@ui5/webcomponents-base/dist/decorators/property.js\";\nimport event from \"@ui5/webcomponents-base/dist/decorators/event.js\";\nimport customElement from \"@ui5/webcomponents-base/dist/decorators/customElement.js\";\nimport slot from \"@ui5/webcomponents-base/dist/decorators/slot.js\";\nimport { renderFinished } from \"@ui5/webcomponents-base/dist/Render.js\";\nimport { isTabNext, isSpace, isEnter, isTabPrevious } from \"@ui5/webcomponents-base/dist/Keys.js\";\nimport DragRegistry from \"@ui5/webcomponents-base/dist/util/dragAndDrop/DragRegistry.js\";\nimport findClosestPosition from \"@ui5/webcomponents-base/dist/util/dragAndDrop/findClosestPosition.js\";\nimport NavigationMode from \"@ui5/webcomponents-base/dist/types/NavigationMode.js\";\nimport { getEffectiveAriaLabelText } from \"@ui5/webcomponents-base/dist/util/AriaLabelHelper.js\";\nimport getNormalizedTarget from \"@ui5/webcomponents-base/dist/util/getNormalizedTarget.js\";\nimport getEffectiveScrollbarStyle from \"@ui5/webcomponents-base/dist/util/getEffectiveScrollbarStyle.js\";\nimport { getI18nBundle } from \"@ui5/webcomponents-base/dist/i18nBundle.js\";\nimport debounce from \"@ui5/webcomponents-base/dist/util/debounce.js\";\nimport isElementInView from \"@ui5/webcomponents-base/dist/util/isElementInView.js\";\nimport Orientation from \"@ui5/webcomponents-base/dist/types/Orientation.js\";\nimport MovePlacement from \"@ui5/webcomponents-base/dist/types/MovePlacement.js\";\nimport ListSelectionMode from \"./types/ListSelectionMode.js\";\nimport ListGrowingMode from \"./types/ListGrowingMode.js\";\nimport DropIndicator from \"./DropIndicator.js\";\nimport ListSeparator from \"./types/ListSeparator.js\";\nimport BusyIndicator from \"./BusyIndicator.js\";\n// Template\nimport ListTemplate from \"./generated/templates/ListTemplate.lit.js\";\n// Styles\nimport listCss from \"./generated/themes/List.css.js\";\n// Texts\nimport { LOAD_MORE_TEXT, ARIA_LABEL_LIST_SELECTABLE, ARIA_LABEL_LIST_MULTISELECTABLE, ARIA_LABEL_LIST_DELETABLE } from \"./generated/i18n/i18n-defaults.js\";\nimport ListItemGroup, { isInstanceOfListItemGroup } from \"./ListItemGroup.js\";\nconst INFINITE_SCROLL_DEBOUNCE_RATE = 250; // ms\nconst PAGE_UP_DOWN_SIZE = 10;\n/**\n * @class\n *\n * ### Overview\n *\n * The `ui5-list` component allows displaying a list of items, advanced keyboard\n * handling support for navigating between items, and predefined modes to improve the development efficiency.\n *\n * The `ui5-list` is a container for the available list items:\n *\n * - `ui5-li`\n * - `ui5-li-custom`\n * - `ui5-li-group`\n *\n * To benefit from the built-in selection mechanism, you can use the available\n * selection modes, such as\n * `Single`, `Multiple` and `Delete`.\n *\n * Additionally, the `ui5-list` provides header, footer, and customization for the list item separators.\n *\n * ### Keyboard Handling\n *\n * #### Basic Navigation\n * The `ui5-list` provides advanced keyboard handling.\n * When a list is focused the user can use the following keyboard\n * shortcuts in order to perform a navigation:\n *\n * - [Up] or [Down] - Navigates up and down the items\n * - [Home] - Navigates to first item\n * - [End] - Navigates to the last item\n *\n * The user can use the following keyboard shortcuts to perform actions (such as select, delete),\n * when the `selectionMode` property is in use:\n *\n * - [Space] - Select an item (if `type` is 'Active') when `selectionMode` is selection\n * - [Delete] - Delete an item if `selectionMode` property is `Delete`\n *\n * #### Fast Navigation\n * This component provides a build in fast navigation group which can be used via [F6] / [Shift] + [F6] / [Ctrl] + [Alt/Option] / [Down] or [Ctrl] + [Alt/Option] + [Up].\n * In order to use this functionality, you need to import the following module:\n * `import \"@ui5/webcomponents-base/dist/features/F6Navigation.js\"`\n *\n * ### ES6 Module Import\n *\n * `import \"@ui5/webcomponents/dist/List.js\";`\n *\n * `import \"@ui5/webcomponents/dist/ListItemStandard.js\";` (for `ui5-li`)\n *\n * `import \"@ui5/webcomponents/dist/ListItemCustom.js\";` (for `ui5-li-custom`)\n *\n * `import \"@ui5/webcomponents/dist/ListItemGroup.js\";` (for `ui5-li-group`)\n * @constructor\n * @extends UI5Element\n * @public\n */\nlet List = List_1 = class List extends UI5Element {\n  static async onDefine() {\n    List_1.i18nBundle = await getI18nBundle(\"@ui5/webcomponents\");\n  }\n  constructor() {\n    super();\n    /**\n     * Determines whether the component is indented.\n     * @default false\n     * @public\n     */\n    this.indent = false;\n    /**\n     * Defines the selection mode of the component.\n     * @default \"None\"\n     * @public\n     */\n    this.selectionMode = \"None\";\n    /**\n     * Defines the item separator style that is used.\n     * @default \"All\"\n     * @public\n     */\n    this.separators = \"All\";\n    /**\n     * Defines whether the component will have growing capability either by pressing a `More` button,\n     * or via user scroll. In both cases `load-more` event is fired.\n     *\n     * **Restrictions:** `growing=\"Scroll\"` is not supported for Internet Explorer,\n     * on IE the component will fallback to `growing=\"Button\"`.\n     * @default \"None\"\n     * @since 1.0.0-rc.13\n     * @public\n     */\n    this.growing = \"None\";\n    /**\n     * Defines if the component would display a loading indicator over the list.\n     * @default false\n     * @public\n     * @since 1.0.0-rc.6\n     */\n    this.loading = false;\n    /**\n     * Defines the delay in milliseconds, after which the loading indicator will show up for this component.\n     * @default 1000\n     * @public\n     */\n    this.loadingDelay = 1000;\n    /**\n     * Defines the accessible role of the component.\n     * @public\n     * @default \"List\"\n     * @since 1.0.0-rc.15\n     */\n    this.accessibleRole = \"List\";\n    /**\n     * Defines if the entire list is in view port.\n     * @private\n     */\n    this._inViewport = false;\n    /**\n     * Defines the active state of the `More` button.\n     * @private\n     */\n    this._loadMoreActive = false;\n    this._previouslyFocusedItem = null;\n    // Indicates that the List is forwarding the focus before or after the internal ul.\n    this._forwardingFocus = false;\n    // Indicates that the List has already subscribed for resize.\n    this.resizeListenerAttached = false;\n    // Indicates if the IntersectionObserver started observing the List\n    this.listEndObserved = false;\n    this._itemNavigation = new ItemNavigation(this, {\n      skipItemsSize: PAGE_UP_DOWN_SIZE,\n      navigationMode: NavigationMode.Vertical,\n      getItemsCallback: () => this.getEnabledItems()\n    });\n    this._handleResize = this.checkListInViewport.bind(this);\n    this._handleResize = this.checkListInViewport.bind(this);\n    // Indicates the List bottom most part has been detected by the IntersectionObserver\n    // for the first time.\n    this.initialIntersection = true;\n    this.onItemFocusedBound = this.onItemFocused.bind(this);\n    this.onForwardAfterBound = this.onForwardAfter.bind(this);\n    this.onForwardBeforeBound = this.onForwardBefore.bind(this);\n    this.onItemTabIndexChangeBound = this.onItemTabIndexChange.bind(this);\n  }\n  /**\n   * Returns an array containing the list item instances without the groups in a flat structure.\n   * @default []\n   * @since 2.0.0\n   * @public\n   */\n  get listItems() {\n    return this.getItems();\n  }\n  onEnterDOM() {\n    DragRegistry.subscribe(this);\n  }\n  onExitDOM() {\n    this.unobserveListEnd();\n    this.resizeListenerAttached = false;\n    ResizeHandler.deregister(this.getDomRef(), this._handleResize);\n    DragRegistry.unsubscribe(this);\n  }\n  onBeforeRendering() {\n    this.detachGroupHeaderEvents();\n    this.prepareListItems();\n  }\n  onAfterRendering() {\n    this.attachGroupHeaderEvents();\n    if (this.growsOnScroll) {\n      this.observeListEnd();\n    } else if (this.listEndObserved) {\n      this.unobserveListEnd();\n    }\n    if (this.grows) {\n      this.checkListInViewport();\n      this.attachForResize();\n    }\n  }\n  attachGroupHeaderEvents() {\n    // events fired by the group headers are not bubbling through the shadow\n    // dom of the groups because of capture: false of the custom events\n    this.getItems().forEach(item => {\n      if (item.hasAttribute(\"ui5-li-group-header\")) {\n        item.addEventListener(\"ui5-_focused\", this.onItemFocusedBound);\n        item.addEventListener(\"ui5-_forward-after\", this.onForwardAfterBound);\n        item.addEventListener(\"ui5-_forward-before\", this.onForwardBeforeBound);\n        item.addEventListener(\"ui5-_tabindex-change\", this.onItemTabIndexChangeBound);\n      }\n    });\n  }\n  detachGroupHeaderEvents() {\n    this.getItems().forEach(item => {\n      if (item.hasAttribute(\"ui5-li-group-header\")) {\n        item.removeEventListener(\"ui5-_focused\", this.onItemFocusedBound);\n        item.removeEventListener(\"ui5-_forward-after\", this.onForwardAfterBound);\n        item.removeEventListener(\"ui5-_forward-before\", this.onForwardBeforeBound);\n        item.removeEventListener(\"ui5-_tabindex-change\", this.onItemTabIndexChangeBound);\n      }\n    });\n  }\n  attachForResize() {\n    if (!this.resizeListenerAttached) {\n      this.resizeListenerAttached = true;\n      ResizeHandler.register(this.getDomRef(), this._handleResize);\n    }\n  }\n  get shouldRenderH1() {\n    return !this.header.length && this.headerText;\n  }\n  get headerID() {\n    return `${this._id}-header`;\n  }\n  get modeLabelID() {\n    return `${this._id}-modeLabel`;\n  }\n  get listEndDOM() {\n    return this.shadowRoot.querySelector(\".ui5-list-end-marker\");\n  }\n  get dropIndicatorDOM() {\n    return this.shadowRoot.querySelector(\"[ui5-drop-indicator]\");\n  }\n  get hasData() {\n    return this.getItems().length !== 0;\n  }\n  get showNoDataText() {\n    return !this.hasData && this.noDataText;\n  }\n  get isDelete() {\n    return this.selectionMode === ListSelectionMode.Delete;\n  }\n  get isSingleSelect() {\n    return [ListSelectionMode.Single, ListSelectionMode.SingleStart, ListSelectionMode.SingleEnd, ListSelectionMode.SingleAuto].includes(this.selectionMode);\n  }\n  get isMultiple() {\n    return this.selectionMode === ListSelectionMode.Multiple;\n  }\n  get ariaLabelledBy() {\n    if (this.accessibleNameRef || this.accessibleName) {\n      return undefined;\n    }\n    const ids = [];\n    if (this.isMultiple || this.isSingleSelect || this.isDelete) {\n      ids.push(this.modeLabelID);\n    }\n    if (this.shouldRenderH1) {\n      ids.push(this.headerID);\n    }\n    return ids.length ? ids.join(\" \") : undefined;\n  }\n  get ariaLabelTxt() {\n    return getEffectiveAriaLabelText(this);\n  }\n  get ariaLabelModeText() {\n    if (this.hasData) {\n      if (this.isMultiple) {\n        return List_1.i18nBundle.getText(ARIA_LABEL_LIST_MULTISELECTABLE);\n      }\n      if (this.isSingleSelect) {\n        return List_1.i18nBundle.getText(ARIA_LABEL_LIST_SELECTABLE);\n      }\n      if (this.isDelete) {\n        return List_1.i18nBundle.getText(ARIA_LABEL_LIST_DELETABLE);\n      }\n    }\n    return \"\";\n  }\n  get grows() {\n    return this.growing !== ListGrowingMode.None;\n  }\n  get growsOnScroll() {\n    return this.growing === ListGrowingMode.Scroll;\n  }\n  get growsWithButton() {\n    return this.growing === ListGrowingMode.Button;\n  }\n  get _growingButtonText() {\n    return this.growingButtonText || List_1.i18nBundle.getText(LOAD_MORE_TEXT);\n  }\n  get listAccessibleRole() {\n    return this.accessibleRole.toLowerCase();\n  }\n  get classes() {\n    return {\n      root: {\n        \"ui5-list-root\": true\n      }\n    };\n  }\n  prepareListItems() {\n    const slottedItems = this.getItemsForProcessing();\n    slottedItems.forEach((item, key) => {\n      const isLastChild = key === slottedItems.length - 1;\n      const showBottomBorder = this.separators === ListSeparator.All || this.separators === ListSeparator.Inner && !isLastChild;\n      if (item.hasConfigurableMode) {\n        item._selectionMode = this.selectionMode;\n      }\n      item.hasBorder = showBottomBorder;\n    });\n  }\n  async observeListEnd() {\n    if (!this.listEndObserved) {\n      await renderFinished();\n      this.getIntersectionObserver().observe(this.listEndDOM);\n      this.listEndObserved = true;\n    }\n  }\n  unobserveListEnd() {\n    if (this.growingIntersectionObserver) {\n      this.growingIntersectionObserver.disconnect();\n      this.growingIntersectionObserver = null;\n      this.listEndObserved = false;\n    }\n  }\n  onInteresection(entries) {\n    if (this.initialIntersection) {\n      this.initialIntersection = false;\n      return;\n    }\n    entries.forEach(entry => {\n      if (entry.isIntersecting) {\n        debounce(this.loadMore.bind(this), INFINITE_SCROLL_DEBOUNCE_RATE);\n      }\n    });\n  }\n  /*\n  * ITEM SELECTION BASED ON THE CURRENT MODE\n  */\n  onSelectionRequested(e) {\n    const previouslySelectedItems = this.getSelectedItems();\n    let selectionChange = false;\n    this._selectionRequested = true;\n    if (this.selectionMode !== ListSelectionMode.None && this[`handle${this.selectionMode}`]) {\n      selectionChange = this[`handle${this.selectionMode}`](e.detail.item, !!e.detail.selected);\n    }\n    if (selectionChange) {\n      const changePrevented = !this.fireEvent(\"selection-change\", {\n        selectedItems: this.getSelectedItems(),\n        previouslySelectedItems,\n        selectionComponentPressed: e.detail.selectionComponentPressed,\n        targetItem: e.detail.item,\n        key: e.detail.key\n      }, true);\n      if (changePrevented) {\n        this._revertSelection(previouslySelectedItems);\n      }\n    }\n  }\n  handleSingle(item) {\n    if (item.selected) {\n      return false;\n    }\n    this.deselectSelectedItems();\n    item.selected = true;\n    return true;\n  }\n  handleSingleStart(item) {\n    return this.handleSingle(item);\n  }\n  handleSingleEnd(item) {\n    return this.handleSingle(item);\n  }\n  handleSingleAuto(item) {\n    return this.handleSingle(item);\n  }\n  handleMultiple(item, selected) {\n    item.selected = selected;\n    return true;\n  }\n  handleDelete(item) {\n    this.fireEvent(\"item-delete\", {\n      item\n    });\n    return true;\n  }\n  deselectSelectedItems() {\n    this.getSelectedItems().forEach(item => {\n      item.selected = false;\n    });\n  }\n  getSelectedItems() {\n    return this.getItems().filter(item => item.selected);\n  }\n  getEnabledItems() {\n    return this.getItems().filter(item => item._focusable);\n  }\n  getItems() {\n    // drill down when we see ui5-li-group and get the items\n    const items = [];\n    const slottedItems = this.getSlottedNodes(\"items\");\n    slottedItems.forEach(item => {\n      if (isInstanceOfListItemGroup(item)) {\n        const groupItems = [item.groupHeaderItem, ...item.items].filter(Boolean);\n        items.push(...groupItems);\n      } else {\n        items.push(item);\n      }\n    });\n    return items;\n  }\n  getItemsForProcessing() {\n    return this.getItems();\n  }\n  _revertSelection(previouslySelectedItems) {\n    this.getItems().forEach(item => {\n      const oldSelection = previouslySelectedItems.indexOf(item) !== -1;\n      const multiSelectCheckBox = item.shadowRoot.querySelector(\".ui5-li-multisel-cb\");\n      const singleSelectRadioButton = item.shadowRoot.querySelector(\".ui5-li-singlesel-radiobtn\");\n      item.selected = oldSelection;\n      if (multiSelectCheckBox) {\n        multiSelectCheckBox.checked = oldSelection;\n      } else if (singleSelectRadioButton) {\n        singleSelectRadioButton.checked = oldSelection;\n      }\n    });\n  }\n  _onkeydown(e) {\n    if (isTabNext(e)) {\n      this._handleTabNext(e);\n    }\n  }\n  _onLoadMoreKeydown(e) {\n    if (isSpace(e)) {\n      e.preventDefault();\n      this._loadMoreActive = true;\n    }\n    if (isEnter(e)) {\n      this._onLoadMoreClick();\n      this._loadMoreActive = true;\n    }\n    if (isTabNext(e)) {\n      this.focusAfterElement();\n    }\n    if (isTabPrevious(e)) {\n      if (this.getPreviouslyFocusedItem()) {\n        this.focusPreviouslyFocusedItem();\n      } else {\n        this.focusFirstItem();\n      }\n      e.preventDefault();\n    }\n  }\n  _onLoadMoreKeyup(e) {\n    if (isSpace(e)) {\n      this._onLoadMoreClick();\n    }\n    this._loadMoreActive = false;\n  }\n  _onLoadMoreMousedown() {\n    this._loadMoreActive = true;\n  }\n  _onLoadMoreMouseup() {\n    this._loadMoreActive = false;\n  }\n  _onLoadMoreClick() {\n    this.loadMore();\n  }\n  checkListInViewport() {\n    this._inViewport = isElementInView(this.getDomRef());\n  }\n  loadMore() {\n    this.fireEvent(\"load-more\");\n  }\n  /*\n  * KEYBOARD SUPPORT\n  */\n  _handleTabNext(e) {\n    let lastTabbableEl;\n    const target = getNormalizedTarget(e.target);\n    if (!lastTabbableEl) {\n      return;\n    }\n    if (lastTabbableEl === target) {\n      if (this.getFirstItem(x => x.selected && x._focusable)) {\n        this.focusFirstSelectedItem();\n      } else if (this.getPreviouslyFocusedItem()) {\n        this.focusPreviouslyFocusedItem();\n      } else {\n        this.focusFirstItem();\n      }\n      e.stopImmediatePropagation();\n      e.preventDefault();\n    }\n  }\n  _onfocusin(e) {\n    const target = getNormalizedTarget(e.target);\n    // If the focusin event does not origin from one of the 'triggers' - ignore it.\n    if (!this.isForwardElement(target)) {\n      e.stopImmediatePropagation();\n      return;\n    }\n    // The focus arrives in the List for the first time.\n    // If there is selected item - focus it or focus the first item.\n    if (!this.getPreviouslyFocusedItem()) {\n      if (this.growsWithButton && this.isForwardAfterElement(target)) {\n        this.focusGrowingButton();\n      } else {\n        this.focusFirstItem();\n      }\n      e.stopImmediatePropagation();\n      return;\n    }\n    // The focus returns to the List,\n    // focus the first selected item or the previously focused element.\n    if (!this.getForwardingFocus()) {\n      if (this.growsWithButton && this.isForwardAfterElement(target)) {\n        this.focusGrowingButton();\n        e.stopImmediatePropagation();\n        return;\n      }\n      this.focusPreviouslyFocusedItem();\n      e.stopImmediatePropagation();\n    }\n    this.setForwardingFocus(false);\n  }\n  _ondragenter(e) {\n    e.preventDefault();\n  }\n  _ondragleave(e) {\n    if (e.relatedTarget instanceof Node && this.shadowRoot.contains(e.relatedTarget)) {\n      return;\n    }\n    this.dropIndicatorDOM.targetReference = null;\n  }\n  _ondragover(e) {\n    const draggedElement = DragRegistry.getDraggedElement();\n    if (!(e.target instanceof HTMLElement) || !draggedElement) {\n      return;\n    }\n    const closestPosition = findClosestPosition(this.items, e.clientY, Orientation.Vertical);\n    if (!closestPosition) {\n      this.dropIndicatorDOM.targetReference = null;\n      return;\n    }\n    let placements = closestPosition.placements;\n    if (closestPosition.element === draggedElement) {\n      placements = placements.filter(placement => placement !== MovePlacement.On);\n    }\n    const placementAccepted = placements.some(placement => {\n      const beforeItemMovePrevented = !this.fireEvent(\"move-over\", {\n        source: {\n          element: draggedElement\n        },\n        destination: {\n          element: closestPosition.element,\n          placement\n        }\n      }, true);\n      if (beforeItemMovePrevented) {\n        e.preventDefault();\n        this.dropIndicatorDOM.targetReference = closestPosition.element;\n        this.dropIndicatorDOM.placement = placement;\n        return true;\n      }\n      return false;\n    });\n    if (!placementAccepted) {\n      this.dropIndicatorDOM.targetReference = null;\n    }\n  }\n  _ondrop(e) {\n    e.preventDefault();\n    const draggedElement = DragRegistry.getDraggedElement();\n    this.fireEvent(\"move\", {\n      source: {\n        element: draggedElement\n      },\n      destination: {\n        element: this.dropIndicatorDOM.targetReference,\n        placement: this.dropIndicatorDOM.placement\n      }\n    });\n    this.dropIndicatorDOM.targetReference = null;\n    draggedElement.focus();\n  }\n  isForwardElement(element) {\n    const elementId = element.id;\n    const beforeElement = this.getBeforeElement();\n    if (this._id === elementId || beforeElement && beforeElement.id === elementId) {\n      return true;\n    }\n    return this.isForwardAfterElement(element);\n  }\n  isForwardAfterElement(element) {\n    const elementId = element.id;\n    const afterElement = this.getAfterElement();\n    return afterElement && afterElement.id === elementId;\n  }\n  onItemTabIndexChange(e) {\n    const target = e.target;\n    this._itemNavigation.setCurrentItem(target);\n  }\n  onItemFocused(e) {\n    const target = e.target;\n    e.stopPropagation();\n    this._itemNavigation.setCurrentItem(target);\n    this.fireEvent(\"item-focused\", {\n      item: target\n    });\n    if (this.selectionMode === ListSelectionMode.SingleAuto) {\n      const detail = {\n        item: target,\n        selectionComponentPressed: false,\n        selected: true,\n        key: e.detail.key\n      };\n      this.onSelectionRequested({\n        detail\n      });\n    }\n  }\n  onItemPress(e) {\n    const pressedItem = e.detail.item;\n    if (!this.fireEvent(\"item-click\", {\n      item: pressedItem\n    }, true)) {\n      return;\n    }\n    if (!this._selectionRequested && this.selectionMode !== ListSelectionMode.Delete) {\n      this._selectionRequested = true;\n      const detail = {\n        item: pressedItem,\n        selectionComponentPressed: false,\n        selected: !pressedItem.selected,\n        key: e.detail.key\n      };\n      this.onSelectionRequested({\n        detail\n      });\n    }\n    this._selectionRequested = false;\n  }\n  // This is applicable to NotificationListItem\n  onItemClose(e) {\n    const target = e.target;\n    const shouldFireItemClose = target?.hasAttribute(\"ui5-li-notification\") || target?.hasAttribute(\"ui5-li-notification-group\");\n    if (shouldFireItemClose) {\n      this.fireEvent(\"item-close\", {\n        item: e.detail?.item\n      });\n    }\n  }\n  onItemToggle(e) {\n    this.fireEvent(\"item-toggle\", {\n      item: e.detail.item\n    });\n  }\n  onForwardBefore(e) {\n    this.setPreviouslyFocusedItem(e.target);\n    this.focusBeforeElement();\n    e.stopPropagation();\n  }\n  onForwardAfter(e) {\n    this.setPreviouslyFocusedItem(e.target);\n    if (!this.growsWithButton) {\n      this.focusAfterElement();\n    } else {\n      this.focusGrowingButton();\n      e.preventDefault();\n    }\n    e.stopPropagation();\n  }\n  focusBeforeElement() {\n    this.setForwardingFocus(true);\n    this.getBeforeElement().focus();\n  }\n  focusAfterElement() {\n    this.setForwardingFocus(true);\n    this.getAfterElement().focus();\n  }\n  focusGrowingButton() {\n    const growingBtn = this.getGrowingButton();\n    if (growingBtn) {\n      growingBtn.focus();\n    }\n  }\n  getGrowingButton() {\n    return this.shadowRoot.querySelector(`[id=\"${this._id}-growing-btn\"]`);\n  }\n  /**\n   * Focuses the first list item and sets its tabindex to \"0\" via the ItemNavigation\n   * @protected\n   */\n  focusFirstItem() {\n    // only enabled items are focusable\n    const firstItem = this.getFirstItem(x => x._focusable);\n    if (firstItem) {\n      firstItem.focus();\n    }\n  }\n  focusPreviouslyFocusedItem() {\n    const previouslyFocusedItem = this.getPreviouslyFocusedItem();\n    if (previouslyFocusedItem) {\n      previouslyFocusedItem.focus();\n    }\n  }\n  focusFirstSelectedItem() {\n    // only enabled items are focusable\n    const firstSelectedItem = this.getFirstItem(x => x.selected && x._focusable);\n    if (firstSelectedItem) {\n      firstSelectedItem.focus();\n    }\n  }\n  /**\n   * Focuses a list item and sets its tabindex to \"0\" via the ItemNavigation\n   * @protected\n   * @param item\n   */\n  focusItem(item) {\n    this._itemNavigation.setCurrentItem(item);\n    item.focus();\n  }\n  onFocusRequested(e) {\n    setTimeout(() => {\n      this.setPreviouslyFocusedItem(e.target);\n      this.focusPreviouslyFocusedItem();\n    }, 0);\n  }\n  setForwardingFocus(forwardingFocus) {\n    this._forwardingFocus = forwardingFocus;\n  }\n  getForwardingFocus() {\n    return this._forwardingFocus;\n  }\n  setPreviouslyFocusedItem(item) {\n    this._previouslyFocusedItem = item;\n  }\n  getPreviouslyFocusedItem() {\n    return this._previouslyFocusedItem;\n  }\n  getFirstItem(filter) {\n    const slottedItems = this.getItems();\n    let firstItem = null;\n    if (!filter) {\n      return slottedItems.length ? slottedItems[0] : null;\n    }\n    for (let i = 0; i < slottedItems.length; i++) {\n      if (filter(slottedItems[i])) {\n        firstItem = slottedItems[i];\n        break;\n      }\n    }\n    return firstItem;\n  }\n  getAfterElement() {\n    if (!this._afterElement) {\n      this._afterElement = this.shadowRoot.querySelector(`[id=\"${this._id}-after\"]`);\n    }\n    return this._afterElement;\n  }\n  getBeforeElement() {\n    if (!this._beforeElement) {\n      this._beforeElement = this.shadowRoot.querySelector(`[id=\"${this._id}-before\"]`);\n    }\n    return this._beforeElement;\n  }\n  getIntersectionObserver() {\n    if (!this.growingIntersectionObserver) {\n      this.growingIntersectionObserver = new IntersectionObserver(this.onInteresection.bind(this), {\n        root: null,\n        rootMargin: \"0px\",\n        threshold: 1.0\n      });\n    }\n    return this.growingIntersectionObserver;\n  }\n};\n__decorate([property()], List.prototype, \"headerText\", void 0);\n__decorate([property()], List.prototype, \"footerText\", void 0);\n__decorate([property({\n  type: Boolean\n})], List.prototype, \"indent\", void 0);\n__decorate([property()], List.prototype, \"selectionMode\", void 0);\n__decorate([property()], List.prototype, \"noDataText\", void 0);\n__decorate([property()], List.prototype, \"separators\", void 0);\n__decorate([property()], List.prototype, \"growing\", void 0);\n__decorate([property()], List.prototype, \"growingButtonText\", void 0);\n__decorate([property({\n  type: Boolean\n})], List.prototype, \"loading\", void 0);\n__decorate([property({\n  type: Number\n})], List.prototype, \"loadingDelay\", void 0);\n__decorate([property()], List.prototype, \"accessibleName\", void 0);\n__decorate([property()], List.prototype, \"accessibleNameRef\", void 0);\n__decorate([property()], List.prototype, \"accessibleRole\", void 0);\n__decorate([property({\n  type: Boolean\n})], List.prototype, \"_inViewport\", void 0);\n__decorate([property({\n  type: Boolean\n})], List.prototype, \"_loadMoreActive\", void 0);\n__decorate([slot({\n  type: HTMLElement,\n  \"default\": true,\n  invalidateOnChildChange: true\n})], List.prototype, \"items\", void 0);\n__decorate([slot()], List.prototype, \"header\", void 0);\nList = List_1 = __decorate([customElement({\n  tag: \"ui5-list\",\n  fastNavigation: true,\n  renderer: litRender,\n  template: ListTemplate,\n  styles: [listCss, getEffectiveScrollbarStyle()],\n  dependencies: [BusyIndicator, DropIndicator, ListItemGroup]\n})\n/**\n * Fired when an item is activated, unless the item's `type` property\n * is set to `Inactive`.\n * @allowPreventDefault\n * @param {HTMLElement} item The clicked item.\n * @public\n */, event(\"item-click\", {\n  detail: {\n    /**\n     * @public\n     */\n    item: {\n      type: HTMLElement\n    }\n  }\n})\n/**\n * Fired when the `Close` button of any item is clicked\n *\n * **Note:** This event is only applicable to list items that can be closed (such as notification list items),\n * not to be confused with `item-delete`.\n * @param {HTMLElement} item the item about to be closed.\n * @public\n * @since 1.0.0-rc.8\n */, event(\"item-close\", {\n  detail: {\n    /**\n     * @public\n     */\n    item: {\n      type: HTMLElement\n    }\n  }\n})\n/**\n * Fired when the `Toggle` button of any item is clicked.\n *\n * **Note:** This event is only applicable to list items that can be toggled (such as notification group list items).\n * @param {HTMLElement} item the toggled item.\n * @public\n * @since 1.0.0-rc.8\n */, event(\"item-toggle\", {\n  detail: {\n    /**\n     * @public\n     */\n    item: {\n      type: HTMLElement\n    }\n  }\n})\n/**\n * Fired when the Delete button of any item is pressed.\n *\n * **Note:** A Delete button is displayed on each item,\n * when the component `selectionMode` property is set to `Delete`.\n * @param {HTMLElement} item the deleted item.\n * @public\n */, event(\"item-delete\", {\n  detail: {\n    /**\n     * @public\n     */\n    item: {\n      type: HTMLElement\n    }\n  }\n})\n/**\n * Fired when selection is changed by user interaction\n * in `Single`, `SingleStart`, `SingleEnd` and `Multiple` selection modes.\n * @allowPreventDefault\n * @param {Array<ListItemBase>} selectedItems An array of the selected items.\n * @param {Array<ListItemBase>} previouslySelectedItems An array of the previously selected items.\n * @public\n */, event(\"selection-change\", {\n  detail: {\n    /**\n     * @public\n     */\n    selectedItems: {\n      type: Array\n    },\n    /**\n     * @public\n     */\n    previouslySelectedItems: {\n      type: Array\n    },\n    /**\n     * protected, holds the event target item\n     * @protected\n     */\n    targetItem: {\n      type: HTMLElement\n    },\n    /**\n     * protected, indicates if the user used the selection components to change the selection\n     * @protected\n     */\n    selectionComponentPressed: {\n      type: Boolean\n    },\n    /**\n     * @private\n     */\n    key: {\n      type: String\n    }\n  }\n})\n/**\n * Fired when the user scrolls to the bottom of the list.\n *\n * **Note:** The event is fired when the `growing='Scroll'` property is enabled.\n * @public\n * @since 1.0.0-rc.6\n */, event(\"load-more\")\n/**\n * @private\n */, event(\"item-focused\", {\n  detail: {\n    item: {\n      type: HTMLElement\n    }\n  }\n})\n/**\n * Fired when a movable list item is moved over a potential drop target during a dragging operation.\n *\n * If the new position is valid, prevent the default action of the event using `preventDefault()`.\n * @param {object} source Contains information about the moved element under `element` property.\n * @param {object} destination Contains information about the destination of the moved element. Has `element` and `placement` properties.\n * @public\n * @since 2.0.0\n * @allowPreventDefault\n */, event(\"move-over\", {\n  detail: {\n    /**\n     * @public\n     */\n    source: {\n      type: Object\n    },\n    /**\n     * @public\n     */\n    destination: {\n      type: Object\n    }\n  }\n})\n/**\n * Fired when a movable list item is dropped onto a drop target.\n *\n * **Note:** `move` event is fired only if there was a preceding `move-over` with prevented default action.\n * @param {object} source Contains information about the moved element under `element` property.\n * @param {object} destination Contains information about the destination of the moved element. Has `element` and `placement` properties.\n * @public\n * @allowPreventDefault\n */, event(\"move\", {\n  detail: {\n    /**\n     * @public\n     */\n    source: {\n      type: Object\n    },\n    /**\n     * @public\n     */\n    destination: {\n      type: Object\n    }\n  }\n})], List);\nList.define();\nexport default List;","map":{"version":3,"names":["UI5Element","litRender","ResizeHandler","ItemNavigation","property","event","customElement","slot","renderFinished","isTabNext","isSpace","isEnter","isTabPrevious","DragRegistry","findClosestPosition","NavigationMode","getEffectiveAriaLabelText","getNormalizedTarget","getEffectiveScrollbarStyle","getI18nBundle","debounce","isElementInView","Orientation","MovePlacement","ListSelectionMode","ListGrowingMode","DropIndicator","ListSeparator","BusyIndicator","ListTemplate","listCss","LOAD_MORE_TEXT","ARIA_LABEL_LIST_SELECTABLE","ARIA_LABEL_LIST_MULTISELECTABLE","ARIA_LABEL_LIST_DELETABLE","ListItemGroup","isInstanceOfListItemGroup","INFINITE_SCROLL_DEBOUNCE_RATE","PAGE_UP_DOWN_SIZE","List","List_1","onDefine","i18nBundle","constructor","indent","selectionMode","separators","growing","loading","loadingDelay","accessibleRole","_inViewport","_loadMoreActive","_previouslyFocusedItem","_forwardingFocus","resizeListenerAttached","listEndObserved","_itemNavigation","skipItemsSize","navigationMode","Vertical","getItemsCallback","getEnabledItems","_handleResize","checkListInViewport","bind","initialIntersection","onItemFocusedBound","onItemFocused","onForwardAfterBound","onForwardAfter","onForwardBeforeBound","onForwardBefore","onItemTabIndexChangeBound","onItemTabIndexChange","listItems","getItems","onEnterDOM","subscribe","onExitDOM","unobserveListEnd","deregister","getDomRef","unsubscribe","onBeforeRendering","detachGroupHeaderEvents","prepareListItems","onAfterRendering","attachGroupHeaderEvents","growsOnScroll","observeListEnd","grows","attachForResize","forEach","item","hasAttribute","addEventListener","removeEventListener","register","shouldRenderH1","header","length","headerText","headerID","_id","modeLabelID","listEndDOM","shadowRoot","querySelector","dropIndicatorDOM","hasData","showNoDataText","noDataText","isDelete","Delete","isSingleSelect","Single","SingleStart","SingleEnd","SingleAuto","includes","isMultiple","Multiple","ariaLabelledBy","accessibleNameRef","accessibleName","undefined","ids","push","join","ariaLabelTxt","ariaLabelModeText","getText","None","Scroll","growsWithButton","Button","_growingButtonText","growingButtonText","listAccessibleRole","toLowerCase","classes","root","slottedItems","getItemsForProcessing","key","isLastChild","showBottomBorder","All","Inner","hasConfigurableMode","_selectionMode","hasBorder","getIntersectionObserver","observe","growingIntersectionObserver","disconnect","onInteresection","entries","entry","isIntersecting","loadMore","onSelectionRequested","e","previouslySelectedItems","getSelectedItems","selectionChange","_selectionRequested","detail","selected","changePrevented","fireEvent","selectedItems","selectionComponentPressed","targetItem","_revertSelection","handleSingle","deselectSelectedItems","handleSingleStart","handleSingleEnd","handleSingleAuto","handleMultiple","handleDelete","filter","_focusable","items","getSlottedNodes","groupItems","groupHeaderItem","Boolean","oldSelection","indexOf","multiSelectCheckBox","singleSelectRadioButton","checked","_onkeydown","_handleTabNext","_onLoadMoreKeydown","preventDefault","_onLoadMoreClick","focusAfterElement","getPreviouslyFocusedItem","focusPreviouslyFocusedItem","focusFirstItem","_onLoadMoreKeyup","_onLoadMoreMousedown","_onLoadMoreMouseup","lastTabbableEl","target","getFirstItem","x","focusFirstSelectedItem","stopImmediatePropagation","_onfocusin","isForwardElement","isForwardAfterElement","focusGrowingButton","getForwardingFocus","setForwardingFocus","_ondragenter","_ondragleave","relatedTarget","Node","contains","targetReference","_ondragover","draggedElement","getDraggedElement","HTMLElement","closestPosition","clientY","placements","element","placement","On","placementAccepted","some","beforeItemMovePrevented","source","destination","_ondrop","focus","elementId","id","beforeElement","getBeforeElement","afterElement","getAfterElement","setCurrentItem","stopPropagation","onItemPress","pressedItem","onItemClose","shouldFireItemClose","onItemToggle","setPreviouslyFocusedItem","focusBeforeElement","growingBtn","getGrowingButton","firstItem","previouslyFocusedItem","firstSelectedItem","focusItem","onFocusRequested","setTimeout","forwardingFocus","i","_afterElement","_beforeElement","IntersectionObserver","rootMargin","threshold","__decorate","type","Number","invalidateOnChildChange","tag","fastNavigation","renderer","template","styles","dependencies","Array","String","Object","define"],"sources":["/home/user/projects/reactproj/node_modules/@ui5/webcomponents/src/List.ts"],"sourcesContent":["import UI5Element from \"@ui5/webcomponents-base/dist/UI5Element.js\";\nimport litRender from \"@ui5/webcomponents-base/dist/renderer/LitRenderer.js\";\nimport ResizeHandler from \"@ui5/webcomponents-base/dist/delegate/ResizeHandler.js\";\nimport type { ResizeObserverCallback } from \"@ui5/webcomponents-base/dist/delegate/ResizeHandler.js\";\nimport ItemNavigation from \"@ui5/webcomponents-base/dist/delegate/ItemNavigation.js\";\nimport property from \"@ui5/webcomponents-base/dist/decorators/property.js\";\nimport event from \"@ui5/webcomponents-base/dist/decorators/event.js\";\nimport customElement from \"@ui5/webcomponents-base/dist/decorators/customElement.js\";\nimport slot from \"@ui5/webcomponents-base/dist/decorators/slot.js\";\nimport type { ClassMap } from \"@ui5/webcomponents-base/dist/types.js\";\nimport { renderFinished } from \"@ui5/webcomponents-base/dist/Render.js\";\nimport {\n\tisTabNext,\n\tisSpace,\n\tisEnter,\n\tisTabPrevious,\n} from \"@ui5/webcomponents-base/dist/Keys.js\";\nimport DragRegistry from \"@ui5/webcomponents-base/dist/util/dragAndDrop/DragRegistry.js\";\nimport findClosestPosition from \"@ui5/webcomponents-base/dist/util/dragAndDrop/findClosestPosition.js\";\nimport NavigationMode from \"@ui5/webcomponents-base/dist/types/NavigationMode.js\";\nimport { getEffectiveAriaLabelText } from \"@ui5/webcomponents-base/dist/util/AriaLabelHelper.js\";\nimport getNormalizedTarget from \"@ui5/webcomponents-base/dist/util/getNormalizedTarget.js\";\nimport getEffectiveScrollbarStyle from \"@ui5/webcomponents-base/dist/util/getEffectiveScrollbarStyle.js\";\nimport { getI18nBundle } from \"@ui5/webcomponents-base/dist/i18nBundle.js\";\nimport type I18nBundle from \"@ui5/webcomponents-base/dist/i18nBundle.js\";\nimport debounce from \"@ui5/webcomponents-base/dist/util/debounce.js\";\nimport isElementInView from \"@ui5/webcomponents-base/dist/util/isElementInView.js\";\nimport Orientation from \"@ui5/webcomponents-base/dist/types/Orientation.js\";\nimport MovePlacement from \"@ui5/webcomponents-base/dist/types/MovePlacement.js\";\nimport ListSelectionMode from \"./types/ListSelectionMode.js\";\nimport ListGrowingMode from \"./types/ListGrowingMode.js\";\nimport type ListAccessibleRole from \"./types/ListAccessibleRole.js\";\nimport type ListItemBase from \"./ListItemBase.js\";\nimport type {\n\tListItemBasePressEventDetail,\n} from \"./ListItemBase.js\";\nimport DropIndicator from \"./DropIndicator.js\";\nimport type ListItem from \"./ListItem.js\";\nimport type {\n\tSelectionRequestEventDetail,\n} from \"./ListItem.js\";\nimport ListSeparator from \"./types/ListSeparator.js\";\nimport BusyIndicator from \"./BusyIndicator.js\";\n\n// Template\nimport ListTemplate from \"./generated/templates/ListTemplate.lit.js\";\n\n// Styles\nimport listCss from \"./generated/themes/List.css.js\";\n\n// Texts\nimport {\n\tLOAD_MORE_TEXT, ARIA_LABEL_LIST_SELECTABLE,\n\tARIA_LABEL_LIST_MULTISELECTABLE,\n\tARIA_LABEL_LIST_DELETABLE,\n} from \"./generated/i18n/i18n-defaults.js\";\nimport type CheckBox from \"./CheckBox.js\";\nimport type RadioButton from \"./RadioButton.js\";\nimport ListItemGroup, { isInstanceOfListItemGroup } from \"./ListItemGroup.js\";\n\nconst INFINITE_SCROLL_DEBOUNCE_RATE = 250; // ms\n\nconst PAGE_UP_DOWN_SIZE = 10;\n\n// ListItemBase-based events\ntype ListItemFocusEventDetail = {\n\titem: ListItemBase,\n}\n\ntype ListSelectionChangeEventDetail = {\n\tselectedItems: Array<ListItemBase>;\n\tpreviouslySelectedItems: Array<ListItemBase>;\n\tselectionComponentPressed: boolean;\n\ttargetItem: ListItemBase;\n\tkey?: string;\n}\n\ntype ListItemDeleteEventDetail = {\n\titem: ListItemBase,\n}\n\ntype ListMoveEventDetail = {\n\tsource: {\n\t\telement: HTMLElement,\n\t},\n\tdestination: {\n\t\telement: HTMLElement,\n\t\tplacement: `${MovePlacement}`,\n\t}\n}\n\n// ListItem-based events\ntype ListItemCloseEventDetail = {\n\titem: ListItemBase,\n}\n\ntype ListItemToggleEventDetail = {\n\titem: ListItemBase,\n}\n\ntype ListItemClickEventDetail = {\n\titem: ListItemBase,\n}\n\n/**\n * @class\n *\n * ### Overview\n *\n * The `ui5-list` component allows displaying a list of items, advanced keyboard\n * handling support for navigating between items, and predefined modes to improve the development efficiency.\n *\n * The `ui5-list` is a container for the available list items:\n *\n * - `ui5-li`\n * - `ui5-li-custom`\n * - `ui5-li-group`\n *\n * To benefit from the built-in selection mechanism, you can use the available\n * selection modes, such as\n * `Single`, `Multiple` and `Delete`.\n *\n * Additionally, the `ui5-list` provides header, footer, and customization for the list item separators.\n *\n * ### Keyboard Handling\n *\n * #### Basic Navigation\n * The `ui5-list` provides advanced keyboard handling.\n * When a list is focused the user can use the following keyboard\n * shortcuts in order to perform a navigation:\n *\n * - [Up] or [Down] - Navigates up and down the items\n * - [Home] - Navigates to first item\n * - [End] - Navigates to the last item\n *\n * The user can use the following keyboard shortcuts to perform actions (such as select, delete),\n * when the `selectionMode` property is in use:\n *\n * - [Space] - Select an item (if `type` is 'Active') when `selectionMode` is selection\n * - [Delete] - Delete an item if `selectionMode` property is `Delete`\n *\n * #### Fast Navigation\n * This component provides a build in fast navigation group which can be used via [F6] / [Shift] + [F6] / [Ctrl] + [Alt/Option] / [Down] or [Ctrl] + [Alt/Option] + [Up].\n * In order to use this functionality, you need to import the following module:\n * `import \"@ui5/webcomponents-base/dist/features/F6Navigation.js\"`\n *\n * ### ES6 Module Import\n *\n * `import \"@ui5/webcomponents/dist/List.js\";`\n *\n * `import \"@ui5/webcomponents/dist/ListItemStandard.js\";` (for `ui5-li`)\n *\n * `import \"@ui5/webcomponents/dist/ListItemCustom.js\";` (for `ui5-li-custom`)\n *\n * `import \"@ui5/webcomponents/dist/ListItemGroup.js\";` (for `ui5-li-group`)\n * @constructor\n * @extends UI5Element\n * @public\n */\n@customElement({\n\ttag: \"ui5-list\",\n\tfastNavigation: true,\n\trenderer: litRender,\n\ttemplate: ListTemplate,\n\tstyles: [\n\t\tlistCss,\n\t\tgetEffectiveScrollbarStyle(),\n\t],\n\tdependencies: [BusyIndicator, DropIndicator, ListItemGroup],\n})\n/**\n * Fired when an item is activated, unless the item's `type` property\n * is set to `Inactive`.\n * @allowPreventDefault\n * @param {HTMLElement} item The clicked item.\n * @public\n */\n@event<ListItemClickEventDetail>(\"item-click\", {\n\tdetail: {\n\t\t/**\n\t\t * @public\n\t\t */\n\t\titem: { type: HTMLElement },\n\t},\n})\n\n/**\n * Fired when the `Close` button of any item is clicked\n *\n * **Note:** This event is only applicable to list items that can be closed (such as notification list items),\n * not to be confused with `item-delete`.\n * @param {HTMLElement} item the item about to be closed.\n * @public\n * @since 1.0.0-rc.8\n */\n@event<ListItemCloseEventDetail>(\"item-close\", {\n\tdetail: {\n\t\t/**\n\t\t * @public\n\t\t */\n\t\titem: { type: HTMLElement },\n\t},\n})\n\n/**\n * Fired when the `Toggle` button of any item is clicked.\n *\n * **Note:** This event is only applicable to list items that can be toggled (such as notification group list items).\n * @param {HTMLElement} item the toggled item.\n * @public\n * @since 1.0.0-rc.8\n */\n@event<ListItemToggleEventDetail>(\"item-toggle\", {\n\tdetail: {\n\t\t/**\n\t\t * @public\n\t\t */\n\t\titem: { type: HTMLElement },\n\t},\n})\n\n/**\n * Fired when the Delete button of any item is pressed.\n *\n * **Note:** A Delete button is displayed on each item,\n * when the component `selectionMode` property is set to `Delete`.\n * @param {HTMLElement} item the deleted item.\n * @public\n */\n@event<ListItemDeleteEventDetail>(\"item-delete\", {\n\tdetail: {\n\t\t/**\n\t\t * @public\n\t\t */\n\t\titem: { type: HTMLElement },\n\t},\n})\n\n/**\n * Fired when selection is changed by user interaction\n * in `Single`, `SingleStart`, `SingleEnd` and `Multiple` selection modes.\n * @allowPreventDefault\n * @param {Array<ListItemBase>} selectedItems An array of the selected items.\n * @param {Array<ListItemBase>} previouslySelectedItems An array of the previously selected items.\n * @public\n */\n@event<ListSelectionChangeEventDetail>(\"selection-change\", {\n\tdetail: {\n\t\t/**\n\t\t * @public\n\t\t */\n\t\tselectedItems: { type: Array },\n\t\t/**\n\t\t * @public\n\t\t */\n\t\tpreviouslySelectedItems: { type: Array },\n\t\t/**\n\t\t * protected, holds the event target item\n\t\t * @protected\n\t\t */\n\t\ttargetItem: { type: HTMLElement },\n\t\t/**\n\t\t * protected, indicates if the user used the selection components to change the selection\n\t\t * @protected\n\t\t */\n\t\tselectionComponentPressed: { type: Boolean },\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tkey: { type: String },\n\t},\n})\n\n/**\n * Fired when the user scrolls to the bottom of the list.\n *\n * **Note:** The event is fired when the `growing='Scroll'` property is enabled.\n * @public\n * @since 1.0.0-rc.6\n */\n@event(\"load-more\")\n\n/**\n * @private\n */\n@event<ListItemFocusEventDetail>(\"item-focused\", {\n\tdetail: {\n\t\titem: { type: HTMLElement },\n\t},\n})\n\n/**\n * Fired when a movable list item is moved over a potential drop target during a dragging operation.\n *\n * If the new position is valid, prevent the default action of the event using `preventDefault()`.\n * @param {object} source Contains information about the moved element under `element` property.\n * @param {object} destination Contains information about the destination of the moved element. Has `element` and `placement` properties.\n * @public\n * @since 2.0.0\n * @allowPreventDefault\n */\n\n@event<ListMoveEventDetail>(\"move-over\", {\n\tdetail: {\n\t\t/**\n\t\t * @public\n\t\t */\n\t\tsource: { type: Object },\n\t\t/**\n\t\t * @public\n\t\t */\n\t\tdestination: { type: Object },\n\t},\n})\n\n/**\n * Fired when a movable list item is dropped onto a drop target.\n *\n * **Note:** `move` event is fired only if there was a preceding `move-over` with prevented default action.\n * @param {object} source Contains information about the moved element under `element` property.\n * @param {object} destination Contains information about the destination of the moved element. Has `element` and `placement` properties.\n * @public\n * @allowPreventDefault\n */\n@event<ListMoveEventDetail>(\"move\", {\n\tdetail: {\n\t\t/**\n\t\t * @public\n\t\t */\n\t\tsource: { type: Object },\n\t\t/**\n\t\t * @public\n\t\t */\n\t\tdestination: { type: Object },\n\t},\n})\nclass List extends UI5Element {\n\t/**\n\t * Defines the component header text.\n\t *\n\t * **Note:** If `header` is set this property is ignored.\n\t * @default undefined\n\t * @public\n\t */\n\t@property()\n\theaderText?: string;\n\n\t/**\n\t * Defines the footer text.\n\t * @default undefined\n\t * @public\n\t */\n\t@property()\n\tfooterText?: string;\n\n\t/**\n\t * Determines whether the component is indented.\n\t * @default false\n\t * @public\n\t */\n\t@property({ type: Boolean })\n\tindent = false;\n\n\t/**\n\t * Defines the selection mode of the component.\n\t * @default \"None\"\n\t * @public\n\t */\n\t@property()\n\tselectionMode: `${ListSelectionMode}` = \"None\";\n\n\t/**\n\t * Defines the text that is displayed when the component contains no items.\n\t * @default undefined\n\t * @public\n\t */\n\t@property()\n\tnoDataText?: string;\n\n\t/**\n\t * Defines the item separator style that is used.\n\t * @default \"All\"\n\t * @public\n\t */\n\t@property()\n\tseparators: `${ListSeparator}`= \"All\";\n\n\t/**\n\t * Defines whether the component will have growing capability either by pressing a `More` button,\n\t * or via user scroll. In both cases `load-more` event is fired.\n\t *\n\t * **Restrictions:** `growing=\"Scroll\"` is not supported for Internet Explorer,\n\t * on IE the component will fallback to `growing=\"Button\"`.\n\t * @default \"None\"\n\t * @since 1.0.0-rc.13\n\t * @public\n\t */\n\t@property()\n\tgrowing: `${ListGrowingMode}` = \"None\";\n\n\t/**\n\t * Defines the text that will be displayed inside the growing button.\n\t *\n\t * **Note:** If not specified a built-in text will be displayed.\n\t *\n\t * **Note:** This property takes effect if the `growing` property is set to the `Button`.\n\t * @default undefined\n\t * @since 1.24\n\t * @public\n\t */\n\t@property()\n\tgrowingButtonText?: string;\n\n\t/**\n\t * Defines if the component would display a loading indicator over the list.\n\t * @default false\n\t * @public\n\t * @since 1.0.0-rc.6\n\t */\n\t@property({ type: Boolean })\n\tloading = false;\n\n\t/**\n\t * Defines the delay in milliseconds, after which the loading indicator will show up for this component.\n\t * @default 1000\n\t * @public\n\t */\n\t@property({ type: Number })\n\tloadingDelay = 1000;\n\n\t/**\n\t * Defines the accessible name of the component.\n\t * @default undefined\n\t * @public\n\t * @since 1.0.0-rc.15\n\t */\n\t@property()\n\taccessibleName?: string;\n\n\t/**\n\t * Defines the IDs of the elements that label the input.\n\t * @default undefined\n\t * @public\n\t * @since 1.0.0-rc.15\n\t */\n\t@property()\n\taccessibleNameRef?: string;\n\n\t/**\n\t * Defines the accessible role of the component.\n\t * @public\n\t * @default \"List\"\n\t * @since 1.0.0-rc.15\n\t */\n\t@property()\n\taccessibleRole: `${ListAccessibleRole}` = \"List\";\n\n\t/**\n\t * Defines if the entire list is in view port.\n\t * @private\n\t */\n\t@property({ type: Boolean })\n\t_inViewport = false;\n\n\t/**\n\t * Defines the active state of the `More` button.\n\t * @private\n\t */\n\t@property({ type: Boolean })\n\t_loadMoreActive = false;\n\n\t/**\n\t * Defines the items of the component.\n\t *\n\t * **Note:** Use `ui5-li`, `ui5-li-custom`, and `ui5-li-group` for the intended design.\n\t * @public\n\t */\n\t@slot({\n\t\ttype: HTMLElement,\n\t\t\"default\": true,\n\t\tinvalidateOnChildChange: true,\n\t})\n\titems!: Array<ListItemBase | ListItemGroup>;\n\n\t/**\n\t * Defines the component header.\n\t *\n\t * **Note:** When `header` is set, the\n\t * `headerText` property is ignored.\n\t * @public\n\t */\n\t@slot()\n\theader!: Array<HTMLElement>;\n\n\tstatic i18nBundle: I18nBundle;\n\t_previouslyFocusedItem: ListItemBase | null;\n\t_forwardingFocus: boolean;\n\tresizeListenerAttached: boolean;\n\tlistEndObserved: boolean;\n\t_handleResize: ResizeObserverCallback;\n\tinitialIntersection: boolean;\n\t_selectionRequested?: boolean;\n\tgrowingIntersectionObserver?: IntersectionObserver | null;\n\t_itemNavigation: ItemNavigation;\n\t_beforeElement?: HTMLElement | null;\n\t_afterElement?: HTMLElement | null;\n\n\tonItemFocusedBound: (e: CustomEvent) => void;\n\tonForwardAfterBound: (e: CustomEvent) => void;\n\tonForwardBeforeBound: (e: CustomEvent) => void;\n\tonItemTabIndexChangeBound: (e: CustomEvent) => void;\n\n\tstatic async onDefine() {\n\t\tList.i18nBundle = await getI18nBundle(\"@ui5/webcomponents\");\n\t}\n\n\tconstructor() {\n\t\tsuper();\n\n\t\tthis._previouslyFocusedItem = null;\n\n\t\t// Indicates that the List is forwarding the focus before or after the internal ul.\n\t\tthis._forwardingFocus = false;\n\n\t\t// Indicates that the List has already subscribed for resize.\n\t\tthis.resizeListenerAttached = false;\n\n\t\t// Indicates if the IntersectionObserver started observing the List\n\t\tthis.listEndObserved = false;\n\n\t\tthis._itemNavigation = new ItemNavigation(this, {\n\t\t\tskipItemsSize: PAGE_UP_DOWN_SIZE, // PAGE_UP and PAGE_DOWN will skip trough 10 items\n\t\t\tnavigationMode: NavigationMode.Vertical,\n\t\t\tgetItemsCallback: () => this.getEnabledItems(),\n\t\t});\n\n\t\tthis._handleResize = this.checkListInViewport.bind(this);\n\n\t\tthis._handleResize = this.checkListInViewport.bind(this);\n\n\t\t// Indicates the List bottom most part has been detected by the IntersectionObserver\n\t\t// for the first time.\n\t\tthis.initialIntersection = true;\n\n\t\tthis.onItemFocusedBound = this.onItemFocused.bind(this);\n\t\tthis.onForwardAfterBound = this.onForwardAfter.bind(this);\n\t\tthis.onForwardBeforeBound = this.onForwardBefore.bind(this);\n\t\tthis.onItemTabIndexChangeBound = this.onItemTabIndexChange.bind(this);\n\t}\n\n\t/**\n\t * Returns an array containing the list item instances without the groups in a flat structure.\n\t * @default []\n\t * @since 2.0.0\n\t * @public\n\t */\n\tget listItems(): ListItemBase[] {\n\t\treturn this.getItems();\n\t}\n\n\tonEnterDOM() {\n\t\tDragRegistry.subscribe(this);\n\t}\n\n\tonExitDOM() {\n\t\tthis.unobserveListEnd();\n\t\tthis.resizeListenerAttached = false;\n\t\tResizeHandler.deregister(this.getDomRef()!, this._handleResize);\n\t\tDragRegistry.unsubscribe(this);\n\t}\n\n\tonBeforeRendering() {\n\t\tthis.detachGroupHeaderEvents();\n\t\tthis.prepareListItems();\n\t}\n\n\tonAfterRendering() {\n\t\tthis.attachGroupHeaderEvents();\n\t\tif (this.growsOnScroll) {\n\t\t\tthis.observeListEnd();\n\t\t} else if (this.listEndObserved) {\n\t\t\tthis.unobserveListEnd();\n\t\t}\n\n\t\tif (this.grows) {\n\t\t\tthis.checkListInViewport();\n\t\t\tthis.attachForResize();\n\t\t}\n\t}\n\n\tattachGroupHeaderEvents() {\n\t\t// events fired by the group headers are not bubbling through the shadow\n\t\t// dom of the groups because of capture: false of the custom events\n\t\tthis.getItems().forEach(item => {\n\t\t\tif (item.hasAttribute(\"ui5-li-group-header\")) {\n\t\t\t\titem.addEventListener(\"ui5-_focused\", this.onItemFocusedBound as EventListener);\n\t\t\t\titem.addEventListener(\"ui5-_forward-after\", this.onForwardAfterBound as EventListener);\n\t\t\t\titem.addEventListener(\"ui5-_forward-before\", this.onForwardBeforeBound as EventListener);\n\t\t\t\titem.addEventListener(\"ui5-_tabindex-change\", this.onItemTabIndexChangeBound as EventListener);\n\t\t\t}\n\t\t});\n\t}\n\n\tdetachGroupHeaderEvents() {\n\t\tthis.getItems().forEach(item => {\n\t\t\tif (item.hasAttribute(\"ui5-li-group-header\")) {\n\t\t\t\titem.removeEventListener(\"ui5-_focused\", this.onItemFocusedBound as EventListener);\n\t\t\t\titem.removeEventListener(\"ui5-_forward-after\", this.onForwardAfterBound as EventListener);\n\t\t\t\titem.removeEventListener(\"ui5-_forward-before\", this.onForwardBeforeBound as EventListener);\n\t\t\t\titem.removeEventListener(\"ui5-_tabindex-change\", this.onItemTabIndexChangeBound as EventListener);\n\t\t\t}\n\t\t});\n\t}\n\n\tattachForResize() {\n\t\tif (!this.resizeListenerAttached) {\n\t\t\tthis.resizeListenerAttached = true;\n\t\t\tResizeHandler.register(this.getDomRef()!, this._handleResize);\n\t\t}\n\t}\n\n\tget shouldRenderH1() {\n\t\treturn !this.header.length && this.headerText;\n\t}\n\n\tget headerID() {\n\t\treturn `${this._id}-header`;\n\t}\n\n\tget modeLabelID() {\n\t\treturn `${this._id}-modeLabel`;\n\t}\n\n\tget listEndDOM() {\n\t\treturn this.shadowRoot!.querySelector(\".ui5-list-end-marker\");\n\t}\n\n\tget dropIndicatorDOM(): DropIndicator | null {\n\t\treturn this.shadowRoot!.querySelector(\"[ui5-drop-indicator]\");\n\t}\n\n\tget hasData() {\n\t\treturn this.getItems().length !== 0;\n\t}\n\n\tget showNoDataText() {\n\t\treturn !this.hasData && this.noDataText;\n\t}\n\n\tget isDelete() {\n\t\treturn this.selectionMode === ListSelectionMode.Delete;\n\t}\n\n\tget isSingleSelect() {\n\t\treturn [\n\t\t\tListSelectionMode.Single,\n\t\t\tListSelectionMode.SingleStart,\n\t\t\tListSelectionMode.SingleEnd,\n\t\t\tListSelectionMode.SingleAuto,\n\t\t].includes(this.selectionMode as ListSelectionMode);\n\t}\n\n\tget isMultiple() {\n\t\treturn this.selectionMode === ListSelectionMode.Multiple;\n\t}\n\n\tget ariaLabelledBy() {\n\t\tif (this.accessibleNameRef || this.accessibleName) {\n\t\t\treturn undefined;\n\t\t}\n\t\tconst ids = [];\n\n\t\tif (this.isMultiple || this.isSingleSelect || this.isDelete) {\n\t\t\tids.push(this.modeLabelID);\n\t\t}\n\n\t\tif (this.shouldRenderH1) {\n\t\t\tids.push(this.headerID);\n\t\t}\n\n\t\treturn ids.length ? ids.join(\" \") : undefined;\n\t}\n\n\tget ariaLabelTxt() {\n\t\treturn getEffectiveAriaLabelText(this);\n\t}\n\n\tget ariaLabelModeText(): string {\n\t\tif (this.hasData) {\n\t\t\tif (this.isMultiple) {\n\t\t\t\treturn List.i18nBundle.getText(ARIA_LABEL_LIST_MULTISELECTABLE);\n\t\t\t}\n\t\t\tif (this.isSingleSelect) {\n\t\t\t\treturn List.i18nBundle.getText(ARIA_LABEL_LIST_SELECTABLE);\n\t\t\t}\n\t\t\tif (this.isDelete) {\n\t\t\t\treturn List.i18nBundle.getText(ARIA_LABEL_LIST_DELETABLE);\n\t\t\t}\n\t\t}\n\n\t\treturn \"\";\n\t}\n\n\tget grows() {\n\t\treturn this.growing !== ListGrowingMode.None;\n\t}\n\n\tget growsOnScroll() {\n\t\treturn this.growing === ListGrowingMode.Scroll;\n\t}\n\n\tget growsWithButton() {\n\t\treturn this.growing === ListGrowingMode.Button;\n\t}\n\n\tget _growingButtonText(): string {\n\t\treturn this.growingButtonText || List.i18nBundle.getText(LOAD_MORE_TEXT);\n\t}\n\n\tget listAccessibleRole() {\n\t\treturn this.accessibleRole.toLowerCase();\n\t}\n\n\tget classes(): ClassMap {\n\t\treturn {\n\t\t\troot: {\n\t\t\t\t\"ui5-list-root\": true,\n\t\t\t},\n\t\t};\n\t}\n\n\tprepareListItems() {\n\t\tconst slottedItems = this.getItemsForProcessing();\n\n\t\tslottedItems.forEach((item, key) => {\n\t\t\tconst isLastChild = key === slottedItems.length - 1;\n\t\t\tconst showBottomBorder = this.separators === ListSeparator.All\n\t\t\t\t|| (this.separators === ListSeparator.Inner && !isLastChild);\n\n\t\t\tif (item.hasConfigurableMode) {\n\t\t\t\t(item as ListItem)._selectionMode = this.selectionMode;\n\t\t\t}\n\t\t\titem.hasBorder = showBottomBorder;\n\t\t});\n\t}\n\n\tasync observeListEnd() {\n\t\tif (!this.listEndObserved) {\n\t\t\tawait renderFinished();\n\t\t\tthis.getIntersectionObserver().observe(this.listEndDOM!);\n\t\t\tthis.listEndObserved = true;\n\t\t}\n\t}\n\n\tunobserveListEnd() {\n\t\tif (this.growingIntersectionObserver) {\n\t\t\tthis.growingIntersectionObserver.disconnect();\n\t\t\tthis.growingIntersectionObserver = null;\n\t\t\tthis.listEndObserved = false;\n\t\t}\n\t}\n\n\tonInteresection(entries: Array<IntersectionObserverEntry>) {\n\t\tif (this.initialIntersection) {\n\t\t\tthis.initialIntersection = false;\n\t\t\treturn;\n\t\t}\n\t\tentries.forEach(entry => {\n\t\t\tif (entry.isIntersecting) {\n\t\t\t\tdebounce(this.loadMore.bind(this), INFINITE_SCROLL_DEBOUNCE_RATE);\n\t\t\t}\n\t\t});\n\t}\n\n\t/*\n\t* ITEM SELECTION BASED ON THE CURRENT MODE\n\t*/\n\tonSelectionRequested(e: CustomEvent<SelectionRequestEventDetail>) {\n\t\tconst previouslySelectedItems = this.getSelectedItems();\n\t\tlet selectionChange = false;\n\t\tthis._selectionRequested = true;\n\n\t\tif (this.selectionMode !== ListSelectionMode.None && this[`handle${this.selectionMode}`]) {\n\t\t\tselectionChange = this[`handle${this.selectionMode}`](e.detail.item, !!e.detail.selected);\n\t\t}\n\n\t\tif (selectionChange) {\n\t\t\tconst changePrevented = !this.fireEvent<ListSelectionChangeEventDetail>(\"selection-change\", {\n\t\t\t\tselectedItems: this.getSelectedItems(),\n\t\t\t\tpreviouslySelectedItems,\n\t\t\t\tselectionComponentPressed: e.detail.selectionComponentPressed,\n\t\t\t\ttargetItem: e.detail.item,\n\t\t\t\tkey: e.detail.key,\n\t\t\t}, true);\n\t\t\tif (changePrevented) {\n\t\t\t\tthis._revertSelection(previouslySelectedItems);\n\t\t\t}\n\t\t}\n\t}\n\n\thandleSingle(item: ListItemBase): boolean {\n\t\tif (item.selected) {\n\t\t\treturn false;\n\t\t}\n\n\t\tthis.deselectSelectedItems();\n\t\titem.selected = true;\n\n\t\treturn true;\n\t}\n\n\thandleSingleStart(item: ListItemBase): boolean {\n\t\treturn this.handleSingle(item);\n\t}\n\n\thandleSingleEnd(item: ListItemBase): boolean {\n\t\treturn this.handleSingle(item);\n\t}\n\n\thandleSingleAuto(item: ListItemBase): boolean {\n\t\treturn this.handleSingle(item);\n\t}\n\n\thandleMultiple(item: ListItemBase, selected: boolean): boolean {\n\t\titem.selected = selected;\n\t\treturn true;\n\t}\n\n\thandleDelete(item: ListItemBase): boolean {\n\t\tthis.fireEvent<ListItemDeleteEventDetail>(\"item-delete\", { item });\n\n\t\treturn true;\n\t}\n\n\tdeselectSelectedItems() {\n\t\tthis.getSelectedItems().forEach(item => { item.selected = false; });\n\t}\n\n\tgetSelectedItems(): Array<ListItemBase> {\n\t\treturn this.getItems().filter(item => item.selected);\n\t}\n\n\tgetEnabledItems(): Array<ListItemBase> {\n\t\treturn this.getItems().filter(item => item._focusable);\n\t}\n\n\tgetItems(): Array<ListItemBase> {\n\t\t// drill down when we see ui5-li-group and get the items\n\t\tconst items: ListItemBase[] = [];\n\t\tconst slottedItems = this.getSlottedNodes<ListItemBase>(\"items\");\n\n\t\tslottedItems.forEach(item => {\n\t\t\tif (isInstanceOfListItemGroup(item)) {\n\t\t\t\tconst groupItems = [item.groupHeaderItem, ...item.items].filter(Boolean);\n\t\t\t\titems.push(...groupItems);\n\t\t\t} else {\n\t\t\t\titems.push(item);\n\t\t\t}\n\t\t});\n\n\t\treturn items;\n\t}\n\n\tgetItemsForProcessing(): Array<ListItemBase> {\n\t\treturn this.getItems();\n\t}\n\n\t_revertSelection(previouslySelectedItems: Array<ListItemBase>) {\n\t\tthis.getItems().forEach((item: ListItemBase) => {\n\t\t\tconst oldSelection = previouslySelectedItems.indexOf(item) !== -1;\n\t\t\tconst multiSelectCheckBox = item.shadowRoot!.querySelector<CheckBox>(\".ui5-li-multisel-cb\");\n\t\t\tconst singleSelectRadioButton = item.shadowRoot!.querySelector<RadioButton>(\".ui5-li-singlesel-radiobtn\");\n\n\t\t\titem.selected = oldSelection;\n\t\t\tif (multiSelectCheckBox) {\n\t\t\t\tmultiSelectCheckBox.checked = oldSelection;\n\t\t\t} else if (singleSelectRadioButton) {\n\t\t\t\tsingleSelectRadioButton.checked = oldSelection;\n\t\t\t}\n\t\t});\n\t}\n\n\t_onkeydown(e: KeyboardEvent) {\n\t\tif (isTabNext(e)) {\n\t\t\tthis._handleTabNext(e);\n\t\t}\n\t}\n\n\t_onLoadMoreKeydown(e: KeyboardEvent) {\n\t\tif (isSpace(e)) {\n\t\t\te.preventDefault();\n\t\t\tthis._loadMoreActive = true;\n\t\t}\n\n\t\tif (isEnter(e)) {\n\t\t\tthis._onLoadMoreClick();\n\t\t\tthis._loadMoreActive = true;\n\t\t}\n\n\t\tif (isTabNext(e)) {\n\t\t\tthis.focusAfterElement();\n\t\t}\n\n\t\tif (isTabPrevious(e)) {\n\t\t\tif (this.getPreviouslyFocusedItem()) {\n\t\t\t\tthis.focusPreviouslyFocusedItem();\n\t\t\t} else {\n\t\t\t\tthis.focusFirstItem();\n\t\t\t}\n\t\t\te.preventDefault();\n\t\t}\n\t}\n\n\t_onLoadMoreKeyup(e: KeyboardEvent) {\n\t\tif (isSpace(e)) {\n\t\t\tthis._onLoadMoreClick();\n\t\t}\n\t\tthis._loadMoreActive = false;\n\t}\n\n\t_onLoadMoreMousedown() {\n\t\tthis._loadMoreActive = true;\n\t}\n\n\t_onLoadMoreMouseup() {\n\t\tthis._loadMoreActive = false;\n\t}\n\n\t_onLoadMoreClick() {\n\t\tthis.loadMore();\n\t}\n\n\tcheckListInViewport() {\n\t\tthis._inViewport = isElementInView(this.getDomRef()!);\n\t}\n\n\tloadMore() {\n\t\tthis.fireEvent(\"load-more\");\n\t}\n\n\t/*\n\t* KEYBOARD SUPPORT\n\t*/\n\t_handleTabNext(e: KeyboardEvent) {\n\t\tlet lastTabbableEl;\n\t\tconst target = getNormalizedTarget(e.target as HTMLElement);\n\n\t\tif (!lastTabbableEl) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (lastTabbableEl === target) {\n\t\t\tif (this.getFirstItem(x => x.selected && x._focusable)) {\n\t\t\t\tthis.focusFirstSelectedItem();\n\t\t\t} else if (this.getPreviouslyFocusedItem()) {\n\t\t\t\tthis.focusPreviouslyFocusedItem();\n\t\t\t} else {\n\t\t\t\tthis.focusFirstItem();\n\t\t\t}\n\n\t\t\te.stopImmediatePropagation();\n\t\t\te.preventDefault();\n\t\t}\n\t}\n\n\t_onfocusin(e: FocusEvent) {\n\t\tconst target = getNormalizedTarget(e.target as HTMLElement);\n\t\t// If the focusin event does not origin from one of the 'triggers' - ignore it.\n\t\tif (!this.isForwardElement(target)) {\n\t\t\te.stopImmediatePropagation();\n\t\t\treturn;\n\t\t}\n\n\t\t// The focus arrives in the List for the first time.\n\t\t// If there is selected item - focus it or focus the first item.\n\t\tif (!this.getPreviouslyFocusedItem()) {\n\t\t\tif (this.growsWithButton && this.isForwardAfterElement(target)) {\n\t\t\t\tthis.focusGrowingButton();\n\t\t\t} else {\n\t\t\t\tthis.focusFirstItem();\n\t\t\t}\n\t\t\te.stopImmediatePropagation();\n\t\t\treturn;\n\t\t}\n\n\t\t// The focus returns to the List,\n\t\t// focus the first selected item or the previously focused element.\n\t\tif (!this.getForwardingFocus()) {\n\t\t\tif (this.growsWithButton && this.isForwardAfterElement(target)) {\n\t\t\t\tthis.focusGrowingButton();\n\t\t\t\te.stopImmediatePropagation();\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis.focusPreviouslyFocusedItem();\n\t\t\te.stopImmediatePropagation();\n\t\t}\n\n\t\tthis.setForwardingFocus(false);\n\t}\n\n\t_ondragenter(e: DragEvent) {\n\t\te.preventDefault();\n\t}\n\n\t_ondragleave(e: DragEvent) {\n\t\tif (e.relatedTarget instanceof Node && this.shadowRoot!.contains(e.relatedTarget)) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.dropIndicatorDOM!.targetReference = null;\n\t}\n\n\t_ondragover(e: DragEvent) {\n\t\tconst draggedElement = DragRegistry.getDraggedElement();\n\n\t\tif (!(e.target instanceof HTMLElement) || !draggedElement) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst closestPosition = findClosestPosition(\n\t\t\tthis.items,\n\t\t\te.clientY,\n\t\t\tOrientation.Vertical,\n\t\t);\n\n\t\tif (!closestPosition) {\n\t\t\tthis.dropIndicatorDOM!.targetReference = null;\n\t\t\treturn;\n\t\t}\n\n\t\tlet placements = closestPosition.placements;\n\n\t\tif (closestPosition.element === draggedElement) {\n\t\t\tplacements = placements.filter(placement => placement !== MovePlacement.On);\n\t\t}\n\n\t\tconst placementAccepted = placements.some(placement => {\n\t\t\tconst beforeItemMovePrevented = !this.fireEvent<ListMoveEventDetail>(\"move-over\", {\n\t\t\t\tsource: {\n\t\t\t\t\telement: draggedElement,\n\t\t\t\t},\n\t\t\t\tdestination: {\n\t\t\t\t\telement: closestPosition.element,\n\t\t\t\t\tplacement,\n\t\t\t\t},\n\t\t\t}, true);\n\n\t\t\tif (beforeItemMovePrevented) {\n\t\t\t\te.preventDefault();\n\t\t\t\tthis.dropIndicatorDOM!.targetReference = closestPosition.element;\n\t\t\t\tthis.dropIndicatorDOM!.placement = placement;\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\treturn false;\n\t\t});\n\n\t\tif (!placementAccepted) {\n\t\t\tthis.dropIndicatorDOM!.targetReference = null;\n\t\t}\n\t}\n\n\t_ondrop(e: DragEvent) {\n\t\te.preventDefault();\n\t\tconst draggedElement = DragRegistry.getDraggedElement()!;\n\n\t\tthis.fireEvent<ListMoveEventDetail>(\"move\", {\n\t\t\tsource: {\n\t\t\t\telement: draggedElement,\n\t\t\t},\n\t\t\tdestination: {\n\t\t\t\telement: this.dropIndicatorDOM!.targetReference!,\n\t\t\t\tplacement: this.dropIndicatorDOM!.placement,\n\t\t\t},\n\t\t});\n\n\t\tthis.dropIndicatorDOM!.targetReference = null;\n\t\tdraggedElement.focus();\n\t}\n\n\tisForwardElement(element: HTMLElement) {\n\t\tconst elementId = element.id;\n\t\tconst beforeElement = this.getBeforeElement();\n\n\t\tif (this._id === elementId || (beforeElement && beforeElement.id === elementId)) {\n\t\t\treturn true;\n\t\t}\n\n\t\treturn this.isForwardAfterElement(element);\n\t}\n\n\tisForwardAfterElement(element: HTMLElement) {\n\t\tconst elementId = element.id;\n\t\tconst afterElement = this.getAfterElement();\n\n\t\treturn afterElement && afterElement.id === elementId;\n\t}\n\n\tonItemTabIndexChange(e: CustomEvent) {\n\t\tconst target = e.target as ListItemBase;\n\t\tthis._itemNavigation.setCurrentItem(target);\n\t}\n\n\tonItemFocused(e: CustomEvent) {\n\t\tconst target = e.target as ListItemBase;\n\n\t\te.stopPropagation();\n\n\t\tthis._itemNavigation.setCurrentItem(target);\n\t\tthis.fireEvent<ListItemFocusEventDetail>(\"item-focused\", { item: target });\n\n\t\tif (this.selectionMode === ListSelectionMode.SingleAuto) {\n\t\t\tconst detail: SelectionRequestEventDetail = {\n\t\t\t\titem: target,\n\t\t\t\tselectionComponentPressed: false,\n\t\t\t\tselected: true,\n\t\t\t\tkey: e.detail.key,\n\t\t\t};\n\n\t\t\tthis.onSelectionRequested({ detail } as CustomEvent<SelectionRequestEventDetail>);\n\t\t}\n\t}\n\n\tonItemPress(e: CustomEvent<ListItemBasePressEventDetail>) {\n\t\tconst pressedItem = e.detail.item;\n\n\t\tif (!this.fireEvent<ListItemClickEventDetail>(\"item-click\", { item: pressedItem }, true)) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (!this._selectionRequested && this.selectionMode !== ListSelectionMode.Delete) {\n\t\t\tthis._selectionRequested = true;\n\t\t\tconst detail: SelectionRequestEventDetail = {\n\t\t\t\titem: pressedItem,\n\t\t\t\tselectionComponentPressed: false,\n\t\t\t\tselected: !pressedItem.selected,\n\t\t\t\tkey: e.detail.key,\n\t\t\t};\n\n\t\t\tthis.onSelectionRequested({ detail } as CustomEvent<SelectionRequestEventDetail>);\n\t\t}\n\n\t\tthis._selectionRequested = false;\n\t}\n\n\t// This is applicable to NotificationListItem\n\tonItemClose(e: CustomEvent<ListItemCloseEventDetail>) {\n\t\tconst target = e.target as UI5Element | null;\n\t\tconst shouldFireItemClose = target?.hasAttribute(\"ui5-li-notification\") || target?.hasAttribute(\"ui5-li-notification-group\");\n\n\t\tif (shouldFireItemClose) {\n\t\t\tthis.fireEvent<ListItemCloseEventDetail>(\"item-close\", { item: e.detail?.item });\n\t\t}\n\t}\n\n\tonItemToggle(e: CustomEvent<ListItemToggleEventDetail>) {\n\t\tthis.fireEvent<ListItemToggleEventDetail>(\"item-toggle\", { item: e.detail.item });\n\t}\n\n\tonForwardBefore(e: CustomEvent) {\n\t\tthis.setPreviouslyFocusedItem(e.target as ListItemBase);\n\t\tthis.focusBeforeElement();\n\t\te.stopPropagation();\n\t}\n\n\tonForwardAfter(e: CustomEvent) {\n\t\tthis.setPreviouslyFocusedItem(e.target as ListItemBase);\n\n\t\tif (!this.growsWithButton) {\n\t\t\tthis.focusAfterElement();\n\t\t} else {\n\t\t\tthis.focusGrowingButton();\n\t\t\te.preventDefault();\n\t\t}\n\n\t\te.stopPropagation();\n\t}\n\n\tfocusBeforeElement() {\n\t\tthis.setForwardingFocus(true);\n\t\tthis.getBeforeElement().focus();\n\t}\n\n\tfocusAfterElement() {\n\t\tthis.setForwardingFocus(true);\n\t\tthis.getAfterElement().focus();\n\t}\n\n\tfocusGrowingButton() {\n\t\tconst growingBtn = this.getGrowingButton();\n\n\t\tif (growingBtn) {\n\t\t\tgrowingBtn.focus();\n\t\t}\n\t}\n\n\tgetGrowingButton() {\n\t\treturn this.shadowRoot!.querySelector(`[id=\"${this._id}-growing-btn\"]`) as HTMLElement;\n\t}\n\n\t/**\n\t * Focuses the first list item and sets its tabindex to \"0\" via the ItemNavigation\n\t * @protected\n\t */\n\tfocusFirstItem() {\n\t\t// only enabled items are focusable\n\t\tconst firstItem = this.getFirstItem(x => x._focusable);\n\n\t\tif (firstItem) {\n\t\t\tfirstItem.focus();\n\t\t}\n\t}\n\n\tfocusPreviouslyFocusedItem() {\n\t\tconst previouslyFocusedItem = this.getPreviouslyFocusedItem();\n\n\t\tif (previouslyFocusedItem) {\n\t\t\tpreviouslyFocusedItem.focus();\n\t\t}\n\t}\n\n\tfocusFirstSelectedItem() {\n\t\t// only enabled items are focusable\n\t\tconst firstSelectedItem = this.getFirstItem(x => x.selected && x._focusable);\n\n\t\tif (firstSelectedItem) {\n\t\t\tfirstSelectedItem.focus();\n\t\t}\n\t}\n\n\t/**\n\t * Focuses a list item and sets its tabindex to \"0\" via the ItemNavigation\n\t * @protected\n\t * @param item\n\t */\n\tfocusItem(item: ListItemBase) {\n\t\tthis._itemNavigation.setCurrentItem(item);\n\t\titem.focus();\n\t}\n\n\tonFocusRequested(e: CustomEvent) {\n\t\tsetTimeout(() => {\n\t\t\tthis.setPreviouslyFocusedItem(e.target as ListItemBase);\n\t\t\tthis.focusPreviouslyFocusedItem();\n\t\t}, 0);\n\t}\n\n\tsetForwardingFocus(forwardingFocus: boolean) {\n\t\tthis._forwardingFocus = forwardingFocus;\n\t}\n\n\tgetForwardingFocus() {\n\t\treturn this._forwardingFocus;\n\t}\n\n\tsetPreviouslyFocusedItem(item: ListItemBase) {\n\t\tthis._previouslyFocusedItem = item;\n\t}\n\n\tgetPreviouslyFocusedItem() {\n\t\treturn this._previouslyFocusedItem;\n\t}\n\n\tgetFirstItem(filter: (item: ListItemBase) => boolean): ListItemBase | null {\n\t\tconst slottedItems = this.getItems();\n\t\tlet firstItem = null;\n\n\t\tif (!filter) {\n\t\t\treturn slottedItems.length ? slottedItems[0] : null;\n\t\t}\n\n\t\tfor (let i = 0; i < slottedItems.length; i++) {\n\t\t\tif (filter(slottedItems[i])) {\n\t\t\t\tfirstItem = slottedItems[i];\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\treturn firstItem;\n\t}\n\n\tgetAfterElement() {\n\t\tif (!this._afterElement) {\n\t\t\tthis._afterElement = this.shadowRoot!.querySelector(`[id=\"${this._id}-after\"]`) as HTMLElement;\n\t\t}\n\t\treturn this._afterElement;\n\t}\n\n\tgetBeforeElement() {\n\t\tif (!this._beforeElement) {\n\t\t\tthis._beforeElement = this.shadowRoot!.querySelector(`[id=\"${this._id}-before\"]`) as HTMLElement;\n\t\t}\n\t\treturn this._beforeElement;\n\t}\n\n\tgetIntersectionObserver() {\n\t\tif (!this.growingIntersectionObserver) {\n\t\t\tthis.growingIntersectionObserver = new IntersectionObserver(this.onInteresection.bind(this), {\n\t\t\t\troot: null,\n\t\t\t\trootMargin: \"0px\",\n\t\t\t\tthreshold: 1.0,\n\t\t\t});\n\t\t}\n\n\t\treturn this.growingIntersectionObserver;\n\t}\n}\n\nList.define();\n\nexport default List;\nexport type {\n\tListItemClickEventDetail,\n\tListItemFocusEventDetail,\n\tListItemDeleteEventDetail,\n\tListItemCloseEventDetail,\n\tListItemToggleEventDetail,\n\tListSelectionChangeEventDetail,\n\tListMoveEventDetail,\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}