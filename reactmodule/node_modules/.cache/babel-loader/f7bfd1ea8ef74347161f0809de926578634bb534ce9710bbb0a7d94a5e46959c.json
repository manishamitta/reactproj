{"ast":null,"code":"'use client';\n\nimport '@ui5/webcomponents/dist/Input.js';\nimport { withWebComponent } from '../../internal/withWebComponent.js';\n/**\n * The `Input` component allows the user to enter and edit text or numeric values in one line.\n *\n * Additionally, you can provide `suggestionItems`,\n * that are displayed in a popover right under the input.\n *\n * The text field can be editable or read-only (`readonly` property),\n * and it can be enabled or disabled (`disabled` property).\n * To visualize semantic states, such as \"Negative\" or \"Critical\", the `valueState` property is provided.\n * When the user makes changes to the text, the change event is fired,\n * which enables you to react on any text change.\n *\n * **Note:** If you are using the `Input` as a single npm module,\n * don't forget to import the `InputSuggestions` module from\n * \"@ui5/webcomponents/dist/features/InputSuggestions.js\"\n * to enable the suggestions functionality.\n *\n * ### Keyboard Handling\n * The `Input` provides the following keyboard shortcuts:\n *\n * - [Escape] - Closes the suggestion list, if open. If closed or not enabled, cancels changes and reverts to the value which the Input field had when it got the focus.\n * - [Enter] or [Return] - If suggestion list is open takes over the current matching item and closes it. If value state or group header is focused, does nothing.\n * - [Down] - Focuses the next matching item in the suggestion list. Selection-change event is fired.\n * - [Up] - Focuses the previous matching item in the suggestion list. Selection-change event is fired.\n * - [Home] - If focus is in the text input, moves caret before the first character. If focus is in the list, highlights the first item and updates the input accordingly.\n * - [End] - If focus is in the text input, moves caret after the last character. If focus is in the list, highlights the last item and updates the input accordingly.\n * - [Page Up] - If focus is in the list, moves highlight up by page size (10 items by default). If focus is in the input, does nothing.\n * - [Page Down] - If focus is in the list, moves highlight down by page size (10 items by default). If focus is in the input, does nothing.\n *\n *\n *\n * `import \"@ui5/webcomponents/dist/features/InputSuggestions.js\";` (optional - for input suggestions support)\n *\n * __Note__: This is a UI5 Web Component! [Repository](https://github.com/SAP/ui5-webcomponents) | [Documentation](https://sap.github.io/ui5-webcomponents/)\n */\nconst Input = withWebComponent('ui5-input', ['accessibleName', 'accessibleNameRef', 'maxlength', 'name', 'placeholder', 'type', 'value', 'valueState'], ['disabled', 'noTypeahead', 'open', 'readonly', 'required', 'showClearIcon', 'showSuggestions'], ['icon', 'valueStateMessage'], ['change', 'close', 'input', 'open', 'select', 'selection-change']);\nInput.displayName = 'Input';\nexport { Input };","map":{"version":3,"names":["withWebComponent","Input","displayName"],"sources":["/home/user/projects/reactproj/node_modules/@ui5/webcomponents-react/dist/webComponents/Input/index.js"],"sourcesContent":["'use client';\n\nimport '@ui5/webcomponents/dist/Input.js';\nimport { withWebComponent } from '../../internal/withWebComponent.js';\n/**\n * The `Input` component allows the user to enter and edit text or numeric values in one line.\n *\n * Additionally, you can provide `suggestionItems`,\n * that are displayed in a popover right under the input.\n *\n * The text field can be editable or read-only (`readonly` property),\n * and it can be enabled or disabled (`disabled` property).\n * To visualize semantic states, such as \"Negative\" or \"Critical\", the `valueState` property is provided.\n * When the user makes changes to the text, the change event is fired,\n * which enables you to react on any text change.\n *\n * **Note:** If you are using the `Input` as a single npm module,\n * don't forget to import the `InputSuggestions` module from\n * \"@ui5/webcomponents/dist/features/InputSuggestions.js\"\n * to enable the suggestions functionality.\n *\n * ### Keyboard Handling\n * The `Input` provides the following keyboard shortcuts:\n *\n * - [Escape] - Closes the suggestion list, if open. If closed or not enabled, cancels changes and reverts to the value which the Input field had when it got the focus.\n * - [Enter] or [Return] - If suggestion list is open takes over the current matching item and closes it. If value state or group header is focused, does nothing.\n * - [Down] - Focuses the next matching item in the suggestion list. Selection-change event is fired.\n * - [Up] - Focuses the previous matching item in the suggestion list. Selection-change event is fired.\n * - [Home] - If focus is in the text input, moves caret before the first character. If focus is in the list, highlights the first item and updates the input accordingly.\n * - [End] - If focus is in the text input, moves caret after the last character. If focus is in the list, highlights the last item and updates the input accordingly.\n * - [Page Up] - If focus is in the list, moves highlight up by page size (10 items by default). If focus is in the input, does nothing.\n * - [Page Down] - If focus is in the list, moves highlight down by page size (10 items by default). If focus is in the input, does nothing.\n *\n *\n *\n * `import \"@ui5/webcomponents/dist/features/InputSuggestions.js\";` (optional - for input suggestions support)\n *\n * __Note__: This is a UI5 Web Component! [Repository](https://github.com/SAP/ui5-webcomponents) | [Documentation](https://sap.github.io/ui5-webcomponents/)\n */\nconst Input = withWebComponent('ui5-input', ['accessibleName', 'accessibleNameRef', 'maxlength', 'name', 'placeholder', 'type', 'value', 'valueState'], ['disabled', 'noTypeahead', 'open', 'readonly', 'required', 'showClearIcon', 'showSuggestions'], ['icon', 'valueStateMessage'], ['change', 'close', 'input', 'open', 'select', 'selection-change']);\nInput.displayName = 'Input';\nexport { Input };"],"mappings":"AAAA,YAAY;;AAEZ,OAAO,kCAAkC;AACzC,SAASA,gBAAgB,QAAQ,oCAAoC;AACrE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMC,KAAK,GAAGD,gBAAgB,CAAC,WAAW,EAAE,CAAC,gBAAgB,EAAE,mBAAmB,EAAE,WAAW,EAAE,MAAM,EAAE,aAAa,EAAE,MAAM,EAAE,OAAO,EAAE,YAAY,CAAC,EAAE,CAAC,UAAU,EAAE,aAAa,EAAE,MAAM,EAAE,UAAU,EAAE,UAAU,EAAE,eAAe,EAAE,iBAAiB,CAAC,EAAE,CAAC,MAAM,EAAE,mBAAmB,CAAC,EAAE,CAAC,QAAQ,EAAE,OAAO,EAAE,OAAO,EAAE,MAAM,EAAE,QAAQ,EAAE,kBAAkB,CAAC,CAAC;AAC3VC,KAAK,CAACC,WAAW,GAAG,OAAO;AAC3B,SAASD,KAAK","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}