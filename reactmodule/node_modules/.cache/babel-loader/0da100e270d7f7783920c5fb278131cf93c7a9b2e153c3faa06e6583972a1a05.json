{"ast":null,"code":"// Copied from https://github.com/jashkenas/underscore/blob/master/modules/throttle.js (24th January 2023)\nconst now = Date.now || (() => new Date().getTime());\n/**\n * Returns a function, that, when invoked, will only be triggered at most once\n * during a given window of time. Normally, the throttled function will run\n * as much as it can, without ever going more than once per `wait` duration;\n * but if you'd like to disable the execution on the leading edge, pass\n * `{leading: false}`. To disable execution on the trailing edge, ditto.\n */\n// eslint-disable-next-line @typescript-eslint/ban-types\nconst throttle = function (func, wait) {\n  let options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {\n    leading: true,\n    trailing: true\n  };\n  let timeout;\n  let context;\n  let args;\n  let result;\n  let previous = 0;\n  if (!options) options = {};\n  const later = () => {\n    previous = options.leading === false ? 0 : now();\n    timeout = null;\n    result = func.apply(context, args);\n    if (!timeout) context = args = null;\n  };\n  const throttled = function () {\n    const _now = now();\n    if (!previous && options.leading === false) previous = _now;\n    const remaining = wait - (_now - previous);\n    // @ts-expect-error: copied - no need to infer types here\n    // eslint-disable-next-line @typescript-eslint/no-this-alias\n    context = this;\n    for (var _len = arguments.length, params = new Array(_len), _key = 0; _key < _len; _key++) {\n      params[_key] = arguments[_key];\n    }\n    args = params;\n    if (remaining <= 0 || remaining > wait) {\n      if (timeout) {\n        clearTimeout(timeout);\n        timeout = null;\n      }\n      previous = _now;\n      result = func.apply(context, args);\n      if (!timeout) context = args = null;\n    } else if (!timeout && options.trailing !== false) {\n      timeout = setTimeout(later, remaining);\n    }\n    return result;\n  };\n  throttled.cancel = () => {\n    clearTimeout(timeout);\n    previous = 0;\n    timeout = context = args = null;\n  };\n  // @ts-expect-error: copied - no need to infer types here\n  return throttled;\n};\nexport { throttle };","map":{"version":3,"names":["now","Date","getTime","throttle","func","wait","options","arguments","length","undefined","leading","trailing","timeout","context","args","result","previous","later","apply","throttled","_now","remaining","_len","params","Array","_key","clearTimeout","setTimeout","cancel"],"sources":["/home/user/projects/reactproj/node_modules/@ui5/webcomponents-react-base/dist/utils/throttle.js"],"sourcesContent":["// Copied from https://github.com/jashkenas/underscore/blob/master/modules/throttle.js (24th January 2023)\nconst now = Date.now || (() => new Date().getTime());\n/**\n * Returns a function, that, when invoked, will only be triggered at most once\n * during a given window of time. Normally, the throttled function will run\n * as much as it can, without ever going more than once per `wait` duration;\n * but if you'd like to disable the execution on the leading edge, pass\n * `{leading: false}`. To disable execution on the trailing edge, ditto.\n */\n// eslint-disable-next-line @typescript-eslint/ban-types\nconst throttle = (func, wait, options = { leading: true, trailing: true }) => {\n    let timeout;\n    let context;\n    let args;\n    let result;\n    let previous = 0;\n    if (!options)\n        options = {};\n    const later = () => {\n        previous = options.leading === false ? 0 : now();\n        timeout = null;\n        result = func.apply(context, args);\n        if (!timeout)\n            context = args = null;\n    };\n    const throttled = function (...params) {\n        const _now = now();\n        if (!previous && options.leading === false)\n            previous = _now;\n        const remaining = wait - (_now - previous);\n        // @ts-expect-error: copied - no need to infer types here\n        // eslint-disable-next-line @typescript-eslint/no-this-alias\n        context = this;\n        args = params;\n        if (remaining <= 0 || remaining > wait) {\n            if (timeout) {\n                clearTimeout(timeout);\n                timeout = null;\n            }\n            previous = _now;\n            result = func.apply(context, args);\n            if (!timeout)\n                context = args = null;\n        }\n        else if (!timeout && options.trailing !== false) {\n            timeout = setTimeout(later, remaining);\n        }\n        return result;\n    };\n    throttled.cancel = () => {\n        clearTimeout(timeout);\n        previous = 0;\n        timeout = context = args = null;\n    };\n    // @ts-expect-error: copied - no need to infer types here\n    return throttled;\n};\nexport { throttle };\n"],"mappings":"AAAA;AACA,MAAMA,GAAG,GAAGC,IAAI,CAACD,GAAG,KAAK,MAAM,IAAIC,IAAI,CAAC,CAAC,CAACC,OAAO,CAAC,CAAC,CAAC;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMC,QAAQ,GAAG,SAAAA,CAACC,IAAI,EAAEC,IAAI,EAAkD;EAAA,IAAhDC,OAAO,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG;IAAEG,OAAO,EAAE,IAAI;IAAEC,QAAQ,EAAE;EAAK,CAAC;EACrE,IAAIC,OAAO;EACX,IAAIC,OAAO;EACX,IAAIC,IAAI;EACR,IAAIC,MAAM;EACV,IAAIC,QAAQ,GAAG,CAAC;EAChB,IAAI,CAACV,OAAO,EACRA,OAAO,GAAG,CAAC,CAAC;EAChB,MAAMW,KAAK,GAAGA,CAAA,KAAM;IAChBD,QAAQ,GAAGV,OAAO,CAACI,OAAO,KAAK,KAAK,GAAG,CAAC,GAAGV,GAAG,CAAC,CAAC;IAChDY,OAAO,GAAG,IAAI;IACdG,MAAM,GAAGX,IAAI,CAACc,KAAK,CAACL,OAAO,EAAEC,IAAI,CAAC;IAClC,IAAI,CAACF,OAAO,EACRC,OAAO,GAAGC,IAAI,GAAG,IAAI;EAC7B,CAAC;EACD,MAAMK,SAAS,GAAG,SAAAA,CAAA,EAAqB;IACnC,MAAMC,IAAI,GAAGpB,GAAG,CAAC,CAAC;IAClB,IAAI,CAACgB,QAAQ,IAAIV,OAAO,CAACI,OAAO,KAAK,KAAK,EACtCM,QAAQ,GAAGI,IAAI;IACnB,MAAMC,SAAS,GAAGhB,IAAI,IAAIe,IAAI,GAAGJ,QAAQ,CAAC;IAC1C;IACA;IACAH,OAAO,GAAG,IAAI;IAAC,SAAAS,IAAA,GAAAf,SAAA,CAAAC,MAAA,EAPYe,MAAM,OAAAC,KAAA,CAAAF,IAAA,GAAAG,IAAA,MAAAA,IAAA,GAAAH,IAAA,EAAAG,IAAA;MAANF,MAAM,CAAAE,IAAA,IAAAlB,SAAA,CAAAkB,IAAA;IAAA;IAQjCX,IAAI,GAAGS,MAAM;IACb,IAAIF,SAAS,IAAI,CAAC,IAAIA,SAAS,GAAGhB,IAAI,EAAE;MACpC,IAAIO,OAAO,EAAE;QACTc,YAAY,CAACd,OAAO,CAAC;QACrBA,OAAO,GAAG,IAAI;MAClB;MACAI,QAAQ,GAAGI,IAAI;MACfL,MAAM,GAAGX,IAAI,CAACc,KAAK,CAACL,OAAO,EAAEC,IAAI,CAAC;MAClC,IAAI,CAACF,OAAO,EACRC,OAAO,GAAGC,IAAI,GAAG,IAAI;IAC7B,CAAC,MACI,IAAI,CAACF,OAAO,IAAIN,OAAO,CAACK,QAAQ,KAAK,KAAK,EAAE;MAC7CC,OAAO,GAAGe,UAAU,CAACV,KAAK,EAAEI,SAAS,CAAC;IAC1C;IACA,OAAON,MAAM;EACjB,CAAC;EACDI,SAAS,CAACS,MAAM,GAAG,MAAM;IACrBF,YAAY,CAACd,OAAO,CAAC;IACrBI,QAAQ,GAAG,CAAC;IACZJ,OAAO,GAAGC,OAAO,GAAGC,IAAI,GAAG,IAAI;EACnC,CAAC;EACD;EACA,OAAOK,SAAS;AACpB,CAAC;AACD,SAAShB,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}