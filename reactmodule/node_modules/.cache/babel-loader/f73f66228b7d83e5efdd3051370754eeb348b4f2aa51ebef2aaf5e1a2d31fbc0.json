{"ast":null,"code":"import { useCallback, useEffect, useRef } from 'react';\nimport { actions } from 'react-table';\nimport { getLeafHeaders } from '../util/index.js';\nconst CELL_DATA_ATTRIBUTES = ['visibleColumnIndex', 'columnIndex', 'rowIndex', 'visibleRowIndex'];\nconst getFirstVisibleCell = (target, currentlyFocusedCell, noData) => {\n  if (target.dataset.componentName === 'AnalyticalTableContainer' && target.querySelector('[data-component-name=\"AnalyticalTableBodyScrollableContainer\"]')) {\n    const rowElements = target.querySelector('[data-component-name=\"AnalyticalTableBodyScrollableContainer\"]').children;\n    const middleRowCell = target.querySelector(`div[data-visible-column-index=\"0\"][data-visible-row-index=\"${Math.round(rowElements.length / 2)}\"]`);\n    middleRowCell?.focus({\n      preventScroll: true\n    });\n  } else {\n    const firstVisibleCell = noData ? target.querySelector(`div[data-visible-column-index=\"0\"][data-visible-row-index=\"0\"]`) : target.querySelector(`div[data-visible-column-index=\"0\"][data-visible-row-index=\"1\"]`);\n    if (firstVisibleCell) {\n      firstVisibleCell.tabIndex = 0;\n      firstVisibleCell.focus();\n      currentlyFocusedCell.current = firstVisibleCell;\n    }\n  }\n};\nfunction recursiveSubComponentElementSearch(element) {\n  if (!element.parentElement) {\n    return null;\n  }\n  if (element?.parentElement.dataset.subcomponent) {\n    return element.parentElement;\n  }\n  return recursiveSubComponentElementSearch(element.parentElement);\n}\nconst findParentCell = target => {\n  if (target === undefined || target === null) return;\n  if (target.dataset.rowIndex !== undefined && target.dataset.columnIndex !== undefined || target.dataset.rowIndexSub !== undefined && target.dataset.columnIndexSub !== undefined) {\n    return target;\n  } else {\n    return findParentCell(target.parentElement);\n  }\n};\nconst setFocus = (currentlyFocusedCell, nextElement) => {\n  currentlyFocusedCell.current.tabIndex = -1;\n  if (nextElement) {\n    nextElement.tabIndex = 0;\n    nextElement.focus();\n    currentlyFocusedCell.current = nextElement;\n  }\n};\nconst navigateFromActiveSubCompItem = (currentlyFocusedCell, e) => {\n  setFocus(currentlyFocusedCell, recursiveSubComponentElementSearch(e.target));\n};\nconst useGetTableProps = (tableProps, _ref) => {\n  let {\n    instance: {\n      webComponentsReactProperties,\n      data,\n      columns,\n      state\n    }\n  } = _ref;\n  const {\n    showOverlay,\n    tableRef\n  } = webComponentsReactProperties;\n  const currentlyFocusedCell = useRef(null);\n  const noData = data.length === 0;\n  useEffect(() => {\n    if (showOverlay && currentlyFocusedCell.current) {\n      currentlyFocusedCell.current.tabIndex = -1;\n      currentlyFocusedCell.current = null;\n    }\n  }, [showOverlay]);\n  const onTableBlur = e => {\n    if (e.target.tagName === 'UI5-LI' || e.target.tagName === 'UI5-LI-CUSTOM') {\n      currentlyFocusedCell.current = null;\n    }\n  };\n  useEffect(() => {\n    if (!showOverlay && data && columns && currentlyFocusedCell.current && tableRef.current && tableRef.current.tabIndex !== 0 && !tableRef.current.contains(currentlyFocusedCell.current)) {\n      currentlyFocusedCell.current = null;\n      tableRef.current.tabIndex = 0;\n    }\n  }, [data, columns, showOverlay]);\n  const onTableFocus = useCallback(e => {\n    const {\n      dataset\n    } = e.target;\n    if (dataset.emptyRowCell === 'true' || dataset.hasOwnProperty('subcomponentActiveElement') ||\n    // todo: with the new popover API of ui5wc this might not be necessary anymore\n    dataset.componentName === 'ATHeaderPopoverList' || dataset.componentName === 'ATHeaderPopover') {\n      return;\n    }\n    if (e.target.dataset.subcomponent) {\n      e.target.tabIndex = 0;\n      e.target.focus();\n      currentlyFocusedCell.current = e.target;\n      return;\n    }\n    const isFirstCellAvailable = e.target.querySelector('div[data-column-index=\"0\"][data-row-index=\"1\"]');\n    if (e.target.dataset.componentName === 'AnalyticalTableContainer') {\n      e.target.tabIndex = -1;\n      if (currentlyFocusedCell.current) {\n        const {\n          dataset\n        } = currentlyFocusedCell.current;\n        const rowIndex = parseInt(dataset.rowIndex ?? dataset.rowIndexSub, 10);\n        const columnIndex = parseInt(dataset.columnIndex ?? dataset.columnIndexSub, 10);\n        if (e.target.querySelector(`div[data-column-index=\"${columnIndex}\"][data-row-index=\"${rowIndex}\"]`) || e.target.querySelector(`div[data-column-index-sub=\"${columnIndex}\"][data-row-index-sub=\"${rowIndex}\"]`)) {\n          currentlyFocusedCell.current.tabIndex = 0;\n          currentlyFocusedCell.current.focus({\n            preventScroll: true\n          });\n        } else {\n          getFirstVisibleCell(e.target, currentlyFocusedCell, noData);\n        }\n      } else if (isFirstCellAvailable) {\n        const firstCell = e.target.querySelector('div[data-column-index]:not([data-column-id^=\"__ui5wcr__internal\"][data-row-index=\"0\"])');\n        firstCell.tabIndex = 0;\n        firstCell.focus({\n          preventScroll: true\n        });\n        currentlyFocusedCell.current = firstCell;\n      } else {\n        getFirstVisibleCell(e.target, currentlyFocusedCell, noData);\n      }\n    } else {\n      const tableCell = findParentCell(e.target);\n      if (tableCell) {\n        currentlyFocusedCell.current = tableCell;\n      } else {\n        getFirstVisibleCell(tableRef.current, currentlyFocusedCell, noData);\n      }\n    }\n  }, [currentlyFocusedCell.current, tableRef.current, noData]);\n  const onKeyboardNavigation = useCallback(e => {\n    const {\n      isRtl\n    } = state;\n    const isActiveItemInSubComponent = e.target.dataset.hasOwnProperty('subcomponentActiveElement');\n    // check if target is cell and if so proceed from there\n    if (!currentlyFocusedCell.current && CELL_DATA_ATTRIBUTES.every(item => Object.keys(e.target.dataset).includes(item))) {\n      currentlyFocusedCell.current = e.target;\n    }\n    if (currentlyFocusedCell.current) {\n      const columnIndex = parseInt(currentlyFocusedCell.current.dataset.columnIndex ?? '0', 10);\n      const rowIndex = parseInt(currentlyFocusedCell.current.dataset.rowIndex ?? currentlyFocusedCell.current.dataset.subcomponentRowIndex, 10);\n      switch (e.key) {\n        case 'End':\n          {\n            e.preventDefault();\n            const visibleColumns = tableRef.current.querySelector(`div[data-component-name=\"AnalyticalTableHeaderRow\"]`).children;\n            const lastVisibleColumn = Array.from(visibleColumns).slice(0).reduceRight((_, cur, index, arr) => {\n              const columnIndex = parseInt(cur.children?.[0]?.dataset.columnIndex, 10);\n              if (!isNaN(columnIndex)) {\n                arr.length = 0;\n                return columnIndex;\n              }\n              return 0;\n            }, 0);\n            const newElement = tableRef.current.querySelector(`div[data-visible-column-index=\"${lastVisibleColumn}\"][data-row-index=\"${rowIndex}\"]`);\n            setFocus(currentlyFocusedCell, newElement);\n            break;\n          }\n        case 'Home':\n          {\n            e.preventDefault();\n            const newElement = tableRef.current.querySelector(`div[data-visible-column-index=\"0\"][data-row-index=\"${rowIndex}\"]`);\n            setFocus(currentlyFocusedCell, newElement);\n            break;\n          }\n        case 'PageDown':\n          {\n            e.preventDefault();\n            if (currentlyFocusedCell.current.dataset.rowIndex === '0') {\n              const newElement = tableRef.current.querySelector(`div[data-column-index=\"${columnIndex}\"][data-row-index=\"${rowIndex + 1}\"]`);\n              setFocus(currentlyFocusedCell, newElement);\n            } else {\n              const lastVisibleRow = tableRef.current.querySelector(`div[data-component-name=\"AnalyticalTableBody\"]`)?.children?.[0].children.length;\n              const newElement = tableRef.current.querySelector(`div[data-column-index=\"${columnIndex}\"][data-visible-row-index=\"${lastVisibleRow}\"]`);\n              setFocus(currentlyFocusedCell, newElement);\n            }\n            break;\n          }\n        case 'PageUp':\n          {\n            e.preventDefault();\n            if (currentlyFocusedCell.current.dataset.rowIndex <= '1') {\n              const newElement = tableRef.current.querySelector(`div[data-column-index=\"${columnIndex}\"][data-row-index=\"0\"]`);\n              setFocus(currentlyFocusedCell, newElement);\n            } else {\n              const newElement = tableRef.current.querySelector(`div[data-column-index=\"${columnIndex}\"][data-visible-row-index=\"1\"]`);\n              setFocus(currentlyFocusedCell, newElement);\n            }\n            break;\n          }\n        case 'ArrowRight':\n          {\n            e.preventDefault();\n            if (isActiveItemInSubComponent) {\n              navigateFromActiveSubCompItem(currentlyFocusedCell, e);\n              return;\n            }\n            const newElement = tableRef.current.querySelector(`div[data-column-index=\"${columnIndex + (isRtl ? -1 : 1)}\"][data-row-index=\"${rowIndex}\"]`);\n            if (newElement) {\n              setFocus(currentlyFocusedCell, newElement);\n              // scroll to show full cell if it's only partial visible\n              newElement.scrollIntoView({\n                block: 'nearest'\n              });\n            }\n            break;\n          }\n        case 'ArrowLeft':\n          {\n            e.preventDefault();\n            if (isActiveItemInSubComponent) {\n              navigateFromActiveSubCompItem(currentlyFocusedCell, e);\n              return;\n            }\n            const newElement = tableRef.current.querySelector(`div[data-column-index=\"${columnIndex - (isRtl ? -1 : 1)}\"][data-row-index=\"${rowIndex}\"]`);\n            if (newElement) {\n              setFocus(currentlyFocusedCell, newElement);\n              // scroll to show full cell if it's only partial visible\n              newElement.scrollIntoView({\n                block: 'nearest'\n              });\n            }\n            break;\n          }\n        case 'ArrowDown':\n          {\n            e.preventDefault();\n            if (isActiveItemInSubComponent) {\n              navigateFromActiveSubCompItem(currentlyFocusedCell, e);\n              return;\n            }\n            const parent = currentlyFocusedCell.current.parentElement;\n            const firstChildOfParent = parent?.children?.[0];\n            const hasSubcomponent = firstChildOfParent?.dataset?.subcomponent;\n            const newElement = tableRef.current.querySelector(`div[data-column-index=\"${columnIndex}\"][data-row-index=\"${rowIndex + 1}\"]`);\n            if (hasSubcomponent && !currentlyFocusedCell.current?.dataset?.subcomponent) {\n              currentlyFocusedCell.current.tabIndex = -1;\n              firstChildOfParent.tabIndex = 0;\n              firstChildOfParent.dataset.rowIndexSub = `${rowIndex}`;\n              firstChildOfParent.dataset.columnIndexSub = `${columnIndex}`;\n              firstChildOfParent.focus();\n              currentlyFocusedCell.current = firstChildOfParent;\n            } else if (newElement) {\n              setFocus(currentlyFocusedCell, newElement);\n            }\n            break;\n          }\n        case 'ArrowUp':\n          {\n            e.preventDefault();\n            if (isActiveItemInSubComponent) {\n              navigateFromActiveSubCompItem(currentlyFocusedCell, e);\n              return;\n            }\n            let prevRowIndex = rowIndex - 1;\n            const isSubComponent = e.target.dataset.subcomponent;\n            if (isSubComponent) {\n              prevRowIndex++;\n            }\n            const previousRowCell = tableRef.current.querySelector(`div[data-column-index=\"${columnIndex}\"][data-row-index=\"${prevRowIndex}\"]`);\n            const firstChildPrevRow = previousRowCell?.parentElement.children[0];\n            const hasSubcomponent = firstChildPrevRow?.dataset?.subcomponent;\n            if (hasSubcomponent && !isSubComponent) {\n              currentlyFocusedCell.current.tabIndex = -1;\n              firstChildPrevRow.dataset.rowIndexSub = `${rowIndex - 1}`;\n              firstChildPrevRow.dataset.columnIndexSub = `${columnIndex}`;\n              firstChildPrevRow.tabIndex = 0;\n              firstChildPrevRow.focus();\n              currentlyFocusedCell.current = firstChildPrevRow;\n            } else if (previousRowCell) {\n              setFocus(currentlyFocusedCell, previousRowCell);\n            }\n            break;\n          }\n      }\n    }\n  }, [currentlyFocusedCell.current, tableRef.current, state?.isRtl]);\n  if (showOverlay) {\n    return tableProps;\n  }\n  return [tableProps, {\n    onFocus: onTableFocus,\n    onKeyDown: onKeyboardNavigation,\n    onBlur: onTableBlur\n  }];\n};\nfunction getPayload(e, column) {\n  e.preventDefault();\n  e.stopPropagation();\n  const clientX = e.target.getBoundingClientRect().x + e.target.getBoundingClientRect().width;\n  const columnId = column.id;\n  const columnWidth = column.totalWidth;\n  const headersToResize = getLeafHeaders(column);\n  const headerIdWidths = headersToResize.map(d => [d.id, d.totalWidth]);\n  return {\n    clientX,\n    columnId,\n    columnWidth,\n    headerIdWidths\n  };\n}\nconst setHeaderProps = (headerProps, _ref2) => {\n  let {\n    instance: {\n      dispatch\n    },\n    column\n  } = _ref2;\n  // resize col with keyboard\n  const handleKeyDown = e => {\n    if (typeof headerProps.onKeyDown === 'function') {\n      headerProps.onKeyDown(e);\n    }\n    if (e.nativeEvent.shiftKey) {\n      if (e.key === 'ArrowRight') {\n        const payload = getPayload(e, column);\n        dispatch({\n          type: actions.columnStartResizing,\n          ...payload\n        });\n        dispatch({\n          type: actions.columnResizing,\n          clientX: payload.clientX + 16\n        });\n        dispatch({\n          type: actions.columnDoneResizing\n        });\n        return;\n      }\n      if (e.key === 'ArrowLeft') {\n        const payload = getPayload(e, column);\n        dispatch({\n          type: actions.columnStartResizing,\n          ...payload\n        });\n        dispatch({\n          type: actions.columnResizing,\n          clientX: payload.clientX - 16\n        });\n        dispatch({\n          type: actions.columnDoneResizing\n        });\n        return;\n      }\n    }\n  };\n  return [headerProps, {\n    onKeyDown: handleKeyDown\n  }];\n};\nexport const useKeyboardNavigation = hooks => {\n  hooks.getTableProps.push(useGetTableProps);\n  hooks.getHeaderProps.push(setHeaderProps);\n};","map":{"version":3,"names":["useCallback","useEffect","useRef","actions","getLeafHeaders","CELL_DATA_ATTRIBUTES","getFirstVisibleCell","target","currentlyFocusedCell","noData","dataset","componentName","querySelector","rowElements","children","middleRowCell","Math","round","length","focus","preventScroll","firstVisibleCell","tabIndex","current","recursiveSubComponentElementSearch","element","parentElement","subcomponent","findParentCell","undefined","rowIndex","columnIndex","rowIndexSub","columnIndexSub","setFocus","nextElement","navigateFromActiveSubCompItem","e","useGetTableProps","tableProps","_ref","instance","webComponentsReactProperties","data","columns","state","showOverlay","tableRef","onTableBlur","tagName","contains","onTableFocus","emptyRowCell","hasOwnProperty","isFirstCellAvailable","parseInt","firstCell","tableCell","onKeyboardNavigation","isRtl","isActiveItemInSubComponent","every","item","Object","keys","includes","subcomponentRowIndex","key","preventDefault","visibleColumns","lastVisibleColumn","Array","from","slice","reduceRight","_","cur","index","arr","isNaN","newElement","lastVisibleRow","scrollIntoView","block","parent","firstChildOfParent","hasSubcomponent","prevRowIndex","isSubComponent","previousRowCell","firstChildPrevRow","onFocus","onKeyDown","onBlur","getPayload","column","stopPropagation","clientX","getBoundingClientRect","x","width","columnId","id","columnWidth","totalWidth","headersToResize","headerIdWidths","map","d","setHeaderProps","headerProps","_ref2","dispatch","handleKeyDown","nativeEvent","shiftKey","payload","type","columnStartResizing","columnResizing","columnDoneResizing","useKeyboardNavigation","hooks","getTableProps","push","getHeaderProps"],"sources":["/home/user/projects/reactproj/node_modules/@ui5/webcomponents-react/dist/components/AnalyticalTable/hooks/useKeyboardNavigation.js"],"sourcesContent":["import { useCallback, useEffect, useRef } from 'react';\nimport { actions } from 'react-table';\nimport { getLeafHeaders } from '../util/index.js';\nconst CELL_DATA_ATTRIBUTES = ['visibleColumnIndex', 'columnIndex', 'rowIndex', 'visibleRowIndex'];\nconst getFirstVisibleCell = (target, currentlyFocusedCell, noData) => {\n  if (target.dataset.componentName === 'AnalyticalTableContainer' && target.querySelector('[data-component-name=\"AnalyticalTableBodyScrollableContainer\"]')) {\n    const rowElements = target.querySelector('[data-component-name=\"AnalyticalTableBodyScrollableContainer\"]').children;\n    const middleRowCell = target.querySelector(`div[data-visible-column-index=\"0\"][data-visible-row-index=\"${Math.round(rowElements.length / 2)}\"]`);\n    middleRowCell?.focus({\n      preventScroll: true\n    });\n  } else {\n    const firstVisibleCell = noData ? target.querySelector(`div[data-visible-column-index=\"0\"][data-visible-row-index=\"0\"]`) : target.querySelector(`div[data-visible-column-index=\"0\"][data-visible-row-index=\"1\"]`);\n    if (firstVisibleCell) {\n      firstVisibleCell.tabIndex = 0;\n      firstVisibleCell.focus();\n      currentlyFocusedCell.current = firstVisibleCell;\n    }\n  }\n};\nfunction recursiveSubComponentElementSearch(element) {\n  if (!element.parentElement) {\n    return null;\n  }\n  if (element?.parentElement.dataset.subcomponent) {\n    return element.parentElement;\n  }\n  return recursiveSubComponentElementSearch(element.parentElement);\n}\nconst findParentCell = target => {\n  if (target === undefined || target === null) return;\n  if (target.dataset.rowIndex !== undefined && target.dataset.columnIndex !== undefined || target.dataset.rowIndexSub !== undefined && target.dataset.columnIndexSub !== undefined) {\n    return target;\n  } else {\n    return findParentCell(target.parentElement);\n  }\n};\nconst setFocus = (currentlyFocusedCell, nextElement) => {\n  currentlyFocusedCell.current.tabIndex = -1;\n  if (nextElement) {\n    nextElement.tabIndex = 0;\n    nextElement.focus();\n    currentlyFocusedCell.current = nextElement;\n  }\n};\nconst navigateFromActiveSubCompItem = (currentlyFocusedCell, e) => {\n  setFocus(currentlyFocusedCell, recursiveSubComponentElementSearch(e.target));\n};\nconst useGetTableProps = (tableProps, {\n  instance: {\n    webComponentsReactProperties,\n    data,\n    columns,\n    state\n  }\n}) => {\n  const {\n    showOverlay,\n    tableRef\n  } = webComponentsReactProperties;\n  const currentlyFocusedCell = useRef(null);\n  const noData = data.length === 0;\n  useEffect(() => {\n    if (showOverlay && currentlyFocusedCell.current) {\n      currentlyFocusedCell.current.tabIndex = -1;\n      currentlyFocusedCell.current = null;\n    }\n  }, [showOverlay]);\n  const onTableBlur = e => {\n    if (e.target.tagName === 'UI5-LI' || e.target.tagName === 'UI5-LI-CUSTOM') {\n      currentlyFocusedCell.current = null;\n    }\n  };\n  useEffect(() => {\n    if (!showOverlay && data && columns && currentlyFocusedCell.current && tableRef.current && tableRef.current.tabIndex !== 0 && !tableRef.current.contains(currentlyFocusedCell.current)) {\n      currentlyFocusedCell.current = null;\n      tableRef.current.tabIndex = 0;\n    }\n  }, [data, columns, showOverlay]);\n  const onTableFocus = useCallback(e => {\n    const {\n      dataset\n    } = e.target;\n    if (dataset.emptyRowCell === 'true' || dataset.hasOwnProperty('subcomponentActiveElement') ||\n    // todo: with the new popover API of ui5wc this might not be necessary anymore\n    dataset.componentName === 'ATHeaderPopoverList' || dataset.componentName === 'ATHeaderPopover') {\n      return;\n    }\n    if (e.target.dataset.subcomponent) {\n      e.target.tabIndex = 0;\n      e.target.focus();\n      currentlyFocusedCell.current = e.target;\n      return;\n    }\n    const isFirstCellAvailable = e.target.querySelector('div[data-column-index=\"0\"][data-row-index=\"1\"]');\n    if (e.target.dataset.componentName === 'AnalyticalTableContainer') {\n      e.target.tabIndex = -1;\n      if (currentlyFocusedCell.current) {\n        const {\n          dataset\n        } = currentlyFocusedCell.current;\n        const rowIndex = parseInt(dataset.rowIndex ?? dataset.rowIndexSub, 10);\n        const columnIndex = parseInt(dataset.columnIndex ?? dataset.columnIndexSub, 10);\n        if (e.target.querySelector(`div[data-column-index=\"${columnIndex}\"][data-row-index=\"${rowIndex}\"]`) || e.target.querySelector(`div[data-column-index-sub=\"${columnIndex}\"][data-row-index-sub=\"${rowIndex}\"]`)) {\n          currentlyFocusedCell.current.tabIndex = 0;\n          currentlyFocusedCell.current.focus({\n            preventScroll: true\n          });\n        } else {\n          getFirstVisibleCell(e.target, currentlyFocusedCell, noData);\n        }\n      } else if (isFirstCellAvailable) {\n        const firstCell = e.target.querySelector('div[data-column-index]:not([data-column-id^=\"__ui5wcr__internal\"][data-row-index=\"0\"])');\n        firstCell.tabIndex = 0;\n        firstCell.focus({\n          preventScroll: true\n        });\n        currentlyFocusedCell.current = firstCell;\n      } else {\n        getFirstVisibleCell(e.target, currentlyFocusedCell, noData);\n      }\n    } else {\n      const tableCell = findParentCell(e.target);\n      if (tableCell) {\n        currentlyFocusedCell.current = tableCell;\n      } else {\n        getFirstVisibleCell(tableRef.current, currentlyFocusedCell, noData);\n      }\n    }\n  }, [currentlyFocusedCell.current, tableRef.current, noData]);\n  const onKeyboardNavigation = useCallback(e => {\n    const {\n      isRtl\n    } = state;\n    const isActiveItemInSubComponent = e.target.dataset.hasOwnProperty('subcomponentActiveElement');\n    // check if target is cell and if so proceed from there\n    if (!currentlyFocusedCell.current && CELL_DATA_ATTRIBUTES.every(item => Object.keys(e.target.dataset).includes(item))) {\n      currentlyFocusedCell.current = e.target;\n    }\n    if (currentlyFocusedCell.current) {\n      const columnIndex = parseInt(currentlyFocusedCell.current.dataset.columnIndex ?? '0', 10);\n      const rowIndex = parseInt(currentlyFocusedCell.current.dataset.rowIndex ?? currentlyFocusedCell.current.dataset.subcomponentRowIndex, 10);\n      switch (e.key) {\n        case 'End':\n          {\n            e.preventDefault();\n            const visibleColumns = tableRef.current.querySelector(`div[data-component-name=\"AnalyticalTableHeaderRow\"]`).children;\n            const lastVisibleColumn = Array.from(visibleColumns).slice(0).reduceRight((_, cur, index, arr) => {\n              const columnIndex = parseInt(cur.children?.[0]?.dataset.columnIndex, 10);\n              if (!isNaN(columnIndex)) {\n                arr.length = 0;\n                return columnIndex;\n              }\n              return 0;\n            }, 0);\n            const newElement = tableRef.current.querySelector(`div[data-visible-column-index=\"${lastVisibleColumn}\"][data-row-index=\"${rowIndex}\"]`);\n            setFocus(currentlyFocusedCell, newElement);\n            break;\n          }\n        case 'Home':\n          {\n            e.preventDefault();\n            const newElement = tableRef.current.querySelector(`div[data-visible-column-index=\"0\"][data-row-index=\"${rowIndex}\"]`);\n            setFocus(currentlyFocusedCell, newElement);\n            break;\n          }\n        case 'PageDown':\n          {\n            e.preventDefault();\n            if (currentlyFocusedCell.current.dataset.rowIndex === '0') {\n              const newElement = tableRef.current.querySelector(`div[data-column-index=\"${columnIndex}\"][data-row-index=\"${rowIndex + 1}\"]`);\n              setFocus(currentlyFocusedCell, newElement);\n            } else {\n              const lastVisibleRow = tableRef.current.querySelector(`div[data-component-name=\"AnalyticalTableBody\"]`)?.children?.[0].children.length;\n              const newElement = tableRef.current.querySelector(`div[data-column-index=\"${columnIndex}\"][data-visible-row-index=\"${lastVisibleRow}\"]`);\n              setFocus(currentlyFocusedCell, newElement);\n            }\n            break;\n          }\n        case 'PageUp':\n          {\n            e.preventDefault();\n            if (currentlyFocusedCell.current.dataset.rowIndex <= '1') {\n              const newElement = tableRef.current.querySelector(`div[data-column-index=\"${columnIndex}\"][data-row-index=\"0\"]`);\n              setFocus(currentlyFocusedCell, newElement);\n            } else {\n              const newElement = tableRef.current.querySelector(`div[data-column-index=\"${columnIndex}\"][data-visible-row-index=\"1\"]`);\n              setFocus(currentlyFocusedCell, newElement);\n            }\n            break;\n          }\n        case 'ArrowRight':\n          {\n            e.preventDefault();\n            if (isActiveItemInSubComponent) {\n              navigateFromActiveSubCompItem(currentlyFocusedCell, e);\n              return;\n            }\n            const newElement = tableRef.current.querySelector(`div[data-column-index=\"${columnIndex + (isRtl ? -1 : 1)}\"][data-row-index=\"${rowIndex}\"]`);\n            if (newElement) {\n              setFocus(currentlyFocusedCell, newElement);\n              // scroll to show full cell if it's only partial visible\n              newElement.scrollIntoView({\n                block: 'nearest'\n              });\n            }\n            break;\n          }\n        case 'ArrowLeft':\n          {\n            e.preventDefault();\n            if (isActiveItemInSubComponent) {\n              navigateFromActiveSubCompItem(currentlyFocusedCell, e);\n              return;\n            }\n            const newElement = tableRef.current.querySelector(`div[data-column-index=\"${columnIndex - (isRtl ? -1 : 1)}\"][data-row-index=\"${rowIndex}\"]`);\n            if (newElement) {\n              setFocus(currentlyFocusedCell, newElement);\n              // scroll to show full cell if it's only partial visible\n              newElement.scrollIntoView({\n                block: 'nearest'\n              });\n            }\n            break;\n          }\n        case 'ArrowDown':\n          {\n            e.preventDefault();\n            if (isActiveItemInSubComponent) {\n              navigateFromActiveSubCompItem(currentlyFocusedCell, e);\n              return;\n            }\n            const parent = currentlyFocusedCell.current.parentElement;\n            const firstChildOfParent = parent?.children?.[0];\n            const hasSubcomponent = firstChildOfParent?.dataset?.subcomponent;\n            const newElement = tableRef.current.querySelector(`div[data-column-index=\"${columnIndex}\"][data-row-index=\"${rowIndex + 1}\"]`);\n            if (hasSubcomponent && !currentlyFocusedCell.current?.dataset?.subcomponent) {\n              currentlyFocusedCell.current.tabIndex = -1;\n              firstChildOfParent.tabIndex = 0;\n              firstChildOfParent.dataset.rowIndexSub = `${rowIndex}`;\n              firstChildOfParent.dataset.columnIndexSub = `${columnIndex}`;\n              firstChildOfParent.focus();\n              currentlyFocusedCell.current = firstChildOfParent;\n            } else if (newElement) {\n              setFocus(currentlyFocusedCell, newElement);\n            }\n            break;\n          }\n        case 'ArrowUp':\n          {\n            e.preventDefault();\n            if (isActiveItemInSubComponent) {\n              navigateFromActiveSubCompItem(currentlyFocusedCell, e);\n              return;\n            }\n            let prevRowIndex = rowIndex - 1;\n            const isSubComponent = e.target.dataset.subcomponent;\n            if (isSubComponent) {\n              prevRowIndex++;\n            }\n            const previousRowCell = tableRef.current.querySelector(`div[data-column-index=\"${columnIndex}\"][data-row-index=\"${prevRowIndex}\"]`);\n            const firstChildPrevRow = previousRowCell?.parentElement.children[0];\n            const hasSubcomponent = firstChildPrevRow?.dataset?.subcomponent;\n            if (hasSubcomponent && !isSubComponent) {\n              currentlyFocusedCell.current.tabIndex = -1;\n              firstChildPrevRow.dataset.rowIndexSub = `${rowIndex - 1}`;\n              firstChildPrevRow.dataset.columnIndexSub = `${columnIndex}`;\n              firstChildPrevRow.tabIndex = 0;\n              firstChildPrevRow.focus();\n              currentlyFocusedCell.current = firstChildPrevRow;\n            } else if (previousRowCell) {\n              setFocus(currentlyFocusedCell, previousRowCell);\n            }\n            break;\n          }\n      }\n    }\n  }, [currentlyFocusedCell.current, tableRef.current, state?.isRtl]);\n  if (showOverlay) {\n    return tableProps;\n  }\n  return [tableProps, {\n    onFocus: onTableFocus,\n    onKeyDown: onKeyboardNavigation,\n    onBlur: onTableBlur\n  }];\n};\nfunction getPayload(e, column) {\n  e.preventDefault();\n  e.stopPropagation();\n  const clientX = e.target.getBoundingClientRect().x + e.target.getBoundingClientRect().width;\n  const columnId = column.id;\n  const columnWidth = column.totalWidth;\n  const headersToResize = getLeafHeaders(column);\n  const headerIdWidths = headersToResize.map(d => [d.id, d.totalWidth]);\n  return {\n    clientX,\n    columnId,\n    columnWidth,\n    headerIdWidths\n  };\n}\nconst setHeaderProps = (headerProps, {\n  instance: {\n    dispatch\n  },\n  column\n}) => {\n  // resize col with keyboard\n  const handleKeyDown = e => {\n    if (typeof headerProps.onKeyDown === 'function') {\n      headerProps.onKeyDown(e);\n    }\n    if (e.nativeEvent.shiftKey) {\n      if (e.key === 'ArrowRight') {\n        const payload = getPayload(e, column);\n        dispatch({\n          type: actions.columnStartResizing,\n          ...payload\n        });\n        dispatch({\n          type: actions.columnResizing,\n          clientX: payload.clientX + 16\n        });\n        dispatch({\n          type: actions.columnDoneResizing\n        });\n        return;\n      }\n      if (e.key === 'ArrowLeft') {\n        const payload = getPayload(e, column);\n        dispatch({\n          type: actions.columnStartResizing,\n          ...payload\n        });\n        dispatch({\n          type: actions.columnResizing,\n          clientX: payload.clientX - 16\n        });\n        dispatch({\n          type: actions.columnDoneResizing\n        });\n        return;\n      }\n    }\n  };\n  return [headerProps, {\n    onKeyDown: handleKeyDown\n  }];\n};\nexport const useKeyboardNavigation = hooks => {\n  hooks.getTableProps.push(useGetTableProps);\n  hooks.getHeaderProps.push(setHeaderProps);\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}