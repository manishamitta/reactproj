{"ast":null,"code":"var __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n    r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n    d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar AvatarGroup_1;\nimport UI5Element from \"@ui5/webcomponents-base/dist/UI5Element.js\";\nimport litRender from \"@ui5/webcomponents-base/dist/renderer/LitRenderer.js\";\nimport ResizeHandler from \"@ui5/webcomponents-base/dist/delegate/ResizeHandler.js\";\nimport ItemNavigation from \"@ui5/webcomponents-base/dist/delegate/ItemNavigation.js\";\nimport { getI18nBundle } from \"@ui5/webcomponents-base/dist/i18nBundle.js\";\nimport customElement from \"@ui5/webcomponents-base/dist/decorators/customElement.js\";\nimport property from \"@ui5/webcomponents-base/dist/decorators/property.js\";\nimport slot from \"@ui5/webcomponents-base/dist/decorators/slot.js\";\nimport event from \"@ui5/webcomponents-base/dist/decorators/event.js\";\nimport { isEnter, isSpace } from \"@ui5/webcomponents-base/dist/Keys.js\";\nimport { isDesktop } from \"@ui5/webcomponents-base/dist/Device.js\";\nimport Button from \"./Button.js\";\nimport AvatarSize from \"./types/AvatarSize.js\";\nimport AvatarGroupType from \"./types/AvatarGroupType.js\";\nimport AvatarColorScheme from \"./types/AvatarColorScheme.js\";\nimport { AVATAR_GROUP_DISPLAYED_HIDDEN_LABEL, AVATAR_GROUP_SHOW_COMPLETE_LIST_LABEL, AVATAR_GROUP_ARIA_LABEL_INDIVIDUAL, AVATAR_GROUP_ARIA_LABEL_GROUP, AVATAR_GROUP_MOVE } from \"./generated/i18n/i18n-defaults.js\";\n// Styles\nimport AvatarGroupCss from \"./generated/themes/AvatarGroup.css.js\";\n// Template\nimport AvatarGroupTemplate from \"./generated/templates/AvatarGroupTemplate.lit.js\";\nconst OVERFLOW_BTN_CLASS = \"ui5-avatar-group-overflow-btn\";\nconst AVATAR_GROUP_OVERFLOW_BTN_SELECTOR = `.${OVERFLOW_BTN_CLASS}`;\n// based on RTL/LTR a margin-left/right is set respectfully\nconst offsets = {\n  [AvatarSize.XS]: {\n    [AvatarGroupType.Individual]: \"0.0625rem\",\n    [AvatarGroupType.Group]: \"-0.5rem\"\n  },\n  [AvatarSize.S]: {\n    [AvatarGroupType.Individual]: \"0.125rem\",\n    [AvatarGroupType.Group]: \"-1.25rem\"\n  },\n  [AvatarSize.M]: {\n    [AvatarGroupType.Individual]: \"0.125rem\",\n    [AvatarGroupType.Group]: \"-1.625rem\"\n  },\n  [AvatarSize.L]: {\n    [AvatarGroupType.Individual]: \"0.125rem\",\n    [AvatarGroupType.Group]: \" -2rem\"\n  },\n  [AvatarSize.XL]: {\n    [AvatarGroupType.Individual]: \"0.25rem\",\n    [AvatarGroupType.Group]: \"-2.75rem\"\n  }\n};\n/**\n * @class\n *\n * ### Overview\n *\n * Displays a group of avatars arranged horizontally. It is useful to visually\n * showcase a group of related avatars, such as, project team members or employees.\n *\n * The component allows you to display the avatars in different sizes,\n * depending on your use case.\n *\n * The `AvatarGroup` component has two group types:\n *\n * - `Group` type: The avatars are displayed as partially overlapped on\n * top of each other and the entire group has one click/tap area.\n * - `Individual` type: The avatars are displayed side-by-side and each\n * avatar has its own click/tap area.\n *\n * ### Usage\n *\n * Use the `AvatarGroup` if:\n *\n * - You want to display a group of avatars.\n * - You want to display several avatars which have something in common.\n *\n * Do not use the `AvatarGroup` if:\n *\n * - You want to display a single avatar.\n * - You want to display a gallery for simple images.\n * - You want to use it for other visual content than avatars.\n *\n * ### Responsive Behavior\n *\n * When the available space is less than the width required to display all avatars,\n * an overflow visualization appears as a button placed at the end with the same shape\n * and size as the avatars. The visualization displays the number of avatars that have overflowed\n * and are not currently visible.\n *\n * ### Keyboard Handling\n * The component provides advanced keyboard handling.\n * When focused, the user can use the following keyboard\n * shortcuts in order to perform a navigation:\n *\n * `type` Individual:\n *\n * - [Tab] - Move focus to the overflow button\n * - [Left] - Navigate one avatar to the left\n * - [Right] - Navigate one avatar to the right\n * - [Home] - Navigate to the first avatar\n * - [End] - Navigate to the last avatar\n * - [Space] / [Enter] or [Return] - Trigger `ui5-click` event\n *\n * `type` Group:\n *\n * - [Tab] - Move focus to the next interactive element after the component\n * - [Space] / [Enter] or [Return] - Trigger `ui5-click` event\n * @constructor\n * @extends UI5Element\n * @since 1.0.0-rc.11\n * @public\n */\nlet AvatarGroup = AvatarGroup_1 = class AvatarGroup extends UI5Element {\n  constructor() {\n    super();\n    /**\n     * Defines the mode of the `AvatarGroup`.\n     * @default \"Group\"\n     * @public\n     */\n    this.type = \"Group\";\n    /**\n     * Defines the additional accessibility attributes that will be applied to the component.\n     * The following field is supported:\n     *\n     * - **hasPopup**: Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by the button.\n     * Accepts the following string values: `dialog`, `grid`, `listbox`, `menu` or `tree`.\n     *\n     * @public\n     * @since 2.0.0\n     * @default {}\n     */\n    this.accessibilityAttributes = {};\n    this._colorIndex = 0;\n    this._hiddenItems = 0;\n    this._itemNavigation = new ItemNavigation(this, {\n      getItemsCallback: () => {\n        return this._isGroup ? [] : this.items.slice(0, this._hiddenStartIndex);\n      }\n    });\n    this._onResizeHandler = this._onResize.bind(this);\n  }\n  static async onDefine() {\n    AvatarGroup_1.i18nBundle = await getI18nBundle(\"@ui5/webcomponents\");\n  }\n  /**\n   * Returns an array containing the `ui5-avatar` instances that are currently not displayed due to lack of space.\n   * @default []\n   * @public\n   */\n  get hiddenItems() {\n    return this.items.slice(this._hiddenStartIndex);\n  }\n  /**\n   * Returns an array containing the `AvatarColorScheme` values that correspond to the avatars in the component.\n   * @default []\n   * @public\n   */\n  get colorScheme() {\n    return this.items.map(avatar => avatar.ÐµffectiveBackgroundColor);\n  }\n  get _customOverflowButton() {\n    return this.overflowButton.length ? this.overflowButton[0] : undefined;\n  }\n  get _ariaLabelText() {\n    const hiddenItemsCount = this.hiddenItems.length;\n    const typeLabelKey = this._isGroup ? AVATAR_GROUP_ARIA_LABEL_GROUP : AVATAR_GROUP_ARIA_LABEL_INDIVIDUAL;\n    // avatar type label\n    let text = AvatarGroup_1.i18nBundle.getText(typeLabelKey);\n    // add displayed-hidden avatars label\n    text += ` ${AvatarGroup_1.i18nBundle.getText(AVATAR_GROUP_DISPLAYED_HIDDEN_LABEL, this._itemsCount - hiddenItemsCount, hiddenItemsCount)}`;\n    if (this._isGroup) {\n      // the container role is \"button\", add the message for complete list activation\n      text += ` ${AvatarGroup_1.i18nBundle.getText(AVATAR_GROUP_SHOW_COMPLETE_LIST_LABEL)}`;\n    } else {\n      // the container role is \"group\", add the \"how to navigate\" message\n      text += ` ${AvatarGroup_1.i18nBundle.getText(AVATAR_GROUP_MOVE)}`;\n    }\n    return text;\n  }\n  get _overflowButtonAriaLabelText() {\n    return this._isGroup ? undefined : AvatarGroup_1.i18nBundle.getText(AVATAR_GROUP_SHOW_COMPLETE_LIST_LABEL);\n  }\n  get _containerAriaHasPopup() {\n    return this._isGroup ? this._getAriaHasPopup() : undefined;\n  }\n  get _overflowButtonAccAttributes() {\n    return {\n      hasPopup: this._isGroup ? undefined : this._getAriaHasPopup()\n    };\n  }\n  get _role() {\n    return this._isGroup ? \"button\" : \"group\";\n  }\n  get _hiddenStartIndex() {\n    return this._itemsCount - this._hiddenItems;\n  }\n  get _overflowBtnHidden() {\n    return this._hiddenItems === 0;\n  }\n  get _isGroup() {\n    return this.type === AvatarGroupType.Group;\n  }\n  get _itemsCount() {\n    return this.items.length;\n  }\n  get _groupTabIndex() {\n    return this._isGroup ? \"0\" : \"-1\";\n  }\n  get _overflowButton() {\n    return this.shadowRoot.querySelector(AVATAR_GROUP_OVERFLOW_BTN_SELECTOR);\n  }\n  /**\n   * Return the effective overflow button width\n   * Differences are that when in \"Group\" type the button is offset and overlaps the avatars\n   *\n   * 1) In case of \"Group\", (LTR/RTL aware) button width is qual to second item offset left/right\n   * 2) In case of \"Individual\" group type width is directly taken from button element\n   * @private\n   */\n  get _overflowButtonEffectiveWidth() {\n    const button = this._customOverflowButton ? this._customOverflowButton : this._overflowButton;\n    // if in \"Group\" mode overflow button size is equal to the offset from second item\n    if (!button) {\n      return 0;\n    }\n    if (this._isGroup) {\n      let item = this.items[1];\n      const ltrEffectiveWidth = item.offsetLeft - this.offsetLeft;\n      // in some cases when second avatar is overflowed the offset of the button is the right one\n      if (!item || item.hidden) {\n        item = button;\n      }\n      return this.effectiveDir === \"rtl\" ? this._getWidthToItem(item) : ltrEffectiveWidth;\n    }\n    return button.offsetWidth;\n  }\n  get firstAvatarSize() {\n    return this.items[0]?.size ?? AvatarSize.S;\n  }\n  get classes() {\n    return {\n      overflowButton: {\n        \"ui5-avatar-group-overflow-btn\": true,\n        \"ui5-avatar-group-overflow-btn-xs\": this.firstAvatarSize === AvatarSize.XS,\n        \"ui5-avatar-group-overflow-btn-s\": this.firstAvatarSize === AvatarSize.S,\n        \"ui5-avatar-group-overflow-btn-m\": this.firstAvatarSize === AvatarSize.M,\n        \"ui5-avatar-group-overflow-btn-l\": this.firstAvatarSize === AvatarSize.L,\n        \"ui5-avatar-group-overflow-btn-xl\": this.firstAvatarSize === AvatarSize.XL\n      }\n    };\n  }\n  onAfterRendering() {\n    this._overflowItems();\n  }\n  onBeforeRendering() {\n    if (this._customOverflowButton) {\n      this._customOverflowButton.nonInteractive = this._isGroup;\n    }\n    this._prepareAvatars();\n  }\n  onEnterDOM() {\n    if (isDesktop()) {\n      this.setAttribute(\"desktop\", \"\");\n    }\n    ResizeHandler.register(this, this._onResizeHandler);\n  }\n  onExitDOM() {\n    ResizeHandler.deregister(this, this._onResizeHandler);\n  }\n  _onResize() {\n    this._overflowItems();\n  }\n  _onkeydown(e) {\n    // when type is \"Individual\" the ui5-avatar and ui5-button both\n    // fire \"click\" event when SPACE or ENTER are pressed and\n    // AvatarGroup \"click\" is fired in their handlers (_onClick, _onUI5Click).\n    if (this._isGroup) {\n      if (isEnter(e)) {\n        this._fireGroupEvent(e.target);\n      } else if (isSpace(e)) {\n        // prevent scrolling\n        e.preventDefault();\n      }\n    }\n  }\n  _onkeyup(e) {\n    if (!e.shiftKey && isSpace(e) && this._isGroup) {\n      this._fireGroupEvent(e.target);\n      e.preventDefault();\n    }\n  }\n  _fireGroupEvent(targetRef) {\n    const isOverflowButtonClicked = targetRef.classList.contains(OVERFLOW_BTN_CLASS) || targetRef === this._customOverflowButton;\n    this.fireEvent(\"click\", {\n      targetRef,\n      overflowButtonClicked: isOverflowButtonClicked\n    });\n  }\n  _onClick(e) {\n    const target = e.target;\n    // no matter the value of noConflict, the ui5-button and the group container (div) always fire a native click event\n    const isButton = target.hasAttribute(\"ui5-button\");\n    e.stopPropagation();\n    if (this._isGroup || isButton) {\n      this._fireGroupEvent(target);\n    }\n  }\n  _onUI5Click(e) {\n    const target = e.target;\n    // when noConflict=true only ui5-avatar will fire ui5-click event\n    const isAvatar = target.hasAttribute(\"ui5-avatar\");\n    e.stopPropagation();\n    if (isAvatar) {\n      this._fireGroupEvent(target);\n    }\n  }\n  /**\n   * Modifies avatars to the needs of avatar group properties. Respects already set size and background color.\n   * Set the margins (offsets) based on RTL/LTR.\n   * @private\n   */\n  _prepareAvatars() {\n    this._colorIndex = 0;\n    this.items.forEach((avatar, index) => {\n      const colorIndex = this._getNextBackgroundColor();\n      avatar.interactive = !this._isGroup;\n      if (!avatar.getAttribute(\"_color-scheme\")) {\n        // AvatarGroup respects colors set to ui5-avatar\n        avatar.setAttribute(\"_color-scheme\", AvatarColorScheme[`Accent${colorIndex}`]);\n      }\n      // last avatar should not be offset as it breaks the container width and focus styles are no set correctly\n      if (index !== this._itemsCount - 1 || this._customOverflowButton) {\n        // based on RTL the browser automatically sets left or right margin to avatars\n        avatar.style.marginInlineEnd = offsets[avatar.effectiveSize][this.type];\n      }\n    });\n  }\n  _onfocusin(e) {\n    this._itemNavigation.setCurrentItem(e.target);\n  }\n  /**\n   * Returns the total width to item excluding the item width\n   * RTL/LTR aware\n   * @private\n   * @param item\n   */\n  _getWidthToItem(item) {\n    const isRTL = this.effectiveDir === \"rtl\";\n    const ltrWidthToItem = item.offsetLeft - this.offsetLeft;\n    if (isRTL) {\n      const itemOffsetParent = item.offsetParent;\n      // in RTL the total width is equal to difference of the parent container width and\n      // how much is the item offset to the left minus its offsetWidth\n      if (!itemOffsetParent) {\n        return 0;\n      }\n      return itemOffsetParent.offsetWidth - item.offsetLeft - item.offsetWidth;\n    }\n    return ltrWidthToItem;\n  }\n  /**\n   * Overflows items that were not able to fit the container\n   * @private\n   */\n  _overflowItems() {\n    if (this.items.length < 2) {\n      // no need to overflow avatars\n      return;\n    }\n    let hiddenItems = 0;\n    for (let index = 0; index < this._itemsCount; index++) {\n      const item = this.items[index];\n      // show item to determine if it will fit the new container size\n      item.hidden = false;\n      // container width to current item + item width (avatar)\n      // used to determine whether the following items will fit the container or not\n      let totalWidth = this._getWidthToItem(item) + item.offsetWidth;\n      if (index !== this._itemsCount - 1 || this._customOverflowButton) {\n        totalWidth += this._overflowButtonEffectiveWidth;\n      }\n      if (totalWidth > this.offsetWidth) {\n        hiddenItems = this._itemsCount - index;\n        break;\n      }\n    }\n    // hide the items that did not fit the container size\n    this._setHiddenItems(hiddenItems);\n  }\n  _getNextBackgroundColor() {\n    // counter is to automatically assign background colors to avatars, `Accent10` is the highest color value\n    if (++this._colorIndex > 10) {\n      this._colorIndex = 1;\n    }\n    return this._colorIndex;\n  }\n  _setHiddenItems(hiddenItems) {\n    const shouldFireEvent = this._hiddenItems !== hiddenItems;\n    this._hiddenItems = hiddenItems;\n    this.items.forEach((item, index) => {\n      item.hidden = index >= this._hiddenStartIndex;\n    });\n    this._overflowButtonText = `+${hiddenItems > 99 ? 99 : hiddenItems}`;\n    if (shouldFireEvent) {\n      this.fireEvent(\"overflow\");\n    }\n  }\n  _getAriaHasPopup() {\n    return this.accessibilityAttributes.hasPopup;\n  }\n};\n__decorate([property()], AvatarGroup.prototype, \"type\", void 0);\n__decorate([property({\n  type: Object\n})], AvatarGroup.prototype, \"accessibilityAttributes\", void 0);\n__decorate([property({\n  noAttribute: true\n})], AvatarGroup.prototype, \"_overflowButtonText\", void 0);\n__decorate([slot({\n  type: HTMLElement,\n  \"default\": true\n})], AvatarGroup.prototype, \"items\", void 0);\n__decorate([slot()], AvatarGroup.prototype, \"overflowButton\", void 0);\nAvatarGroup = AvatarGroup_1 = __decorate([customElement({\n  tag: \"ui5-avatar-group\",\n  renderer: litRender,\n  template: AvatarGroupTemplate,\n  styles: AvatarGroupCss,\n  dependencies: [Button]\n})\n/**\n * Fired when the component is activated either with a\n * click/tap or by using the Enter or Space key.\n * @param {HTMLElement} targetRef The DOM ref of the clicked item.\n * @param {boolean} overflowButtonClicked indicates if the overflow button is clicked\n * @public\n * @since 1.0.0-rc.11\n */, event(\"click\", {\n  detail: {\n    /**\n    * @public\n    */\n    targetRef: {\n      type: HTMLElement\n    },\n    /**\n    * @public\n    */\n    overflowButtonClicked: {\n      type: Boolean\n    }\n  }\n})\n/**\n * Fired when the count of visible `ui5-avatar` elements in the\n * component has changed\n * @public\n * @since 1.0.0-rc.13\n */, event(\"overflow\")], AvatarGroup);\nAvatarGroup.define();\nexport default AvatarGroup;","map":{"version":3,"names":["UI5Element","litRender","ResizeHandler","ItemNavigation","getI18nBundle","customElement","property","slot","event","isEnter","isSpace","isDesktop","Button","AvatarSize","AvatarGroupType","AvatarColorScheme","AVATAR_GROUP_DISPLAYED_HIDDEN_LABEL","AVATAR_GROUP_SHOW_COMPLETE_LIST_LABEL","AVATAR_GROUP_ARIA_LABEL_INDIVIDUAL","AVATAR_GROUP_ARIA_LABEL_GROUP","AVATAR_GROUP_MOVE","AvatarGroupCss","AvatarGroupTemplate","OVERFLOW_BTN_CLASS","AVATAR_GROUP_OVERFLOW_BTN_SELECTOR","offsets","XS","Individual","Group","S","M","L","XL","AvatarGroup","AvatarGroup_1","constructor","type","accessibilityAttributes","_colorIndex","_hiddenItems","_itemNavigation","getItemsCallback","_isGroup","items","slice","_hiddenStartIndex","_onResizeHandler","_onResize","bind","onDefine","i18nBundle","hiddenItems","colorScheme","map","avatar","ÐµffectiveBackgroundColor","_customOverflowButton","overflowButton","length","undefined","_ariaLabelText","hiddenItemsCount","typeLabelKey","text","getText","_itemsCount","_overflowButtonAriaLabelText","_containerAriaHasPopup","_getAriaHasPopup","_overflowButtonAccAttributes","hasPopup","_role","_overflowBtnHidden","_groupTabIndex","_overflowButton","shadowRoot","querySelector","_overflowButtonEffectiveWidth","button","item","ltrEffectiveWidth","offsetLeft","hidden","effectiveDir","_getWidthToItem","offsetWidth","firstAvatarSize","size","classes","onAfterRendering","_overflowItems","onBeforeRendering","nonInteractive","_prepareAvatars","onEnterDOM","setAttribute","register","onExitDOM","deregister","_onkeydown","e","_fireGroupEvent","target","preventDefault","_onkeyup","shiftKey","targetRef","isOverflowButtonClicked","classList","contains","fireEvent","overflowButtonClicked","_onClick","isButton","hasAttribute","stopPropagation","_onUI5Click","isAvatar","forEach","index","colorIndex","_getNextBackgroundColor","interactive","getAttribute","style","marginInlineEnd","effectiveSize","_onfocusin","setCurrentItem","isRTL","ltrWidthToItem","itemOffsetParent","offsetParent","totalWidth","_setHiddenItems","shouldFireEvent","_overflowButtonText","__decorate","Object","noAttribute","HTMLElement","tag","renderer","template","styles","dependencies","detail","Boolean","define"],"sources":["/home/user/projects/reactproj/node_modules/@ui5/webcomponents/src/AvatarGroup.ts"],"sourcesContent":["import UI5Element from \"@ui5/webcomponents-base/dist/UI5Element.js\";\nimport litRender from \"@ui5/webcomponents-base/dist/renderer/LitRenderer.js\";\nimport ResizeHandler from \"@ui5/webcomponents-base/dist/delegate/ResizeHandler.js\";\nimport ItemNavigation from \"@ui5/webcomponents-base/dist/delegate/ItemNavigation.js\";\nimport type { ITabbable } from \"@ui5/webcomponents-base/dist/delegate/ItemNavigation.js\";\nimport { getI18nBundle } from \"@ui5/webcomponents-base/dist/i18nBundle.js\";\nimport type I18nBundle from \"@ui5/webcomponents-base/dist/i18nBundle.js\";\nimport customElement from \"@ui5/webcomponents-base/dist/decorators/customElement.js\";\nimport property from \"@ui5/webcomponents-base/dist/decorators/property.js\";\nimport slot from \"@ui5/webcomponents-base/dist/decorators/slot.js\";\nimport event from \"@ui5/webcomponents-base/dist/decorators/event.js\";\nimport type { AccessibilityAttributes } from \"@ui5/webcomponents-base/dist/types.js\";\n\nimport {\n\tisEnter,\n\tisSpace,\n} from \"@ui5/webcomponents-base/dist/Keys.js\";\nimport { isDesktop } from \"@ui5/webcomponents-base/dist/Device.js\";\nimport Button from \"./Button.js\";\nimport AvatarSize from \"./types/AvatarSize.js\";\nimport AvatarGroupType from \"./types/AvatarGroupType.js\";\nimport AvatarColorScheme from \"./types/AvatarColorScheme.js\";\nimport type { IButton } from \"./Button.js\";\n\nimport {\n\tAVATAR_GROUP_DISPLAYED_HIDDEN_LABEL,\n\tAVATAR_GROUP_SHOW_COMPLETE_LIST_LABEL,\n\tAVATAR_GROUP_ARIA_LABEL_INDIVIDUAL,\n\tAVATAR_GROUP_ARIA_LABEL_GROUP,\n\tAVATAR_GROUP_MOVE,\n} from \"./generated/i18n/i18n-defaults.js\";\n\n// Styles\nimport AvatarGroupCss from \"./generated/themes/AvatarGroup.css.js\";\n\n// Template\nimport AvatarGroupTemplate from \"./generated/templates/AvatarGroupTemplate.lit.js\";\n\n/**\n * Interface for components that represent an avatar and may be slotted in numerous higher-order components such as `ui5-avatar-group`\n * @public\n */\ninterface IAvatarGroupItem extends HTMLElement, ITabbable {\n\tÐµffectiveBackgroundColor: AvatarColorScheme;\n\tsize: `${AvatarSize}`;\n\teffectiveSize: AvatarSize;\n\tinteractive: boolean;\n}\n\nconst OVERFLOW_BTN_CLASS = \"ui5-avatar-group-overflow-btn\";\nconst AVATAR_GROUP_OVERFLOW_BTN_SELECTOR = `.${OVERFLOW_BTN_CLASS}`;\n\n// based on RTL/LTR a margin-left/right is set respectfully\nconst offsets = {\n\t[AvatarSize.XS]: {\n\t\t[AvatarGroupType.Individual]: \"0.0625rem\",\n\t\t[AvatarGroupType.Group]: \"-0.5rem\",\n\t},\n\t[AvatarSize.S]: {\n\t\t[AvatarGroupType.Individual]: \"0.125rem\",\n\t\t[AvatarGroupType.Group]: \"-1.25rem\",\n\t},\n\t[AvatarSize.M]: {\n\t\t[AvatarGroupType.Individual]: \"0.125rem\",\n\t\t[AvatarGroupType.Group]: \"-1.625rem\",\n\t},\n\t[AvatarSize.L]: {\n\t\t[AvatarGroupType.Individual]: \"0.125rem\",\n\t\t[AvatarGroupType.Group]: \" -2rem\",\n\t},\n\t[AvatarSize.XL]: {\n\t\t[AvatarGroupType.Individual]: \"0.25rem\",\n\t\t[AvatarGroupType.Group]: \"-2.75rem\",\n\t},\n};\n\ntype AvatarGroupAccessibilityAttributes = Pick<AccessibilityAttributes, \"hasPopup\">;\n\ntype AvatarGroupClickEventDetail = {\n\ttargetRef: HTMLElement,\n\toverflowButtonClicked: boolean,\n};\n\n/**\n * @class\n *\n * ### Overview\n *\n * Displays a group of avatars arranged horizontally. It is useful to visually\n * showcase a group of related avatars, such as, project team members or employees.\n *\n * The component allows you to display the avatars in different sizes,\n * depending on your use case.\n *\n * The `AvatarGroup` component has two group types:\n *\n * - `Group` type: The avatars are displayed as partially overlapped on\n * top of each other and the entire group has one click/tap area.\n * - `Individual` type: The avatars are displayed side-by-side and each\n * avatar has its own click/tap area.\n *\n * ### Usage\n *\n * Use the `AvatarGroup` if:\n *\n * - You want to display a group of avatars.\n * - You want to display several avatars which have something in common.\n *\n * Do not use the `AvatarGroup` if:\n *\n * - You want to display a single avatar.\n * - You want to display a gallery for simple images.\n * - You want to use it for other visual content than avatars.\n *\n * ### Responsive Behavior\n *\n * When the available space is less than the width required to display all avatars,\n * an overflow visualization appears as a button placed at the end with the same shape\n * and size as the avatars. The visualization displays the number of avatars that have overflowed\n * and are not currently visible.\n *\n * ### Keyboard Handling\n * The component provides advanced keyboard handling.\n * When focused, the user can use the following keyboard\n * shortcuts in order to perform a navigation:\n *\n * `type` Individual:\n *\n * - [Tab] - Move focus to the overflow button\n * - [Left] - Navigate one avatar to the left\n * - [Right] - Navigate one avatar to the right\n * - [Home] - Navigate to the first avatar\n * - [End] - Navigate to the last avatar\n * - [Space] / [Enter] or [Return] - Trigger `ui5-click` event\n *\n * `type` Group:\n *\n * - [Tab] - Move focus to the next interactive element after the component\n * - [Space] / [Enter] or [Return] - Trigger `ui5-click` event\n * @constructor\n * @extends UI5Element\n * @since 1.0.0-rc.11\n * @public\n */\n\n@customElement({\n\ttag: \"ui5-avatar-group\",\n\trenderer: litRender,\n\ttemplate: AvatarGroupTemplate,\n\tstyles: AvatarGroupCss,\n\tdependencies: [Button],\n})\n/**\n * Fired when the component is activated either with a\n * click/tap or by using the Enter or Space key.\n * @param {HTMLElement} targetRef The DOM ref of the clicked item.\n * @param {boolean} overflowButtonClicked indicates if the overflow button is clicked\n * @public\n * @since 1.0.0-rc.11\n */\n@event<AvatarGroupClickEventDetail>(\"click\", {\n\tdetail: {\n\t\t/**\n\t\t* @public\n\t\t*/\n\t\ttargetRef: { type: HTMLElement },\n\t\t/**\n\t\t* @public\n\t\t*/\n\t\toverflowButtonClicked: { type: Boolean },\n\t},\n})\n\n/**\n * Fired when the count of visible `ui5-avatar` elements in the\n * component has changed\n * @public\n * @since 1.0.0-rc.13\n */\n@event(\"overflow\")\nclass AvatarGroup extends UI5Element {\n\t/**\n\t * Defines the mode of the `AvatarGroup`.\n\t * @default \"Group\"\n\t * @public\n\t */\n\t@property()\n\ttype: `${AvatarGroupType}` = \"Group\"\n\n\t/**\n\t * Defines the additional accessibility attributes that will be applied to the component.\n\t * The following field is supported:\n\t *\n\t * - **hasPopup**: Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by the button.\n\t * Accepts the following string values: `dialog`, `grid`, `listbox`, `menu` or `tree`.\n\t *\n\t * @public\n\t * @since 2.0.0\n\t * @default {}\n\t */\n\t @property({ type: Object })\n\t accessibilityAttributes: AvatarGroupAccessibilityAttributes = {};\n\n\t/**\n\t * @private\n\t */\n\t@property({ noAttribute: true })\n\t_overflowButtonText?: string;\n\n\t/**\n\t * Defines the items of the component. Use the `ui5-avatar` component as an item.\n\t *\n\t * **Note:** The UX guidelines recommends using avatars with \"Circle\" shape.\n\t *\n\t * Moreover, if you use avatars with \"Square\" shape, there will be visual inconsistency\n\t * as the built-in overflow action has \"Circle\" shape.\n\t * @public\n\t */\n\t@slot({ type: HTMLElement, \"default\": true })\n\titems!: Array<IAvatarGroupItem>;\n\n\t/**\n\t * Defines the overflow button of the component.\n\t *\n\t * **Note:** We recommend using the `ui5-button` component.\n\t *\n\t * **Note:** If this slot is not used, the component will display the built-in overflow button.\n\t * @public\n\t * @since 1.0.0-rc.13\n\t */\n\t@slot()\n\toverflowButton!: Array<IButton>;\n\n\tstatic i18nBundle: I18nBundle;\n\t_onResizeHandler: () => void;\n\t_colorIndex = 0;\n\t_hiddenItems = 0;\n\t_itemNavigation: ItemNavigation;\n\n\tconstructor() {\n\t\tsuper();\n\n\t\tthis._itemNavigation = new ItemNavigation(this, {\n\t\t\tgetItemsCallback: () => {\n\t\t\t\treturn this._isGroup ? [] : this.items.slice(0, this._hiddenStartIndex);\n\t\t\t},\n\t\t});\n\t\tthis._onResizeHandler = this._onResize.bind(this);\n\t}\n\n\tstatic async onDefine() {\n\t\tAvatarGroup.i18nBundle = await getI18nBundle(\"@ui5/webcomponents\");\n\t}\n\n\t/**\n\t * Returns an array containing the `ui5-avatar` instances that are currently not displayed due to lack of space.\n\t * @default []\n\t * @public\n\t */\n\tget hiddenItems(): IAvatarGroupItem[] {\n\t\treturn this.items.slice(this._hiddenStartIndex);\n\t}\n\n\t/**\n\t * Returns an array containing the `AvatarColorScheme` values that correspond to the avatars in the component.\n\t * @default []\n\t * @public\n\t */\n\tget colorScheme(): AvatarColorScheme[] {\n\t\treturn this.items.map(avatar => avatar.ÐµffectiveBackgroundColor);\n\t}\n\n\tget _customOverflowButton() {\n\t\treturn this.overflowButton.length ? this.overflowButton[0] : undefined;\n\t}\n\n\tget _ariaLabelText() {\n\t\tconst hiddenItemsCount = this.hiddenItems.length;\n\t\tconst typeLabelKey = this._isGroup ? AVATAR_GROUP_ARIA_LABEL_GROUP : AVATAR_GROUP_ARIA_LABEL_INDIVIDUAL;\n\n\t\t// avatar type label\n\t\tlet text = AvatarGroup.i18nBundle.getText(typeLabelKey);\n\n\t\t// add displayed-hidden avatars label\n\t\ttext += ` ${AvatarGroup.i18nBundle.getText(AVATAR_GROUP_DISPLAYED_HIDDEN_LABEL, this._itemsCount - hiddenItemsCount, hiddenItemsCount)}`;\n\n\t\tif (this._isGroup) {\n\t\t\t// the container role is \"button\", add the message for complete list activation\n\t\t\ttext += ` ${AvatarGroup.i18nBundle.getText(AVATAR_GROUP_SHOW_COMPLETE_LIST_LABEL)}`;\n\t\t} else {\n\t\t\t// the container role is \"group\", add the \"how to navigate\" message\n\t\t\ttext += ` ${AvatarGroup.i18nBundle.getText(AVATAR_GROUP_MOVE)}`;\n\t\t}\n\n\t\treturn text;\n\t}\n\n\tget _overflowButtonAriaLabelText() {\n\t\treturn this._isGroup ? undefined : AvatarGroup.i18nBundle.getText(AVATAR_GROUP_SHOW_COMPLETE_LIST_LABEL);\n\t}\n\n\tget _containerAriaHasPopup() {\n\t\treturn this._isGroup ? this._getAriaHasPopup() : undefined;\n\t}\n\n\tget _overflowButtonAccAttributes() {\n\t\treturn {\n\t\t\thasPopup: this._isGroup ? undefined : this._getAriaHasPopup(),\n\t\t};\n\t}\n\n\tget _role() {\n\t\treturn this._isGroup ? \"button\" : \"group\";\n\t}\n\n\tget _hiddenStartIndex() {\n\t\treturn this._itemsCount - this._hiddenItems;\n\t}\n\n\tget _overflowBtnHidden() {\n\t\treturn this._hiddenItems === 0;\n\t}\n\n\tget _isGroup() {\n\t\treturn this.type === AvatarGroupType.Group;\n\t}\n\n\tget _itemsCount() {\n\t\treturn this.items.length;\n\t}\n\n\tget _groupTabIndex() {\n\t\treturn this._isGroup ? \"0\" : \"-1\";\n\t}\n\n\tget _overflowButton() {\n\t\treturn this.shadowRoot!.querySelector<Button>(AVATAR_GROUP_OVERFLOW_BTN_SELECTOR);\n\t}\n\n\t/**\n\t * Return the effective overflow button width\n\t * Differences are that when in \"Group\" type the button is offset and overlaps the avatars\n\t *\n\t * 1) In case of \"Group\", (LTR/RTL aware) button width is qual to second item offset left/right\n\t * 2) In case of \"Individual\" group type width is directly taken from button element\n\t * @private\n\t */\n\tget _overflowButtonEffectiveWidth() {\n\t\tconst button = this._customOverflowButton ? this._customOverflowButton : this._overflowButton;\n\t\t// if in \"Group\" mode overflow button size is equal to the offset from second item\n\n\t\tif (!button) {\n\t\t\treturn 0;\n\t\t}\n\n\t\tif (this._isGroup) {\n\t\t\tlet item: HTMLElement = this.items[1];\n\t\t\tconst ltrEffectiveWidth = item.offsetLeft - this.offsetLeft;\n\n\t\t\t// in some cases when second avatar is overflowed the offset of the button is the right one\n\t\t\tif (!item || item.hidden) {\n\t\t\t\titem = button;\n\t\t\t}\n\n\t\t\treturn this.effectiveDir === \"rtl\" ? this._getWidthToItem(item) : ltrEffectiveWidth;\n\t\t}\n\n\t\treturn button.offsetWidth;\n\t}\n\n\tget firstAvatarSize() {\n\t\treturn this.items[0]?.size ?? AvatarSize.S;\n\t}\n\n\tget classes() {\n\t\treturn {\n\t\t\toverflowButton: {\n\t\t\t\t\"ui5-avatar-group-overflow-btn\": true,\n\t\t\t\t\"ui5-avatar-group-overflow-btn-xs\": this.firstAvatarSize === AvatarSize.XS,\n\t\t\t\t\"ui5-avatar-group-overflow-btn-s\": this.firstAvatarSize === AvatarSize.S,\n\t\t\t\t\"ui5-avatar-group-overflow-btn-m\": this.firstAvatarSize === AvatarSize.M,\n\t\t\t\t\"ui5-avatar-group-overflow-btn-l\": this.firstAvatarSize === AvatarSize.L,\n\t\t\t\t\"ui5-avatar-group-overflow-btn-xl\": this.firstAvatarSize === AvatarSize.XL,\n\t\t\t},\n\t\t};\n\t}\n\n\tonAfterRendering() {\n\t\tthis._overflowItems();\n\t}\n\n\tonBeforeRendering() {\n\t\tif (this._customOverflowButton) {\n\t\t\tthis._customOverflowButton.nonInteractive = this._isGroup;\n\t\t}\n\n\t\tthis._prepareAvatars();\n\t}\n\n\tonEnterDOM() {\n\t\tif (isDesktop()) {\n\t\t\tthis.setAttribute(\"desktop\", \"\");\n\t\t}\n\n\t\tResizeHandler.register(this, this._onResizeHandler);\n\t}\n\n\tonExitDOM() {\n\t\tResizeHandler.deregister(this, this._onResizeHandler);\n\t}\n\n\t_onResize() {\n\t\tthis._overflowItems();\n\t}\n\n\t_onkeydown(e: KeyboardEvent) {\n\t\t// when type is \"Individual\" the ui5-avatar and ui5-button both\n\t\t// fire \"click\" event when SPACE or ENTER are pressed and\n\t\t// AvatarGroup \"click\" is fired in their handlers (_onClick, _onUI5Click).\n\t\tif (this._isGroup) {\n\t\t\tif (isEnter(e)) {\n\t\t\t\tthis._fireGroupEvent(e.target as HTMLElement);\n\t\t\t} else if (isSpace(e)) {\n\t\t\t\t// prevent scrolling\n\t\t\t\te.preventDefault();\n\t\t\t}\n\t\t}\n\t}\n\n\t_onkeyup(e: KeyboardEvent) {\n\t\tif (!e.shiftKey && isSpace(e) && this._isGroup) {\n\t\t\tthis._fireGroupEvent(e.target as HTMLElement);\n\t\t\te.preventDefault();\n\t\t}\n\t}\n\n\t_fireGroupEvent(targetRef: HTMLElement) {\n\t\tconst isOverflowButtonClicked = targetRef.classList.contains(OVERFLOW_BTN_CLASS) || targetRef === this._customOverflowButton;\n\n\t\tthis.fireEvent<AvatarGroupClickEventDetail>(\"click\", {\n\t\t\ttargetRef,\n\t\t\toverflowButtonClicked: isOverflowButtonClicked,\n\t\t});\n\t}\n\n\t_onClick(e: MouseEvent) {\n\t\tconst target = e.target as HTMLElement;\n\t\t// no matter the value of noConflict, the ui5-button and the group container (div) always fire a native click event\n\t\tconst isButton = target.hasAttribute(\"ui5-button\");\n\t\te.stopPropagation();\n\n\t\tif (this._isGroup || isButton) {\n\t\t\tthis._fireGroupEvent(target);\n\t\t}\n\t}\n\n\t_onUI5Click(e: MouseEvent) {\n\t\tconst target = e.target as HTMLElement;\n\t\t// when noConflict=true only ui5-avatar will fire ui5-click event\n\t\tconst isAvatar = target.hasAttribute(\"ui5-avatar\");\n\t\te.stopPropagation();\n\n\t\tif (isAvatar) {\n\t\t\tthis._fireGroupEvent(target);\n\t\t}\n\t}\n\n\t/**\n\t * Modifies avatars to the needs of avatar group properties. Respects already set size and background color.\n\t * Set the margins (offsets) based on RTL/LTR.\n\t * @private\n\t */\n\t_prepareAvatars() {\n\t\tthis._colorIndex = 0;\n\n\t\tthis.items.forEach((avatar, index) => {\n\t\t\tconst colorIndex = this._getNextBackgroundColor();\n\t\t\tavatar.interactive = !this._isGroup;\n\n\t\t\tif (!avatar.getAttribute(\"_color-scheme\")) {\n\t\t\t\t// AvatarGroup respects colors set to ui5-avatar\n\t\t\t\tavatar.setAttribute(\"_color-scheme\", AvatarColorScheme[`Accent${colorIndex}` as keyof typeof AvatarColorScheme]);\n\t\t\t}\n\n\t\t\t// last avatar should not be offset as it breaks the container width and focus styles are no set correctly\n\t\t\tif (index !== this._itemsCount - 1 || this._customOverflowButton) {\n\t\t\t\t// based on RTL the browser automatically sets left or right margin to avatars\n\t\t\t\tavatar.style.marginInlineEnd = offsets[avatar.effectiveSize][this.type];\n\t\t\t}\n\t\t});\n\t}\n\n\t_onfocusin(e: FocusEvent) {\n\t\tthis._itemNavigation.setCurrentItem(e.target as IAvatarGroupItem);\n\t}\n\n\t/**\n\t * Returns the total width to item excluding the item width\n\t * RTL/LTR aware\n\t * @private\n\t * @param item\n\t */\n\t_getWidthToItem(item: HTMLElement) {\n\t\tconst isRTL = this.effectiveDir === \"rtl\";\n\t\tconst ltrWidthToItem = item.offsetLeft - this.offsetLeft;\n\n\t\tif (isRTL) {\n\t\t\tconst itemOffsetParent = item.offsetParent as HTMLElement;\n\n\t\t\t// in RTL the total width is equal to difference of the parent container width and\n\t\t\t// how much is the item offset to the left minus its offsetWidth\n\n\t\t\tif (!itemOffsetParent) {\n\t\t\t\treturn 0;\n\t\t\t}\n\n\t\t\treturn itemOffsetParent.offsetWidth - item.offsetLeft - item.offsetWidth;\n\t\t}\n\n\t\treturn ltrWidthToItem;\n\t}\n\n\t/**\n\t * Overflows items that were not able to fit the container\n\t * @private\n\t */\n\t_overflowItems() {\n\t\tif (this.items.length < 2) {\n\t\t\t// no need to overflow avatars\n\t\t\treturn;\n\t\t}\n\n\t\tlet hiddenItems = 0;\n\n\t\tfor (let index = 0; index < this._itemsCount; index++) {\n\t\t\tconst item: IAvatarGroupItem = this.items[index];\n\n\t\t\t// show item to determine if it will fit the new container size\n\t\t\titem.hidden = false;\n\n\t\t\t// container width to current item + item width (avatar)\n\t\t\t// used to determine whether the following items will fit the container or not\n\t\t\tlet totalWidth = this._getWidthToItem(item) + item.offsetWidth;\n\n\t\t\tif (index !== this._itemsCount - 1 || this._customOverflowButton) {\n\t\t\t\ttotalWidth += this._overflowButtonEffectiveWidth;\n\t\t\t}\n\n\t\t\tif (totalWidth > this.offsetWidth) {\n\t\t\t\thiddenItems = this._itemsCount - index;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\t// hide the items that did not fit the container size\n\t\tthis._setHiddenItems(hiddenItems);\n\t}\n\n\t_getNextBackgroundColor() {\n\t\t// counter is to automatically assign background colors to avatars, `Accent10` is the highest color value\n\t\tif (++this._colorIndex > 10) {\n\t\t\tthis._colorIndex = 1;\n\t\t}\n\t\treturn this._colorIndex;\n\t}\n\n\t_setHiddenItems(hiddenItems: number) {\n\t\tconst shouldFireEvent = this._hiddenItems !== hiddenItems;\n\n\t\tthis._hiddenItems = hiddenItems;\n\n\t\tthis.items.forEach((item, index) => {\n\t\t\titem.hidden = index >= this._hiddenStartIndex;\n\t\t});\n\n\t\tthis._overflowButtonText = `+${hiddenItems > 99 ? 99 : hiddenItems}`;\n\n\t\tif (shouldFireEvent) {\n\t\t\tthis.fireEvent(\"overflow\");\n\t\t}\n\t}\n\n\t_getAriaHasPopup() {\n\t\treturn this.accessibilityAttributes.hasPopup;\n\t}\n}\n\nAvatarGroup.define();\n\nexport default AvatarGroup;\nexport type {\n\tAvatarGroupClickEventDetail,\n\tAvatarGroupAccessibilityAttributes,\n\tIAvatarGroupItem,\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}