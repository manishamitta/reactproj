{"ast":null,"code":"var __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n    r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n    d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar ListItem_1;\nimport customElement from \"@ui5/webcomponents-base/dist/decorators/customElement.js\";\nimport { getEventMark } from \"@ui5/webcomponents-base/dist/MarkedEvents.js\";\nimport { isSpace, isEnter, isDelete, isF2 } from \"@ui5/webcomponents-base/dist/Keys.js\";\nimport { getI18nBundle } from \"@ui5/webcomponents-base/dist/i18nBundle.js\";\nimport getActiveElement from \"@ui5/webcomponents-base/dist/util/getActiveElement.js\";\nimport { getFirstFocusableElement } from \"@ui5/webcomponents-base/dist/util/FocusableElements.js\";\nimport property from \"@ui5/webcomponents-base/dist/decorators/property.js\";\nimport event from \"@ui5/webcomponents-base/dist/decorators/event.js\";\nimport slot from \"@ui5/webcomponents-base/dist/decorators/slot.js\";\nimport \"@ui5/webcomponents-icons/dist/decline.js\";\nimport \"@ui5/webcomponents-icons/dist/edit.js\";\nimport Highlight from \"./types/Highlight.js\";\nimport ListItemType from \"./types/ListItemType.js\";\nimport ListSelectionMode from \"./types/ListSelectionMode.js\";\nimport ListItemBase from \"./ListItemBase.js\";\nimport RadioButton from \"./RadioButton.js\";\nimport CheckBox from \"./CheckBox.js\";\nimport Button from \"./Button.js\";\nimport { DELETE, ARIA_LABEL_LIST_ITEM_CHECKBOX, ARIA_LABEL_LIST_ITEM_RADIO_BUTTON, LIST_ITEM_SELECTED, LIST_ITEM_NOT_SELECTED } from \"./generated/i18n/i18n-defaults.js\";\n// Styles\nimport styles from \"./generated/themes/ListItem.css.js\";\nimport listItemAdditionalTextCss from \"./generated/themes/ListItemAdditionalText.css.js\";\n// Icons\nimport \"@ui5/webcomponents-icons/dist/slim-arrow-right.js\";\n/**\n * @class\n * A class to serve as a base\n * for the `ListItemStandard` and `ListItemCustom` classes.\n * @constructor\n * @abstract\n * @extends ListItemBase\n * @public\n */\nlet ListItem = ListItem_1 = class ListItem extends ListItemBase {\n  constructor() {\n    super();\n    /**\n     * Defines the visual indication and behavior of the list items.\n     * Available options are `Active` (by default), `Inactive`, `Detail` and `Navigation`.\n     *\n     * **Note:** When set to `Active` or `Navigation`, the item will provide visual response upon press and hover,\n     * while with type `Inactive` and `Detail` - will not.\n     * @default \"Active\"\n     * @public\n    */\n    this.type = \"Active\";\n    /**\n     * Defines the additional accessibility attributes that will be applied to the component.\n     * The following fields are supported:\n     *\n     * - **ariaSetsize**: Defines the number of items in the current set  when not all items in the set are present in the DOM.\n     * **Note:** The value is an integer reflecting the number of items in the complete set. If the size of the entire set is unknown, set `-1`.\n     *\n     * \t- **ariaPosinset**: Defines an element's number or position in the current set when not all items are present in the DOM.\n     * \t**Note:** The value is an integer greater than or equal to 1, and less than or equal to the size of the set when that size is known.\n     *\n     * @default {}\n     * @public\n     * @since 1.15.0\n     */\n    this.accessibilityAttributes = {};\n    /**\n     * The navigated state of the list item.\n     * If set to `true`, a navigation indicator is displayed at the end of the list item.\n     * @default false\n     * @public\n     * @since 1.10.0\n     */\n    this.navigated = false;\n    /**\n     * Indicates if the list item is active, e.g pressed down with the mouse or the keyboard keys.\n     * @private\n    */\n    this.active = false;\n    /**\n     * Defines the highlight state of the list items.\n     * Available options are: `\"None\"` (by default), `\"Positive\"`, `\"Critical\"`, `\"Information\"` and `\"Negative\"`.\n     * @default \"None\"\n     * @public\n     * @since 1.24\n     */\n    this.highlight = \"None\";\n    /**\n     * Used to define the role of the list item.\n     * @private\n     * @default \"ListItem\"\n     * @since 1.3.0\n     *\n     */\n    this.accessibleRole = \"ListItem\";\n    this._selectionMode = \"None\";\n    this.deactivateByKey = e => {\n      if (isEnter(e)) {\n        this.deactivate();\n      }\n    };\n    this.deactivate = () => {\n      if (this.active) {\n        this.active = false;\n      }\n    };\n    const handleTouchStartEvent = e => {\n      this._onmousedown(e);\n    };\n    this._ontouchstart = {\n      handleEvent: handleTouchStartEvent,\n      passive: true\n    };\n  }\n  onBeforeRendering() {\n    super.onBeforeRendering();\n    this.actionable = (this.type === ListItemType.Active || this.type === ListItemType.Navigation) && this._selectionMode !== ListSelectionMode.Delete;\n  }\n  onEnterDOM() {\n    super.onEnterDOM();\n    document.addEventListener(\"mouseup\", this.deactivate);\n    document.addEventListener(\"touchend\", this.deactivate);\n    document.addEventListener(\"keyup\", this.deactivateByKey);\n  }\n  onExitDOM() {\n    document.removeEventListener(\"mouseup\", this.deactivate);\n    document.removeEventListener(\"keyup\", this.deactivateByKey);\n    document.removeEventListener(\"touchend\", this.deactivate);\n  }\n  async _onkeydown(e) {\n    super._onkeydown(e);\n    const itemActive = this.type === ListItemType.Active,\n      itemNavigated = this.typeNavigation;\n    if ((isSpace(e) || isEnter(e)) && (itemActive || itemNavigated)) {\n      this.activate();\n    }\n    if (isF2(e)) {\n      const activeElement = getActiveElement();\n      const focusDomRef = this.getFocusDomRef();\n      if (activeElement === focusDomRef) {\n        const firstFocusable = await getFirstFocusableElement(focusDomRef);\n        firstFocusable?.focus();\n      } else {\n        focusDomRef.focus();\n      }\n    }\n  }\n  _onkeyup(e) {\n    super._onkeyup(e);\n    if (isSpace(e) || isEnter(e)) {\n      this.deactivate();\n    }\n    if (this.modeDelete && isDelete(e)) {\n      this.onDelete();\n    }\n  }\n  _onmousedown(e) {\n    if (getEventMark(e) === \"button\") {\n      return;\n    }\n    this.activate();\n  }\n  _onmouseup(e) {\n    if (getEventMark(e) === \"button\") {\n      return;\n    }\n    this.deactivate();\n  }\n  _ontouchend(e) {\n    this._onmouseup(e);\n  }\n  _onfocusout() {\n    this.deactivate();\n  }\n  _ondragstart(e) {\n    if (!e.dataTransfer) {\n      return;\n    }\n    if (e.target === this._listItem) {\n      this.setAttribute(\"data-moving\", \"\");\n      e.dataTransfer.dropEffect = \"move\";\n      e.dataTransfer.effectAllowed = \"move\";\n    }\n  }\n  _ondragend(e) {\n    if (e.target === this._listItem) {\n      this.removeAttribute(\"data-moving\");\n    }\n  }\n  /**\n   * Called when selection components in Single (ui5-radio-button)\n   * and Multi (ui5-checkbox) selection modes are used.\n   */\n  onMultiSelectionComponentPress(e) {\n    if (this.isInactive) {\n      return;\n    }\n    this.fireEvent(\"_selection-requested\", {\n      item: this,\n      selected: e.target.checked,\n      selectionComponentPressed: true\n    });\n  }\n  onSingleSelectionComponentPress(e) {\n    if (this.isInactive) {\n      return;\n    }\n    this.fireEvent(\"_selection-requested\", {\n      item: this,\n      selected: !e.target.checked,\n      selectionComponentPressed: true\n    });\n  }\n  activate() {\n    if (this.type === ListItemType.Active || this.type === ListItemType.Navigation) {\n      this.active = true;\n    }\n  }\n  onDelete() {\n    this.fireEvent(\"_selection-requested\", {\n      item: this,\n      selectionComponentPressed: false\n    });\n  }\n  onDetailClick() {\n    this.fireEvent(\"detail-click\", {\n      item: this,\n      selected: this.selected\n    });\n  }\n  fireItemPress(e) {\n    if (this.isInactive) {\n      return;\n    }\n    super.fireItemPress(e);\n  }\n  get isInactive() {\n    return this.type === ListItemType.Inactive || this.type === ListItemType.Detail;\n  }\n  get placeSelectionElementBefore() {\n    return this._selectionMode === ListSelectionMode.Multiple || this._selectionMode === ListSelectionMode.SingleStart;\n  }\n  get placeSelectionElementAfter() {\n    return !this.placeSelectionElementBefore && (this._selectionMode === ListSelectionMode.SingleEnd || this._selectionMode === ListSelectionMode.Delete);\n  }\n  get modeSingleSelect() {\n    return [ListSelectionMode.SingleStart, ListSelectionMode.SingleEnd, ListSelectionMode.Single].includes(this._selectionMode);\n  }\n  get modeMultiple() {\n    return this._selectionMode === ListSelectionMode.Multiple;\n  }\n  get modeDelete() {\n    return this._selectionMode === ListSelectionMode.Delete;\n  }\n  /**\n   * Used in UploadCollectionItem\n   */\n  get renderDeleteButton() {\n    return this.modeDelete;\n  }\n  /**\n   * End\n   */\n  get typeDetail() {\n    return this.type === ListItemType.Detail;\n  }\n  get typeNavigation() {\n    return this.type === ListItemType.Navigation;\n  }\n  get typeActive() {\n    return this.type === ListItemType.Active;\n  }\n  get _ariaSelected() {\n    if (this.modeMultiple || this.modeSingleSelect) {\n      return this.selected;\n    }\n    return undefined;\n  }\n  get listItemAccessibleRole() {\n    return this.accessibleRole.toLowerCase();\n  }\n  get ariaSelectedText() {\n    let ariaSelectedText;\n    // Selected state needs to be supported separately since now the role mapping is list -> listitem[]\n    // to avoid the issue of nesting interactive elements, ex. (option -> radio/checkbox);\n    // The text is added to aria-describedby because as part of the aria-labelledby\n    // the whole content of the item is readout when the aria-labelledby value is changed.\n    if (this._ariaSelected !== undefined) {\n      ariaSelectedText = this._ariaSelected ? ListItem_1.i18nBundle.getText(LIST_ITEM_SELECTED) : ListItem_1.i18nBundle.getText(LIST_ITEM_NOT_SELECTED);\n    }\n    return ariaSelectedText;\n  }\n  get deleteText() {\n    return ListItem_1.i18nBundle.getText(DELETE);\n  }\n  get hasDeleteButtonSlot() {\n    return !!this.deleteButton.length;\n  }\n  get _accessibleNameRef() {\n    if (this.accessibleName) {\n      // accessibleName is set - return labels excluding content\n      return `${this._id}-invisibleText`;\n    }\n    // accessibleName is not set - return _accInfo.listItemAriaLabel including content\n    return `${this._id}-content ${this._id}-invisibleText`;\n  }\n  get _accInfo() {\n    return {\n      role: this.listItemAccessibleRole,\n      ariaExpanded: undefined,\n      ariaLevel: undefined,\n      ariaLabel: ListItem_1.i18nBundle.getText(ARIA_LABEL_LIST_ITEM_CHECKBOX),\n      ariaLabelRadioButton: ListItem_1.i18nBundle.getText(ARIA_LABEL_LIST_ITEM_RADIO_BUTTON),\n      ariaSelectedText: this.ariaSelectedText,\n      ariaHaspopup: this.accessibilityAttributes.hasPopup,\n      setsize: this.accessibilityAttributes.ariaSetsize,\n      posinset: this.accessibilityAttributes.ariaPosinset,\n      tooltip: this.tooltip\n    };\n  }\n  get _hasHighlightColor() {\n    return this.highlight !== Highlight.None;\n  }\n  get hasConfigurableMode() {\n    return true;\n  }\n  get _listItem() {\n    return this.shadowRoot.querySelector(\"li\");\n  }\n  static async onDefine() {\n    ListItem_1.i18nBundle = await getI18nBundle(\"@ui5/webcomponents\");\n  }\n};\n__decorate([property()], ListItem.prototype, \"type\", void 0);\n__decorate([property({\n  type: Object\n})], ListItem.prototype, \"accessibilityAttributes\", void 0);\n__decorate([property({\n  type: Boolean\n})], ListItem.prototype, \"navigated\", void 0);\n__decorate([property()], ListItem.prototype, \"tooltip\", void 0);\n__decorate([property({\n  type: Boolean\n})], ListItem.prototype, \"active\", void 0);\n__decorate([property()], ListItem.prototype, \"highlight\", void 0);\n__decorate([property({\n  type: Boolean\n})], ListItem.prototype, \"selected\", void 0);\n__decorate([property()], ListItem.prototype, \"accessibleRole\", void 0);\n__decorate([property()], ListItem.prototype, \"_selectionMode\", void 0);\n__decorate([slot()], ListItem.prototype, \"deleteButton\", void 0);\nListItem = ListItem_1 = __decorate([customElement({\n  languageAware: true,\n  styles: [ListItemBase.styles, listItemAdditionalTextCss, styles],\n  dependencies: [Button, RadioButton, CheckBox]\n})\n/**\n * Fired when the user clicks on the detail button when type is `Detail`.\n * @public\n */, event(\"detail-click\"), event(\"_focused\"), event(\"_selection-requested\")], ListItem);\nexport default ListItem;","map":{"version":3,"names":["customElement","getEventMark","isSpace","isEnter","isDelete","isF2","getI18nBundle","getActiveElement","getFirstFocusableElement","property","event","slot","Highlight","ListItemType","ListSelectionMode","ListItemBase","RadioButton","CheckBox","Button","DELETE","ARIA_LABEL_LIST_ITEM_CHECKBOX","ARIA_LABEL_LIST_ITEM_RADIO_BUTTON","LIST_ITEM_SELECTED","LIST_ITEM_NOT_SELECTED","styles","listItemAdditionalTextCss","ListItem","ListItem_1","constructor","type","accessibilityAttributes","navigated","active","highlight","accessibleRole","_selectionMode","deactivateByKey","e","deactivate","handleTouchStartEvent","_onmousedown","_ontouchstart","handleEvent","passive","onBeforeRendering","actionable","Active","Navigation","Delete","onEnterDOM","document","addEventListener","onExitDOM","removeEventListener","_onkeydown","itemActive","itemNavigated","typeNavigation","activate","activeElement","focusDomRef","getFocusDomRef","firstFocusable","focus","_onkeyup","modeDelete","onDelete","_onmouseup","_ontouchend","_onfocusout","_ondragstart","dataTransfer","target","_listItem","setAttribute","dropEffect","effectAllowed","_ondragend","removeAttribute","onMultiSelectionComponentPress","isInactive","fireEvent","item","selected","checked","selectionComponentPressed","onSingleSelectionComponentPress","onDetailClick","fireItemPress","Inactive","Detail","placeSelectionElementBefore","Multiple","SingleStart","placeSelectionElementAfter","SingleEnd","modeSingleSelect","Single","includes","modeMultiple","renderDeleteButton","typeDetail","typeActive","_ariaSelected","undefined","listItemAccessibleRole","toLowerCase","ariaSelectedText","i18nBundle","getText","deleteText","hasDeleteButtonSlot","deleteButton","length","_accessibleNameRef","accessibleName","_id","_accInfo","role","ariaExpanded","ariaLevel","ariaLabel","ariaLabelRadioButton","ariaHaspopup","hasPopup","setsize","ariaSetsize","posinset","ariaPosinset","tooltip","_hasHighlightColor","None","hasConfigurableMode","shadowRoot","querySelector","onDefine","__decorate","Object","Boolean","languageAware","dependencies"],"sources":["/home/user/projects/reactproj/node_modules/@ui5/webcomponents/src/ListItem.ts"],"sourcesContent":["import customElement from \"@ui5/webcomponents-base/dist/decorators/customElement.js\";\nimport { getEventMark } from \"@ui5/webcomponents-base/dist/MarkedEvents.js\";\nimport {\n\tisSpace, isEnter, isDelete, isF2,\n} from \"@ui5/webcomponents-base/dist/Keys.js\";\nimport type I18nBundle from \"@ui5/webcomponents-base/dist/i18nBundle.js\";\nimport { getI18nBundle } from \"@ui5/webcomponents-base/dist/i18nBundle.js\";\nimport getActiveElement from \"@ui5/webcomponents-base/dist/util/getActiveElement.js\";\nimport { getFirstFocusableElement } from \"@ui5/webcomponents-base/dist/util/FocusableElements.js\";\nimport type { AccessibilityAttributes, PassiveEventListenerObject } from \"@ui5/webcomponents-base/dist/types.js\";\nimport property from \"@ui5/webcomponents-base/dist/decorators/property.js\";\nimport event from \"@ui5/webcomponents-base/dist/decorators/event.js\";\nimport slot from \"@ui5/webcomponents-base/dist/decorators/slot.js\";\nimport type AriaHasPopup from \"@ui5/webcomponents-base/dist/types/AriaHasPopup.js\";\nimport \"@ui5/webcomponents-icons/dist/decline.js\";\nimport \"@ui5/webcomponents-icons/dist/edit.js\";\nimport Highlight from \"./types/Highlight.js\";\nimport ListItemType from \"./types/ListItemType.js\";\nimport ListSelectionMode from \"./types/ListSelectionMode.js\";\nimport ListItemBase from \"./ListItemBase.js\";\nimport RadioButton from \"./RadioButton.js\";\nimport CheckBox from \"./CheckBox.js\";\nimport Button from \"./Button.js\";\nimport type { IButton } from \"./Button.js\";\nimport {\n\tDELETE,\n\tARIA_LABEL_LIST_ITEM_CHECKBOX,\n\tARIA_LABEL_LIST_ITEM_RADIO_BUTTON,\n\tLIST_ITEM_SELECTED,\n\tLIST_ITEM_NOT_SELECTED,\n} from \"./generated/i18n/i18n-defaults.js\";\nimport type ListItemAccessibleRole from \"./types/ListItemAccessibleRole.js\";\n\n// Styles\nimport styles from \"./generated/themes/ListItem.css.js\";\nimport listItemAdditionalTextCss from \"./generated/themes/ListItemAdditionalText.css.js\";\n\n// Icons\nimport \"@ui5/webcomponents-icons/dist/slim-arrow-right.js\";\n\ninterface IAccessibleListItem {\n\taccessibleName?: string;\n\taccessibleNameRef?: string;\n}\n\ntype SelectionRequestEventDetail = {\n\titem: ListItemBase,\n\tselectionComponentPressed: boolean,\n\tselected?: boolean,\n\tkey?: string,\n}\n\ntype AccInfo = {\n\trole?: string;\n\tariaExpanded?: boolean;\n\tariaLevel?: number;\n\tariaLabel: string;\n\tariaLabelRadioButton: string;\n\tariaSelectedText?: string;\n\tariaHaspopup?: `${Lowercase<AriaHasPopup>}`;\n\tposinset?: number;\n\tsetsize?: number;\n\tariaSelected?: boolean;\n\tariaChecked?: boolean;\n\tlistItemAriaLabel?: string;\n\tariaOwns?: string;\n\ttooltip?: string;\n\tariaKeyShortcuts?: string;\n}\n\ntype ListItemAccessibilityAttributes = Pick<AccessibilityAttributes, \"hasPopup\" | \"ariaSetsize\" | \"ariaPosinset\">;\n\n/**\n * @class\n * A class to serve as a base\n * for the `ListItemStandard` and `ListItemCustom` classes.\n * @constructor\n * @abstract\n * @extends ListItemBase\n * @public\n */\n@customElement({\n\tlanguageAware: true,\n\tstyles: [\n\t\tListItemBase.styles,\n\t\tlistItemAdditionalTextCss,\n\t\tstyles,\n\t],\n\tdependencies: [\n\t\tButton,\n\t\tRadioButton,\n\t\tCheckBox,\n\t],\n})\n/**\n * Fired when the user clicks on the detail button when type is `Detail`.\n * @public\n */\n@event(\"detail-click\")\n@event(\"_focused\")\n@event(\"_selection-requested\")\nabstract class ListItem extends ListItemBase {\n\t/**\n\t * Defines the visual indication and behavior of the list items.\n\t * Available options are `Active` (by default), `Inactive`, `Detail` and `Navigation`.\n\t *\n\t * **Note:** When set to `Active` or `Navigation`, the item will provide visual response upon press and hover,\n\t * while with type `Inactive` and `Detail` - will not.\n\t * @default \"Active\"\n\t * @public\n\t*/\n\t@property()\n\ttype: `${ListItemType}` = \"Active\";\n\n\t/**\n\t * Defines the additional accessibility attributes that will be applied to the component.\n\t * The following fields are supported:\n\t *\n\t * - **ariaSetsize**: Defines the number of items in the current set  when not all items in the set are present in the DOM.\n\t * **Note:** The value is an integer reflecting the number of items in the complete set. If the size of the entire set is unknown, set `-1`.\n\t *\n\t * \t- **ariaPosinset**: Defines an element's number or position in the current set when not all items are present in the DOM.\n\t * \t**Note:** The value is an integer greater than or equal to 1, and less than or equal to the size of the set when that size is known.\n\t *\n\t * @default {}\n\t * @public\n\t * @since 1.15.0\n\t */\n\t@property({ type: Object })\n\taccessibilityAttributes: ListItemAccessibilityAttributes = {};\n\n\t/**\n\t * The navigated state of the list item.\n\t * If set to `true`, a navigation indicator is displayed at the end of the list item.\n\t * @default false\n\t * @public\n\t * @since 1.10.0\n\t */\n\t@property({ type: Boolean })\n\tnavigated = false;\n\n\t/**\n\t * Defines the text of the tooltip that would be displayed for the list item.\n\t * @default undefined\n\t * @public\n\t * @since 1.23.0\n\t */\n\t@property()\n\ttooltip?: string;\n\n\t/**\n\t * Indicates if the list item is active, e.g pressed down with the mouse or the keyboard keys.\n\t * @private\n\t*/\n\t@property({ type: Boolean })\n\tactive = false;\n\n\t/**\n\t * Defines the highlight state of the list items.\n\t * Available options are: `\"None\"` (by default), `\"Positive\"`, `\"Critical\"`, `\"Information\"` and `\"Negative\"`.\n\t * @default \"None\"\n\t * @public\n\t * @since 1.24\n\t */\n\t@property()\n\thighlight: `${Highlight}` = \"None\";\n\n\t/**\n\t * Defines the selected state of the component.\n\t * @default false\n\t * @public\n\t */\n\t@property({ type: Boolean })\n\tdeclare selected: boolean;\n\n\t/**\n\t * Used to define the role of the list item.\n\t * @private\n\t * @default \"ListItem\"\n\t * @since 1.3.0\n\t *\n\t */\n\t@property()\n\taccessibleRole: `${ListItemAccessibleRole}` = \"ListItem\";\n\n\t@property()\n\t_selectionMode: `${ListSelectionMode}` = \"None\";\n\n\t/**\n\t * Defines the delete button, displayed in \"Delete\" mode.\n\t * **Note:** While the slot allows custom buttons, to match\n\t * design guidelines, please use the `ui5-button` component.\n\t * **Note:** When the slot is not present, a built-in delete button will be displayed.\n\t * @since 1.9.0\n\t * @public\n\t*/\n\t@slot()\n\tdeleteButton!: Array<IButton>;\n\n\tdeactivateByKey: (e: KeyboardEvent) => void;\n\tdeactivate: () => void;\n\t_ontouchstart: PassiveEventListenerObject;\n\t// used in template, implemented in TreeItemBase, ListItemStandard\n\taccessibleName?: string;\n\t// used in ListItem template but implemented in TreeItemBase\n\tindeterminate?: boolean;\n\t// Used in UploadCollectionItem\n\tdisableDeleteButton?: boolean;\n\n\tstatic i18nBundle: I18nBundle;\n\n\tconstructor() {\n\t\tsuper();\n\n\t\tthis.deactivateByKey = (e: KeyboardEvent) => {\n\t\t\tif (isEnter(e)) {\n\t\t\t\tthis.deactivate();\n\t\t\t}\n\t\t};\n\n\t\tthis.deactivate = () => {\n\t\t\tif (this.active) {\n\t\t\t\tthis.active = false;\n\t\t\t}\n\t\t};\n\n\t\tconst handleTouchStartEvent = (e: TouchEvent) => {\n\t\t\tthis._onmousedown(e as unknown as MouseEvent);\n\t\t};\n\n\t\tthis._ontouchstart = {\n\t\t\thandleEvent: handleTouchStartEvent,\n\t\t\tpassive: true,\n\t\t};\n\t}\n\n\tonBeforeRendering() {\n\t\tsuper.onBeforeRendering();\n\t\tthis.actionable = (this.type === ListItemType.Active || this.type === ListItemType.Navigation) && (this._selectionMode !== ListSelectionMode.Delete);\n\t}\n\n\tonEnterDOM() {\n\t\tsuper.onEnterDOM();\n\t\tdocument.addEventListener(\"mouseup\", this.deactivate);\n\t\tdocument.addEventListener(\"touchend\", this.deactivate);\n\t\tdocument.addEventListener(\"keyup\", this.deactivateByKey);\n\t}\n\n\tonExitDOM() {\n\t\tdocument.removeEventListener(\"mouseup\", this.deactivate);\n\t\tdocument.removeEventListener(\"keyup\", this.deactivateByKey);\n\t\tdocument.removeEventListener(\"touchend\", this.deactivate);\n\t}\n\n\tasync _onkeydown(e: KeyboardEvent) {\n\t\tsuper._onkeydown(e);\n\n\t\tconst itemActive = this.type === ListItemType.Active,\n\t\t\titemNavigated = this.typeNavigation;\n\n\t\tif ((isSpace(e) || isEnter(e)) && (itemActive || itemNavigated)) {\n\t\t\tthis.activate();\n\t\t}\n\n\t\tif (isF2(e)) {\n\t\t\tconst activeElement = getActiveElement();\n\t\t\tconst focusDomRef = this.getFocusDomRef()!;\n\n\t\t\tif (activeElement === focusDomRef) {\n\t\t\t\tconst firstFocusable = await getFirstFocusableElement(focusDomRef);\n\t\t\t\tfirstFocusable?.focus();\n\t\t\t} else {\n\t\t\t\tfocusDomRef.focus();\n\t\t\t}\n\t\t}\n\t}\n\n\t_onkeyup(e: KeyboardEvent) {\n\t\tsuper._onkeyup(e);\n\n\t\tif (isSpace(e) || isEnter(e)) {\n\t\t\tthis.deactivate();\n\t\t}\n\n\t\tif (this.modeDelete && isDelete(e)) {\n\t\t\tthis.onDelete();\n\t\t}\n\t}\n\n\t_onmousedown(e: MouseEvent) {\n\t\tif (getEventMark(e) === \"button\") {\n\t\t\treturn;\n\t\t}\n\t\tthis.activate();\n\t}\n\n\t_onmouseup(e: MouseEvent) {\n\t\tif (getEventMark(e) === \"button\") {\n\t\t\treturn;\n\t\t}\n\t\tthis.deactivate();\n\t}\n\n\t_ontouchend(e: TouchEvent) {\n\t\tthis._onmouseup(e as unknown as MouseEvent);\n\t}\n\n\t_onfocusout() {\n\t\tthis.deactivate();\n\t}\n\n\t_ondragstart(e: DragEvent) {\n\t\tif (!e.dataTransfer) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (e.target === this._listItem) {\n\t\t\tthis.setAttribute(\"data-moving\", \"\");\n\t\t\te.dataTransfer.dropEffect = \"move\";\n\t\t\te.dataTransfer.effectAllowed = \"move\";\n\t\t}\n\t}\n\n\t_ondragend(e: DragEvent) {\n\t\tif (e.target === this._listItem) {\n\t\t\tthis.removeAttribute(\"data-moving\");\n\t\t}\n\t}\n\n\t/**\n\t * Called when selection components in Single (ui5-radio-button)\n\t * and Multi (ui5-checkbox) selection modes are used.\n\t */\n\tonMultiSelectionComponentPress(e: MouseEvent) {\n\t\tif (this.isInactive) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.fireEvent<SelectionRequestEventDetail>(\"_selection-requested\", { item: this, selected: (e.target as CheckBox).checked, selectionComponentPressed: true });\n\t}\n\n\tonSingleSelectionComponentPress(e: MouseEvent) {\n\t\tif (this.isInactive) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.fireEvent<SelectionRequestEventDetail>(\"_selection-requested\", { item: this, selected: !(e.target as RadioButton).checked, selectionComponentPressed: true });\n\t}\n\n\tactivate() {\n\t\tif (this.type === ListItemType.Active || this.type === ListItemType.Navigation) {\n\t\t\tthis.active = true;\n\t\t}\n\t}\n\n\tonDelete() {\n\t\tthis.fireEvent<SelectionRequestEventDetail>(\"_selection-requested\", { item: this, selectionComponentPressed: false });\n\t}\n\n\tonDetailClick() {\n\t\tthis.fireEvent(\"detail-click\", { item: this, selected: this.selected });\n\t}\n\n\tfireItemPress(e: Event) {\n\t\tif (this.isInactive) {\n\t\t\treturn;\n\t\t}\n\t\tsuper.fireItemPress(e);\n\t}\n\n\tget isInactive() {\n\t\treturn this.type === ListItemType.Inactive || this.type === ListItemType.Detail;\n\t}\n\n\tget placeSelectionElementBefore() {\n\t\treturn this._selectionMode === ListSelectionMode.Multiple\n\t\t\t|| this._selectionMode === ListSelectionMode.SingleStart;\n\t}\n\n\tget placeSelectionElementAfter() {\n\t\treturn !this.placeSelectionElementBefore\n\t\t\t&& (this._selectionMode === ListSelectionMode.SingleEnd || this._selectionMode === ListSelectionMode.Delete);\n\t}\n\n\tget modeSingleSelect() {\n\t\treturn [\n\t\t\tListSelectionMode.SingleStart,\n\t\t\tListSelectionMode.SingleEnd,\n\t\t\tListSelectionMode.Single,\n\t\t].includes(this._selectionMode as ListSelectionMode);\n\t}\n\n\tget modeMultiple() {\n\t\treturn this._selectionMode === ListSelectionMode.Multiple;\n\t}\n\n\tget modeDelete() {\n\t\treturn this._selectionMode === ListSelectionMode.Delete;\n\t}\n\n\t/**\n\t * Used in UploadCollectionItem\n\t */\n\tget renderDeleteButton() {\n\t\treturn this.modeDelete;\n\t}\n\n\t/**\n\t * End\n\t */\n\n\tget typeDetail() {\n\t\treturn this.type === ListItemType.Detail;\n\t}\n\n\tget typeNavigation() {\n\t\treturn this.type === ListItemType.Navigation;\n\t}\n\n\tget typeActive() {\n\t\treturn this.type === ListItemType.Active;\n\t}\n\n\tget _ariaSelected() {\n\t\tif (this.modeMultiple || this.modeSingleSelect) {\n\t\t\treturn this.selected;\n\t\t}\n\n\t\treturn undefined;\n\t}\n\n\tget listItemAccessibleRole() {\n\t\treturn this.accessibleRole.toLowerCase();\n\t}\n\n\tget ariaSelectedText() {\n\t\tlet ariaSelectedText;\n\n\t\t// Selected state needs to be supported separately since now the role mapping is list -> listitem[]\n\t\t// to avoid the issue of nesting interactive elements, ex. (option -> radio/checkbox);\n\t\t// The text is added to aria-describedby because as part of the aria-labelledby\n\t\t// the whole content of the item is readout when the aria-labelledby value is changed.\n\t\tif (this._ariaSelected !== undefined) {\n\t\t\tariaSelectedText = this._ariaSelected ? ListItem.i18nBundle.getText(LIST_ITEM_SELECTED) : ListItem.i18nBundle.getText(LIST_ITEM_NOT_SELECTED);\n\t\t}\n\n\t\treturn ariaSelectedText;\n\t}\n\n\tget deleteText() {\n\t\treturn ListItem.i18nBundle.getText(DELETE);\n\t}\n\n\tget hasDeleteButtonSlot() {\n\t\treturn !!this.deleteButton.length;\n\t}\n\n\tget _accessibleNameRef(): string {\n\t\tif ((this as IAccessibleListItem).accessibleName) {\n\t\t\t// accessibleName is set - return labels excluding content\n\t\t\treturn `${this._id}-invisibleText`;\n\t\t}\n\n\t\t// accessibleName is not set - return _accInfo.listItemAriaLabel including content\n\t\treturn `${this._id}-content ${this._id}-invisibleText`;\n\t}\n\n\tget _accInfo(): AccInfo {\n\t\treturn {\n\t\t\trole: this.listItemAccessibleRole,\n\t\t\tariaExpanded: undefined,\n\t\t\tariaLevel: undefined,\n\t\t\tariaLabel: ListItem.i18nBundle.getText(ARIA_LABEL_LIST_ITEM_CHECKBOX),\n\t\t\tariaLabelRadioButton: ListItem.i18nBundle.getText(ARIA_LABEL_LIST_ITEM_RADIO_BUTTON),\n\t\t\tariaSelectedText: this.ariaSelectedText,\n\t\t\tariaHaspopup: this.accessibilityAttributes.hasPopup,\n\t\t\tsetsize: this.accessibilityAttributes.ariaSetsize,\n\t\t\tposinset: this.accessibilityAttributes.ariaPosinset,\n\t\t\ttooltip: this.tooltip,\n\t\t};\n\t}\n\n\tget _hasHighlightColor() {\n\t\treturn this.highlight !== Highlight.None;\n\t}\n\n\tget hasConfigurableMode() {\n\t\treturn true;\n\t}\n\n\tget _listItem() {\n\t\treturn this.shadowRoot!.querySelector(\"li\");\n\t}\n\n\tstatic async onDefine() {\n\t\tListItem.i18nBundle = await getI18nBundle(\"@ui5/webcomponents\");\n\t}\n}\n\nexport default ListItem;\nexport type {\n\tIAccessibleListItem,\n\tSelectionRequestEventDetail,\n\tListItemAccessibilityAttributes,\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}