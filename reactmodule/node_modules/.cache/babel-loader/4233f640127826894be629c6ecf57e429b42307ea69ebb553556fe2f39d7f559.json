{"ast":null,"code":"'use client';\n\nimport ListItemType from '@ui5/webcomponents/dist/types/ListItemType.js';\nimport ValueState from '@ui5/webcomponents-base/dist/types/ValueState.js';\nimport iconArrowRight from '@ui5/webcomponents-icons/dist/slim-arrow-right.js';\nimport { useStylesheet } from '@ui5/webcomponents-react-base';\nimport { clsx } from 'clsx';\nimport { Children, forwardRef, useContext, useEffect, useRef, useState } from 'react';\nimport { FlexBoxAlignItems, FlexBoxDirection } from '../../enums/index.js';\nimport { MessageViewContext } from '../../internal/MessageViewContext.js';\nimport { Icon } from '../../webComponents/Icon/index.js';\nimport { Label } from '../../webComponents/Label/index.js';\nimport { ListItemCustom } from '../../webComponents/ListItemCustom/index.js';\nimport { FlexBox } from '../FlexBox/index.js';\nimport { classNames, styleData } from './MessageItem.module.css.js';\nimport { getIconNameForType } from './utils.js';\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\n/**\n * A component used to hold different types of system messages inside the `MessageView` component.\n */\nconst MessageItem = /*#__PURE__*/forwardRef((props, ref) => {\n  const {\n    titleText,\n    subtitleText,\n    counter,\n    type = ValueState.Negative,\n    children,\n    className,\n    ...rest\n  } = props;\n  const [isTitleTextOverflowing, setIsTitleTextIsOverflowing] = useState(false);\n  const titleTextRef = useRef(null);\n  const hasDetails = !!(children || isTitleTextOverflowing);\n  useStylesheet(styleData, MessageItem.displayName);\n  const {\n    selectMessage\n  } = useContext(MessageViewContext);\n  const listItemClasses = clsx(classNames.listItem, Reflect.get(classNames, `type${type}`), className, subtitleText && classNames.withSubtitle);\n  const messageClasses = clsx(classNames.message, hasDetails && classNames.withChildren);\n  const handleListItemClick = e => {\n    if (hasDetails) {\n      selectMessage(props);\n      if (typeof rest.onClick === 'function') {\n        rest.onClick(e);\n      }\n    }\n  };\n  const handleKeyDown = e => {\n    if (typeof rest.onKeyDown === 'function') {\n      rest.onKeyDown(e);\n    }\n    if (e.code === 'Enter') {\n      handleListItemClick(e);\n    }\n  };\n  const hasChildren = Children.count(children);\n  useEffect(() => {\n    const titleTextObserver = new ResizeObserver(_ref => {\n      let [titleTextSpan] = _ref;\n      if (titleTextSpan.target.scrollWidth > titleTextSpan.target.clientWidth) {\n        setIsTitleTextIsOverflowing(true);\n      } else {\n        setIsTitleTextIsOverflowing(false);\n      }\n    });\n    if (!hasChildren && titleTextRef.current) {\n      titleTextObserver.observe(titleTextRef.current);\n    }\n    return () => {\n      titleTextObserver.disconnect();\n    };\n  }, [hasChildren]);\n  return /*#__PURE__*/_jsx(ListItemCustom, {\n    onClick: handleListItemClick,\n    onKeyDown: handleKeyDown,\n    \"data-title\": titleText,\n    \"data-type\": type,\n    type: hasDetails ? ListItemType.Active : ListItemType.Inactive,\n    ...rest,\n    className: listItemClasses,\n    ref: ref,\n    children: /*#__PURE__*/_jsxs(FlexBox, {\n      alignItems: FlexBoxAlignItems.Center,\n      className: messageClasses,\n      children: [/*#__PURE__*/_jsx(\"div\", {\n        className: classNames.iconContainer,\n        children: /*#__PURE__*/_jsx(Icon, {\n          name: getIconNameForType(type),\n          className: classNames.icon\n        })\n      }), /*#__PURE__*/_jsxs(FlexBox, {\n        direction: FlexBoxDirection.Column,\n        style: {\n          flex: 'auto',\n          whiteSpace: 'nowrap',\n          overflow: 'hidden',\n          textOverflow: 'ellipsis'\n        },\n        children: [titleText && /*#__PURE__*/_jsx(\"span\", {\n          className: classNames.title,\n          ref: titleTextRef,\n          children: titleText\n        }), titleText && subtitleText && /*#__PURE__*/_jsx(Label, {\n          className: classNames.subtitle,\n          children: subtitleText\n        })]\n      }), counter != null && /*#__PURE__*/_jsx(\"span\", {\n        className: classNames.counter,\n        children: counter\n      }), hasDetails && /*#__PURE__*/_jsx(Icon, {\n        className: classNames.navigation,\n        name: iconArrowRight\n      })]\n    })\n  });\n});\nMessageItem.displayName = 'MessageItem';\nexport { MessageItem };","map":{"version":3,"names":["ListItemType","ValueState","iconArrowRight","useStylesheet","clsx","Children","forwardRef","useContext","useEffect","useRef","useState","FlexBoxAlignItems","FlexBoxDirection","MessageViewContext","Icon","Label","ListItemCustom","FlexBox","classNames","styleData","getIconNameForType","jsx","_jsx","jsxs","_jsxs","MessageItem","props","ref","titleText","subtitleText","counter","type","Negative","children","className","rest","isTitleTextOverflowing","setIsTitleTextIsOverflowing","titleTextRef","hasDetails","displayName","selectMessage","listItemClasses","listItem","Reflect","get","withSubtitle","messageClasses","message","withChildren","handleListItemClick","e","onClick","handleKeyDown","onKeyDown","code","hasChildren","count","titleTextObserver","ResizeObserver","_ref","titleTextSpan","target","scrollWidth","clientWidth","current","observe","disconnect","Active","Inactive","alignItems","Center","iconContainer","name","icon","direction","Column","style","flex","whiteSpace","overflow","textOverflow","title","subtitle","navigation"],"sources":["/home/user/projects/reactproj/node_modules/@ui5/webcomponents-react/dist/components/MessageView/MessageItem.js"],"sourcesContent":["'use client';\n\nimport ListItemType from '@ui5/webcomponents/dist/types/ListItemType.js';\nimport ValueState from '@ui5/webcomponents-base/dist/types/ValueState.js';\nimport iconArrowRight from '@ui5/webcomponents-icons/dist/slim-arrow-right.js';\nimport { useStylesheet } from '@ui5/webcomponents-react-base';\nimport { clsx } from 'clsx';\nimport { Children, forwardRef, useContext, useEffect, useRef, useState } from 'react';\nimport { FlexBoxAlignItems, FlexBoxDirection } from '../../enums/index.js';\nimport { MessageViewContext } from '../../internal/MessageViewContext.js';\nimport { Icon } from '../../webComponents/Icon/index.js';\nimport { Label } from '../../webComponents/Label/index.js';\nimport { ListItemCustom } from '../../webComponents/ListItemCustom/index.js';\nimport { FlexBox } from '../FlexBox/index.js';\nimport { classNames, styleData } from './MessageItem.module.css.js';\nimport { getIconNameForType } from './utils.js';\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\n/**\n * A component used to hold different types of system messages inside the `MessageView` component.\n */\nconst MessageItem = /*#__PURE__*/forwardRef((props, ref) => {\n  const {\n    titleText,\n    subtitleText,\n    counter,\n    type = ValueState.Negative,\n    children,\n    className,\n    ...rest\n  } = props;\n  const [isTitleTextOverflowing, setIsTitleTextIsOverflowing] = useState(false);\n  const titleTextRef = useRef(null);\n  const hasDetails = !!(children || isTitleTextOverflowing);\n  useStylesheet(styleData, MessageItem.displayName);\n  const {\n    selectMessage\n  } = useContext(MessageViewContext);\n  const listItemClasses = clsx(classNames.listItem, Reflect.get(classNames, `type${type}`), className, subtitleText && classNames.withSubtitle);\n  const messageClasses = clsx(classNames.message, hasDetails && classNames.withChildren);\n  const handleListItemClick = e => {\n    if (hasDetails) {\n      selectMessage(props);\n      if (typeof rest.onClick === 'function') {\n        rest.onClick(e);\n      }\n    }\n  };\n  const handleKeyDown = e => {\n    if (typeof rest.onKeyDown === 'function') {\n      rest.onKeyDown(e);\n    }\n    if (e.code === 'Enter') {\n      handleListItemClick(e);\n    }\n  };\n  const hasChildren = Children.count(children);\n  useEffect(() => {\n    const titleTextObserver = new ResizeObserver(([titleTextSpan]) => {\n      if (titleTextSpan.target.scrollWidth > titleTextSpan.target.clientWidth) {\n        setIsTitleTextIsOverflowing(true);\n      } else {\n        setIsTitleTextIsOverflowing(false);\n      }\n    });\n    if (!hasChildren && titleTextRef.current) {\n      titleTextObserver.observe(titleTextRef.current);\n    }\n    return () => {\n      titleTextObserver.disconnect();\n    };\n  }, [hasChildren]);\n  return /*#__PURE__*/_jsx(ListItemCustom, {\n    onClick: handleListItemClick,\n    onKeyDown: handleKeyDown,\n    \"data-title\": titleText,\n    \"data-type\": type,\n    type: hasDetails ? ListItemType.Active : ListItemType.Inactive,\n    ...rest,\n    className: listItemClasses,\n    ref: ref,\n    children: /*#__PURE__*/_jsxs(FlexBox, {\n      alignItems: FlexBoxAlignItems.Center,\n      className: messageClasses,\n      children: [/*#__PURE__*/_jsx(\"div\", {\n        className: classNames.iconContainer,\n        children: /*#__PURE__*/_jsx(Icon, {\n          name: getIconNameForType(type),\n          className: classNames.icon\n        })\n      }), /*#__PURE__*/_jsxs(FlexBox, {\n        direction: FlexBoxDirection.Column,\n        style: {\n          flex: 'auto',\n          whiteSpace: 'nowrap',\n          overflow: 'hidden',\n          textOverflow: 'ellipsis'\n        },\n        children: [titleText && /*#__PURE__*/_jsx(\"span\", {\n          className: classNames.title,\n          ref: titleTextRef,\n          children: titleText\n        }), titleText && subtitleText && /*#__PURE__*/_jsx(Label, {\n          className: classNames.subtitle,\n          children: subtitleText\n        })]\n      }), counter != null && /*#__PURE__*/_jsx(\"span\", {\n        className: classNames.counter,\n        children: counter\n      }), hasDetails && /*#__PURE__*/_jsx(Icon, {\n        className: classNames.navigation,\n        name: iconArrowRight\n      })]\n    })\n  });\n});\nMessageItem.displayName = 'MessageItem';\nexport { MessageItem };"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}