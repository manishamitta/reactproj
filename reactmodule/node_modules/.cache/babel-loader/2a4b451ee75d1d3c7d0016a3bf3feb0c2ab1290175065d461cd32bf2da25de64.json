{"ast":null,"code":"var __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n    r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n    d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar ColorPicker_1;\nimport UI5Element from \"@ui5/webcomponents-base/dist/UI5Element.js\";\nimport customElement from \"@ui5/webcomponents-base/dist/decorators/customElement.js\";\nimport property from \"@ui5/webcomponents-base/dist/decorators/property.js\";\nimport event from \"@ui5/webcomponents-base/dist/decorators/event.js\";\nimport { isEnter } from \"@ui5/webcomponents-base/dist/Keys.js\";\nimport litRender from \"@ui5/webcomponents-base/dist/renderer/LitRenderer.js\";\nimport { getI18nBundle } from \"@ui5/webcomponents-base/dist/i18nBundle.js\";\nimport { getScopedVarName } from \"@ui5/webcomponents-base/dist/CustomElementsScope.js\";\nimport { getRGBColor, HSLToRGB, HEXToRGB, RGBToHSL } from \"@ui5/webcomponents-base/dist/util/ColorConversion.js\";\nimport ColorPickerTemplate from \"./generated/templates/ColorPickerTemplate.lit.js\";\nimport Input from \"./Input.js\";\nimport Slider from \"./Slider.js\";\nimport Label from \"./Label.js\";\nimport { COLORPICKER_ALPHA_SLIDER, COLORPICKER_HUE_SLIDER, COLORPICKER_HEX, COLORPICKER_RED, COLORPICKER_GREEN, COLORPICKER_BLUE, COLORPICKER_ALPHA } from \"./generated/i18n/i18n-defaults.js\";\n// Styles\nimport ColorPickerCss from \"./generated/themes/ColorPicker.css.js\";\nconst PICKER_POINTER_WIDTH = 6.5;\n/**\n * @class\n *\n * ### Overview\n * The `ui5-color-picker` allows users to choose any color and provides different input options for selecting colors.\n *\n * ### Usage\n *\n * #### When to use\n * Use the color picker if:\n *\n * -  users need to select any color freely.\n *\n * #### When not to use\n *\n * -  Users need to select one color from a predefined set of colors. Use the ColorPalette component instead.\n *\n * ### ES6 Module Import\n *\n * `import \"@ui5/webcomponents/dist/ColorPicker.js\";`\n * @constructor\n * @since 1.0.0-rc.12\n * @extends UI5Element\n * @public\n */\nlet ColorPicker = ColorPicker_1 = class ColorPicker extends UI5Element {\n  async formElementAnchor() {\n    return this.getFocusDomRefAsync();\n  }\n  get formFormattedValue() {\n    return this.value;\n  }\n  static async onDefine() {\n    ColorPicker_1.i18nBundle = await getI18nBundle(\"@ui5/webcomponents\");\n  }\n  constructor() {\n    super();\n    /**\n     * Defines the currently selected color of the component.\n     *\n     * **Note**: use HEX, RGB, RGBA, HSV formats or a CSS color name when modifying this property.\n     * @default \"rgba(255,255,255,1)\"\n     * @public\n     */\n    this.value = \"rgba(255,255,255,1)\";\n    /**\n     * Defines the HEX code of the currently selected color\n     *\n     * **Note**: If Alpha(transperancy) is set it is not included in this property. Use `color` property.\n     * @private\n     */\n    this.hex = \"ffffff\";\n    /**\n     * Defines the currenty selected color from the main color section.\n     * @private\n     */\n    this._value = getRGBColor(this.value);\n    /**\n     * @private\n     */\n    this._alpha = 1;\n    /**\n     * @private\n     */\n    this._hue = 0;\n    /**\n     * @private\n     */\n    this._isSelectedColorChanged = false;\n    /**\n     * @private\n     */\n    this._isHueValueChanged = false;\n    /**\n     * @private\n     */\n    this._wrongHEX = false;\n    // Bottom Right corner\n    this._selectedCoordinates = {\n      x: 256 - PICKER_POINTER_WIDTH,\n      y: 256 - PICKER_POINTER_WIDTH\n    };\n    // Default main color is red\n    this._mainValue = {\n      r: 255,\n      g: 0,\n      b: 0\n    };\n    this.selectedHue = 0;\n    this.mouseDown = false;\n    this.mouseIn = false;\n  }\n  onBeforeRendering() {\n    // we have the color & ._mainValue properties here\n    this._value = getRGBColor(this.value);\n    const tempColor = `rgba(${this._value.r},${this._value.g},${this._value.b},1)`;\n    this._setHex();\n    this._setValues();\n    this.style.setProperty(getScopedVarName(\"--ui5_Color_Picker_Progress_Container_Color\"), tempColor);\n  }\n  _handleMouseDown(e) {\n    this.mouseDown = true;\n    this.mouseIn = true;\n    this._changeSelectedColor(e.offsetX, e.offsetY);\n  }\n  _handleMouseUp() {\n    this.mouseDown = false;\n  }\n  _handleMouseOut(e) {\n    if (!this.mouseIn || !this.mouseDown) {\n      return;\n    }\n    const target = e.target;\n    const offsetHeight = target.offsetHeight;\n    const offsetWidth = target.offsetWidth;\n    const isLeft = e.offsetX <= 0;\n    const isUp = e.offsetY <= 0;\n    const isDown = e.offsetY >= target.offsetHeight;\n    const isRight = e.offsetX >= target.offsetWidth;\n    let x, y;\n    if (isLeft) {\n      x = 0;\n    } else if (isRight) {\n      // Note: - e.offsetWidth has been changed to e.target.offsetWidth as offsetWidth does not exist on the event object\n      x = offsetWidth;\n    } else {\n      x = e.offsetX;\n    }\n    if (isUp) {\n      y = 0;\n    } else if (isDown) {\n      // Note: - e.offsetWidth has been changed to e.target.offsetWidth as offsetWidth does not exist on the event object\n      y = offsetHeight;\n    } else {\n      y = e.offsetY;\n    }\n    this._changeSelectedColor(x, y);\n    this.mouseIn = false;\n    this.mouseDown = false;\n  }\n  _handleMouseMove(e) {\n    if (!this.mouseDown || !this.mouseIn) {\n      return;\n    }\n    this._changeSelectedColor(e.offsetX, e.offsetY);\n  }\n  _handleAlphaInput(e) {\n    const aphaInputValue = e.target.value;\n    this._alpha = parseFloat(aphaInputValue);\n    if (Number.isNaN(this._alpha)) {\n      this._alpha = 1;\n    }\n    this._isHueValueChanged = true;\n    this._setColor(this._value);\n  }\n  _handleHueInput(e) {\n    this.selectedHue = e.target.value;\n    this._hue = this.selectedHue;\n    this._setMainColor(this._hue);\n    // Idication that changes to the hue value triggered as a result of user pressing over the hue slider.\n    this._isHueValueChanged = true;\n    const x = this._selectedCoordinates.x + PICKER_POINTER_WIDTH;\n    const y = this._selectedCoordinates.y + PICKER_POINTER_WIDTH;\n    const tempColor = this._calculateColorFromCoordinates(x, y);\n    if (tempColor) {\n      this._setColor(HSLToRGB(tempColor));\n    }\n  }\n  _handleHEXChange(e) {\n    const hexRegex = new RegExp(\"^[<0-9 abcdef]+$\");\n    const input = e.target;\n    let inputValueLowerCase = input.value.toLowerCase();\n    // Shorthand Syntax\n    if (inputValueLowerCase.length === 3) {\n      inputValueLowerCase = `${inputValueLowerCase[0]}${inputValueLowerCase[0]}${inputValueLowerCase[1]}${inputValueLowerCase[1]}${inputValueLowerCase[2]}${inputValueLowerCase[2]}`;\n    }\n    const isNewValueValid = inputValueLowerCase.length === 6 && hexRegex.test(inputValueLowerCase);\n    if (isNewValueValid && input.value !== inputValueLowerCase) {\n      this._wrongHEX = false;\n      input.value = inputValueLowerCase;\n    }\n    if (inputValueLowerCase === this.hex) {\n      return;\n    }\n    this.hex = inputValueLowerCase;\n    if (!isNewValueValid) {\n      this._wrongHEX = true;\n    } else {\n      this._wrongHEX = false;\n      this._setColor(HEXToRGB(this.hex));\n    }\n  }\n  _handleRGBInputsChange(e) {\n    const target = e.target;\n    const targetValue = parseInt(target.value) || 0;\n    let tempColor;\n    switch (target.id) {\n      case \"red\":\n        tempColor = {\n          ...this._value,\n          r: targetValue\n        };\n        break;\n      case \"green\":\n        tempColor = {\n          ...this._value,\n          g: targetValue\n        };\n        break;\n      case \"blue\":\n        tempColor = {\n          ...this._value,\n          b: targetValue\n        };\n        break;\n      default:\n        tempColor = {\n          ...this._value\n        };\n    }\n    this._setColor(tempColor);\n  }\n  _setMainColor(hueValue) {\n    if (hueValue <= 255) {\n      this._mainValue = {\n        r: 255,\n        g: hueValue,\n        b: 0\n      };\n    } else if (hueValue <= 510) {\n      this._mainValue = {\n        r: 255 - (hueValue - 255),\n        g: 255,\n        b: 0\n      };\n    } else if (hueValue <= 765) {\n      this._mainValue = {\n        r: 0,\n        g: 255,\n        b: hueValue - 510\n      };\n    } else if (hueValue <= 1020) {\n      this._mainValue = {\n        r: 0,\n        g: 765 - (hueValue - 255),\n        b: 255\n      };\n    } else if (hueValue <= 1275) {\n      this._mainValue = {\n        r: hueValue - 1020,\n        g: 0,\n        b: 255\n      };\n    } else {\n      this._mainValue = {\n        r: 255,\n        g: 0,\n        b: 1275 - (hueValue - 255)\n      };\n    }\n  }\n  _handleAlphaChange() {\n    this._alpha = this._alpha < 0 ? 0 : this._alpha;\n    this._alpha = this._alpha > 1 ? 1 : this._alpha;\n  }\n  _changeSelectedColor(x, y) {\n    this._selectedCoordinates = {\n      x: x - PICKER_POINTER_WIDTH,\n      y: y - PICKER_POINTER_WIDTH // Center the coordinates, because of the height of the circle\n    };\n    // Idication that changes to the color settings are triggered as a result of user pressing over the main color section.\n    this._isSelectedColorChanged = true;\n    const tempColor = this._calculateColorFromCoordinates(x, y);\n    if (tempColor) {\n      this._setColor(HSLToRGB(tempColor));\n    }\n  }\n  _onkeydown(e) {\n    if (isEnter(e)) {\n      this._handleHEXChange(e);\n    }\n  }\n  _calculateColorFromCoordinates(x, y) {\n    // By using the selected coordinates(x = Lightness, y = Saturation) and hue(selected from the hue slider)\n    // and HSL format, the color will be parsed to RGB\n    // 0 ≤ H < 360\n    // 4.251 because with 4.25 we get out of the colors range.\n    const h = this._hue / 4.251;\n    // 0 ≤ S ≤ 1\n    const s = 1 - +(Math.round(parseFloat(y / 256 + \"e+2\")) + \"e-2\"); // eslint-disable-line\n    // 0 ≤ V ≤ 1\n    const l = +(Math.round(parseFloat(x / 256 + \"e+2\")) + \"e-2\"); // eslint-disable-line\n    if (!s || !l) {\n      // The event is finished out of the main color section\n      return;\n    }\n    return {\n      h,\n      s,\n      l\n    };\n  }\n  _setColor() {\n    let color = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n      r: 0,\n      g: 0,\n      b: 0\n    };\n    this.value = `rgba(${color.r}, ${color.g}, ${color.b}, ${this._alpha})`;\n    this._wrongHEX = !this.isValidRGBColor(color);\n    this.fireEvent(\"change\");\n  }\n  isValidRGBColor(color) {\n    return color.r >= 0 && color.r <= 255 && color.g >= 0 && color.g <= 255 && color.b >= 0 && color.b <= 255;\n  }\n  _setHex() {\n    let red = this._value.r.toString(16),\n      green = this._value.g.toString(16),\n      blue = this._value.b.toString(16);\n    if (red.length === 1) {\n      red = `0${red}`;\n    }\n    if (green.length === 1) {\n      green = `0${green}`;\n    }\n    if (blue.length === 1) {\n      blue = `0${blue}`;\n    }\n    this.hex = red + green + blue;\n  }\n  _setValues() {\n    const hslColours = RGBToHSL(this._value);\n    this._selectedCoordinates = {\n      x: Math.round(hslColours.l * 100) * 2.56 - PICKER_POINTER_WIDTH,\n      y: 256 - Math.round(hslColours.s * 100) * 2.56 - PICKER_POINTER_WIDTH // Center the coordinates, because of the height of the circle\n    };\n    if (this._isSelectedColorChanged) {\n      // We shouldn't update the hue value when user presses over the main color section.\n      this._isSelectedColorChanged = false;\n    } else if (this._isHueValueChanged) {\n      // We shouldn't recalculate the hue value when user changes the hue slider.\n      this._isHueValueChanged = false;\n      this._hue = this.selectedHue ? this.selectedHue : this._hue;\n    } else {\n      this._hue = Math.round(hslColours.h * 4.25);\n    }\n    this._setMainColor(this._hue);\n  }\n  get hueSliderLabel() {\n    return ColorPicker_1.i18nBundle.getText(COLORPICKER_HUE_SLIDER);\n  }\n  get alphaSliderLabel() {\n    return ColorPicker_1.i18nBundle.getText(COLORPICKER_ALPHA_SLIDER);\n  }\n  get hexInputLabel() {\n    return ColorPicker_1.i18nBundle.getText(COLORPICKER_HEX);\n  }\n  get redInputLabel() {\n    return ColorPicker_1.i18nBundle.getText(COLORPICKER_RED);\n  }\n  get greenInputLabel() {\n    return ColorPicker_1.i18nBundle.getText(COLORPICKER_GREEN);\n  }\n  get blueInputLabel() {\n    return ColorPicker_1.i18nBundle.getText(COLORPICKER_BLUE);\n  }\n  get alphaInputLabel() {\n    return ColorPicker_1.i18nBundle.getText(COLORPICKER_ALPHA);\n  }\n  get inputsDisabled() {\n    return this._wrongHEX ? true : undefined;\n  }\n  get hexInputErrorState() {\n    return this._wrongHEX ? \"Error\" : undefined;\n  }\n  get styles() {\n    return {\n      mainColor: {\n        \"background-color\": `rgb(${this._mainValue.r}, ${this._mainValue.g}, ${this._mainValue.b})`\n      },\n      circle: {\n        left: `${this._selectedCoordinates.x}px`,\n        top: `${this._selectedCoordinates.y}px`\n      },\n      colorSpan: {\n        \"background-color\": `rgba(${this._value.r}, ${this._value.g}, ${this._value.b}, ${this._alpha})`\n      }\n    };\n  }\n};\n__decorate([property()], ColorPicker.prototype, \"value\", void 0);\n__decorate([property()], ColorPicker.prototype, \"name\", void 0);\n__decorate([property({\n  noAttribute: true\n})], ColorPicker.prototype, \"hex\", void 0);\n__decorate([property({\n  type: Object\n})], ColorPicker.prototype, \"_mainValue\", void 0);\n__decorate([property({\n  type: Object\n})], ColorPicker.prototype, \"_value\", void 0);\n__decorate([property({\n  type: Object\n})], ColorPicker.prototype, \"_selectedCoordinates\", void 0);\n__decorate([property({\n  type: Number\n})], ColorPicker.prototype, \"_alpha\", void 0);\n__decorate([property({\n  type: Number\n})], ColorPicker.prototype, \"_hue\", void 0);\n__decorate([property({\n  type: Boolean\n})], ColorPicker.prototype, \"_isSelectedColorChanged\", void 0);\n__decorate([property({\n  type: Boolean\n})], ColorPicker.prototype, \"_isHueValueChanged\", void 0);\n__decorate([property({\n  type: Boolean\n})], ColorPicker.prototype, \"_wrongHEX\", void 0);\nColorPicker = ColorPicker_1 = __decorate([customElement({\n  tag: \"ui5-color-picker\",\n  renderer: litRender,\n  formAssociated: true,\n  styles: ColorPickerCss,\n  template: ColorPickerTemplate,\n  dependencies: [Input, Slider, Label]\n})\n/**\n * Fired when the the selected color is changed\n * @public\n */, event(\"change\")], ColorPicker);\nColorPicker.define();\nexport default ColorPicker;","map":{"version":3,"names":["UI5Element","customElement","property","event","isEnter","litRender","getI18nBundle","getScopedVarName","getRGBColor","HSLToRGB","HEXToRGB","RGBToHSL","ColorPickerTemplate","Input","Slider","Label","COLORPICKER_ALPHA_SLIDER","COLORPICKER_HUE_SLIDER","COLORPICKER_HEX","COLORPICKER_RED","COLORPICKER_GREEN","COLORPICKER_BLUE","COLORPICKER_ALPHA","ColorPickerCss","PICKER_POINTER_WIDTH","ColorPicker","ColorPicker_1","formElementAnchor","getFocusDomRefAsync","formFormattedValue","value","onDefine","i18nBundle","constructor","hex","_value","_alpha","_hue","_isSelectedColorChanged","_isHueValueChanged","_wrongHEX","_selectedCoordinates","x","y","_mainValue","r","g","b","selectedHue","mouseDown","mouseIn","onBeforeRendering","tempColor","_setHex","_setValues","style","setProperty","_handleMouseDown","e","_changeSelectedColor","offsetX","offsetY","_handleMouseUp","_handleMouseOut","target","offsetHeight","offsetWidth","isLeft","isUp","isDown","isRight","_handleMouseMove","_handleAlphaInput","aphaInputValue","parseFloat","Number","isNaN","_setColor","_handleHueInput","_setMainColor","_calculateColorFromCoordinates","_handleHEXChange","hexRegex","RegExp","input","inputValueLowerCase","toLowerCase","length","isNewValueValid","test","_handleRGBInputsChange","targetValue","parseInt","id","hueValue","_handleAlphaChange","_onkeydown","h","s","Math","round","l","color","arguments","undefined","isValidRGBColor","fireEvent","red","toString","green","blue","hslColours","hueSliderLabel","getText","alphaSliderLabel","hexInputLabel","redInputLabel","greenInputLabel","blueInputLabel","alphaInputLabel","inputsDisabled","hexInputErrorState","styles","mainColor","circle","left","top","colorSpan","__decorate","noAttribute","type","Object","Boolean","tag","renderer","formAssociated","template","dependencies","define"],"sources":["/home/user/projects/reactproj/node_modules/@ui5/webcomponents/src/ColorPicker.ts"],"sourcesContent":["import UI5Element from \"@ui5/webcomponents-base/dist/UI5Element.js\";\nimport customElement from \"@ui5/webcomponents-base/dist/decorators/customElement.js\";\nimport property from \"@ui5/webcomponents-base/dist/decorators/property.js\";\nimport event from \"@ui5/webcomponents-base/dist/decorators/event.js\";\nimport { isEnter } from \"@ui5/webcomponents-base/dist/Keys.js\";\nimport litRender from \"@ui5/webcomponents-base/dist/renderer/LitRenderer.js\";\nimport { getI18nBundle } from \"@ui5/webcomponents-base/dist/i18nBundle.js\";\nimport type I18nBundle from \"@ui5/webcomponents-base/dist/i18nBundle.js\";\nimport { getScopedVarName } from \"@ui5/webcomponents-base/dist/CustomElementsScope.js\";\nimport type { IFormInputElement } from \"@ui5/webcomponents-base/dist/features/InputElementsFormSupport.js\";\nimport {\n\tgetRGBColor,\n\tHSLToRGB,\n\tHEXToRGB,\n\tRGBToHSL,\n} from \"@ui5/webcomponents-base/dist/util/ColorConversion.js\";\nimport type {\n\tColorHSL,\n\tColorRGB,\n} from \"@ui5/webcomponents-base/dist/util/ColorConversion.js\";\nimport ColorPickerTemplate from \"./generated/templates/ColorPickerTemplate.lit.js\";\nimport Input from \"./Input.js\";\nimport Slider from \"./Slider.js\";\nimport Label from \"./Label.js\";\n\nimport {\n\tCOLORPICKER_ALPHA_SLIDER,\n\tCOLORPICKER_HUE_SLIDER,\n\tCOLORPICKER_HEX,\n\tCOLORPICKER_RED,\n\tCOLORPICKER_GREEN,\n\tCOLORPICKER_BLUE,\n\tCOLORPICKER_ALPHA,\n} from \"./generated/i18n/i18n-defaults.js\";\n\n// Styles\nimport ColorPickerCss from \"./generated/themes/ColorPicker.css.js\";\n\nconst PICKER_POINTER_WIDTH = 6.5;\n\ntype ColorCoordinates = {\n\tx: number,\n\ty: number,\n}\n\n/**\n * @class\n *\n * ### Overview\n * The `ui5-color-picker` allows users to choose any color and provides different input options for selecting colors.\n *\n * ### Usage\n *\n * #### When to use\n * Use the color picker if:\n *\n * -  users need to select any color freely.\n *\n * #### When not to use\n *\n * -  Users need to select one color from a predefined set of colors. Use the ColorPalette component instead.\n *\n * ### ES6 Module Import\n *\n * `import \"@ui5/webcomponents/dist/ColorPicker.js\";`\n * @constructor\n * @since 1.0.0-rc.12\n * @extends UI5Element\n * @public\n */\n\n@customElement({\n\ttag: \"ui5-color-picker\",\n\trenderer: litRender,\n\tformAssociated: true,\n\tstyles: ColorPickerCss,\n\ttemplate: ColorPickerTemplate,\n\tdependencies: [\n\t\tInput,\n\t\tSlider,\n\t\tLabel,\n\t],\n})\n/**\n * Fired when the the selected color is changed\n * @public\n */\n@event(\"change\")\nclass ColorPicker extends UI5Element implements IFormInputElement {\n\t/**\n\t * Defines the currently selected color of the component.\n\t *\n\t * **Note**: use HEX, RGB, RGBA, HSV formats or a CSS color name when modifying this property.\n\t * @default \"rgba(255,255,255,1)\"\n\t * @public\n\t */\n\t@property()\n\tvalue = \"rgba(255,255,255,1)\";\n\n\t/**\n\t * Determines the name by which the component will be identified upon submission in an HTML form.\n\t *\n\t * **Note:** This property is only applicable within the context of an HTML Form element.\n\t * @default undefined\n\t * @public\n\t * @since 2.0.0\n\t */\n\t@property()\n\tname?: string;\n\n\t/**\n\t * Defines the HEX code of the currently selected color\n\t *\n\t * **Note**: If Alpha(transperancy) is set it is not included in this property. Use `color` property.\n\t * @private\n\t */\n\t@property({ noAttribute: true })\n\thex = \"ffffff\";\n\n\t/**\n\t * Defines the current main color which is selected via the hue slider and is shown in the main color square.\n\t * @private\n\t */\n\t@property({ type: Object })\n\t_mainValue: ColorRGB;\n\n\t/**\n\t * Defines the currenty selected color from the main color section.\n\t * @private\n\t */\n\t@property({ type: Object })\n\t_value: ColorRGB = getRGBColor(this.value);;\n\n\t/**\n\t * @private\n\t */\n\t@property({ type: Object })\n\t_selectedCoordinates: ColorCoordinates;\n\n\t/**\n\t * @private\n\t */\n\t@property({ type: Number })\n\t_alpha = 1;\n\n\t/**\n\t * @private\n\t */\n\t@property({ type: Number })\n\t_hue = 0;\n\n\t/**\n\t * @private\n\t */\n\t@property({ type: Boolean })\n\t_isSelectedColorChanged = false;\n\n\t/**\n\t * @private\n\t */\n\t@property({ type: Boolean })\n\t_isHueValueChanged = false;\n\n\t/**\n\t * @private\n\t */\n\t@property({ type: Boolean })\n\t_wrongHEX = false;\n\n\tselectedHue: number;\n\n\tmouseDown: boolean;\n\n\tmouseIn: boolean;\n\n\tstatic i18nBundle: I18nBundle;\n\n\tasync formElementAnchor() {\n\t\treturn this.getFocusDomRefAsync();\n\t}\n\n\tget formFormattedValue() {\n\t\treturn this.value;\n\t}\n\n\tstatic async onDefine() {\n\t\tColorPicker.i18nBundle = await getI18nBundle(\"@ui5/webcomponents\");\n\t}\n\n\tconstructor() {\n\t\tsuper();\n\n\t\t// Bottom Right corner\n\t\tthis._selectedCoordinates = {\n\t\t\tx: 256 - PICKER_POINTER_WIDTH,\n\t\t\ty: 256 - PICKER_POINTER_WIDTH,\n\t\t};\n\n\t\t// Default main color is red\n\t\tthis._mainValue = {\n\t\t\tr: 255,\n\t\t\tg: 0,\n\t\t\tb: 0,\n\t\t};\n\n\t\tthis.selectedHue = 0;\n\n\t\tthis.mouseDown = false;\n\t\tthis.mouseIn = false;\n\t}\n\n\tonBeforeRendering() {\n\t\t// we have the color & ._mainValue properties here\n\t\tthis._value = getRGBColor(this.value);\n\t\tconst tempColor = `rgba(${this._value.r},${this._value.g},${this._value.b},1)`;\n\t\tthis._setHex();\n\t\tthis._setValues();\n\t\tthis.style.setProperty(getScopedVarName(\"--ui5_Color_Picker_Progress_Container_Color\"), tempColor);\n\t}\n\n\t_handleMouseDown(e: MouseEvent) {\n\t\tthis.mouseDown = true;\n\t\tthis.mouseIn = true;\n\t\tthis._changeSelectedColor(e.offsetX, e.offsetY);\n\t}\n\n\t_handleMouseUp() {\n\t\tthis.mouseDown = false;\n\t}\n\n\t_handleMouseOut(e: MouseEvent) {\n\t\tif (!this.mouseIn || !this.mouseDown) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst target = e.target as HTMLElement;\n\t\tconst offsetHeight: number = target.offsetHeight;\n\t\tconst offsetWidth: number = target.offsetWidth;\n\t\tconst isLeft: boolean = e.offsetX <= 0;\n\t\tconst isUp: boolean = e.offsetY <= 0;\n\t\tconst isDown: boolean = e.offsetY >= target.offsetHeight;\n\t\tconst isRight: boolean = e.offsetX >= target.offsetWidth;\n\n\t\tlet x: number,\n\t\t\ty: number;\n\n\t\tif (isLeft) {\n\t\t\tx = 0;\n\t\t} else if (isRight) {\n\t\t\t// Note: - e.offsetWidth has been changed to e.target.offsetWidth as offsetWidth does not exist on the event object\n\t\t\tx = offsetWidth;\n\t\t} else {\n\t\t\tx = e.offsetX;\n\t\t}\n\n\t\tif (isUp) {\n\t\t\ty = 0;\n\t\t} else if (isDown) {\n\t\t\t// Note: - e.offsetWidth has been changed to e.target.offsetWidth as offsetWidth does not exist on the event object\n\t\t\ty = offsetHeight;\n\t\t} else {\n\t\t\ty = e.offsetY;\n\t\t}\n\n\t\tthis._changeSelectedColor(x, y);\n\t\tthis.mouseIn = false;\n\t\tthis.mouseDown = false;\n\t}\n\n\t_handleMouseMove(e: MouseEvent) {\n\t\tif (!this.mouseDown || !this.mouseIn) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._changeSelectedColor(e.offsetX, e.offsetY);\n\t}\n\n\t_handleAlphaInput(e: CustomEvent) {\n\t\tconst aphaInputValue: string = (e.target as Input).value;\n\t\tthis._alpha = parseFloat(aphaInputValue);\n\t\tif (Number.isNaN(this._alpha)) {\n\t\t\tthis._alpha = 1;\n\t\t}\n\t\tthis._isHueValueChanged = true;\n\t\tthis._setColor(this._value);\n\t}\n\n\t_handleHueInput(e: CustomEvent) {\n\t\tthis.selectedHue = (e.target as Slider).value;\n\t\tthis._hue = this.selectedHue;\n\t\tthis._setMainColor(this._hue);\n\t\t// Idication that changes to the hue value triggered as a result of user pressing over the hue slider.\n\t\tthis._isHueValueChanged = true;\n\n\t\tconst x: number = this._selectedCoordinates.x + PICKER_POINTER_WIDTH;\n\t\tconst y: number = this._selectedCoordinates.y + PICKER_POINTER_WIDTH;\n\t\tconst tempColor = this._calculateColorFromCoordinates(x, y);\n\n\t\tif (tempColor) {\n\t\t\tthis._setColor(HSLToRGB(tempColor));\n\t\t}\n\t}\n\n\t_handleHEXChange(e: CustomEvent | KeyboardEvent) {\n\t\tconst hexRegex = new RegExp(\"^[<0-9 abcdef]+$\");\n\t\tconst input: Input = (e.target as Input);\n\t\tlet inputValueLowerCase = input.value.toLowerCase();\n\n\t\t// Shorthand Syntax\n\t\tif (inputValueLowerCase.length === 3) {\n\t\t\tinputValueLowerCase = `${inputValueLowerCase[0]}${inputValueLowerCase[0]}${inputValueLowerCase[1]}${inputValueLowerCase[1]}${inputValueLowerCase[2]}${inputValueLowerCase[2]}`;\n\t\t}\n\n\t\tconst isNewValueValid = inputValueLowerCase.length === 6 && hexRegex.test(inputValueLowerCase);\n\n\t\tif (isNewValueValid && input.value !== inputValueLowerCase) {\n\t\t\tthis._wrongHEX = false;\n\t\t\tinput.value = inputValueLowerCase;\n\t\t}\n\n\t\tif (inputValueLowerCase === this.hex) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.hex = inputValueLowerCase;\n\n\t\tif (!isNewValueValid) {\n\t\t\tthis._wrongHEX = true;\n\t\t} else {\n\t\t\tthis._wrongHEX = false;\n\t\t\tthis._setColor(HEXToRGB(this.hex));\n\t\t}\n\t}\n\n\t_handleRGBInputsChange(e: CustomEvent) {\n\t\tconst target = e.target as Input;\n\t\tconst targetValue = parseInt(target.value) || 0;\n\t\tlet tempColor;\n\t\tswitch (target.id) {\n\t\tcase \"red\":\n\t\t\ttempColor = { ...this._value, r: targetValue };\n\t\t\tbreak;\n\n\t\tcase \"green\":\n\t\t\ttempColor = { ...this._value, g: targetValue };\n\t\t\tbreak;\n\n\t\tcase \"blue\":\n\t\t\ttempColor = { ...this._value, b: targetValue };\n\t\t\tbreak;\n\t\tdefault:\n\t\t\ttempColor = { ...this._value };\n\t\t}\n\n\t\tthis._setColor(tempColor);\n\t}\n\n\t_setMainColor(hueValue: number) {\n\t\tif (hueValue <= 255) {\n\t\t\tthis._mainValue = {\n\t\t\t\tr: 255,\n\t\t\t\tg: hueValue,\n\t\t\t\tb: 0,\n\t\t\t};\n\t\t} else if (hueValue <= 510) {\n\t\t\tthis._mainValue = {\n\t\t\t\tr: 255 - (hueValue - 255),\n\t\t\t\tg: 255,\n\t\t\t\tb: 0,\n\t\t\t};\n\t\t} else if (hueValue <= 765) {\n\t\t\tthis._mainValue = {\n\t\t\t\tr: 0,\n\t\t\t\tg: 255,\n\t\t\t\tb: hueValue - 510,\n\t\t\t};\n\t\t} else if (hueValue <= 1020) {\n\t\t\tthis._mainValue = {\n\t\t\t\tr: 0,\n\t\t\t\tg: 765 - (hueValue - 255),\n\t\t\t\tb: 255,\n\t\t\t};\n\t\t} else if (hueValue <= 1275) {\n\t\t\tthis._mainValue = {\n\t\t\t\tr: hueValue - 1020,\n\t\t\t\tg: 0,\n\t\t\t\tb: 255,\n\t\t\t};\n\t\t} else {\n\t\t\tthis._mainValue = {\n\t\t\t\tr: 255,\n\t\t\t\tg: 0,\n\t\t\t\tb: 1275 - (hueValue - 255),\n\t\t\t};\n\t\t}\n\t}\n\n\t_handleAlphaChange() {\n\t\tthis._alpha = this._alpha < 0 ? 0 : this._alpha;\n\t\tthis._alpha = this._alpha > 1 ? 1 : this._alpha;\n\t}\n\n\t_changeSelectedColor(x: number, y: number) {\n\t\tthis._selectedCoordinates = {\n\t\t\tx: x - PICKER_POINTER_WIDTH, // Center the coordinates, because of the width of the circle\n\t\t\ty: y - PICKER_POINTER_WIDTH, // Center the coordinates, because of the height of the circle\n\t\t};\n\n\t\t// Idication that changes to the color settings are triggered as a result of user pressing over the main color section.\n\t\tthis._isSelectedColorChanged = true;\n\n\t\tconst tempColor = this._calculateColorFromCoordinates(x, y);\n\t\tif (tempColor) {\n\t\t\tthis._setColor(HSLToRGB(tempColor));\n\t\t}\n\t}\n\n\t_onkeydown(e: KeyboardEvent) {\n\t\tif (isEnter(e)) {\n\t\t\tthis._handleHEXChange(e);\n\t\t}\n\t}\n\n\t_calculateColorFromCoordinates(x: number, y: number) {\n\t\t// By using the selected coordinates(x = Lightness, y = Saturation) and hue(selected from the hue slider)\n\t\t// and HSL format, the color will be parsed to RGB\n\t\t// 0 ≤ H < 360\n\t\t// 4.251 because with 4.25 we get out of the colors range.\n\t\tconst h = this._hue / 4.251;\n\n\t\t// 0 ≤ S ≤ 1\n\t\tconst s = 1 - +(Math.round(parseFloat((y / 256) + \"e+2\")) + \"e-2\"); // eslint-disable-line\n\n\t\t// 0 ≤ V ≤ 1\n\t\tconst l = +(Math.round(parseFloat((x / 256) + \"e+2\")) + \"e-2\"); // eslint-disable-line\n\n\t\tif (!s || !l) {\n\t\t\t// The event is finished out of the main color section\n\t\t\treturn;\n\t\t}\n\n\t\treturn {\n\t\t\th,\n\t\t\ts,\n\t\t\tl,\n\t\t};\n\t}\n\n\t_setColor(color: ColorRGB = { r: 0, g: 0, b: 0 }) {\n\t\tthis.value = `rgba(${color.r}, ${color.g}, ${color.b}, ${this._alpha})`;\n\t\tthis._wrongHEX = !this.isValidRGBColor(color);\n\t\tthis.fireEvent(\"change\");\n\t}\n\n\tisValidRGBColor(color: ColorRGB) {\n\t\treturn color.r >= 0 && color.r <= 255 && color.g >= 0 && color.g <= 255 && color.b >= 0 && color.b <= 255;\n\t}\n\n\t_setHex() {\n\t\tlet red = this._value.r.toString(16),\n\t\t\tgreen = this._value.g.toString(16),\n\t\t\tblue = this._value.b.toString(16);\n\n\t\tif (red.length === 1) {\n\t\t\tred = `0${red}`;\n\t\t}\n\t\tif (green.length === 1) {\n\t\t\tgreen = `0${green}`;\n\t\t}\n\t\tif (blue.length === 1) {\n\t\t\tblue = `0${blue}`;\n\t\t}\n\n\t\tthis.hex = red + green + blue;\n\t}\n\n\t_setValues() {\n\t\tconst hslColours: ColorHSL = RGBToHSL(this._value);\n\t\tthis._selectedCoordinates = {\n\t\t\tx: ((Math.round(hslColours.l * 100) * 2.56)) - PICKER_POINTER_WIDTH, // Center the coordinates, because of the width of the circle\n\t\t\ty: (256 - (Math.round(hslColours.s * 100) * 2.56)) - PICKER_POINTER_WIDTH, // Center the coordinates, because of the height of the circle\n\t\t};\n\n\t\tif (this._isSelectedColorChanged) { // We shouldn't update the hue value when user presses over the main color section.\n\t\t\tthis._isSelectedColorChanged = false;\n\t\t} else if (this._isHueValueChanged) { // We shouldn't recalculate the hue value when user changes the hue slider.\n\t\t\tthis._isHueValueChanged = false;\n\t\t\tthis._hue = this.selectedHue ? this.selectedHue : this._hue;\n\t\t} else {\n\t\t\tthis._hue = Math.round(hslColours.h * 4.25);\n\t\t}\n\n\t\tthis._setMainColor(this._hue);\n\t}\n\n\tget hueSliderLabel() {\n\t\treturn ColorPicker.i18nBundle.getText(COLORPICKER_HUE_SLIDER);\n\t}\n\n\tget alphaSliderLabel() {\n\t\treturn ColorPicker.i18nBundle.getText(COLORPICKER_ALPHA_SLIDER);\n\t}\n\n\tget hexInputLabel() {\n\t\treturn ColorPicker.i18nBundle.getText(COLORPICKER_HEX);\n\t}\n\n\tget redInputLabel() {\n\t\treturn ColorPicker.i18nBundle.getText(COLORPICKER_RED);\n\t}\n\n\tget greenInputLabel() {\n\t\treturn ColorPicker.i18nBundle.getText(COLORPICKER_GREEN);\n\t}\n\n\tget blueInputLabel() {\n\t\treturn ColorPicker.i18nBundle.getText(COLORPICKER_BLUE);\n\t}\n\n\tget alphaInputLabel() {\n\t\treturn ColorPicker.i18nBundle.getText(COLORPICKER_ALPHA);\n\t}\n\n\tget inputsDisabled() {\n\t\treturn this._wrongHEX ? true : undefined;\n\t}\n\n\tget hexInputErrorState() {\n\t\treturn this._wrongHEX ? \"Error\" : undefined;\n\t}\n\n\tget styles() {\n\t\treturn {\n\t\t\tmainColor: {\n\t\t\t\t\"background-color\": `rgb(${this._mainValue.r}, ${this._mainValue.g}, ${this._mainValue.b})`,\n\t\t\t},\n\t\t\tcircle: {\n\t\t\t\tleft: `${this._selectedCoordinates.x}px`,\n\t\t\t\ttop: `${this._selectedCoordinates.y}px`,\n\t\t\t},\n\t\t\tcolorSpan: {\n\t\t\t\t\"background-color\": `rgba(${this._value.r}, ${this._value.g}, ${this._value.b}, ${this._alpha})`,\n\t\t\t},\n\t\t};\n\t}\n}\n\nColorPicker.define();\n\nexport default ColorPicker;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}