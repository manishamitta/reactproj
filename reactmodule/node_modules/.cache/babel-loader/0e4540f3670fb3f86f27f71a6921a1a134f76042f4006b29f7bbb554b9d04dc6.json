{"ast":null,"code":"\"use strict\";\n\nimport m, { duration as u } from \"./animate.js\";\nconst b = t => {\n  let o, a, d, r, s, p, g, y, n, l, h, T;\n  const B = m({\n    beforeStart: () => {\n      t.style.display = \"block\", o = getComputedStyle(t), a = parseFloat(o.paddingTop), d = parseFloat(o.paddingBottom), r = parseFloat(o.marginTop), s = parseFloat(o.marginBottom), p = parseFloat(o.height), g = t.style.overflow, y = t.style.paddingTop, n = t.style.paddingBottom, l = t.style.marginTop, h = t.style.marginBottom, T = t.style.height, t.style.overflow = \"hidden\", t.style.paddingTop = \"0\", t.style.paddingBottom = \"0\", t.style.marginTop = \"0\", t.style.marginBottom = \"0\", t.style.height = \"0\";\n    },\n    duration: u,\n    element: t,\n    advance: i => {\n      t.style.display = \"block\", t.style.paddingTop = `${a * i}px`, t.style.paddingBottom = `${d * i}px`, t.style.marginTop = `${r * i}px`, t.style.marginBottom = `${s * i}px`, t.style.height = `${p * i}px`;\n    }\n  });\n  return B.promise().then(() => {\n    t.style.overflow = g, t.style.paddingTop = y, t.style.paddingBottom = n, t.style.marginTop = l, t.style.marginBottom = h, t.style.height = T;\n  }), B;\n};\nexport default b;","map":{"version":3,"names":["m","duration","u","b","t","o","a","d","r","s","p","g","y","n","l","h","T","B","beforeStart","style","display","getComputedStyle","parseFloat","paddingTop","paddingBottom","marginTop","marginBottom","height","overflow","element","advance","i","promise","then"],"sources":["/home/user/projects/reactproj/node_modules/@ui5/webcomponents-base/src/animations/slideDown.ts"],"sourcesContent":["import animate, { duration } from \"./animate.js\";\n\nconst slideDown = (element: HTMLElement) => {\n\tlet computedStyles: CSSStyleDeclaration,\n\t\tpaddingTop: number,\n\t\tpaddingBottom: number,\n\t\tmarginTop: number,\n\t\tmarginBottom: number,\n\t\theight: number;\n\tlet storedOverflow: string,\n\t\tstoredPaddingTop: string,\n\t\tstoredPaddingBottom: string,\n\t\tstoredMarginTop: string,\n\t\tstoredMarginBottom: string,\n\t\tstoredHeight: string;\n\n\tconst animation = animate({\n\t\tbeforeStart: () => {\n\t\t\t// Show the element to measure its properties\n\t\t\telement.style.display = \"block\";\n\n\t\t\t// Get Computed styles\n\t\t\tcomputedStyles = getComputedStyle(element);\n\t\t\tpaddingTop = parseFloat(computedStyles.paddingTop);\n\t\t\tpaddingBottom = parseFloat(computedStyles.paddingBottom);\n\t\t\tmarginTop = parseFloat(computedStyles.marginTop);\n\t\t\tmarginBottom = parseFloat(computedStyles.marginBottom);\n\t\t\theight = parseFloat(computedStyles.height);\n\n\t\t\t// Store inline styles\n\t\t\tstoredOverflow = element.style.overflow;\n\t\t\tstoredPaddingTop = element.style.paddingTop;\n\t\t\tstoredPaddingBottom = element.style.paddingBottom;\n\t\t\tstoredMarginTop = element.style.marginTop;\n\t\t\tstoredMarginBottom = element.style.marginBottom;\n\t\t\tstoredHeight = element.style.height;\n\n\t\t\telement.style.overflow = \"hidden\";\n\t\t\telement.style.paddingTop = \"0\";\n\t\t\telement.style.paddingBottom = \"0\";\n\t\t\telement.style.marginTop = \"0\";\n\t\t\telement.style.marginBottom = \"0\";\n\t\t\telement.style.height = \"0\";\n\t\t},\n\t\tduration,\n\t\telement,\n\t\tadvance: progress => {\n\t\t\t// WORKAROUND\n\t\t\telement.style.display = \"block\";\n\t\t\t// END OF WORKAROUND\n\n\t\t\telement.style.paddingTop = `${(paddingTop * progress)}px`;\n\t\t\telement.style.paddingBottom = `${(paddingBottom * progress)}px`;\n\t\t\telement.style.marginTop = `${(marginTop * progress)}px`;\n\t\t\telement.style.marginBottom = `${(marginBottom * progress)}px`;\n\t\t\telement.style.height = `${(height * progress)}px`;\n\t\t},\n\t});\n\n\tanimation.promise().then(() => {\n\t\telement.style.overflow = storedOverflow;\n\t\telement.style.paddingTop = storedPaddingTop;\n\t\telement.style.paddingBottom = storedPaddingBottom;\n\t\telement.style.marginTop = storedMarginTop;\n\t\telement.style.marginBottom = storedMarginBottom;\n\t\telement.style.height = storedHeight;\n\t});\n\n\treturn animation;\n};\n\nexport default slideDown;\n"],"mappings":";;AAAA,OAAOA,CAAA,IAAWC,QAAA,IAAAC,CAAA,QAAgB;AAElC,MAAMC,CAAA,GAAaC,CAAA,IAAyB;EAC3C,IAAIC,CAAA,EACHC,CAAA,EACAC,CAAA,EACAC,CAAA,EACAC,CAAA,EACAC,CAAA,EACGC,CAAA,EACHC,CAAA,EACAC,CAAA,EACAC,CAAA,EACAC,CAAA,EACAC,CAAA;EAED,MAAMC,CAAA,GAAYjB,CAAA,CAAQ;IACzBkB,WAAA,EAAaA,CAAA,KAAM;MAElBd,CAAA,CAAQe,KAAA,CAAMC,OAAA,GAAU,SAGxBf,CAAA,GAAiBgB,gBAAA,CAAiBjB,CAAO,GACzCE,CAAA,GAAagB,UAAA,CAAWjB,CAAA,CAAekB,UAAU,GACjDhB,CAAA,GAAgBe,UAAA,CAAWjB,CAAA,CAAemB,aAAa,GACvDhB,CAAA,GAAYc,UAAA,CAAWjB,CAAA,CAAeoB,SAAS,GAC/ChB,CAAA,GAAea,UAAA,CAAWjB,CAAA,CAAeqB,YAAY,GACrDhB,CAAA,GAASY,UAAA,CAAWjB,CAAA,CAAesB,MAAM,GAGzChB,CAAA,GAAiBP,CAAA,CAAQe,KAAA,CAAMS,QAAA,EAC/BhB,CAAA,GAAmBR,CAAA,CAAQe,KAAA,CAAMI,UAAA,EACjCV,CAAA,GAAsBT,CAAA,CAAQe,KAAA,CAAMK,aAAA,EACpCV,CAAA,GAAkBV,CAAA,CAAQe,KAAA,CAAMM,SAAA,EAChCV,CAAA,GAAqBX,CAAA,CAAQe,KAAA,CAAMO,YAAA,EACnCV,CAAA,GAAeZ,CAAA,CAAQe,KAAA,CAAMQ,MAAA,EAE7BvB,CAAA,CAAQe,KAAA,CAAMS,QAAA,GAAW,UACzBxB,CAAA,CAAQe,KAAA,CAAMI,UAAA,GAAa,KAC3BnB,CAAA,CAAQe,KAAA,CAAMK,aAAA,GAAgB,KAC9BpB,CAAA,CAAQe,KAAA,CAAMM,SAAA,GAAY,KAC1BrB,CAAA,CAAQe,KAAA,CAAMO,YAAA,GAAe,KAC7BtB,CAAA,CAAQe,KAAA,CAAMQ,MAAA,GAAS,GACxB;IAAA;IACA1B,QAAA,EAAAC,CAAA;IACA2B,OAAA,EAAAzB,CAAA;IACA0B,OAAA,EAASC,CAAA,IAAY;MAEpB3B,CAAA,CAAQe,KAAA,CAAMC,OAAA,GAAU,SAGxBhB,CAAA,CAAQe,KAAA,CAAMI,UAAA,GAAa,GAAIjB,CAAA,GAAayB,CAAS,MACrD3B,CAAA,CAAQe,KAAA,CAAMK,aAAA,GAAgB,GAAIjB,CAAA,GAAgBwB,CAAS,MAC3D3B,CAAA,CAAQe,KAAA,CAAMM,SAAA,GAAY,GAAIjB,CAAA,GAAYuB,CAAS,MACnD3B,CAAA,CAAQe,KAAA,CAAMO,YAAA,GAAe,GAAIjB,CAAA,GAAesB,CAAS,MACzD3B,CAAA,CAAQe,KAAA,CAAMQ,MAAA,GAAS,GAAIjB,CAAA,GAASqB,CAAS,IAC9C;IAAA;EACD,CAAC;EAED,OAAAd,CAAA,CAAUe,OAAA,CAAQ,EAAEC,IAAA,CAAK,MAAM;IAC9B7B,CAAA,CAAQe,KAAA,CAAMS,QAAA,GAAWjB,CAAA,EACzBP,CAAA,CAAQe,KAAA,CAAMI,UAAA,GAAaX,CAAA,EAC3BR,CAAA,CAAQe,KAAA,CAAMK,aAAA,GAAgBX,CAAA,EAC9BT,CAAA,CAAQe,KAAA,CAAMM,SAAA,GAAYX,CAAA,EAC1BV,CAAA,CAAQe,KAAA,CAAMO,YAAA,GAAeX,CAAA,EAC7BX,CAAA,CAAQe,KAAA,CAAMQ,MAAA,GAASX,CACxB;EAAA,CAAC,GAEMC,CACR;AAAA;AAEA,eAAed,CAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}