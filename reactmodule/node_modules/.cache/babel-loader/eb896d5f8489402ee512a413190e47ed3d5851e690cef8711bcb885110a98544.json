{"ast":null,"code":"import { enrichEventWithDetails } from '@ui5/webcomponents-react-base';\nconst getColumnId = column => {\n  return typeof column.accessor === 'string' ? column.accessor : column.id;\n};\nfunction getHeaderProps(props, _ref) {\n  let {\n    instance: {\n      dispatch,\n      state,\n      columns,\n      setColumnOrder,\n      webComponentsReactProperties\n    }\n  } = _ref;\n  const {\n    columnOrder,\n    columnResizing,\n    isRtl,\n    dndColumn\n  } = state;\n  const {\n    onColumnsReorder\n  } = webComponentsReactProperties;\n  const handleDragStart = e => {\n    if (columnResizing.isResizingColumn || !e.target.draggable) {\n      e.preventDefault();\n      return;\n    }\n    e.dataTransfer.setData('text', e.currentTarget.dataset.columnId);\n  };\n  const handleDragOver = e => {\n    e.preventDefault();\n  };\n  const handleDragEnter = e => {\n    dispatch({\n      type: 'COLUMN_DND_START',\n      payload: e.currentTarget.dataset.columnId\n    });\n  };\n  const handleOnDragEnd = () => {\n    dispatch({\n      type: 'COLUMN_DND_END'\n    });\n  };\n  const handleOnDrop = e => {\n    dispatch({\n      type: 'COLUMN_DND_END'\n    });\n    const droppedColId = e.currentTarget.dataset.columnId;\n    const draggedColId = e.dataTransfer.getData('text');\n    if (droppedColId === draggedColId) return;\n    const internalColumnOrder = columnOrder.length > 0 ? columnOrder : columns.map(col => getColumnId(col));\n    const droppedColIdx = internalColumnOrder.findIndex(col => col === droppedColId);\n    const draggedColIdx = internalColumnOrder.findIndex(col => col === draggedColId);\n    const tempCols = [...internalColumnOrder];\n    const targetIndex = droppedColIdx > draggedColIdx ? isRtl ? droppedColIdx : droppedColIdx - 1 : droppedColIdx;\n    tempCols.splice(targetIndex, 0, tempCols.splice(draggedColIdx, 1)[0]);\n    setColumnOrder(tempCols);\n    if (typeof onColumnsReorder === 'function') {\n      const columnsNewOrder = tempCols.map(tempColId => columns.find(col => getColumnId(col) === tempColId));\n      onColumnsReorder(enrichEventWithDetails(e, {\n        columnsNewOrder,\n        column: columns[draggedColIdx]\n      }));\n    }\n  };\n  return [props, {\n    onDragStart: handleDragStart,\n    onDragEnter: handleDragEnter,\n    onDragOver: handleDragOver,\n    onDragEnd: handleOnDragEnd,\n    onDrop: handleOnDrop,\n    dragOver: dndColumn === props.id\n  }];\n}\nexport function useColumnDragAndDrop(hooks) {\n  hooks.getHeaderProps.push(getHeaderProps);\n}","map":{"version":3,"names":["enrichEventWithDetails","getColumnId","column","accessor","id","getHeaderProps","props","_ref","instance","dispatch","state","columns","setColumnOrder","webComponentsReactProperties","columnOrder","columnResizing","isRtl","dndColumn","onColumnsReorder","handleDragStart","e","isResizingColumn","target","draggable","preventDefault","dataTransfer","setData","currentTarget","dataset","columnId","handleDragOver","handleDragEnter","type","payload","handleOnDragEnd","handleOnDrop","droppedColId","draggedColId","getData","internalColumnOrder","length","map","col","droppedColIdx","findIndex","draggedColIdx","tempCols","targetIndex","splice","columnsNewOrder","tempColId","find","onDragStart","onDragEnter","onDragOver","onDragEnd","onDrop","dragOver","useColumnDragAndDrop","hooks","push"],"sources":["/home/user/projects/reactproj/node_modules/@ui5/webcomponents-react/dist/components/AnalyticalTable/hooks/useDragAndDrop.js"],"sourcesContent":["import { enrichEventWithDetails } from '@ui5/webcomponents-react-base';\nconst getColumnId = column => {\n  return typeof column.accessor === 'string' ? column.accessor : column.id;\n};\nfunction getHeaderProps(props, {\n  instance: {\n    dispatch,\n    state,\n    columns,\n    setColumnOrder,\n    webComponentsReactProperties\n  }\n}) {\n  const {\n    columnOrder,\n    columnResizing,\n    isRtl,\n    dndColumn\n  } = state;\n  const {\n    onColumnsReorder\n  } = webComponentsReactProperties;\n  const handleDragStart = e => {\n    if (columnResizing.isResizingColumn || !e.target.draggable) {\n      e.preventDefault();\n      return;\n    }\n    e.dataTransfer.setData('text', e.currentTarget.dataset.columnId);\n  };\n  const handleDragOver = e => {\n    e.preventDefault();\n  };\n  const handleDragEnter = e => {\n    dispatch({\n      type: 'COLUMN_DND_START',\n      payload: e.currentTarget.dataset.columnId\n    });\n  };\n  const handleOnDragEnd = () => {\n    dispatch({\n      type: 'COLUMN_DND_END'\n    });\n  };\n  const handleOnDrop = e => {\n    dispatch({\n      type: 'COLUMN_DND_END'\n    });\n    const droppedColId = e.currentTarget.dataset.columnId;\n    const draggedColId = e.dataTransfer.getData('text');\n    if (droppedColId === draggedColId) return;\n    const internalColumnOrder = columnOrder.length > 0 ? columnOrder : columns.map(col => getColumnId(col));\n    const droppedColIdx = internalColumnOrder.findIndex(col => col === droppedColId);\n    const draggedColIdx = internalColumnOrder.findIndex(col => col === draggedColId);\n    const tempCols = [...internalColumnOrder];\n    const targetIndex = droppedColIdx > draggedColIdx ? isRtl ? droppedColIdx : droppedColIdx - 1 : droppedColIdx;\n    tempCols.splice(targetIndex, 0, tempCols.splice(draggedColIdx, 1)[0]);\n    setColumnOrder(tempCols);\n    if (typeof onColumnsReorder === 'function') {\n      const columnsNewOrder = tempCols.map(tempColId => columns.find(col => getColumnId(col) === tempColId));\n      onColumnsReorder(enrichEventWithDetails(e, {\n        columnsNewOrder,\n        column: columns[draggedColIdx]\n      }));\n    }\n  };\n  return [props, {\n    onDragStart: handleDragStart,\n    onDragEnter: handleDragEnter,\n    onDragOver: handleDragOver,\n    onDragEnd: handleOnDragEnd,\n    onDrop: handleOnDrop,\n    dragOver: dndColumn === props.id\n  }];\n}\nexport function useColumnDragAndDrop(hooks) {\n  hooks.getHeaderProps.push(getHeaderProps);\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}