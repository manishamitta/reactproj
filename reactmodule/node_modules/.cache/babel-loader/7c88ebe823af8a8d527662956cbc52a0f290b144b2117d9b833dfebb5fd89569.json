{"ast":null,"code":"\"use strict\";\n\nimport { getDefaultFontLoading as t } from \"../InitialConfiguration.js\";\nimport { attachConfigurationReset as e } from \"./ConfigurationReset.js\";\nlet o;\ne(() => {\n  o = void 0;\n});\nconst a = () => (o === void 0 && (o = t()), o),\n  i = n => {\n    o = n;\n  };\nexport { a as getDefaultFontLoading, i as setDefaultFontLoading };","map":{"version":3,"names":["getDefaultFontLoading","t","attachConfigurationReset","e","o","a","i","n","setDefaultFontLoading"],"sources":["/home/user/projects/reactproj/node_modules/@ui5/webcomponents-base/src/config/Fonts.ts"],"sourcesContent":["import { getDefaultFontLoading as getConfiguredDefaultFontLoading } from \"../InitialConfiguration.js\";\nimport { attachConfigurationReset } from \"./ConfigurationReset.js\";\n\nlet defaultFontLoading: boolean | undefined;\n\nattachConfigurationReset(() => {\n\tdefaultFontLoading = undefined;\n});\n\n/**\n * Returns if the \"defaultFontLoading\" configuration is set.\n * @public\n * @returns { boolean }\n */\nconst getDefaultFontLoading = (): boolean => {\n\tif (defaultFontLoading === undefined) {\n\t\tdefaultFontLoading = getConfiguredDefaultFontLoading();\n\t}\n\n\treturn defaultFontLoading;\n};\n\n/**\n * Defines the \"defaultFontLoading\" setting.\n *\n * - When set to \"true\" (default), all used font faces are fetched over the network.\n * - When set to \"false\", default font faces are not fetched automatically and must be managed separately.\n * @public\n * @param { boolean } defaultFontLoadingData\n */\nconst setDefaultFontLoading = (defaultFontLoadingData: boolean) => {\n\tdefaultFontLoading = defaultFontLoadingData;\n};\n\nexport {\n\tgetDefaultFontLoading,\n\tsetDefaultFontLoading,\n};\n"],"mappings":";;AAAA,SAASA,qBAAA,IAAyBC,CAAA,QAAuC;AACzE,SAASC,wBAAA,IAAAC,CAAA,QAAgC;AAEzC,IAAIC,CAAA;AAEJD,CAAA,CAAyB,MAAM;EAC9BC,CAAA,GAAqB,MACtB;AAAA,CAAC;AAOD,MAAMC,CAAA,GAAwBL,CAAA,MACzBI,CAAA,KAAuB,WAC1BA,CAAA,GAAqBH,CAAA,CAAgC,IAG/CG,CAAA;EAWFE,CAAA,GAAyBC,CAAA,IAAoC;IAClEH,CAAA,GAAqBG,CACtB;EAAA;AAEA,SACCF,CAAA,IAAAL,qBAAA,EACAM,CAAA,IAAAE,qBAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}