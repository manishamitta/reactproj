{"ast":null,"code":"/**\n * Defines the column growing behaviour.\n *\n * __Note:__ Custom cells with components instead of text as children are ignored by the `Smart` and `Grow` modes.\n * __Note:__ For performance reasons, the `Smart` and `Grow` modes base their calculation for table cell width on a subset of column cells. If the first 20 cells of a column are significantly smaller than the rest of the column cells, the content may still not be fully displayed for all cells.\n */\nexport let AnalyticalTableScaleWidthMode = /*#__PURE__*/function (AnalyticalTableScaleWidthMode) {\n  AnalyticalTableScaleWidthMode[\"Default\"] = \"Default\";\n  AnalyticalTableScaleWidthMode[\"Smart\"] = \"Smart\";\n  AnalyticalTableScaleWidthMode[\"Grow\"] = \"Grow\";\n  return AnalyticalTableScaleWidthMode;\n}({});","map":{"version":3,"names":["AnalyticalTableScaleWidthMode"],"sources":["/home/user/projects/reactproj/node_modules/@ui5/webcomponents-react/dist/enums/AnalyticalTableScaleWidthMode.js"],"sourcesContent":["/**\n * Defines the column growing behaviour.\n *\n * __Note:__ Custom cells with components instead of text as children are ignored by the `Smart` and `Grow` modes.\n * __Note:__ For performance reasons, the `Smart` and `Grow` modes base their calculation for table cell width on a subset of column cells. If the first 20 cells of a column are significantly smaller than the rest of the column cells, the content may still not be fully displayed for all cells.\n */\nexport let AnalyticalTableScaleWidthMode = /*#__PURE__*/function (AnalyticalTableScaleWidthMode) {\n  AnalyticalTableScaleWidthMode[\"Default\"] = \"Default\";\n  AnalyticalTableScaleWidthMode[\"Smart\"] = \"Smart\";\n  AnalyticalTableScaleWidthMode[\"Grow\"] = \"Grow\";\n  return AnalyticalTableScaleWidthMode;\n}({});"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,IAAIA,6BAA6B,GAAG,aAAa,UAAUA,6BAA6B,EAAE;EAC/FA,6BAA6B,CAAC,SAAS,CAAC,GAAG,SAAS;EACpDA,6BAA6B,CAAC,OAAO,CAAC,GAAG,OAAO;EAChDA,6BAA6B,CAAC,MAAM,CAAC,GAAG,MAAM;EAC9C,OAAOA,6BAA6B;AACtC,CAAC,CAAC,CAAC,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}