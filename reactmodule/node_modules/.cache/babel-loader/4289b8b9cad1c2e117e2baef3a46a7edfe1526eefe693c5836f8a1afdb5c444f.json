{"ast":null,"code":"'use client';\n\nimport ValueState from '@ui5/webcomponents-base/dist/types/ValueState.js';\nimport alertIcon from '@ui5/webcomponents-icons/dist/alert.js';\nimport errorIcon from '@ui5/webcomponents-icons/dist/error.js';\nimport informationIcon from '@ui5/webcomponents-icons/dist/information.js';\nimport sysEnter2Icon from '@ui5/webcomponents-icons/dist/sys-enter-2.js';\nimport { useStylesheet } from '@ui5/webcomponents-react-base';\nimport { clsx } from 'clsx';\nimport { forwardRef } from 'react';\nimport { Button } from '../../webComponents/index.js';\nimport { classNames, styleData } from './MessageViewButton.module.css.js';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst getIcon = type => {\n  switch (type) {\n    case ValueState.Negative:\n      return errorIcon;\n    case ValueState.Positive:\n      return sysEnter2Icon;\n    case ValueState.Critical:\n      return alertIcon;\n    default:\n      return informationIcon;\n  }\n};\n\n/**\n * The `MessageViewButton` can be used for opening a `Popover` containing the `MessageView` component. It should always reflect the message `type` with the highest severity.\n */\nconst MessageViewButton = /*#__PURE__*/forwardRef((props, ref) => {\n  const {\n    type = ValueState.Negative,\n    counter,\n    className,\n    ...rest\n  } = props;\n  useStylesheet(styleData, MessageViewButton.displayName);\n  const classes = clsx(classNames.btn, className);\n  const icon = getIcon(type);\n  return /*#__PURE__*/_jsx(Button, {\n    ref: ref,\n    className: classes,\n    icon: icon,\n    ...rest,\n    \"data-type\": type,\n    children: counter > 1 && counter\n  });\n});\nMessageViewButton.displayName = 'MessageViewButton';\nexport { MessageViewButton };","map":{"version":3,"names":["ValueState","alertIcon","errorIcon","informationIcon","sysEnter2Icon","useStylesheet","clsx","forwardRef","Button","classNames","styleData","jsx","_jsx","getIcon","type","Negative","Positive","Critical","MessageViewButton","props","ref","counter","className","rest","displayName","classes","btn","icon","children"],"sources":["/home/user/projects/reactproj/node_modules/@ui5/webcomponents-react/dist/components/MessageViewButton/index.js"],"sourcesContent":["'use client';\n\nimport ValueState from '@ui5/webcomponents-base/dist/types/ValueState.js';\nimport alertIcon from '@ui5/webcomponents-icons/dist/alert.js';\nimport errorIcon from '@ui5/webcomponents-icons/dist/error.js';\nimport informationIcon from '@ui5/webcomponents-icons/dist/information.js';\nimport sysEnter2Icon from '@ui5/webcomponents-icons/dist/sys-enter-2.js';\nimport { useStylesheet } from '@ui5/webcomponents-react-base';\nimport { clsx } from 'clsx';\nimport { forwardRef } from 'react';\nimport { Button } from '../../webComponents/index.js';\nimport { classNames, styleData } from './MessageViewButton.module.css.js';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst getIcon = type => {\n  switch (type) {\n    case ValueState.Negative:\n      return errorIcon;\n    case ValueState.Positive:\n      return sysEnter2Icon;\n    case ValueState.Critical:\n      return alertIcon;\n    default:\n      return informationIcon;\n  }\n};\n\n/**\n * The `MessageViewButton` can be used for opening a `Popover` containing the `MessageView` component. It should always reflect the message `type` with the highest severity.\n */\nconst MessageViewButton = /*#__PURE__*/forwardRef((props, ref) => {\n  const {\n    type = ValueState.Negative,\n    counter,\n    className,\n    ...rest\n  } = props;\n  useStylesheet(styleData, MessageViewButton.displayName);\n  const classes = clsx(classNames.btn, className);\n  const icon = getIcon(type);\n  return /*#__PURE__*/_jsx(Button, {\n    ref: ref,\n    className: classes,\n    icon: icon,\n    ...rest,\n    \"data-type\": type,\n    children: counter > 1 && counter\n  });\n});\nMessageViewButton.displayName = 'MessageViewButton';\nexport { MessageViewButton };"],"mappings":"AAAA,YAAY;;AAEZ,OAAOA,UAAU,MAAM,kDAAkD;AACzE,OAAOC,SAAS,MAAM,wCAAwC;AAC9D,OAAOC,SAAS,MAAM,wCAAwC;AAC9D,OAAOC,eAAe,MAAM,8CAA8C;AAC1E,OAAOC,aAAa,MAAM,8CAA8C;AACxE,SAASC,aAAa,QAAQ,+BAA+B;AAC7D,SAASC,IAAI,QAAQ,MAAM;AAC3B,SAASC,UAAU,QAAQ,OAAO;AAClC,SAASC,MAAM,QAAQ,8BAA8B;AACrD,SAASC,UAAU,EAAEC,SAAS,QAAQ,mCAAmC;AACzE,SAASC,GAAG,IAAIC,IAAI,QAAQ,mBAAmB;AAC/C,MAAMC,OAAO,GAAGC,IAAI,IAAI;EACtB,QAAQA,IAAI;IACV,KAAKd,UAAU,CAACe,QAAQ;MACtB,OAAOb,SAAS;IAClB,KAAKF,UAAU,CAACgB,QAAQ;MACtB,OAAOZ,aAAa;IACtB,KAAKJ,UAAU,CAACiB,QAAQ;MACtB,OAAOhB,SAAS;IAClB;MACE,OAAOE,eAAe;EAC1B;AACF,CAAC;;AAED;AACA;AACA;AACA,MAAMe,iBAAiB,GAAG,aAAaX,UAAU,CAAC,CAACY,KAAK,EAAEC,GAAG,KAAK;EAChE,MAAM;IACJN,IAAI,GAAGd,UAAU,CAACe,QAAQ;IAC1BM,OAAO;IACPC,SAAS;IACT,GAAGC;EACL,CAAC,GAAGJ,KAAK;EACTd,aAAa,CAACK,SAAS,EAAEQ,iBAAiB,CAACM,WAAW,CAAC;EACvD,MAAMC,OAAO,GAAGnB,IAAI,CAACG,UAAU,CAACiB,GAAG,EAAEJ,SAAS,CAAC;EAC/C,MAAMK,IAAI,GAAGd,OAAO,CAACC,IAAI,CAAC;EAC1B,OAAO,aAAaF,IAAI,CAACJ,MAAM,EAAE;IAC/BY,GAAG,EAAEA,GAAG;IACRE,SAAS,EAAEG,OAAO;IAClBE,IAAI,EAAEA,IAAI;IACV,GAAGJ,IAAI;IACP,WAAW,EAAET,IAAI;IACjBc,QAAQ,EAAEP,OAAO,GAAG,CAAC,IAAIA;EAC3B,CAAC,CAAC;AACJ,CAAC,CAAC;AACFH,iBAAiB,CAACM,WAAW,GAAG,mBAAmB;AACnD,SAASN,iBAAiB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}