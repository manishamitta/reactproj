{"ast":null,"code":"import { useCallback, useEffect, useRef, useState } from 'react';\nexport const useObserveHeights = (pageRef, topHeaderRef, headerContentRef, anchorBarRef, _ref, _ref2) => {\n  let [headerCollapsed, setHeaderCollapsed] = _ref;\n  let {\n    noHeader,\n    fixedHeader = false,\n    scrollTimeout = {\n      current: 0\n    },\n    preserveHeaderStateOnScroll\n  } = _ref2;\n  const [topHeaderHeight, setTopHeaderHeight] = useState(0);\n  const [headerContentHeight, setHeaderContentHeight] = useState(0);\n  const [isIntersecting, setIsIntersecting] = useState(true);\n  const prevScrollTop = useRef(0);\n  const onScroll = useCallback(e => {\n    const scrollDown = prevScrollTop.current <= e.target.scrollTop;\n    prevScrollTop.current = e.target.scrollTop;\n    if (scrollTimeout.current >= performance.now()) {\n      return;\n    }\n    if (scrollDown && e.target.scrollTop >= headerContentHeight && !headerCollapsed) {\n      setIsIntersecting(false);\n      setHeaderCollapsed(true);\n    } else if (!scrollDown && e.target.scrollTop <= topHeaderHeight + Math.max(0, headerContentHeight - topHeaderHeight) && headerCollapsed) {\n      setIsIntersecting(true);\n      setHeaderCollapsed(false);\n    }\n  }, [headerContentHeight, topHeaderHeight, headerCollapsed]);\n  useEffect(() => {\n    if (headerContentRef.current && headerCollapsed !== undefined) {\n      setHeaderContentHeight(headerContentRef.current.getBoundingClientRect().height);\n    }\n  }, [headerCollapsed]);\n  useEffect(() => {\n    const page = pageRef.current;\n    if (!fixedHeader && !preserveHeaderStateOnScroll) {\n      page.addEventListener('scroll', onScroll);\n    }\n    return () => {\n      page.removeEventListener('scroll', onScroll);\n    };\n  }, [onScroll, fixedHeader, preserveHeaderStateOnScroll]);\n\n  // top header\n  useEffect(() => {\n    const headerContentResizeObserver = new ResizeObserver(_ref3 => {\n      let [header] = _ref3;\n      // Firefox implements `borderBoxSize` as a single content rect, rather than an array\n      const borderBoxSize = Array.isArray(header.borderBoxSize) ? header.borderBoxSize[0] : header.borderBoxSize;\n      // Safari doesn't implement `borderBoxSize`\n      setTopHeaderHeight(borderBoxSize?.blockSize ?? header.target.getBoundingClientRect().height);\n    });\n    if (topHeaderRef?.current) {\n      headerContentResizeObserver.observe(topHeaderRef.current);\n    }\n    return () => {\n      headerContentResizeObserver.disconnect();\n    };\n  }, []);\n\n  // header content\n  useEffect(() => {\n    const headerContentResizeObserver = new ResizeObserver(_ref4 => {\n      let [headerContent] = _ref4;\n      if (isIntersecting) {\n        // Firefox implements `borderBoxSize` as a single content rect, rather than an array\n        const borderBoxSize = Array.isArray(headerContent.borderBoxSize) ? headerContent.borderBoxSize[0] : headerContent.borderBoxSize;\n        // Safari doesn't implement `borderBoxSize`\n        setHeaderContentHeight(borderBoxSize?.blockSize ?? headerContent.target.getBoundingClientRect().height);\n      }\n    });\n    if (headerContentRef?.current) {\n      headerContentResizeObserver.observe(headerContentRef.current);\n    }\n    return () => {\n      headerContentResizeObserver.disconnect();\n    };\n  }, [isIntersecting]);\n  const anchorBarHeight = anchorBarRef?.current?.offsetHeight ?? 33;\n  const totalHeaderHeight = (noHeader ? 0 : topHeaderHeight + headerContentHeight) + anchorBarHeight;\n  return {\n    topHeaderHeight,\n    headerContentHeight,\n    anchorBarHeight,\n    totalHeaderHeight,\n    headerCollapsed\n  };\n};","map":{"version":3,"names":["useCallback","useEffect","useRef","useState","useObserveHeights","pageRef","topHeaderRef","headerContentRef","anchorBarRef","_ref","_ref2","headerCollapsed","setHeaderCollapsed","noHeader","fixedHeader","scrollTimeout","current","preserveHeaderStateOnScroll","topHeaderHeight","setTopHeaderHeight","headerContentHeight","setHeaderContentHeight","isIntersecting","setIsIntersecting","prevScrollTop","onScroll","e","scrollDown","target","scrollTop","performance","now","Math","max","undefined","getBoundingClientRect","height","page","addEventListener","removeEventListener","headerContentResizeObserver","ResizeObserver","_ref3","header","borderBoxSize","Array","isArray","blockSize","observe","disconnect","_ref4","headerContent","anchorBarHeight","offsetHeight","totalHeaderHeight"],"sources":["/home/user/projects/reactproj/node_modules/@ui5/webcomponents-react/dist/internal/useObserveHeights.js"],"sourcesContent":["import { useCallback, useEffect, useRef, useState } from 'react';\nexport const useObserveHeights = (pageRef, topHeaderRef, headerContentRef, anchorBarRef, [headerCollapsed, setHeaderCollapsed], {\n  noHeader,\n  fixedHeader = false,\n  scrollTimeout = {\n    current: 0\n  },\n  preserveHeaderStateOnScroll\n}) => {\n  const [topHeaderHeight, setTopHeaderHeight] = useState(0);\n  const [headerContentHeight, setHeaderContentHeight] = useState(0);\n  const [isIntersecting, setIsIntersecting] = useState(true);\n  const prevScrollTop = useRef(0);\n  const onScroll = useCallback(e => {\n    const scrollDown = prevScrollTop.current <= e.target.scrollTop;\n    prevScrollTop.current = e.target.scrollTop;\n    if (scrollTimeout.current >= performance.now()) {\n      return;\n    }\n    if (scrollDown && e.target.scrollTop >= headerContentHeight && !headerCollapsed) {\n      setIsIntersecting(false);\n      setHeaderCollapsed(true);\n    } else if (!scrollDown && e.target.scrollTop <= topHeaderHeight + Math.max(0, headerContentHeight - topHeaderHeight) && headerCollapsed) {\n      setIsIntersecting(true);\n      setHeaderCollapsed(false);\n    }\n  }, [headerContentHeight, topHeaderHeight, headerCollapsed]);\n  useEffect(() => {\n    if (headerContentRef.current && headerCollapsed !== undefined) {\n      setHeaderContentHeight(headerContentRef.current.getBoundingClientRect().height);\n    }\n  }, [headerCollapsed]);\n  useEffect(() => {\n    const page = pageRef.current;\n    if (!fixedHeader && !preserveHeaderStateOnScroll) {\n      page.addEventListener('scroll', onScroll);\n    }\n    return () => {\n      page.removeEventListener('scroll', onScroll);\n    };\n  }, [onScroll, fixedHeader, preserveHeaderStateOnScroll]);\n\n  // top header\n  useEffect(() => {\n    const headerContentResizeObserver = new ResizeObserver(([header]) => {\n      // Firefox implements `borderBoxSize` as a single content rect, rather than an array\n      const borderBoxSize = Array.isArray(header.borderBoxSize) ? header.borderBoxSize[0] : header.borderBoxSize;\n      // Safari doesn't implement `borderBoxSize`\n      setTopHeaderHeight(borderBoxSize?.blockSize ?? header.target.getBoundingClientRect().height);\n    });\n    if (topHeaderRef?.current) {\n      headerContentResizeObserver.observe(topHeaderRef.current);\n    }\n    return () => {\n      headerContentResizeObserver.disconnect();\n    };\n  }, []);\n\n  // header content\n  useEffect(() => {\n    const headerContentResizeObserver = new ResizeObserver(([headerContent]) => {\n      if (isIntersecting) {\n        // Firefox implements `borderBoxSize` as a single content rect, rather than an array\n        const borderBoxSize = Array.isArray(headerContent.borderBoxSize) ? headerContent.borderBoxSize[0] : headerContent.borderBoxSize;\n        // Safari doesn't implement `borderBoxSize`\n        setHeaderContentHeight(borderBoxSize?.blockSize ?? headerContent.target.getBoundingClientRect().height);\n      }\n    });\n    if (headerContentRef?.current) {\n      headerContentResizeObserver.observe(headerContentRef.current);\n    }\n    return () => {\n      headerContentResizeObserver.disconnect();\n    };\n  }, [isIntersecting]);\n  const anchorBarHeight = anchorBarRef?.current?.offsetHeight ?? 33;\n  const totalHeaderHeight = (noHeader ? 0 : topHeaderHeight + headerContentHeight) + anchorBarHeight;\n  return {\n    topHeaderHeight,\n    headerContentHeight,\n    anchorBarHeight,\n    totalHeaderHeight,\n    headerCollapsed\n  };\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}