{"ast":null,"code":"'use client';\n\nimport { debounce, useStylesheet, useSyncRef } from '@ui5/webcomponents-react-base';\nimport { clsx } from 'clsx';\nimport { forwardRef, useEffect, useRef, useState } from 'react';\nimport { SplitterLayoutContext } from '../../internal/SplitterLayoutContext.js';\nimport { classNames, styleData } from './SplitterLayout.module.css.js';\nimport { useConcatSplitterElements } from './useConcatSplitterElements.js';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n/**\n * A layout that contains several content areas. The content that is added to the `SplitterLayout` should be wrapped\n * into 0-n `SplitterElement`s which define the size and size constraints of the content area.\n * The orientation of the `SplitterLayout` can be set to horizontal (default) or vertical. All content areas of the\n * layout will be arranged in that way. In order to split vertically and horizontally at the same time, splitters need\n * to be nested.\n * By adding or changing `SplitterElement`s to the `SplitterLayout` that make up the content areas, the size can be changed\n * programmatically. Additionally, the content areas can be made non-resizable individually and a minimal size (in px)\n * can be set.\n * The splitter bars are focusable to enable resizing of the content areas via keyboard. The size of the content areas\n * can be manipulated when the splitter bar is focused and Left/Down/Right/Up are pressed.\n */\nconst SplitterLayout = /*#__PURE__*/forwardRef((props, ref) => {\n  const {\n    vertical,\n    children,\n    title,\n    style,\n    className,\n    options,\n    ...rest\n  } = props;\n  const [componentRef, sLRef] = useSyncRef(ref);\n  const [reset, setReset] = useState(undefined);\n  const prevSize = useRef({\n    width: undefined,\n    height: undefined\n  });\n  const initialChildren = useRef(true);\n  const initialCustomDep = useRef(true);\n  const layoutElements = useConcatSplitterElements({\n    children: children ?? [],\n    width: style?.width,\n    height: style?.height,\n    vertical\n  });\n  useStylesheet(styleData, SplitterLayout.displayName);\n  useEffect(() => {\n    if (!initialChildren.current && options?.resetOnChildrenChange) {\n      setReset(true);\n    }\n    initialChildren.current = false;\n  }, [children, options?.resetOnChildrenChange]);\n  useEffect(() => {\n    if (!initialCustomDep.current) {\n      setReset(true);\n    }\n    initialCustomDep.current = false;\n  }, options?.resetOnCustomDepsChange ?? []);\n  useEffect(() => {\n    if (options?.resetOnSizeChange) {\n      const layoutObserver = new ResizeObserver(debounce(_ref => {\n        let [container] = _ref;\n        const containerRect = container.target.getBoundingClientRect();\n        if (!vertical && containerRect.width !== prevSize.current.width) {\n          prevSize.current.width = containerRect.width;\n          setReset(true);\n        } else if (vertical && containerRect.height !== prevSize.current.height) {\n          prevSize.current.height = containerRect.height;\n          setReset(true);\n        }\n      }, 60));\n      layoutObserver.observe(sLRef.current);\n      return () => {\n        layoutObserver.disconnect();\n      };\n    }\n  }, [vertical, options?.resetOnSizeChange]);\n  useEffect(() => {\n    if (reset) {\n      setReset(false);\n    }\n  }, [reset]);\n  return /*#__PURE__*/_jsx(SplitterLayoutContext.Provider, {\n    value: {\n      vertical,\n      reset\n    },\n    children: /*#__PURE__*/_jsx(\"div\", {\n      style: {\n        flexDirection: vertical ? 'column' : 'row',\n        ...style\n      },\n      title: title,\n      ...rest,\n      className: clsx(classNames.splitterLayout, className),\n      ref: componentRef,\n      \"data-splitter-vertical\": vertical,\n      children: layoutElements\n    })\n  });\n});\nSplitterLayout.displayName = 'SplitterLayout';\nexport { SplitterLayout };","map":{"version":3,"names":["debounce","useStylesheet","useSyncRef","clsx","forwardRef","useEffect","useRef","useState","SplitterLayoutContext","classNames","styleData","useConcatSplitterElements","jsx","_jsx","SplitterLayout","props","ref","vertical","children","title","style","className","options","rest","componentRef","sLRef","reset","setReset","undefined","prevSize","width","height","initialChildren","initialCustomDep","layoutElements","displayName","current","resetOnChildrenChange","resetOnCustomDepsChange","resetOnSizeChange","layoutObserver","ResizeObserver","_ref","container","containerRect","target","getBoundingClientRect","observe","disconnect","Provider","value","flexDirection","splitterLayout"],"sources":["/home/user/projects/reactproj/node_modules/@ui5/webcomponents-react/dist/components/SplitterLayout/index.js"],"sourcesContent":["'use client';\n\nimport { debounce, useStylesheet, useSyncRef } from '@ui5/webcomponents-react-base';\nimport { clsx } from 'clsx';\nimport { forwardRef, useEffect, useRef, useState } from 'react';\nimport { SplitterLayoutContext } from '../../internal/SplitterLayoutContext.js';\nimport { classNames, styleData } from './SplitterLayout.module.css.js';\nimport { useConcatSplitterElements } from './useConcatSplitterElements.js';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n/**\n * A layout that contains several content areas. The content that is added to the `SplitterLayout` should be wrapped\n * into 0-n `SplitterElement`s which define the size and size constraints of the content area.\n * The orientation of the `SplitterLayout` can be set to horizontal (default) or vertical. All content areas of the\n * layout will be arranged in that way. In order to split vertically and horizontally at the same time, splitters need\n * to be nested.\n * By adding or changing `SplitterElement`s to the `SplitterLayout` that make up the content areas, the size can be changed\n * programmatically. Additionally, the content areas can be made non-resizable individually and a minimal size (in px)\n * can be set.\n * The splitter bars are focusable to enable resizing of the content areas via keyboard. The size of the content areas\n * can be manipulated when the splitter bar is focused and Left/Down/Right/Up are pressed.\n */\nconst SplitterLayout = /*#__PURE__*/forwardRef((props, ref) => {\n  const {\n    vertical,\n    children,\n    title,\n    style,\n    className,\n    options,\n    ...rest\n  } = props;\n  const [componentRef, sLRef] = useSyncRef(ref);\n  const [reset, setReset] = useState(undefined);\n  const prevSize = useRef({\n    width: undefined,\n    height: undefined\n  });\n  const initialChildren = useRef(true);\n  const initialCustomDep = useRef(true);\n  const layoutElements = useConcatSplitterElements({\n    children: children ?? [],\n    width: style?.width,\n    height: style?.height,\n    vertical\n  });\n  useStylesheet(styleData, SplitterLayout.displayName);\n  useEffect(() => {\n    if (!initialChildren.current && options?.resetOnChildrenChange) {\n      setReset(true);\n    }\n    initialChildren.current = false;\n  }, [children, options?.resetOnChildrenChange]);\n  useEffect(() => {\n    if (!initialCustomDep.current) {\n      setReset(true);\n    }\n    initialCustomDep.current = false;\n  }, options?.resetOnCustomDepsChange ?? []);\n  useEffect(() => {\n    if (options?.resetOnSizeChange) {\n      const layoutObserver = new ResizeObserver(debounce(([container]) => {\n        const containerRect = container.target.getBoundingClientRect();\n        if (!vertical && containerRect.width !== prevSize.current.width) {\n          prevSize.current.width = containerRect.width;\n          setReset(true);\n        } else if (vertical && containerRect.height !== prevSize.current.height) {\n          prevSize.current.height = containerRect.height;\n          setReset(true);\n        }\n      }, 60));\n      layoutObserver.observe(sLRef.current);\n      return () => {\n        layoutObserver.disconnect();\n      };\n    }\n  }, [vertical, options?.resetOnSizeChange]);\n  useEffect(() => {\n    if (reset) {\n      setReset(false);\n    }\n  }, [reset]);\n  return /*#__PURE__*/_jsx(SplitterLayoutContext.Provider, {\n    value: {\n      vertical,\n      reset\n    },\n    children: /*#__PURE__*/_jsx(\"div\", {\n      style: {\n        flexDirection: vertical ? 'column' : 'row',\n        ...style\n      },\n      title: title,\n      ...rest,\n      className: clsx(classNames.splitterLayout, className),\n      ref: componentRef,\n      \"data-splitter-vertical\": vertical,\n      children: layoutElements\n    })\n  });\n});\nSplitterLayout.displayName = 'SplitterLayout';\nexport { SplitterLayout };"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}