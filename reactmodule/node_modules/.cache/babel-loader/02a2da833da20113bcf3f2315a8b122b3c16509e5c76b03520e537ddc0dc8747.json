{"ast":null,"code":"var __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n    r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n    d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport UI5Element from \"@ui5/webcomponents-base/dist/UI5Element.js\";\nimport customElement from \"@ui5/webcomponents-base/dist/decorators/customElement.js\";\nimport property from \"@ui5/webcomponents-base/dist/decorators/property.js\";\nimport event from \"@ui5/webcomponents-base/dist/decorators/event.js\";\nimport litRender from \"@ui5/webcomponents-base/dist/renderer/LitRenderer.js\";\n// Template\nimport TimePickerClockTemplate from \"./generated/templates/TimePickerClockTemplate.lit.js\";\n// Styles\nimport TimePickerClockCss from \"./generated/themes/TimePickerClock.css.js\";\nconst ANIMATION_DURATION_MAX = 200; // total animation duration, without the delay before firing the event\nconst ANIMATION_DELAY_EVENT = 100; // delay before firing the event\nconst CLOCK_ANGLE_STEP = 6;\nconst CLOCK_NUMBER_CLASS = \"ui5-tp-clock-number\";\nconst CLOCK_NUMBER_HOVER_CLASS = \"ui5-tp-clock-number-hover\";\nconst CLOCK_NUMBER_SELECTED_CLASS = \"ui5-tp-clock-selected\";\nconst CLOCK_MIDDOT_CLASS = \"ui5-tp-clock-mid-dot\";\n/**\n * @class\n *\n * ### Overview\n *\n * `ui5-time-picker-clock` allows selecting of hours,minutes or seconds (depending on property set).\n * The component supports interactions with mouse, touch and mouse wheel.\n * Depending on settings, the clock can display only outer set of items (when the clock displays hours in 12-hour mode,\n * minutes or seconds), or outer and inner sets of items (when the clock displays hours in 24-hours mode).\n * The step for displaying or selecting of items can be configured.\n *\n * `ui5-time-picker-clock` is used as part of `ui5-time-selection-clocks` component, which\n * is used in `ui5-time-picker` component respectively.\n *\n * ### Usage\n *\n * `ui5-time-picker-clock` can display hours, minutes or seconds\n *\n * ### ES6 Module Import\n *\n * `import \"@ui5/webcomponents/dist/TimePickerClock.js\";`\n * @constructor\n * @extends UI5Element\n * @since 1.15.0\n * @private\n */\nlet TimePickerClock = class TimePickerClock extends UI5Element {\n  constructor() {\n    super();\n    /**\n     * Determines whether the component is displayed as disabled.\n     * @default false\n     */\n    this.disabled = false;\n    /**\n     * Determines whether the component is active (visible).\n     * @default false\n     */\n    this.active = false;\n    /**\n     * Minimum item value for the outer circle of the clock.\n     * @default -1\n     */\n    this.itemMin = -1;\n    /**\n     * Maximum item value for the outer circle of the clock.\n     * @default -1\n     */\n    this.itemMax = -1;\n    /**\n     * If set to `true`, an inner circle is displayed.\n     * The first item value of the inner circle will be itemMax + 1\n     * @default false\n     */\n    this.showInnerCircle = false;\n    /**\n     * If set to `true`, a surrounding circle with markers (dots) will be hidden.\n     * (for example, on the 'Minutes' clock-dial, markers represent minutes).\n     * @default false\n     */\n    this.hideFractions = false;\n    /**\n     * If provided, this will replace the last item displayed. If there is only one (outer) circle,\n     * the last item from outer circle will be replaced; if there is an inner circle too, the last\n     * item of inner circle will be replaced. Usually, the last item '24' is replaced with '0'.\n     * @default -1\n     */\n    this.lastItemReplacement = -1;\n    /**\n     * Prepend with zero flag. If `true`, values less than 10 will be prepend with 0.\n     * @default false\n     */\n    this.prependZero = false;\n    /**\n     * The currently selected value of the clock.\n     * @default -1\n     */\n    this.selectedValue = -1;\n    /**\n     * The step for displaying of one unit of items.\n     * 1 means 1/60 of the circle.\n     * The default display step is 5 which means minutes and seconds are displayed as \"0\", \"5\", \"10\", etc.\n     * For hours the display step must be set to 1.\n     * @default 5\n     */\n    this.displayStep = 5;\n    /**\n     * The step for selection of items.\n     * 1 means 1 unit:\n     * - if the clock displays hours - 1 unit = 1 hour\n     * - if the clock displays minutes/seconds - 1 unit = 1 minute/second\n     * @default 1\n     */\n    this.valueStep = 1;\n    /**\n     * Defines the currently available Time Picker Clock items depending on Clock setup.\n     */\n    this._items = [];\n    /**\n     * Defines the currently selected Time Picker Clock item.\n     */\n    this._selectedItem = {};\n    /**\n     * Keeps variables used in interaction calculations.\n     */\n    this._dimensionParameters = {\n      radius: 0,\n      centerX: 0,\n      centerY: 0,\n      dotHeight: 0,\n      numberHeight: 0,\n      outerMax: 0,\n      outerMin: 0,\n      innerMax: 0,\n      innerMin: 0,\n      offsetX: 0,\n      offsetY: 0\n    };\n    /**\n     * Mousedown or Touchstart event flag.\n     * @default false\n     */\n    this._mouseOrTouchDown = false;\n    /**\n     * Cancel Mouseout flag.\n     * @default false\n     */\n    this._cancelTouchOut = false;\n    /**\n     * Calculated selected value of the clock during interactions.\n     * @default -1\n     */\n    this._selectedValue = -1;\n    /**\n     * Selected value of the clock during interactions.\n     * @default -1\n     */\n    this._movSelectedValue = -1;\n    /**\n     * Hovered value of the clock during interactions.\n     * @default -1\n     */\n    this._hoveredValue = -1;\n    /**\n     * Previously hovered value of the clock during interactions.\n     * @default -1\n     */\n    this._prevHoveredValue = -1;\n    /**\n     * Animation in progress flag.\n     * @default false\n     */\n    this._animationInProgress = false;\n    this._fnOnMouseOutUp = () => {\n      this._mouseOrTouchDown = false;\n    };\n  }\n  get classes() {\n    return {\n      clock: {\n        \"ui5-tp-clock\": true,\n        \"ui5-tp-clock-inner\": this.showInnerCircle,\n        \"ui5-tp-clock-active\": this.active\n      }\n    };\n  }\n  onEnterDOM() {\n    document.addEventListener(\"mouseup\", this._fnOnMouseOutUp, false);\n  }\n  onExitDOM() {\n    document.removeEventListener(\"mouseup\", this._fnOnMouseOutUp, false);\n  }\n  onBeforeRendering() {\n    this._prepareClockItems();\n    const value = this._fixReplacementValue(this.selectedValue);\n    this._updateSelectedValueObject(value);\n  }\n  /**\n   * Returns the real value of the passed clock item, if the replacement must be done, returns the replaced value.\n   * @param value The value of the clock item\n   * @returns The real/replaced value\n   */\n  _fixReplacementValue(value) {\n    let realValue = value;\n    const maxValue = this.itemMax * (this.showInnerCircle ? 2 : 1);\n    if (realValue === 0) {\n      realValue = maxValue;\n    }\n    if (realValue === maxValue && this.lastItemReplacement !== -1) {\n      realValue = this.lastItemReplacement;\n    }\n    return realValue;\n  }\n  /**\n   * Updates internal selected value object constructed for rendering purposes.\n   * @param value currently selected value.\n   */\n  _updateSelectedValueObject(value) {\n    if (value === -1) {\n      this._selectedItem = {\n        showMarker: false\n      };\n      return;\n    }\n    const selectedOuter = value >= this.itemMin && value <= this.itemMax || !this.showInnerCircle && value === this.lastItemReplacement;\n    const selectedInner = (value >= this.itemMin + this.itemMax && value <= this.itemMax * 2 || value === this.lastItemReplacement) && this.showInnerCircle;\n    const stepAngle = 360 / (this.itemMax - this.itemMin + 1);\n    const innerValue = this.lastItemReplacement === -1 || !this.prependZero ? value.toString() : value.toString().padStart(2, \"0\");\n    let currentAngle = selectedOuter || selectedInner ? value * stepAngle : undefined;\n    if (currentAngle !== undefined) {\n      currentAngle %= 360;\n    }\n    this._selectedItem = {\n      \"angle\": currentAngle,\n      \"item\": selectedOuter ? value.toString() : \"\",\n      \"innerItem\": selectedInner ? innerValue : \"\",\n      \"showMarker\": selectedOuter || selectedInner,\n      \"itemClasses\": CLOCK_NUMBER_CLASS + (selectedOuter ? ` ${CLOCK_NUMBER_SELECTED_CLASS}` : \"\"),\n      \"innerItemClasses\": CLOCK_NUMBER_CLASS + (selectedInner ? ` ${CLOCK_NUMBER_SELECTED_CLASS}` : \"\"),\n      \"outerStyles\": {\n        transform: `translate(-50%) rotate(${currentAngle || 0}deg)`\n      },\n      \"innerStyles\": {\n        transform: `rotate(-${currentAngle || 0}deg)`\n      }\n    };\n  }\n  /**\n   * Prepares clock items objects according to current clock settings. Item objects are used for rendering purposes.\n   */\n  _prepareClockItems() {\n    const values = [];\n    let displayStep = this.displayStep;\n    let item;\n    let valueIndex;\n    let i;\n    this._items = [];\n    for (i = this.itemMin; i <= this.itemMax; i++) {\n      values.push({\n        \"item\": i.toString(),\n        \"innerItem\": this.showInnerCircle ? (i + this.itemMax).toString() : undefined\n      });\n    }\n    if (this.lastItemReplacement !== -1) {\n      if (this.showInnerCircle && this.prependZero) {\n        values[values.length - 1].innerItem = this.lastItemReplacement.toString().padStart(2, \"0\");\n      } else {\n        values[values.length - 1].item = this.lastItemReplacement.toString();\n      }\n    }\n    // determines angle step for values display\n    const itemStep = 360 / CLOCK_ANGLE_STEP / values.length;\n    // determines step for values display in units\n    if (this.valueStep * itemStep > displayStep) {\n      displayStep = this.valueStep * itemStep;\n    }\n    for (i = 1; i <= 60; i++) {\n      valueIndex = i / itemStep - 1;\n      item = i % displayStep !== 0 ? {} : values[valueIndex];\n      item.angle = i * CLOCK_ANGLE_STEP;\n      item.outerStyles = {\n        transform: `translate(-50%) rotate(${i * 6}deg)`\n      };\n      item.innerStyles = {\n        transform: `rotate(-${i * 6}deg)`\n      };\n      this._items.push(item);\n    }\n  }\n  /**\n   * Returns the DOM Reference of the clock cover element\n   * @returns the DOM Reference\n   */\n  _getClockCoverContainerDomRef() {\n    const domRef = this.getDomRef();\n    return domRef && domRef.querySelector(\".ui5-tp-clock-cover\");\n  }\n  /**\n   * Returns the real max value of clock items, taking in count if there is inner circle or not.\n   * @returns max value\n   */\n  _getMaxValue() {\n    return this.showInnerCircle ? this.itemMax * 2 : this.itemMax;\n  }\n  /**\n   * Calculates the outer height of a HTML element.\n   * @param element The element which outer height to be calculated\n   * @returns Outer height of the passed HTML element\n   */\n  _outerHeight(element) {\n    if (!element) {\n      return 0;\n    }\n    const style = window.getComputedStyle(element);\n    return element.offsetHeight + parseInt(style.marginTop) + parseInt(style.marginBottom);\n  }\n  /**\n   * Returns the Id of the DOM element of the clock item that display specific value.\n   * @param value The value of the clock item\n   * @returns Id of the clock item element\n   */\n  _hoveredId(value) {\n    if (value === this._getMaxValue() && this.lastItemReplacement !== -1) {\n      value = this.lastItemReplacement;\n    }\n    const valueString = this.showInnerCircle && value === this.lastItemReplacement && this.prependZero ? value.toString().padStart(2, \"0\") : value.toString();\n    return `#${this._id}-${valueString}`;\n  }\n  /**\n   * Returns provided value as string. Padding with additional zero is applied if necessary.\n   * @param value The value that should be returned as string\n   * @returns The value as string\n   */\n  _getStringValue(value) {\n    return this.prependZero ? value.toString().padStart(2, \"0\") : value.toString();\n  }\n  /**\n   * Calculates dimension variables necessary for determining of item selection.\n   * @returns Dimensions object\n   */\n  _calculateDimensions() {\n    const cover = this.getDomRef();\n    const scrollLeft = window.pageXOffset || document.documentElement.scrollLeft;\n    const scrollTop = window.pageYOffset || document.documentElement.scrollTop;\n    if (!cover) {\n      return;\n    }\n    const domRef = this.getDomRef();\n    const dotElement = domRef.querySelector(`.${CLOCK_MIDDOT_CLASS}`);\n    const numberElement = domRef.querySelector(`.${CLOCK_NUMBER_CLASS}`);\n    const radius = Math.round(cover.offsetHeight / 2);\n    const dotHeight = this._outerHeight(dotElement);\n    const numberHeight = this._outerHeight(numberElement);\n    const offset = cover.getBoundingClientRect();\n    this._dimensionParameters = {\n      \"radius\": radius,\n      \"centerX\": radius,\n      \"centerY\": radius,\n      \"dotHeight\": dotHeight,\n      \"numberHeight\": numberHeight,\n      \"outerMax\": radius,\n      \"outerMin\": radius - numberHeight,\n      \"innerMax\": radius - numberHeight - 1,\n      \"innerMin\": radius - numberHeight * 2 - 1,\n      \"offsetX\": offset.left + scrollLeft,\n      \"offsetY\": offset.top + scrollTop\n    };\n  }\n  /**\n   * Calculates selected and hovered values based on click/touch position.\n   * @param x X position of click/touch returned by the event\n   * @param y Y position of click/touch returned by the event\n   */\n  _calculatePosition(x, y) {\n    const dX = x - this._dimensionParameters.offsetX + 1 - this._dimensionParameters.radius;\n    const dY = y - this._dimensionParameters.offsetY + 1 - this._dimensionParameters.radius;\n    const mod = dX >= 0 ? 0 : 180;\n    const angle = Math.atan(dY / dX) * 180 / Math.PI + 90 + mod;\n    const angleStep = 360 / this.itemMax * this.valueStep;\n    const radius = Math.sqrt(dX * dX + dY * dY);\n    const isOuter = radius <= this._dimensionParameters.outerMax && radius > (this.showInnerCircle ? this._dimensionParameters.outerMin : this._dimensionParameters.innerMin);\n    const isInner = this.showInnerCircle && radius <= this._dimensionParameters.innerMax && radius > this._dimensionParameters.innerMin;\n    const isOuterHover = radius <= this._dimensionParameters.outerMax && radius > this._dimensionParameters.outerMin;\n    const isInnerHover = isInner;\n    let finalAngle = Math.round((angle === 0 ? 360 : angle) / angleStep) * angleStep;\n    if (finalAngle === 0) {\n      finalAngle = 360;\n    }\n    // selected item calculations\n    if (isInner || isOuter) {\n      this._selectedValue = finalAngle / angleStep * this.valueStep;\n      if (isInner) {\n        this._selectedValue += this.itemMax;\n      }\n    } else {\n      this._selectedValue = -1;\n    }\n    // hover simulation calculations\n    this._hoveredValue = isInnerHover || isOuterHover ? this._selectedValue : -1;\n    if (this._selectedValue === this._getMaxValue() && this.lastItemReplacement !== -1) {\n      this._selectedValue = this.lastItemReplacement;\n    }\n  }\n  /**\n   * Does the animation between the old and the new value of the clock. Can be skipped with setting the second parameter to true.\n   * @param newValue the new value that must be set\n   * @param skipAnimation whether to skip the animation\n   */\n  _changeValueAnimation(newValue) {\n    let skipAnimation = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n    const maxValue = this.itemMax * (this.showInnerCircle ? 2 : 1);\n    let firstSelected = this._movSelectedValue;\n    let lastSelected = newValue;\n    let direction = 1;\n    let path1;\n    let path2;\n    let delay;\n    if (!skipAnimation) {\n      // do the animation here\n      path1 = Math.abs(firstSelected - lastSelected);\n      path2 = maxValue - path1;\n      if (firstSelected < lastSelected) {\n        if (path2 < path1) {\n          firstSelected += maxValue;\n          direction = -1;\n        }\n      } else if (path2 < path1) {\n        lastSelected += maxValue;\n      } else {\n        direction = -1;\n      }\n      delay = firstSelected === lastSelected ? 0 : Math.ceil(ANIMATION_DURATION_MAX / Math.abs(firstSelected - lastSelected));\n      this._animationInProgress = true;\n      this._selectNextNumber(firstSelected, lastSelected, direction, maxValue, newValue, delay);\n    } else {\n      this._setSelectedValue(newValue);\n    }\n  }\n  /**\n   * Does the animation step between old and new selected values.\n   * @param firstSelected first/current value to move from\n   * @param lastSelected last value to move to\n   * @param direction direction of the animation\n   * @param maxValue max clock value\n   * @param newValue new value\n   * @param delay delay of the single step\n   */\n  _selectNextNumber(firstSelected, lastSelected, direction, maxValue, newValue, delay) {\n    const current = firstSelected > maxValue ? firstSelected - maxValue : firstSelected;\n    if (firstSelected === lastSelected) {\n      this._animationInProgress = false;\n    }\n    this._setSelectedValue(current);\n    if (firstSelected !== lastSelected) {\n      firstSelected += direction;\n      setTimeout(() => {\n        this._selectNextNumber(firstSelected, lastSelected, direction, maxValue, newValue, delay);\n      }, delay);\n    } else {\n      // the new value is set, fire event\n      setTimeout(() => {\n        this.fireEvent(\"change\", {\n          \"value\": newValue,\n          \"stringValue\": this._getStringValue(newValue),\n          \"finalChange\": true\n        });\n      }, ANIMATION_DELAY_EVENT);\n    }\n  }\n  /**\n   * Mousewheel handler. Increases/decreases value of the clock.\n   * @param increase whether to increase or decrease the value\n   */\n  _modifyValue(increase) {\n    let selectedValue = this.selectedValue;\n    const replacementValue = this.lastItemReplacement;\n    const minValue = this.itemMin;\n    const maxValue = this.itemMax * (this.showInnerCircle ? 2 : 1);\n    let step = this.valueStep;\n    let newValue;\n    // fix step in order to change value to the nearest possible if step is > 1\n    if (selectedValue % step !== 0) {\n      newValue = increase ? Math.ceil(selectedValue / step) * step : Math.floor(selectedValue / step) * step;\n      step = Math.abs(selectedValue - newValue);\n    }\n    if (selectedValue === replacementValue) {\n      selectedValue = maxValue;\n    }\n    if (increase) {\n      selectedValue += step;\n      if (selectedValue > maxValue) {\n        selectedValue -= maxValue;\n      }\n    } else {\n      selectedValue -= step;\n      if (selectedValue < minValue) {\n        selectedValue = maxValue;\n      }\n    }\n    this._setSelectedValue(selectedValue);\n  }\n  /**\n   * Sets new selected value, fires change event and updates selected value object used for rendering purposes.\n   * @param value\n   */\n  _setSelectedValue(value) {\n    const realValue = this._fixReplacementValue(value);\n    this.selectedValue = realValue;\n    this.fireEvent(\"change\", {\n      \"value\": realValue,\n      \"stringValue\": this._getStringValue(realValue),\n      \"finalChange\": false\n    });\n    this._updateSelectedValueObject(realValue);\n  }\n  /**\n   * TouchStart/MouseDown event handler.\n   * @param evt Event object\n   */\n  _onTouchStart(evt) {\n    this._cancelTouchOut = false;\n    if (this.disabled || this._mouseOrTouchDown) {\n      return;\n    }\n    const x = evt.type === \"touchstart\" ? evt.touches[0].pageX : evt.pageX;\n    const y = evt.type === \"touchstart\" ? evt.touches[0].pageY : evt.pageY;\n    this._movSelectedValue = this.selectedValue;\n    this._calculateDimensions();\n    this._calculatePosition(x, y);\n    this._mouseOrTouchDown = true;\n  }\n  /**\n   * TouchMove/MouseMove event handler.\n   * @param evt Event object\n   */\n  _onTouchMove(evt) {\n    let hoveredNumber;\n    const domRef = this.getDomRef();\n    evt.preventDefault();\n    if (this._mouseOrTouchDown) {\n      const x = evt.type === \"touchmove\" ? evt.touches[0].pageX : evt.pageX;\n      const y = evt.type === \"touchmove\" ? evt.touches[0].pageY : evt.pageY;\n      this._calculatePosition(x, y);\n      if (!this.disabled && this._selectedValue !== -1 && this._selectedValue !== this._movSelectedValue) {\n        this._setSelectedValue(this._selectedValue);\n        this._movSelectedValue = 0 + this._selectedValue;\n      }\n    } else if (evt.type === \"mousemove\") {\n      if (!this._dimensionParameters.radius) {\n        this._calculateDimensions();\n      }\n      this._calculatePosition(evt.pageX, evt.pageY);\n      if (this.displayStep > 1 && this._hoveredValue !== -1) {\n        this._hoveredValue = Math.round(this._hoveredValue / this.displayStep) * this.displayStep;\n      }\n      if (!this.disabled && this._hoveredValue !== this._prevHoveredValue) {\n        hoveredNumber = domRef.querySelector(this._hoveredId(this._prevHoveredValue));\n        hoveredNumber && hoveredNumber.classList.remove(CLOCK_NUMBER_HOVER_CLASS);\n        this._prevHoveredValue = this._hoveredValue;\n        hoveredNumber = domRef.querySelector(this._hoveredId(this._prevHoveredValue));\n        hoveredNumber && hoveredNumber.classList.add(CLOCK_NUMBER_HOVER_CLASS);\n      }\n    }\n  }\n  /**\n   * TouchEnd/MouseUp event handler.\n   * @param evt Event object\n   */\n  _onTouchEnd(evt) {\n    if (!this._mouseOrTouchDown) {\n      return;\n    }\n    this._mouseOrTouchDown = false;\n    evt.preventDefault();\n    if (this.disabled || this._selectedValue === -1) {\n      return;\n    }\n    if (!this._cancelTouchOut) {\n      this._changeValueAnimation(this._selectedValue);\n    }\n  }\n  /**\n   * Mouse Wheel event handler.\n   * @param evt Event object\n   */\n  _onMouseWheel(evt) {\n    const increase = evt.detail ? evt.detail > 0 : evt.deltaY > 0 || evt.deltaX > 0;\n    evt.preventDefault();\n    if (!this._mouseOrTouchDown) {\n      this._modifyValue(increase);\n    }\n  }\n  /**\n   * MouseOut event handler.\n   */\n  _onMouseOut() {\n    const hoveredNumber = this.getDomRef().querySelector(this._hoveredId(this._hoveredValue));\n    hoveredNumber && hoveredNumber.classList.remove(CLOCK_NUMBER_HOVER_CLASS);\n    this._hoveredValue = -1;\n    this._prevHoveredValue = -1;\n  }\n};\n__decorate([property({\n  type: Boolean\n})], TimePickerClock.prototype, \"disabled\", void 0);\n__decorate([property({\n  type: Boolean\n})], TimePickerClock.prototype, \"active\", void 0);\n__decorate([property({\n  type: Number\n})], TimePickerClock.prototype, \"itemMin\", void 0);\n__decorate([property({\n  type: Number\n})], TimePickerClock.prototype, \"itemMax\", void 0);\n__decorate([property({\n  type: Boolean\n})], TimePickerClock.prototype, \"showInnerCircle\", void 0);\n__decorate([property()], TimePickerClock.prototype, \"label\", void 0);\n__decorate([property({\n  type: Boolean\n})], TimePickerClock.prototype, \"hideFractions\", void 0);\n__decorate([property({\n  type: Number\n})], TimePickerClock.prototype, \"lastItemReplacement\", void 0);\n__decorate([property({\n  type: Boolean\n})], TimePickerClock.prototype, \"prependZero\", void 0);\n__decorate([property({\n  type: Number\n})], TimePickerClock.prototype, \"selectedValue\", void 0);\n__decorate([property({\n  type: Number\n})], TimePickerClock.prototype, \"displayStep\", void 0);\n__decorate([property({\n  type: Number\n})], TimePickerClock.prototype, \"valueStep\", void 0);\n__decorate([property({\n  type: Array\n})], TimePickerClock.prototype, \"_items\", void 0);\n__decorate([property({\n  type: Object\n})], TimePickerClock.prototype, \"_selectedItem\", void 0);\n__decorate([property({\n  type: Object\n})], TimePickerClock.prototype, \"_dimensionParameters\", void 0);\n__decorate([property({\n  type: Boolean,\n  noAttribute: true\n})], TimePickerClock.prototype, \"_mouseOrTouchDown\", void 0);\n__decorate([property({\n  type: Boolean,\n  noAttribute: true\n})], TimePickerClock.prototype, \"_cancelTouchOut\", void 0);\n__decorate([property({\n  type: Number,\n  noAttribute: true\n})], TimePickerClock.prototype, \"_selectedValue\", void 0);\n__decorate([property({\n  type: Number,\n  noAttribute: true\n})], TimePickerClock.prototype, \"_movSelectedValue\", void 0);\n__decorate([property({\n  type: Number,\n  noAttribute: true\n})], TimePickerClock.prototype, \"_hoveredValue\", void 0);\n__decorate([property({\n  type: Number,\n  noAttribute: true\n})], TimePickerClock.prototype, \"_prevHoveredValue\", void 0);\n__decorate([property({\n  type: Boolean,\n  noAttribute: true\n})], TimePickerClock.prototype, \"_animationInProgress\", void 0);\nTimePickerClock = __decorate([customElement({\n  tag: \"ui5-time-picker-clock\",\n  renderer: litRender,\n  styles: TimePickerClockCss,\n  template: TimePickerClockTemplate\n})\n/**\n * Fired when a value of clock is changed.\n * @param { integer } value The new `value` of the clock.\n * @param { string } stringValue The new `value` of the clock, as string, zero-prepended when necessary.\n * @param { boolean } finalChange `true` when a value is selected and confirmed, `false` when a value is only selected but not confirmed.\n */, event(\"change\", {\n  detail: {\n    /**\n     * @public\n     */\n    value: {\n      type: Number\n    },\n    /**\n     * @public\n     */\n    stringValue: {\n      type: String\n    },\n    /**\n     * @public\n     */\n    finalChange: {\n      type: Boolean\n    }\n  }\n})], TimePickerClock);\nTimePickerClock.define();\nexport default TimePickerClock;","map":{"version":3,"names":["UI5Element","customElement","property","event","litRender","TimePickerClockTemplate","TimePickerClockCss","ANIMATION_DURATION_MAX","ANIMATION_DELAY_EVENT","CLOCK_ANGLE_STEP","CLOCK_NUMBER_CLASS","CLOCK_NUMBER_HOVER_CLASS","CLOCK_NUMBER_SELECTED_CLASS","CLOCK_MIDDOT_CLASS","TimePickerClock","constructor","disabled","active","itemMin","itemMax","showInnerCircle","hideFractions","lastItemReplacement","prependZero","selectedValue","displayStep","valueStep","_items","_selectedItem","_dimensionParameters","radius","centerX","centerY","dotHeight","numberHeight","outerMax","outerMin","innerMax","innerMin","offsetX","offsetY","_mouseOrTouchDown","_cancelTouchOut","_selectedValue","_movSelectedValue","_hoveredValue","_prevHoveredValue","_animationInProgress","_fnOnMouseOutUp","classes","clock","onEnterDOM","document","addEventListener","onExitDOM","removeEventListener","onBeforeRendering","_prepareClockItems","value","_fixReplacementValue","_updateSelectedValueObject","realValue","maxValue","showMarker","selectedOuter","selectedInner","stepAngle","innerValue","toString","padStart","currentAngle","undefined","transform","values","item","valueIndex","i","push","length","innerItem","itemStep","angle","outerStyles","innerStyles","_getClockCoverContainerDomRef","domRef","getDomRef","querySelector","_getMaxValue","_outerHeight","element","style","window","getComputedStyle","offsetHeight","parseInt","marginTop","marginBottom","_hoveredId","valueString","_id","_getStringValue","_calculateDimensions","cover","scrollLeft","pageXOffset","documentElement","scrollTop","pageYOffset","dotElement","numberElement","Math","round","offset","getBoundingClientRect","left","top","_calculatePosition","x","y","dX","dY","mod","atan","PI","angleStep","sqrt","isOuter","isInner","isOuterHover","isInnerHover","finalAngle","_changeValueAnimation","newValue","skipAnimation","arguments","firstSelected","lastSelected","direction","path1","path2","delay","abs","ceil","_selectNextNumber","_setSelectedValue","current","setTimeout","fireEvent","_modifyValue","increase","replacementValue","minValue","step","floor","_onTouchStart","evt","type","touches","pageX","pageY","_onTouchMove","hoveredNumber","preventDefault","classList","remove","add","_onTouchEnd","_onMouseWheel","detail","deltaY","deltaX","_onMouseOut","__decorate","Boolean","Number","Array","Object","noAttribute","tag","renderer","styles","template","stringValue","String","finalChange","define"],"sources":["/home/user/projects/reactproj/node_modules/@ui5/webcomponents/src/TimePickerClock.ts"],"sourcesContent":["import UI5Element from \"@ui5/webcomponents-base/dist/UI5Element.js\";\nimport customElement from \"@ui5/webcomponents-base/dist/decorators/customElement.js\";\nimport property from \"@ui5/webcomponents-base/dist/decorators/property.js\";\nimport event from \"@ui5/webcomponents-base/dist/decorators/event.js\";\nimport type { ClassMap } from \"@ui5/webcomponents-base/dist/types.js\";\nimport litRender from \"@ui5/webcomponents-base/dist/renderer/LitRenderer.js\";\n\n// Template\nimport TimePickerClockTemplate from \"./generated/templates/TimePickerClockTemplate.lit.js\";\n\n// Styles\nimport TimePickerClockCss from \"./generated/themes/TimePickerClock.css.js\";\n\ntype TimePickerClockChangeEventDetail = {\n\tvalue: number,\n\tstringValue: string,\n\tfinalChange: boolean,\n}\n\ntype TimePickerClockItem = {\n\tangle?: number,\n\titem?: string,\n\tinnerItem?: string,\n\touterStyles?: object,\n\tinnerStyles?: object,\n}\n\ntype TimePickerClockSelection = {\n\tshowMarker?: boolean,\n\titemClasses?: string,\n\tinnerItemClasses?: string,\n}\n\ntype TimePickerClockDimensions = {\n\tradius: number,\n\tcenterX: number,\n\tcenterY: number,\n\tdotHeight: number,\n\tnumberHeight: number,\n\touterMax: number,\n\touterMin: number,\n\tinnerMax: number,\n\tinnerMin: number,\n\toffsetX: number,\n\toffsetY: number,\n}\n\ntype TimePickerClockSelectedItem = TimePickerClockItem & TimePickerClockSelection;\n\nconst ANIMATION_DURATION_MAX = 200; // total animation duration, without the delay before firing the event\nconst ANIMATION_DELAY_EVENT = 100; // delay before firing the event\nconst CLOCK_ANGLE_STEP = 6;\nconst CLOCK_NUMBER_CLASS = \"ui5-tp-clock-number\";\nconst CLOCK_NUMBER_HOVER_CLASS = \"ui5-tp-clock-number-hover\";\nconst CLOCK_NUMBER_SELECTED_CLASS = \"ui5-tp-clock-selected\";\nconst CLOCK_MIDDOT_CLASS = \"ui5-tp-clock-mid-dot\";\n\n/**\n * @class\n *\n * ### Overview\n *\n * `ui5-time-picker-clock` allows selecting of hours,minutes or seconds (depending on property set).\n * The component supports interactions with mouse, touch and mouse wheel.\n * Depending on settings, the clock can display only outer set of items (when the clock displays hours in 12-hour mode,\n * minutes or seconds), or outer and inner sets of items (when the clock displays hours in 24-hours mode).\n * The step for displaying or selecting of items can be configured.\n *\n * `ui5-time-picker-clock` is used as part of `ui5-time-selection-clocks` component, which\n * is used in `ui5-time-picker` component respectively.\n *\n * ### Usage\n *\n * `ui5-time-picker-clock` can display hours, minutes or seconds\n *\n * ### ES6 Module Import\n *\n * `import \"@ui5/webcomponents/dist/TimePickerClock.js\";`\n * @constructor\n * @extends UI5Element\n * @since 1.15.0\n * @private\n */\n@customElement({\n\ttag: \"ui5-time-picker-clock\",\n\trenderer: litRender,\n\tstyles: TimePickerClockCss,\n\ttemplate: TimePickerClockTemplate,\n})\n\n/**\n * Fired when a value of clock is changed.\n * @param { integer } value The new `value` of the clock.\n * @param { string } stringValue The new `value` of the clock, as string, zero-prepended when necessary.\n * @param { boolean } finalChange `true` when a value is selected and confirmed, `false` when a value is only selected but not confirmed.\n */\n@event<TimePickerClockChangeEventDetail>(\"change\", {\n\tdetail: {\n\t\t/**\n\t\t * @public\n\t\t */\n\t\tvalue: { type: Number },\n\t\t/**\n\t\t * @public\n\t\t */\n\t\tstringValue: { type: String },\n\t\t/**\n\t\t * @public\n\t\t */\n\t\tfinalChange: { type: Boolean },\n\t},\n})\n\nclass TimePickerClock extends UI5Element {\n\t/**\n\t * Determines whether the component is displayed as disabled.\n\t * @default false\n\t */\n\t@property({ type: Boolean })\n\tdisabled = false;\n\n\t/**\n\t * Determines whether the component is active (visible).\n\t * @default false\n\t */\n\t@property({ type: Boolean })\n\tactive = false;\n\n\t/**\n\t * Minimum item value for the outer circle of the clock.\n\t * @default -1\n\t */\n\t@property({ type: Number })\n\titemMin = -1;\n\n\t/**\n\t * Maximum item value for the outer circle of the clock.\n\t * @default -1\n\t */\n\t@property({ type: Number })\n\titemMax = -1;\n\n\t/**\n\t * If set to `true`, an inner circle is displayed.\n\t * The first item value of the inner circle will be itemMax + 1\n\t * @default false\n\t */\n\t@property({ type: Boolean })\n\tshowInnerCircle = false;\n\n\t/**\n\t * Label of the clock dial - for example, 'Hours', 'Minutes', or 'Seconds'.\n\t * @default undefined\n\t */\n\t@property()\n\tlabel?: string;\n\n\t/**\n\t * If set to `true`, a surrounding circle with markers (dots) will be hidden.\n\t * (for example, on the 'Minutes' clock-dial, markers represent minutes).\n\t * @default false\n\t */\n\t@property({ type: Boolean })\n\thideFractions = false;\n\n\t/**\n\t * If provided, this will replace the last item displayed. If there is only one (outer) circle,\n\t * the last item from outer circle will be replaced; if there is an inner circle too, the last\n\t * item of inner circle will be replaced. Usually, the last item '24' is replaced with '0'.\n\t * @default -1\n\t */\n\t@property({ type: Number })\n\tlastItemReplacement = -1;\n\n\t/**\n\t * Prepend with zero flag. If `true`, values less than 10 will be prepend with 0.\n\t * @default false\n\t */\n\t@property({ type: Boolean })\n\tprependZero = false;\n\n\t/**\n\t * The currently selected value of the clock.\n\t * @default -1\n\t */\n\t@property({ type: Number })\n\tselectedValue = -1\n\n\t/**\n\t * The step for displaying of one unit of items.\n\t * 1 means 1/60 of the circle.\n\t * The default display step is 5 which means minutes and seconds are displayed as \"0\", \"5\", \"10\", etc.\n\t * For hours the display step must be set to 1.\n\t * @default 5\n\t */\n\t@property({ type: Number })\n\tdisplayStep = 5;\n\n\t/**\n\t * The step for selection of items.\n\t * 1 means 1 unit:\n\t * - if the clock displays hours - 1 unit = 1 hour\n\t * - if the clock displays minutes/seconds - 1 unit = 1 minute/second\n\t * @default 1\n\t */\n\t@property({ type: Number })\n\tvalueStep = 1;\n\n\t/**\n\t * Defines the currently available Time Picker Clock items depending on Clock setup.\n\t */\n\t@property({ type: Array })\n\t_items: Array<TimePickerClockItem> = [];\n\n\t/**\n\t * Defines the currently selected Time Picker Clock item.\n\t */\n\t@property({ type: Object })\n\t_selectedItem: TimePickerClockSelectedItem = {};\n\n\t/**\n\t * Keeps variables used in interaction calculations.\n\t */\n\t@property({ type: Object })\n\t_dimensionParameters: TimePickerClockDimensions = {\n\t\tradius: 0,\n\t\tcenterX: 0,\n\t\tcenterY: 0,\n\t\tdotHeight: 0,\n\t\tnumberHeight: 0,\n\t\touterMax: 0,\n\t\touterMin: 0,\n\t\tinnerMax: 0,\n\t\tinnerMin: 0,\n\t\toffsetX: 0,\n\t\toffsetY: 0,\n\t};\n\n\t/**\n\t * Mousedown or Touchstart event flag.\n\t * @default false\n\t */\n\t@property({ type: Boolean, noAttribute: true })\n\t_mouseOrTouchDown = false;\n\n\t/**\n\t * Cancel Mouseout flag.\n\t * @default false\n\t */\n\t@property({ type: Boolean, noAttribute: true })\n\t_cancelTouchOut = false;\n\n\t/**\n\t * Calculated selected value of the clock during interactions.\n\t * @default -1\n\t */\n\t@property({ type: Number, noAttribute: true })\n\t_selectedValue = -1;\n\n\t/**\n\t * Selected value of the clock during interactions.\n\t * @default -1\n\t */\n\t@property({ type: Number, noAttribute: true })\n\t_movSelectedValue = -1;\n\n\t/**\n\t * Hovered value of the clock during interactions.\n\t * @default -1\n\t */\n\t@property({ type: Number, noAttribute: true })\n\t_hoveredValue = -1;\n\n\t/**\n\t * Previously hovered value of the clock during interactions.\n\t * @default -1\n\t */\n\t@property({ type: Number, noAttribute: true })\n\t_prevHoveredValue = -1;\n\n\t/**\n\t * Animation in progress flag.\n\t * @default false\n\t */\n\t@property({ type: Boolean, noAttribute: true })\n\t_animationInProgress = false;\n\n\t_fnOnMouseOutUp: () => void;\n\n\tconstructor() {\n\t\tsuper();\n\n\t\tthis._fnOnMouseOutUp = () => {\n\t\t\tthis._mouseOrTouchDown = false;\n\t\t};\n\t}\n\n\tget classes(): ClassMap {\n\t\treturn <ClassMap>{\n\t\t\tclock: {\n\t\t\t\t\"ui5-tp-clock\": true,\n\t\t\t\t\"ui5-tp-clock-inner\": this.showInnerCircle,\n\t\t\t\t\"ui5-tp-clock-active\": this.active,\n\t\t\t},\n\t\t};\n\t}\n\n\tonEnterDOM() {\n\t\tdocument.addEventListener(\"mouseup\", this._fnOnMouseOutUp, false);\n\t}\n\n\tonExitDOM() {\n\t\tdocument.removeEventListener(\"mouseup\", this._fnOnMouseOutUp, false);\n\t}\n\n\tonBeforeRendering() {\n\t\tthis._prepareClockItems();\n\t\tconst value: number = this._fixReplacementValue(this.selectedValue);\n\t\tthis._updateSelectedValueObject(value);\n\t}\n\n\t/**\n\t * Returns the real value of the passed clock item, if the replacement must be done, returns the replaced value.\n\t * @param value The value of the clock item\n\t * @returns The real/replaced value\n\t */\n\t_fixReplacementValue(value: number): number {\n\t\tlet realValue = value;\n\t\tconst maxValue = this.itemMax * (this.showInnerCircle ? 2 : 1);\n\n\t\tif (realValue === 0) {\n\t\t\trealValue = maxValue;\n\t\t}\n\t\tif (realValue === maxValue && this.lastItemReplacement !== -1) {\n\t\t\trealValue = this.lastItemReplacement;\n\t\t}\n\n\t\treturn realValue;\n\t}\n\n\t/**\n\t * Updates internal selected value object constructed for rendering purposes.\n\t * @param value currently selected value.\n\t */\n\t_updateSelectedValueObject(value: number) {\n\t\tif (value === -1) {\n\t\t\tthis._selectedItem = {\n\t\t\t\tshowMarker: false,\n\t\t\t};\n\t\t\treturn;\n\t\t}\n\n\t\tconst selectedOuter = (value >= this.itemMin && value <= this.itemMax) || (!this.showInnerCircle && value === this.lastItemReplacement);\n\t\tconst selectedInner = ((value >= this.itemMin + this.itemMax && value <= this.itemMax * 2) || value === this.lastItemReplacement) && this.showInnerCircle;\n\t\tconst stepAngle = 360 / (this.itemMax - this.itemMin + 1);\n\t\tconst innerValue = this.lastItemReplacement === -1 || !this.prependZero ? value.toString() : value.toString().padStart(2, \"0\");\n\t\tlet currentAngle: number | undefined = selectedOuter || selectedInner ? value * stepAngle : undefined;\n\n\t\tif (currentAngle !== undefined) {\n\t\t\tcurrentAngle %= 360;\n\t\t}\n\n\t\tthis._selectedItem = {\n\t\t\t\"angle\": currentAngle,\n\t\t\t\"item\": selectedOuter ? value.toString() : \"\",\n\t\t\t\"innerItem\": selectedInner ? innerValue : \"\",\n\t\t\t\"showMarker\": selectedOuter || selectedInner,\n\t\t\t\"itemClasses\": CLOCK_NUMBER_CLASS + (selectedOuter ? ` ${CLOCK_NUMBER_SELECTED_CLASS}` : \"\"),\n\t\t\t\"innerItemClasses\": CLOCK_NUMBER_CLASS + (selectedInner ? ` ${CLOCK_NUMBER_SELECTED_CLASS}` : \"\"),\n\t\t\t\"outerStyles\": {\n\t\t\t\ttransform: `translate(-50%) rotate(${currentAngle || 0}deg)`,\n\t\t\t},\n\t\t\t\"innerStyles\": {\n\t\t\t\ttransform: `rotate(-${currentAngle || 0}deg)`,\n\t\t\t},\n\t\t};\n\t}\n\n\t/**\n\t * Prepares clock items objects according to current clock settings. Item objects are used for rendering purposes.\n\t */\n\t_prepareClockItems() {\n\t\tconst values = [];\n\t\tlet displayStep = this.displayStep;\n\t\tlet item: TimePickerClockItem;\n\t\tlet valueIndex;\n\t\tlet i;\n\n\t\tthis._items = [];\n\n\t\tfor (i = this.itemMin; i <= this.itemMax; i++) {\n\t\t\tvalues.push({\n\t\t\t\t\"item\": i.toString(),\n\t\t\t\t\"innerItem\": this.showInnerCircle ? (i + this.itemMax).toString() : undefined,\n\t\t\t});\n\t\t}\n\t\tif (this.lastItemReplacement !== -1) {\n\t\t\tif (this.showInnerCircle && this.prependZero) {\n\t\t\t\tvalues[values.length - 1].innerItem = this.lastItemReplacement.toString().padStart(2, \"0\");\n\t\t\t} else {\n\t\t\t\tvalues[values.length - 1].item = this.lastItemReplacement.toString();\n\t\t\t}\n\t\t}\n\n\t\t// determines angle step for values display\n\t\tconst itemStep = 360 / CLOCK_ANGLE_STEP / values.length;\n\n\t\t// determines step for values display in units\n\t\tif (this.valueStep * itemStep > displayStep) {\n\t\t\tdisplayStep = this.valueStep * itemStep;\n\t\t}\n\n\t\tfor (i = 1; i <= 60; i++) {\n\t\t\tvalueIndex = i / itemStep - 1;\n\t\t\titem = i % displayStep !== 0 ? {} : values[valueIndex];\n\t\t\titem.angle = i * CLOCK_ANGLE_STEP;\n\t\t\titem.outerStyles = {\n\t\t\t\ttransform: `translate(-50%) rotate(${i * 6}deg)`,\n\t\t\t};\n\t\t\titem.innerStyles = {\n\t\t\t\ttransform: `rotate(-${i * 6}deg)`,\n\t\t\t};\n\t\t\tthis._items.push(item);\n\t\t}\n\t}\n\n\t/**\n\t * Returns the DOM Reference of the clock cover element\n\t * @returns the DOM Reference\n\t */\n\t_getClockCoverContainerDomRef(): Element | null | undefined {\n\t\tconst domRef = this.getDomRef();\n\t\treturn domRef && domRef.querySelector(\".ui5-tp-clock-cover\");\n\t}\n\n\t/**\n\t * Returns the real max value of clock items, taking in count if there is inner circle or not.\n\t * @returns max value\n\t */\n\t_getMaxValue(): number {\n\t\treturn this.showInnerCircle ? this.itemMax * 2 : this.itemMax;\n\t}\n\n\t/**\n\t * Calculates the outer height of a HTML element.\n\t * @param element The element which outer height to be calculated\n\t * @returns Outer height of the passed HTML element\n\t */\n\t_outerHeight(element: HTMLElement): number {\n\t\tif (!element) {\n\t\t\treturn 0;\n\t\t}\n\n\t\tconst style = window.getComputedStyle(element);\n\n\t\treturn element.offsetHeight + parseInt(style.marginTop) + parseInt(style.marginBottom);\n\t}\n\n\t/**\n\t * Returns the Id of the DOM element of the clock item that display specific value.\n\t * @param value The value of the clock item\n\t * @returns Id of the clock item element\n\t */\n\t_hoveredId(value: number): string {\n\t\tif (value === this._getMaxValue() && this.lastItemReplacement !== -1) {\n\t\t\tvalue = this.lastItemReplacement;\n\t\t}\n\n\t\tconst valueString = this.showInnerCircle && value === this.lastItemReplacement && this.prependZero ? value.toString().padStart(2, \"0\") : value.toString();\n\n\t\treturn `#${this._id}-${valueString}`;\n\t}\n\n\t/**\n\t * Returns provided value as string. Padding with additional zero is applied if necessary.\n\t * @param value The value that should be returned as string\n\t * @returns The value as string\n\t */\n\t_getStringValue(value: number): string {\n\t\treturn this.prependZero ? value.toString().padStart(2, \"0\") : value.toString();\n\t}\n\n\t/**\n\t * Calculates dimension variables necessary for determining of item selection.\n\t * @returns Dimensions object\n\t */\n\t_calculateDimensions(): TimePickerClockDimensions | undefined {\n\t\tconst cover = this.getDomRef() as HTMLElement;\n\t\tconst scrollLeft = window.pageXOffset || document.documentElement.scrollLeft;\n\t\tconst scrollTop = window.pageYOffset || document.documentElement.scrollTop;\n\n\t\tif (!cover) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst domRef = this.getDomRef() as HTMLElement;\n\t\tconst dotElement = domRef.querySelector(`.${CLOCK_MIDDOT_CLASS}`) as HTMLElement;\n\t\tconst numberElement = domRef.querySelector(`.${CLOCK_NUMBER_CLASS}`) as HTMLElement;\n\t\tconst radius = Math.round(cover.offsetHeight / 2);\n\t\tconst dotHeight = this._outerHeight(dotElement);\n\t\tconst numberHeight = this._outerHeight(numberElement);\n\t\tconst offset = cover.getBoundingClientRect();\n\n\t\tthis._dimensionParameters = {\n\t\t\t\"radius\": radius,\n\t\t\t\"centerX\": radius,\n\t\t\t\"centerY\": radius,\n\t\t\t\"dotHeight\": dotHeight,\n\t\t\t\"numberHeight\": numberHeight,\n\t\t\t\"outerMax\": radius,\n\t\t\t\"outerMin\": radius - numberHeight,\n\t\t\t\"innerMax\": radius - numberHeight - 1,\n\t\t\t\"innerMin\": radius - numberHeight * 2 - 1,\n\t\t\t\"offsetX\": offset.left + scrollLeft,\n\t\t\t\"offsetY\": offset.top + scrollTop,\n\t\t};\n\t}\n\n\t/**\n\t * Calculates selected and hovered values based on click/touch position.\n\t * @param x X position of click/touch returned by the event\n\t * @param y Y position of click/touch returned by the event\n\t */\n\t_calculatePosition(x: number, y: number) {\n\t\tconst dX = x - this._dimensionParameters.offsetX + 1 - this._dimensionParameters.radius;\n\t\tconst dY = y - this._dimensionParameters.offsetY + 1 - this._dimensionParameters.radius;\n\t\tconst mod = dX >= 0 ? 0 : 180;\n\t\tconst angle = ((Math.atan(dY / dX) * 180) / Math.PI) + 90 + mod;\n\t\tconst angleStep = (360 / this.itemMax) * this.valueStep;\n\t\tconst radius = Math.sqrt(dX * dX + dY * dY);\n\t\tconst isOuter = radius <= this._dimensionParameters.outerMax && radius > (this.showInnerCircle ? this._dimensionParameters.outerMin : this._dimensionParameters.innerMin);\n\t\tconst isInner = this.showInnerCircle && radius <= this._dimensionParameters.innerMax && radius > this._dimensionParameters.innerMin;\n\t\tconst isOuterHover = radius <= this._dimensionParameters.outerMax && radius > this._dimensionParameters.outerMin;\n\t\tconst isInnerHover = isInner;\n\t\tlet finalAngle = Math.round((angle === 0 ? 360 : angle) / angleStep) * angleStep;\n\n\t\tif (finalAngle === 0) {\n\t\t\tfinalAngle = 360;\n\t\t}\n\n\t\t// selected item calculations\n\t\tif (isInner || isOuter) {\n\t\t\tthis._selectedValue = (finalAngle / angleStep) * this.valueStep;\n\t\t\tif (isInner) {\n\t\t\t\tthis._selectedValue += this.itemMax;\n\t\t\t}\n\t\t} else {\n\t\t\tthis._selectedValue = -1;\n\t\t}\n\n\t\t// hover simulation calculations\n\t\tthis._hoveredValue = isInnerHover || isOuterHover ? this._selectedValue : -1;\n\n\t\tif (this._selectedValue === this._getMaxValue() && this.lastItemReplacement !== -1) {\n\t\t\tthis._selectedValue = this.lastItemReplacement;\n\t\t}\n\t}\n\n\t/**\n\t * Does the animation between the old and the new value of the clock. Can be skipped with setting the second parameter to true.\n\t * @param newValue the new value that must be set\n\t * @param skipAnimation whether to skip the animation\n\t */\n\t_changeValueAnimation(newValue: number, skipAnimation = false) {\n\t\tconst maxValue = this.itemMax * (this.showInnerCircle ? 2 : 1);\n\t\tlet firstSelected = this._movSelectedValue;\n\t\tlet\tlastSelected = newValue;\n\t\tlet direction = 1;\n\t\tlet\tpath1;\n\t\tlet path2;\n\t\tlet delay;\n\n\t\tif (!skipAnimation) {\n\t\t\t// do the animation here\n\n\t\t\tpath1 = Math.abs(firstSelected - lastSelected);\n\t\t\tpath2 = maxValue - path1;\n\n\t\t\tif (firstSelected < lastSelected) {\n\t\t\t\tif (path2 < path1) {\n\t\t\t\t\tfirstSelected += maxValue;\n\t\t\t\t\tdirection = -1;\n\t\t\t\t}\n\t\t\t} else if (path2 < path1) {\n\t\t\t\tlastSelected += maxValue;\n\t\t\t} else {\n\t\t\t\tdirection = -1;\n\t\t\t}\n\n\t\t\tdelay = firstSelected === lastSelected ? 0 : Math.ceil(ANIMATION_DURATION_MAX / Math.abs(firstSelected - lastSelected));\n\t\t\tthis._animationInProgress = true;\n\t\t\tthis._selectNextNumber(firstSelected, lastSelected, direction, maxValue, newValue, delay);\n\t\t} else {\n\t\t\tthis._setSelectedValue(newValue);\n\t\t}\n\t}\n\n\t/**\n\t * Does the animation step between old and new selected values.\n\t * @param firstSelected first/current value to move from\n\t * @param lastSelected last value to move to\n\t * @param direction direction of the animation\n\t * @param maxValue max clock value\n\t * @param newValue new value\n\t * @param delay delay of the single step\n\t */\n\t_selectNextNumber(firstSelected: number, lastSelected: number, direction: number, maxValue: number, newValue: number, delay: number) {\n\t\tconst current = firstSelected > maxValue ? firstSelected - maxValue : firstSelected;\n\n\t\tif (firstSelected === lastSelected) {\n\t\t\tthis._animationInProgress = false;\n\t\t}\n\t\tthis._setSelectedValue(current);\n\t\tif (firstSelected !== lastSelected) {\n\t\t\tfirstSelected += direction;\n\t\t\tsetTimeout(() => {\n\t\t\t\tthis._selectNextNumber(firstSelected, lastSelected, direction, maxValue, newValue, delay);\n\t\t\t}, delay);\n\t\t} else {\n\t\t\t// the new value is set, fire event\n\t\t\tsetTimeout(() => {\n\t\t\t\tthis.fireEvent<TimePickerClockChangeEventDetail>(\"change\", {\n\t\t\t\t\t\"value\": newValue,\n\t\t\t\t\t\"stringValue\": this._getStringValue(newValue),\n\t\t\t\t\t\"finalChange\": true,\n\t\t\t\t});\n\t\t\t}, ANIMATION_DELAY_EVENT);\n\t\t}\n\t}\n\n\t/**\n\t * Mousewheel handler. Increases/decreases value of the clock.\n\t * @param increase whether to increase or decrease the value\n\t */\n\t_modifyValue(increase: boolean) {\n\t\tlet selectedValue = this.selectedValue;\n\t\tconst replacementValue = this.lastItemReplacement;\n\t\tconst minValue = this.itemMin;\n\t\tconst maxValue = this.itemMax * (this.showInnerCircle ? 2 : 1);\n\t\tlet step = this.valueStep;\n\t\tlet newValue;\n\n\t\t// fix step in order to change value to the nearest possible if step is > 1\n\t\tif (selectedValue % step !== 0) {\n\t\t\tnewValue = increase ? Math.ceil(selectedValue / step) * step : Math.floor(selectedValue / step) * step;\n\t\t\tstep = Math.abs(selectedValue - newValue);\n\t\t}\n\n\t\tif (selectedValue === replacementValue) {\n\t\t\tselectedValue = maxValue;\n\t\t}\n\t\tif (increase) {\n\t\t\tselectedValue += step;\n\t\t\tif (selectedValue > maxValue) {\n\t\t\t\tselectedValue -= maxValue;\n\t\t\t}\n\t\t} else {\n\t\t\tselectedValue -= step;\n\t\t\tif (selectedValue < minValue) {\n\t\t\t\tselectedValue = maxValue;\n\t\t\t}\n\t\t}\n\n\t\tthis._setSelectedValue(selectedValue);\n\t}\n\n\t/**\n\t * Sets new selected value, fires change event and updates selected value object used for rendering purposes.\n\t * @param value\n\t */\n\t_setSelectedValue(value: number) {\n\t\tconst realValue: number = this._fixReplacementValue(value);\n\t\tthis.selectedValue = realValue;\n\t\tthis.fireEvent<TimePickerClockChangeEventDetail>(\"change\", {\n\t\t\t\"value\": realValue,\n\t\t\t\"stringValue\": this._getStringValue(realValue),\n\t\t\t\"finalChange\": false,\n\t\t});\n\t\tthis._updateSelectedValueObject(realValue);\n\t}\n\n\t/**\n\t * TouchStart/MouseDown event handler.\n\t * @param evt Event object\n\t */\n\t_onTouchStart(evt: Event) {\n\t\tthis._cancelTouchOut = false;\n\t\tif (this.disabled || this._mouseOrTouchDown) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst x = evt.type === \"touchstart\" ? (evt as TouchEvent).touches[0].pageX : (evt as MouseEvent).pageX;\n\t\tconst y = evt.type === \"touchstart\" ? (evt as TouchEvent).touches[0].pageY : (evt as MouseEvent).pageY;\n\n\t\tthis._movSelectedValue = this.selectedValue;\n\t\tthis._calculateDimensions();\n\t\tthis._calculatePosition(x, y);\n\t\tthis._mouseOrTouchDown = true;\n\t}\n\n\t/**\n\t * TouchMove/MouseMove event handler.\n\t * @param evt Event object\n\t */\n\t_onTouchMove(evt: Event) {\n\t\tlet\thoveredNumber;\n\t\tconst domRef = this.getDomRef();\n\n\t\tevt.preventDefault();\n\t\tif (this._mouseOrTouchDown) {\n\t\t\tconst x = evt.type === \"touchmove\" ? (evt as TouchEvent).touches[0].pageX : (evt as MouseEvent).pageX;\n\t\t\tconst y = evt.type === \"touchmove\" ? (evt as TouchEvent).touches[0].pageY : (evt as MouseEvent).pageY;\n\t\t\tthis._calculatePosition(x, y);\n\t\t\tif (!this.disabled && this._selectedValue !== -1 && this._selectedValue !== this._movSelectedValue) {\n\t\t\t\tthis._setSelectedValue(this._selectedValue);\n\t\t\t\tthis._movSelectedValue = 0 + this._selectedValue;\n\t\t\t}\n\t\t} else if (evt.type === \"mousemove\") {\n\t\t\tif (!this._dimensionParameters.radius) {\n\t\t\t\tthis._calculateDimensions();\n\t\t\t}\n\t\t\tthis._calculatePosition((evt as MouseEvent).pageX, (evt as MouseEvent).pageY);\n\t\t\tif (this.displayStep > 1 && this._hoveredValue !== -1) {\n\t\t\t\tthis._hoveredValue = Math.round(this._hoveredValue / this.displayStep) * this.displayStep;\n\t\t\t}\n\n\t\t\tif (!this.disabled && this._hoveredValue !== this._prevHoveredValue) {\n\t\t\t\thoveredNumber = (domRef as HTMLElement).querySelector(this._hoveredId(this._prevHoveredValue));\n\t\t\t\thoveredNumber && hoveredNumber.classList.remove(CLOCK_NUMBER_HOVER_CLASS);\n\t\t\t\tthis._prevHoveredValue = this._hoveredValue;\n\t\t\t\thoveredNumber = (domRef as HTMLElement).querySelector(this._hoveredId(this._prevHoveredValue));\n\t\t\t\thoveredNumber && hoveredNumber.classList.add(CLOCK_NUMBER_HOVER_CLASS);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * TouchEnd/MouseUp event handler.\n\t * @param evt Event object\n\t */\n\t_onTouchEnd(evt: Event) {\n\t\tif (!this._mouseOrTouchDown) {\n\t\t\treturn;\n\t\t}\n\t\tthis._mouseOrTouchDown = false;\n\t\tevt.preventDefault();\n\t\tif (this.disabled || this._selectedValue === -1) {\n\t\t\treturn;\n\t\t}\n\t\tif (!this._cancelTouchOut) {\n\t\t\tthis._changeValueAnimation(this._selectedValue);\n\t\t}\n\t}\n\n\t/**\n\t * Mouse Wheel event handler.\n\t * @param evt Event object\n\t */\n\t_onMouseWheel(evt: WheelEvent) {\n\t\tconst increase = evt.detail ? (evt.detail > 0) : (evt.deltaY > 0 || evt.deltaX > 0);\n\n\t\tevt.preventDefault();\n\t\tif (!this._mouseOrTouchDown) {\n\t\t\tthis._modifyValue(increase);\n\t\t}\n\t}\n\n\t/**\n\t * MouseOut event handler.\n\t */\n\t_onMouseOut() {\n\t\tconst hoveredNumber = (this.getDomRef() as HTMLElement).querySelector(this._hoveredId(this._hoveredValue));\n\n\t\thoveredNumber && hoveredNumber.classList.remove(CLOCK_NUMBER_HOVER_CLASS);\n\t\tthis._hoveredValue = -1;\n\t\tthis._prevHoveredValue = -1;\n\t}\n}\n\nTimePickerClock.define();\n\nexport default TimePickerClock;\nexport type { TimePickerClockChangeEventDetail };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}