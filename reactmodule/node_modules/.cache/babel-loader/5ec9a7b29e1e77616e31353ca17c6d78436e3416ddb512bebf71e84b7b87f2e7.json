{"ast":null,"code":"var __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n    r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n    d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar TimePicker_1;\nimport { isDesktop, isPhone, isTablet } from \"@ui5/webcomponents-base/dist/Device.js\";\nimport UI5Element from \"@ui5/webcomponents-base/dist/UI5Element.js\";\nimport customElement from \"@ui5/webcomponents-base/dist/decorators/customElement.js\";\nimport property from \"@ui5/webcomponents-base/dist/decorators/property.js\";\nimport event from \"@ui5/webcomponents-base/dist/decorators/event.js\";\nimport slot from \"@ui5/webcomponents-base/dist/decorators/slot.js\";\nimport litRender from \"@ui5/webcomponents-base/dist/renderer/LitRenderer.js\";\nimport { submitForm } from \"@ui5/webcomponents-base/dist/features/InputElementsFormSupport.js\";\nimport { getI18nBundle } from \"@ui5/webcomponents-base/dist/i18nBundle.js\";\nimport getLocale from \"@ui5/webcomponents-base/dist/locale/getLocale.js\";\nimport ValueState from \"@ui5/webcomponents-base/dist/types/ValueState.js\";\nimport { getEffectiveAriaLabelText } from \"@ui5/webcomponents-base/dist/util/AriaLabelHelper.js\";\nimport \"@ui5/webcomponents-localization/dist/features/calendar/Gregorian.js\"; // default calendar for bundling\nimport DateFormat from \"@ui5/webcomponents-localization/dist/DateFormat.js\";\nimport getCachedLocaleDataInstance from \"@ui5/webcomponents-localization/dist/getCachedLocaleDataInstance.js\";\nimport { fetchCldr } from \"@ui5/webcomponents-base/dist/asset-registries/LocaleData.js\";\nimport { isShow, isEnter, isPageUp, isPageDown, isPageUpShift, isPageDownShift, isPageUpShiftCtrl, isPageDownShiftCtrl, isTabNext, isTabPrevious, isF6Next, isF6Previous } from \"@ui5/webcomponents-base/dist/Keys.js\";\nimport \"@ui5/webcomponents-icons/dist/time-entry-request.js\";\nimport UI5Date from \"@ui5/webcomponents-localization/dist/dates/UI5Date.js\";\nimport Icon from \"./Icon.js\";\nimport Popover from \"./Popover.js\";\nimport ResponsivePopover from \"./ResponsivePopover.js\";\nimport TimePickerTemplate from \"./generated/templates/TimePickerTemplate.lit.js\";\nimport Input from \"./Input.js\";\nimport Button from \"./Button.js\";\nimport TimeSelectionClocks from \"./TimeSelectionClocks.js\";\nimport TimeSelectionInputs from \"./TimeSelectionInputs.js\";\nimport { TIMEPICKER_SUBMIT_BUTTON, TIMEPICKER_CANCEL_BUTTON, TIMEPICKER_INPUT_DESCRIPTION, TIMEPICKER_POPOVER_ACCESSIBLE_NAME, FORM_TEXTFIELD_REQUIRED } from \"./generated/i18n/i18n-defaults.js\";\n// Styles\nimport TimePickerCss from \"./generated/themes/TimePicker.css.js\";\nimport TimePickerPopoverCss from \"./generated/themes/TimePickerPopover.css.js\";\nimport ResponsivePopoverCommonCss from \"./generated/themes/ResponsivePopoverCommon.css.js\";\n/**\n * @class\n *\n * ### Overview\n * The `ui5-time-picker` component provides an input field with assigned clocks which are opened on user action.\n * The `ui5-time-picker` allows users to select a localized time using touch, mouse, or keyboard input.\n * It consists of two parts: the time input field and the clocks.\n *\n * ### Usage\n * The user can enter a time by:\n *\n * - Using the clocks that are displayed in a popup\n * - Typing it in directly in the input field\n *\n * When the user makes an entry and chooses the enter key, the clocks show the corresponding time (hours, minutes and seconds separately).\n * When the user directly triggers the clocks display, the actual time is displayed.\n * For the `ui5-time-picker`\n *\n * ### Formatting\n *\n * If a time is entered by typing it into\n * the input field, it must fit to the used time format.\n *\n * Supported format options are pattern-based on Unicode LDML Date Format notation.\n * For more information, see [UTS #35: Unicode Locale Data Markup Language](http://unicode.org/reports/tr35/#Date_Field_Symbol_Table).\n *\n * For example, if the `format-pattern` is \"HH:mm:ss\",\n * a valid value string is \"11:42:35\" and the same is displayed in the input.\n *\n * ### Keyboard handling\n * [F4], [Alt]+[Up], [Alt]+[Down] Open/Close picker dialog and move focus to it.\n *\n * When closed:\n *\n * - [Page Up] - Increments hours by 1. If 12 am is reached, increment hours to 1 pm and vice versa.\n * - [Page Down] - Decrements the corresponding field by 1. If 1 pm is reached, decrement hours to 12 am and vice versa.\n * - [Shift]+[Page Up] - Increments minutes by 1.\n * - [Shift]+[Page Down] - Decrements minutes by 1.\n * - [Shift]+[Ctrl]+[Page Up] - Increments seconds by 1.\n * - [Shift]+[Ctrl]+[Page Down] - Decrements seconds by 1.\n * -\n *\n * When opened:\n *\n * - [Page Up] - Increments hours by 1. If 12 am is reached, increment hours to 1 pm and vice versa.\n * - [Page Down] - Decrements the corresponding field by 1. If 1 pm is reached, decrement hours to 12 am and vice versa.\n * - [Shift]+[Page Up] - Increments minutes by 1.\n * - [Shift]+[Page Down] - Decrements minutes by 1.\n * - [Shift]+[Ctrl]+[Page Up] - Increments seconds by 1.\n * - [Shift]+[Ctrl]+[Page Down] - Decrements seconds by 1.\n * - [A] or [P] - Selects AM or PM respectively.\n * - [0]-[9] - Allows direct time selecting (hours/minutes/seconds).\n * - [:] - Allows switching between hours/minutes/seconds clocks. If the last clock is displayed and [:] is pressed, the first clock is beind displayed.\n *\n * ### ES6 Module Import\n *\n * `import \"@ui5/webcomponents/dist/TimePicker.js\";`\n * @constructor\n * @extends UI5Element\n * @public\n * @since 1.0.0-rc.6\n */\nlet TimePicker = TimePicker_1 = class TimePicker extends UI5Element {\n  constructor() {\n    super(...arguments);\n    /**\n     * Defines a formatted time value.\n     * @default \"\"\n     * @formEvents change input\n     * @formProperty\n     * @public\n     */\n    this.value = \"\";\n    /**\n     * Defines the value state of the component.\n     * @default \"None\"\n     * @public\n     */\n    this.valueState = \"None\";\n    /**\n     * Defines the disabled state of the comonent.\n     * @default false\n     * @public\n     */\n    this.disabled = false;\n    /**\n     * Defines the readonly state of the comonent.\n     * @default false\n     * @public\n     */\n    this.readonly = false;\n    /**\n     * Defines the open or closed state of the popover.\n     * @public\n     * @default false\n     * @since 2.0.0\n     */\n    this.open = false;\n    /**\n     * Defines whether the component is required.\n     * @since 2.1.0\n     * @default false\n     * @public\n     */\n    this.required = false;\n    this._isInputsPopoverOpen = false;\n  }\n  static async onDefine() {\n    [TimePicker_1.i18nBundle] = await Promise.all([getI18nBundle(\"@ui5/webcomponents\"), fetchCldr(getLocale().getLanguage(), getLocale().getRegion(), getLocale().getScript())]);\n  }\n  get formValidityMessage() {\n    return TimePicker_1.i18nBundle.getText(FORM_TEXTFIELD_REQUIRED);\n  }\n  get formValidity() {\n    return {\n      valueMissing: this.required && !this.value\n    };\n  }\n  async formElementAnchor() {\n    return (await this.getFocusDomRefAsync())?.getFocusDomRefAsync();\n  }\n  get formFormattedValue() {\n    return this.value || \"\";\n  }\n  onBeforeRendering() {\n    if (this.value) {\n      this.value = this.normalizeValue(this.value) || this.value;\n    }\n    this.tempValue = this.value && this.isValid(this.value) ? this.value : this.getFormat().format(UI5Date.getInstance());\n  }\n  get dateAriaDescription() {\n    return TimePicker_1.i18nBundle.getText(TIMEPICKER_INPUT_DESCRIPTION);\n  }\n  get pickerAccessibleName() {\n    return TimePicker_1.i18nBundle.getText(TIMEPICKER_POPOVER_ACCESSIBLE_NAME);\n  }\n  get accInfo() {\n    return {\n      \"ariaRoledescription\": this.dateAriaDescription,\n      \"ariaHasPopup\": \"dialog\",\n      \"ariaRequired\": this.required,\n      \"ariaLabel\": getEffectiveAriaLabelText(this)\n    };\n  }\n  /**\n   * Currently selected time represented as JavaScript Date instance\n   * @public\n   * @default null\n   */\n  get dateValue() {\n    return this.getFormat().parse(this._effectiveValue);\n  }\n  /**\n   * @protected\n   */\n  get _placeholder() {\n    return this.placeholder !== undefined ? this.placeholder : this._displayFormat;\n  }\n  /**\n   * @protected\n   */\n  get _formatPattern() {\n    const hasHours = !!this.formatPattern?.match(/H/i);\n    const fallback = !this.formatPattern || !hasHours;\n    const localeData = getCachedLocaleDataInstance(getLocale());\n    return fallback ? localeData.getTimePattern(\"medium\") : this.formatPattern;\n  }\n  get _displayFormat() {\n    // @ts-ignore oFormatOptions is a private API of DateFormat\n    return this.getFormat().oFormatOptions.pattern;\n  }\n  get _effectiveValue() {\n    return this.value;\n  }\n  get _timeSelectionValue() {\n    return this.tempValue;\n  }\n  get _isPhone() {\n    return isPhone();\n  }\n  get _isMobileDevice() {\n    return !isDesktop() && (isPhone() || isTablet());\n  }\n  onTimeSelectionChange(e) {\n    this.tempValue = e.detail.value; // every time the user changes the time selection -> update tempValue\n  }\n  _togglePicker() {\n    this.open = !this.open;\n  }\n  submitPickers() {\n    this._updateValueAndFireEvents(this.tempValue, true, [\"change\", \"value-changed\"]);\n    this._togglePicker();\n  }\n  onResponsivePopoverAfterClose() {\n    this.open = false;\n    this.fireEvent(\"close\");\n  }\n  onResponsivePopoverAfterOpen() {\n    this.fireEvent(\"open\");\n  }\n  /**\n   * Opens the Inputs popover.\n   * @private\n   * @returns Resolves when the Inputs popover is open\n   */\n  openInputsPopover() {\n    this.tempValue = this.value && this.isValid(this.value) ? this.value : this.getFormat().format(UI5Date.getInstance());\n    const popover = this._getInputsPopover();\n    popover.opener = this;\n    popover.open = true;\n    this._isInputsPopoverOpen = true;\n  }\n  /**\n   * Closes the Inputs popover\n   * @private\n   * @returns Resolves when the Inputs popover is closed\n   */\n  closeInputsPopover() {\n    const popover = this._getInputsPopover();\n    popover.open = false;\n  }\n  toggleInputsPopover() {\n    if (this.isInputsPopoverOpen()) {\n      this.closeInputsPopover();\n    } else if (this._canOpenInputsPopover()) {\n      this.openInputsPopover();\n    }\n  }\n  /**\n   * Checks if the inputs popover is open\n   * @private\n   */\n  isInputsPopoverOpen() {\n    return !!this._isInputsPopoverOpen;\n  }\n  submitInputsPopover() {\n    this._updateValueAndFireEvents(this.tempValue, true, [\"change\", \"value-changed\"]);\n    this.closeInputsPopover();\n  }\n  onInputsPopoverAfterOpen() {\n    const popover = this._getInputsPopover();\n    popover.querySelector(\"[ui5-time-selection-inputs]\")._addNumericAttributes();\n  }\n  onInputsPopoverAfterClose() {\n    this._isInputsPopoverOpen = false;\n  }\n  _handleInputClick(e) {\n    const target = e.target;\n    if (this.open) {\n      return;\n    }\n    if (this._isMobileDevice && target && !target.hasAttribute(\"ui5-icon\")) {\n      this.toggleInputsPopover();\n    }\n    const inputField = this._getInputField();\n    if (inputField) {\n      inputField.select();\n    }\n  }\n  _updateValueAndFireEvents(value, normalizeValue, eventsNames) {\n    if (value === this.value) {\n      return;\n    }\n    const valid = this.isValid(value);\n    if (value !== undefined && valid && normalizeValue) {\n      // if value === undefined, valid is guaranteed to be falsy\n      value = this.normalizeValue(value); // transform valid values (in any format) to the correct format\n    }\n    if (!eventsNames.includes(\"input\")) {\n      this.value = \"\"; // Do not remove! DurationPicker (an external component extending TimePicker) use case -> value is 05:10, user tries 05:12, after normalization value is changed back to 05:10 so no invalidation happens, but the input still shows 05:12. Thus we enforce invalidation with the \"\"\n      this.value = value;\n    }\n    this.tempValue = value; // if the picker is open, sync it\n    this._updateValueState(); // Change the value state to Error/None, but only if needed\n    eventsNames.forEach(eventName => {\n      this.fireEvent(eventName, {\n        value,\n        valid\n      });\n    });\n  }\n  _updateValueState() {\n    const isValid = this.isValid(this.value);\n    if (!isValid) {\n      // If not valid - always set Error regardless of the current value state\n      this.valueState = ValueState.Negative;\n    } else if (isValid && this.valueState === ValueState.Negative) {\n      // However if valid, change only Error (but not the others) to None\n      this.valueState = ValueState.None;\n    }\n  }\n  _handleInputChange(e) {\n    const target = e.target;\n    this._updateValueAndFireEvents(target.value, true, [\"change\", \"value-changed\"]);\n  }\n  _handleInputLiveChange(e) {\n    const target = e.target;\n    this._updateValueAndFireEvents(target.value, false, [\"input\"]);\n  }\n  _canOpenPicker() {\n    return !this.disabled && !this.readonly;\n  }\n  _canOpenInputsPopover() {\n    return !this.disabled && this._isMobileDevice;\n  }\n  _getPopover() {\n    return this.shadowRoot.querySelector(\"[ui5-responsive-popover]\");\n  }\n  _getInputsPopover() {\n    return this.shadowRoot.querySelector(\"[ui5-popover]\");\n  }\n  _getInput() {\n    return this.shadowRoot.querySelector(\"[ui5-input]\");\n  }\n  _getInputField() {\n    const input = this._getInput();\n    return input && input.getInputDOMRef();\n  }\n  _onkeydown(e) {\n    if (this._isMobileDevice && !this.isInputsPopoverOpen()) {\n      e.preventDefault();\n    }\n    if (isShow(e)) {\n      e.preventDefault();\n      this._togglePicker();\n    }\n    const target = e.target;\n    if (target && this.open && this._getInput().id === target.id && (isTabNext(e) || isTabPrevious(e) || isF6Next(e) || isF6Previous(e))) {\n      this._togglePicker();\n    }\n    if (this.open) {\n      return;\n    }\n    if (isEnter(e)) {\n      if (this._internals.form) {\n        submitForm(this);\n      }\n    } else if (isPageUpShiftCtrl(e)) {\n      e.preventDefault();\n      this._modifyValueBy(1, \"second\");\n    } else if (isPageUpShift(e)) {\n      e.preventDefault();\n      this._modifyValueBy(1, \"minute\");\n    } else if (isPageUp(e)) {\n      e.preventDefault();\n      this._modifyValueBy(1, \"hour\");\n    } else if (isPageDownShiftCtrl(e)) {\n      e.preventDefault();\n      this._modifyValueBy(-1, \"second\");\n    } else if (isPageDownShift(e)) {\n      e.preventDefault();\n      this._modifyValueBy(-1, \"minute\");\n    } else if (isPageDown(e)) {\n      e.preventDefault();\n      this._modifyValueBy(-1, \"hour\");\n    }\n  }\n  get _isPattern() {\n    return this._formatPattern !== \"medium\" && this._formatPattern !== \"short\" && this._formatPattern !== \"long\";\n  }\n  getFormat() {\n    let dateFormat;\n    if (this._isPattern) {\n      dateFormat = DateFormat.getDateInstance({\n        pattern: this._formatPattern\n      });\n    } else {\n      dateFormat = DateFormat.getDateInstance({\n        style: this._formatPattern\n      });\n    }\n    return dateFormat;\n  }\n  /**\n   * Formats a Java Script date object into a string representing a locale date and time\n   * according to the `formatPattern` property of the TimePicker instance\n   * @param date A Java Script date object to be formatted as string\n   * @public\n   * @returns formatted value\n   */\n  formatValue(date) {\n    return this.getFormat().format(date);\n  }\n  /**\n   * Checks if a value is valid against the current `formatPattern` value.\n   *\n   * **Note:** an empty string is considered as valid value.\n   * @param value The value to be tested against the current date format\n   * @public\n   */\n  isValid(value) {\n    if (value === \"\") {\n      return true;\n    }\n    return !!this.getFormat().parse(value);\n  }\n  normalizeValue(value) {\n    if (value === \"\") {\n      return value;\n    }\n    return this.getFormat().format(this.getFormat().parse(value));\n  }\n  _modifyValueBy(amount, unit) {\n    const date = this.getFormat().parse(this._effectiveValue);\n    if (!date) {\n      return;\n    }\n    if (unit === \"hour\") {\n      date.setHours(date.getHours() + amount);\n    } else if (unit === \"minute\") {\n      date.setMinutes(date.getMinutes() + amount);\n    } else if (unit === \"second\") {\n      date.setSeconds(date.getSeconds() + amount);\n    }\n    const newValue = this.formatValue(date);\n    this._updateValueAndFireEvents(newValue, true, [\"change\", \"value-changed\"]);\n  }\n  /**\n   * The listener for this event can't be passive as it calls preventDefault()\n   * @param e Wheel Event\n   * @private\n   */\n  _handleWheel(e) {\n    e.preventDefault();\n  }\n  /**\n   * Hides mobile device keyboard by temporary setting the input to readonly state.\n   */\n  _hideMobileKeyboard() {\n    this._getInput().readonly = true;\n    setTimeout(() => {\n      this._getInput().readonly = false;\n    }, 0);\n  }\n  _onfocusin(e) {\n    if (this._isMobileDevice) {\n      this._hideMobileKeyboard();\n      if (this._isInputsPopoverOpen) {\n        const popover = this._getInputsPopover();\n        popover.applyFocus();\n      }\n      e.preventDefault();\n    }\n  }\n  _oninput(e) {\n    if (this._isPhone) {\n      e.preventDefault();\n    }\n  }\n  get submitButtonLabel() {\n    return TimePicker_1.i18nBundle.getText(TIMEPICKER_SUBMIT_BUTTON);\n  }\n  get cancelButtonLabel() {\n    return TimePicker_1.i18nBundle.getText(TIMEPICKER_CANCEL_BUTTON);\n  }\n  /**\n   * @protected\n   */\n  get openIconName() {\n    return \"time-entry-request\";\n  }\n};\n__decorate([property()], TimePicker.prototype, \"value\", void 0);\n__decorate([property()], TimePicker.prototype, \"name\", void 0);\n__decorate([property()], TimePicker.prototype, \"valueState\", void 0);\n__decorate([property({\n  type: Boolean\n})], TimePicker.prototype, \"disabled\", void 0);\n__decorate([property({\n  type: Boolean\n})], TimePicker.prototype, \"readonly\", void 0);\n__decorate([property()], TimePicker.prototype, \"placeholder\", void 0);\n__decorate([property()], TimePicker.prototype, \"formatPattern\", void 0);\n__decorate([property({\n  type: Boolean\n})], TimePicker.prototype, \"open\", void 0);\n__decorate([property({\n  type: Boolean\n})], TimePicker.prototype, \"required\", void 0);\n__decorate([property()], TimePicker.prototype, \"accessibleName\", void 0);\n__decorate([property()], TimePicker.prototype, \"accessibleNameRef\", void 0);\n__decorate([property({\n  type: Boolean,\n  noAttribute: true\n})], TimePicker.prototype, \"_isInputsPopoverOpen\", void 0);\n__decorate([slot()], TimePicker.prototype, \"valueStateMessage\", void 0);\nTimePicker = TimePicker_1 = __decorate([customElement({\n  tag: \"ui5-time-picker\",\n  languageAware: true,\n  formAssociated: true,\n  renderer: litRender,\n  template: TimePickerTemplate,\n  styles: [TimePickerCss, ResponsivePopoverCommonCss, TimePickerPopoverCss],\n  dependencies: [Icon, Popover, ResponsivePopover, TimeSelectionClocks, TimeSelectionInputs, Input, Button]\n})\n/**\n * Fired when the input operation has finished by clicking the \"OK\" button or\n * when the text in the input field has changed and the focus leaves the input field.\n * @public\n * @param {string} value The submitted value.\n * @param {boolean} valid Indicator if the value is in correct format pattern and in valid range.\n */, event(\"change\", {\n  detail: {\n    /**\n     * @public\n     */\n    value: {\n      type: String\n    },\n    /**\n     * @public\n     */\n    valid: {\n      type: Boolean\n    }\n  }\n})\n/**\n * Fired when the value of the `ui5-time-picker` is changed at each key stroke.\n * @public\n * @param {string} value The current value.\n * @param {boolean} valid Indicator if the value is in correct format pattern and in valid range.\n */, event(\"input\", {\n  detail: {\n    /**\n     * @public\n     */\n    value: {\n      type: String\n    },\n    /**\n     * @public\n     */\n    valid: {\n      type: Boolean\n    }\n  }\n})\n/**\n * Fired after the value-help dialog of the component is opened.\n * @since 2.0.0\n * @public\n */, event(\"open\")\n/**\n * Fired after the value-help dialog of the component is closed.\n * @since 2.0.0\n * @public\n */, event(\"close\")], TimePicker);\nTimePicker.define();\nexport default TimePicker;","map":{"version":3,"names":["isDesktop","isPhone","isTablet","UI5Element","customElement","property","event","slot","litRender","submitForm","getI18nBundle","getLocale","ValueState","getEffectiveAriaLabelText","DateFormat","getCachedLocaleDataInstance","fetchCldr","isShow","isEnter","isPageUp","isPageDown","isPageUpShift","isPageDownShift","isPageUpShiftCtrl","isPageDownShiftCtrl","isTabNext","isTabPrevious","isF6Next","isF6Previous","UI5Date","Icon","Popover","ResponsivePopover","TimePickerTemplate","Input","Button","TimeSelectionClocks","TimeSelectionInputs","TIMEPICKER_SUBMIT_BUTTON","TIMEPICKER_CANCEL_BUTTON","TIMEPICKER_INPUT_DESCRIPTION","TIMEPICKER_POPOVER_ACCESSIBLE_NAME","FORM_TEXTFIELD_REQUIRED","TimePickerCss","TimePickerPopoverCss","ResponsivePopoverCommonCss","TimePicker","TimePicker_1","constructor","value","valueState","disabled","readonly","open","required","_isInputsPopoverOpen","onDefine","i18nBundle","Promise","all","getLanguage","getRegion","getScript","formValidityMessage","getText","formValidity","valueMissing","formElementAnchor","getFocusDomRefAsync","formFormattedValue","onBeforeRendering","normalizeValue","tempValue","isValid","getFormat","format","getInstance","dateAriaDescription","pickerAccessibleName","accInfo","dateValue","parse","_effectiveValue","_placeholder","placeholder","undefined","_displayFormat","_formatPattern","hasHours","formatPattern","match","fallback","localeData","getTimePattern","oFormatOptions","pattern","_timeSelectionValue","_isPhone","_isMobileDevice","onTimeSelectionChange","e","detail","_togglePicker","submitPickers","_updateValueAndFireEvents","onResponsivePopoverAfterClose","fireEvent","onResponsivePopoverAfterOpen","openInputsPopover","popover","_getInputsPopover","opener","closeInputsPopover","toggleInputsPopover","isInputsPopoverOpen","_canOpenInputsPopover","submitInputsPopover","onInputsPopoverAfterOpen","querySelector","_addNumericAttributes","onInputsPopoverAfterClose","_handleInputClick","target","hasAttribute","inputField","_getInputField","select","eventsNames","valid","includes","_updateValueState","forEach","eventName","Negative","None","_handleInputChange","_handleInputLiveChange","_canOpenPicker","_getPopover","shadowRoot","_getInput","input","getInputDOMRef","_onkeydown","preventDefault","id","_internals","form","_modifyValueBy","_isPattern","dateFormat","getDateInstance","style","formatValue","date","amount","unit","setHours","getHours","setMinutes","getMinutes","setSeconds","getSeconds","newValue","_handleWheel","_hideMobileKeyboard","setTimeout","_onfocusin","applyFocus","_oninput","submitButtonLabel","cancelButtonLabel","openIconName","__decorate","type","Boolean","noAttribute","tag","languageAware","formAssociated","renderer","template","styles","dependencies","String","define"],"sources":["/home/user/projects/reactproj/node_modules/@ui5/webcomponents/src/TimePicker.ts"],"sourcesContent":["import { isDesktop, isPhone, isTablet } from \"@ui5/webcomponents-base/dist/Device.js\";\nimport UI5Element from \"@ui5/webcomponents-base/dist/UI5Element.js\";\nimport customElement from \"@ui5/webcomponents-base/dist/decorators/customElement.js\";\nimport property from \"@ui5/webcomponents-base/dist/decorators/property.js\";\nimport event from \"@ui5/webcomponents-base/dist/decorators/event.js\";\nimport slot from \"@ui5/webcomponents-base/dist/decorators/slot.js\";\nimport litRender from \"@ui5/webcomponents-base/dist/renderer/LitRenderer.js\";\nimport type { IFormInputElement } from \"@ui5/webcomponents-base/dist/features/InputElementsFormSupport.js\";\nimport { submitForm } from \"@ui5/webcomponents-base/dist/features/InputElementsFormSupport.js\";\nimport { getI18nBundle } from \"@ui5/webcomponents-base/dist/i18nBundle.js\";\nimport type I18nBundle from \"@ui5/webcomponents-base/dist/i18nBundle.js\";\nimport getLocale from \"@ui5/webcomponents-base/dist/locale/getLocale.js\";\nimport ValueState from \"@ui5/webcomponents-base/dist/types/ValueState.js\";\nimport { getEffectiveAriaLabelText } from \"@ui5/webcomponents-base/dist/util/AriaLabelHelper.js\";\nimport \"@ui5/webcomponents-localization/dist/features/calendar/Gregorian.js\"; // default calendar for bundling\nimport DateFormat from \"@ui5/webcomponents-localization/dist/DateFormat.js\";\nimport getCachedLocaleDataInstance from \"@ui5/webcomponents-localization/dist/getCachedLocaleDataInstance.js\";\nimport { fetchCldr } from \"@ui5/webcomponents-base/dist/asset-registries/LocaleData.js\";\nimport {\n\tisShow,\n\tisEnter,\n\tisPageUp,\n\tisPageDown,\n\tisPageUpShift,\n\tisPageDownShift,\n\tisPageUpShiftCtrl,\n\tisPageDownShiftCtrl,\n\tisTabNext,\n\tisTabPrevious,\n\tisF6Next,\n\tisF6Previous,\n} from \"@ui5/webcomponents-base/dist/Keys.js\";\nimport \"@ui5/webcomponents-icons/dist/time-entry-request.js\";\nimport UI5Date from \"@ui5/webcomponents-localization/dist/dates/UI5Date.js\";\nimport Icon from \"./Icon.js\";\nimport Popover from \"./Popover.js\";\nimport ResponsivePopover from \"./ResponsivePopover.js\";\nimport TimePickerTemplate from \"./generated/templates/TimePickerTemplate.lit.js\";\nimport Input from \"./Input.js\";\nimport Button from \"./Button.js\";\nimport TimeSelectionClocks from \"./TimeSelectionClocks.js\";\nimport TimeSelectionInputs from \"./TimeSelectionInputs.js\";\nimport type { TimeSelectionChangeEventDetail } from \"./TimePickerInternals.js\";\n\nimport {\n\tTIMEPICKER_SUBMIT_BUTTON,\n\tTIMEPICKER_CANCEL_BUTTON,\n\tTIMEPICKER_INPUT_DESCRIPTION,\n\tTIMEPICKER_POPOVER_ACCESSIBLE_NAME,\n\tFORM_TEXTFIELD_REQUIRED,\n} from \"./generated/i18n/i18n-defaults.js\";\n\n// Styles\nimport TimePickerCss from \"./generated/themes/TimePicker.css.js\";\nimport TimePickerPopoverCss from \"./generated/themes/TimePickerPopover.css.js\";\nimport ResponsivePopoverCommonCss from \"./generated/themes/ResponsivePopoverCommon.css.js\";\n\ntype TimePickerChangeInputEventDetail = {\n\tvalue: string,\n\tvalid: boolean,\n}\n\ntype TimePickerChangeEventDetail = TimePickerChangeInputEventDetail;\ntype TimePickerInputEventDetail = TimePickerChangeInputEventDetail;\n\n/**\n * @class\n *\n * ### Overview\n * The `ui5-time-picker` component provides an input field with assigned clocks which are opened on user action.\n * The `ui5-time-picker` allows users to select a localized time using touch, mouse, or keyboard input.\n * It consists of two parts: the time input field and the clocks.\n *\n * ### Usage\n * The user can enter a time by:\n *\n * - Using the clocks that are displayed in a popup\n * - Typing it in directly in the input field\n *\n * When the user makes an entry and chooses the enter key, the clocks show the corresponding time (hours, minutes and seconds separately).\n * When the user directly triggers the clocks display, the actual time is displayed.\n * For the `ui5-time-picker`\n *\n * ### Formatting\n *\n * If a time is entered by typing it into\n * the input field, it must fit to the used time format.\n *\n * Supported format options are pattern-based on Unicode LDML Date Format notation.\n * For more information, see [UTS #35: Unicode Locale Data Markup Language](http://unicode.org/reports/tr35/#Date_Field_Symbol_Table).\n *\n * For example, if the `format-pattern` is \"HH:mm:ss\",\n * a valid value string is \"11:42:35\" and the same is displayed in the input.\n *\n * ### Keyboard handling\n * [F4], [Alt]+[Up], [Alt]+[Down] Open/Close picker dialog and move focus to it.\n *\n * When closed:\n *\n * - [Page Up] - Increments hours by 1. If 12 am is reached, increment hours to 1 pm and vice versa.\n * - [Page Down] - Decrements the corresponding field by 1. If 1 pm is reached, decrement hours to 12 am and vice versa.\n * - [Shift]+[Page Up] - Increments minutes by 1.\n * - [Shift]+[Page Down] - Decrements minutes by 1.\n * - [Shift]+[Ctrl]+[Page Up] - Increments seconds by 1.\n * - [Shift]+[Ctrl]+[Page Down] - Decrements seconds by 1.\n * -\n *\n * When opened:\n *\n * - [Page Up] - Increments hours by 1. If 12 am is reached, increment hours to 1 pm and vice versa.\n * - [Page Down] - Decrements the corresponding field by 1. If 1 pm is reached, decrement hours to 12 am and vice versa.\n * - [Shift]+[Page Up] - Increments minutes by 1.\n * - [Shift]+[Page Down] - Decrements minutes by 1.\n * - [Shift]+[Ctrl]+[Page Up] - Increments seconds by 1.\n * - [Shift]+[Ctrl]+[Page Down] - Decrements seconds by 1.\n * - [A] or [P] - Selects AM or PM respectively.\n * - [0]-[9] - Allows direct time selecting (hours/minutes/seconds).\n * - [:] - Allows switching between hours/minutes/seconds clocks. If the last clock is displayed and [:] is pressed, the first clock is beind displayed.\n *\n * ### ES6 Module Import\n *\n * `import \"@ui5/webcomponents/dist/TimePicker.js\";`\n * @constructor\n * @extends UI5Element\n * @public\n * @since 1.0.0-rc.6\n */\n@customElement({\n\ttag: \"ui5-time-picker\",\n\tlanguageAware: true,\n\tformAssociated: true,\n\trenderer: litRender,\n\ttemplate: TimePickerTemplate,\n\tstyles: [\n\t\tTimePickerCss,\n\t\tResponsivePopoverCommonCss,\n\t\tTimePickerPopoverCss,\n\t],\n\tdependencies: [\n\t\tIcon,\n\t\tPopover,\n\t\tResponsivePopover,\n\t\tTimeSelectionClocks,\n\t\tTimeSelectionInputs,\n\t\tInput,\n\t\tButton,\n\t],\n})\n/**\n * Fired when the input operation has finished by clicking the \"OK\" button or\n * when the text in the input field has changed and the focus leaves the input field.\n * @public\n * @param {string} value The submitted value.\n * @param {boolean} valid Indicator if the value is in correct format pattern and in valid range.\n */\n@event<TimePickerChangeEventDetail>(\"change\", {\n\tdetail: {\n\t\t/**\n\t\t * @public\n\t\t */\n\t\tvalue: {\n\t\t\ttype: String,\n\t\t},\n\t\t/**\n\t\t * @public\n\t\t */\n\t\tvalid: {\n\t\t\ttype: Boolean,\n\t\t},\n\t},\n})\n\n/**\n * Fired when the value of the `ui5-time-picker` is changed at each key stroke.\n * @public\n * @param {string} value The current value.\n * @param {boolean} valid Indicator if the value is in correct format pattern and in valid range.\n */\n@event<TimePickerInputEventDetail>(\"input\", {\n\tdetail: {\n\t\t/**\n\t\t * @public\n\t\t */\n\t\tvalue: {\n\t\t\ttype: String,\n\t\t},\n\t\t/**\n\t\t * @public\n\t\t */\n\t\tvalid: {\n\t\t\ttype: Boolean,\n\t\t},\n\t},\n})\n/**\n * Fired after the value-help dialog of the component is opened.\n * @since 2.0.0\n * @public\n */\n@event(\"open\")\n/**\n * Fired after the value-help dialog of the component is closed.\n * @since 2.0.0\n * @public\n */\n@event(\"close\")\nclass TimePicker extends UI5Element implements IFormInputElement {\n\t/**\n\t * Defines a formatted time value.\n\t * @default \"\"\n\t * @formEvents change input\n\t * @formProperty\n\t * @public\n\t */\n\t@property()\n\tvalue = \"\";\n\n\t/**\n\t * Determines the name by which the component will be identified upon submission in an HTML form.\n\t *\n\t * **Note:** This property is only applicable within the context of an HTML Form element.\n\t * @default undefined\n\t * @public\n\t * @since 2.0.0\n\t */\n\t@property()\n\tname?: string;\n\n\t/**\n\t * Defines the value state of the component.\n\t * @default \"None\"\n\t * @public\n\t */\n\t@property()\n\tvalueState: `${ValueState}` = \"None\";\n\n\t/**\n\t * Defines the disabled state of the comonent.\n\t * @default false\n\t * @public\n\t */\n\t@property({ type: Boolean })\n\tdisabled = false;\n\n\t/**\n\t * Defines the readonly state of the comonent.\n\t * @default false\n\t * @public\n\t */\n\t@property({ type: Boolean })\n\treadonly = false;\n\n\t/**\n\t * Defines a short hint, intended to aid the user with data entry when the\n\t * component has no value.\n\t *\n\t * **Note:** When no placeholder is set, the format pattern is displayed as a placeholder.\n\t * Passing an empty string as the value of this property will make the component appear empty - without placeholder or format pattern.\n\t * @default undefined\n\t * @public\n\t */\n\t@property()\n\tplaceholder?: string;\n\n\t/**\n\t * Determines the format, displayed in the input field.\n\t *\n\t * Example:\n\t * HH:mm:ss -> 11:42:35\n\t * hh:mm:ss a -> 2:23:15 PM\n\t * mm:ss -> 12:04 (only minutes and seconds)\n\t * @default undefined\n\t * @public\n\t */\n\t@property()\n\tformatPattern?: string;\n\n\t/**\n\t * Defines the open or closed state of the popover.\n\t * @public\n\t * @default false\n\t * @since 2.0.0\n\t */\n\t@property({ type: Boolean })\n\topen = false;\n\n\t/**\n\t * Defines whether the component is required.\n\t * @since 2.1.0\n\t * @default false\n\t * @public\n\t */\n\t@property({ type: Boolean })\n\trequired = false;\n\n\t/**\n\t * Defines the aria-label attribute for the component.\n\t * @default undefined\n\t * @public\n\t * @since 2.1.0\n\t */\n\t@property()\n\taccessibleName?: string;\n\n\t/**\n\t * Receives id (or many ids) of the elements that label the component.\n\t * @default undefined\n\t * @public\n\t * @since 2.1.0\n\t */\n\t@property()\n\taccessibleNameRef?: string;\n\n\t@property({ type: Boolean, noAttribute: true })\n\t_isInputsPopoverOpen = false;\n\n\t/**\n\t * Defines the value state message that will be displayed as pop up under the `ui5-time-picker`.\n\t *\n\t * **Note:** If not specified, a default text (in the respective language) will be displayed.\n\t *\n\t * **Note:** The `valueStateMessage` would be displayed,\n\t * when the `ui5-time-picker` is in `Information`, `Critical` or `Negative` value state.\n\t * @since 1.0.0-rc.8\n\t * @public\n\t */\n\t@slot()\n\tvalueStateMessage!: Array<HTMLElement>;\n\n\ttempValue?: string;\n\n\tstatic i18nBundle: I18nBundle;\n\n\tstatic async onDefine() {\n\t\t[TimePicker.i18nBundle] = await Promise.all([\n\t\t\tgetI18nBundle(\"@ui5/webcomponents\"),\n\t\t\tfetchCldr(getLocale().getLanguage(), getLocale().getRegion(), getLocale().getScript()),\n\t\t]);\n\t}\n\tget formValidityMessage() {\n\t\treturn TimePicker.i18nBundle.getText(FORM_TEXTFIELD_REQUIRED);\n\t}\n\n\tget formValidity(): ValidityStateFlags {\n\t\treturn { valueMissing: this.required && !this.value };\n\t}\n\n\tasync formElementAnchor() {\n\t\treturn (await this.getFocusDomRefAsync() as UI5Element)?.getFocusDomRefAsync();\n\t}\n\n\tget formFormattedValue(): FormData | string | null {\n\t\treturn this.value || \"\";\n\t}\n\n\tonBeforeRendering() {\n\t\tif (this.value) {\n\t\t\tthis.value = this.normalizeValue(this.value) || this.value;\n\t\t}\n\n\t\tthis.tempValue = this.value && this.isValid(this.value) ? this.value : this.getFormat().format(UI5Date.getInstance());\n\t}\n\n\tget dateAriaDescription() {\n\t\treturn TimePicker.i18nBundle.getText(TIMEPICKER_INPUT_DESCRIPTION);\n\t}\n\n\tget pickerAccessibleName() {\n\t\treturn TimePicker.i18nBundle.getText(TIMEPICKER_POPOVER_ACCESSIBLE_NAME);\n\t}\n\n\tget accInfo() {\n\t\treturn {\n\t\t\t\"ariaRoledescription\": this.dateAriaDescription,\n\t\t\t\"ariaHasPopup\": \"dialog\",\n\t\t\t\"ariaRequired\": this.required,\n\t\t\t\"ariaLabel\": getEffectiveAriaLabelText(this),\n\t\t};\n\t}\n\n\t/**\n\t * Currently selected time represented as JavaScript Date instance\n\t * @public\n\t * @default null\n\t */\n\tget dateValue(): Date | null {\n\t\treturn this.getFormat().parse(this._effectiveValue) as Date;\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tget _placeholder() {\n\t\treturn this.placeholder !== undefined ? this.placeholder : this._displayFormat;\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tget _formatPattern() {\n\t\tconst hasHours = !!this.formatPattern?.match(/H/i);\n\t\tconst fallback = !this.formatPattern || !hasHours;\n\n\t\tconst localeData = getCachedLocaleDataInstance(getLocale());\n\t\treturn fallback ? localeData.getTimePattern(\"medium\") : this.formatPattern;\n\t}\n\n\tget _displayFormat() {\n\t\t// @ts-ignore oFormatOptions is a private API of DateFormat\n\t\treturn this.getFormat().oFormatOptions.pattern as string;\n\t}\n\n\tget _effectiveValue() {\n\t\treturn this.value;\n\t}\n\n\tget _timeSelectionValue() {\n\t\treturn this.tempValue;\n\t}\n\n\tget _isPhone() {\n\t\treturn isPhone();\n\t}\n\n\tget _isMobileDevice() {\n\t\treturn !isDesktop() && (isPhone() || isTablet());\n\t}\n\n\tonTimeSelectionChange(e: CustomEvent<TimeSelectionChangeEventDetail>) {\n\t\tthis.tempValue = e.detail.value; // every time the user changes the time selection -> update tempValue\n\t}\n\n\t_togglePicker() {\n\t\tthis.open = !this.open;\n\t}\n\n\tsubmitPickers() {\n\t\tthis._updateValueAndFireEvents(this.tempValue!, true, [\"change\", \"value-changed\"]);\n\t\tthis._togglePicker();\n\t}\n\n\tonResponsivePopoverAfterClose() {\n\t\tthis.open = false;\n\t\tthis.fireEvent(\"close\");\n\t}\n\n\tonResponsivePopoverAfterOpen() {\n\t\tthis.fireEvent(\"open\");\n\t}\n\n\t/**\n\t * Opens the Inputs popover.\n\t * @private\n\t * @returns Resolves when the Inputs popover is open\n\t */\n\topenInputsPopover() {\n\t\tthis.tempValue = this.value && this.isValid(this.value) ? this.value : this.getFormat().format(UI5Date.getInstance());\n\t\tconst popover = this._getInputsPopover();\n\t\tpopover.opener = this;\n\t\tpopover.open = true;\n\t\tthis._isInputsPopoverOpen = true;\n\t}\n\n\t/**\n\t * Closes the Inputs popover\n\t * @private\n\t * @returns Resolves when the Inputs popover is closed\n\t */\n\tcloseInputsPopover() {\n\t\tconst popover = this._getInputsPopover();\n\t\tpopover.open = false;\n\t}\n\n\ttoggleInputsPopover() {\n\t\tif (this.isInputsPopoverOpen()) {\n\t\t\tthis.closeInputsPopover();\n\t\t} else if (this._canOpenInputsPopover()) {\n\t\t\tthis.openInputsPopover();\n\t\t}\n\t}\n\n\t/**\n\t * Checks if the inputs popover is open\n\t * @private\n\t */\n\tisInputsPopoverOpen(): boolean {\n\t\treturn !!this._isInputsPopoverOpen;\n\t}\n\n\tsubmitInputsPopover() {\n\t\tthis._updateValueAndFireEvents(this.tempValue!, true, [\"change\", \"value-changed\"]);\n\t\tthis.closeInputsPopover();\n\t}\n\n\tonInputsPopoverAfterOpen() {\n\t\tconst popover = this._getInputsPopover();\n\t\tpopover.querySelector<TimeSelectionInputs>(\"[ui5-time-selection-inputs]\")!._addNumericAttributes();\n\t}\n\n\tonInputsPopoverAfterClose() {\n\t\tthis._isInputsPopoverOpen = false;\n\t}\n\n\t_handleInputClick(e: MouseEvent) {\n\t\tconst target = e.target as HTMLElement;\n\t\tif (this.open) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (this._isMobileDevice && target && !target.hasAttribute(\"ui5-icon\")) {\n\t\t\tthis.toggleInputsPopover();\n\t\t}\n\n\t\tconst inputField = this._getInputField();\n\n\t\tif (inputField) {\n\t\t\t(inputField as HTMLInputElement).select();\n\t\t}\n\t}\n\n\t_updateValueAndFireEvents(value: string, normalizeValue: boolean, eventsNames: Array<string>) {\n\t\tif (value === this.value) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst valid = this.isValid(value);\n\n\t\tif (value !== undefined && valid && normalizeValue) { // if value === undefined, valid is guaranteed to be falsy\n\t\t\tvalue = this.normalizeValue(value); // transform valid values (in any format) to the correct format\n\t\t}\n\t\tif (!eventsNames.includes(\"input\")) {\n\t\t\tthis.value = \"\"; // Do not remove! DurationPicker (an external component extending TimePicker) use case -> value is 05:10, user tries 05:12, after normalization value is changed back to 05:10 so no invalidation happens, but the input still shows 05:12. Thus we enforce invalidation with the \"\"\n\t\t\tthis.value = value;\n\t\t}\n\t\tthis.tempValue = value; // if the picker is open, sync it\n\t\tthis._updateValueState(); // Change the value state to Error/None, but only if needed\n\t\teventsNames.forEach(eventName => {\n\t\t\tthis.fireEvent<TimePickerChangeInputEventDetail>(eventName, { value, valid });\n\t\t});\n\t}\n\n\t_updateValueState() {\n\t\tconst isValid = this.isValid(this.value);\n\t\tif (!isValid) { // If not valid - always set Error regardless of the current value state\n\t\t\tthis.valueState = ValueState.Negative;\n\t\t} else if (isValid && this.valueState === ValueState.Negative) { // However if valid, change only Error (but not the others) to None\n\t\t\tthis.valueState = ValueState.None;\n\t\t}\n\t}\n\n\t_handleInputChange(e: CustomEvent) {\n\t\tconst target = e.target as Input;\n\t\tthis._updateValueAndFireEvents(target.value, true, [\"change\", \"value-changed\"]);\n\t}\n\n\t_handleInputLiveChange(e: CustomEvent) {\n\t\tconst target = e.target as Input;\n\t\tthis._updateValueAndFireEvents(target.value, false, [\"input\"]);\n\t}\n\n\t_canOpenPicker() {\n\t\treturn !this.disabled && !this.readonly;\n\t}\n\n\t_canOpenInputsPopover() {\n\t\treturn !this.disabled && this._isMobileDevice;\n\t}\n\n\t_getPopover() {\n\t\treturn this.shadowRoot!.querySelector<ResponsivePopover>(\"[ui5-responsive-popover]\")!;\n\t}\n\n\t_getInputsPopover() {\n\t\treturn this.shadowRoot!.querySelector<Popover>(\"[ui5-popover]\")!;\n\t}\n\n\t_getInput(): Input {\n\t\treturn this.shadowRoot!.querySelector<Input>(\"[ui5-input]\")!;\n\t}\n\n\t_getInputField() {\n\t\tconst input = this._getInput();\n\t\treturn input && input.getInputDOMRef();\n\t}\n\n\t_onkeydown(e: KeyboardEvent) {\n\t\tif (this._isMobileDevice && !this.isInputsPopoverOpen()) {\n\t\t\te.preventDefault();\n\t\t}\n\t\tif (isShow(e)) {\n\t\t\te.preventDefault();\n\t\t\tthis._togglePicker();\n\t\t}\n\n\t\tconst target = e.target as HTMLElement;\n\n\t\tif (target && this.open && this._getInput().id === target.id && (isTabNext(e) || isTabPrevious(e) || isF6Next(e) || isF6Previous(e))) {\n\t\t\tthis._togglePicker();\n\t\t}\n\t\tif (this.open) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (isEnter(e)) {\n\t\t\tif (this._internals.form) {\n\t\t\t\tsubmitForm(this);\n\t\t\t}\n\t\t} else if (isPageUpShiftCtrl(e)) {\n\t\t\te.preventDefault();\n\t\t\tthis._modifyValueBy(1, \"second\");\n\t\t} else if (isPageUpShift(e)) {\n\t\t\te.preventDefault();\n\t\t\tthis._modifyValueBy(1, \"minute\");\n\t\t} else if (isPageUp(e)) {\n\t\t\te.preventDefault();\n\t\t\tthis._modifyValueBy(1, \"hour\");\n\t\t} else if (isPageDownShiftCtrl(e)) {\n\t\t\te.preventDefault();\n\t\t\tthis._modifyValueBy(-1, \"second\");\n\t\t} else if (isPageDownShift(e)) {\n\t\t\te.preventDefault();\n\t\t\tthis._modifyValueBy(-1, \"minute\");\n\t\t} else if (isPageDown(e)) {\n\t\t\te.preventDefault();\n\t\t\tthis._modifyValueBy(-1, \"hour\");\n\t\t}\n\t}\n\n\tget _isPattern() {\n\t\treturn this._formatPattern !== \"medium\" && this._formatPattern !== \"short\" && this._formatPattern !== \"long\";\n\t}\n\n\tgetFormat() {\n\t\tlet dateFormat;\n\n\t\tif (this._isPattern) {\n\t\t\tdateFormat = DateFormat.getDateInstance({\n\t\t\t\tpattern: this._formatPattern,\n\t\t\t});\n\t\t} else {\n\t\t\tdateFormat = DateFormat.getDateInstance({\n\t\t\t\tstyle: this._formatPattern,\n\t\t\t});\n\t\t}\n\n\t\treturn dateFormat;\n\t}\n\n\t/**\n\t * Formats a Java Script date object into a string representing a locale date and time\n\t * according to the `formatPattern` property of the TimePicker instance\n\t * @param date A Java Script date object to be formatted as string\n\t * @public\n\t * @returns formatted value\n\t */\n\tformatValue(date: Date): string {\n\t\treturn this.getFormat().format(date);\n\t}\n\n\t/**\n\t * Checks if a value is valid against the current `formatPattern` value.\n\t *\n\t * **Note:** an empty string is considered as valid value.\n\t * @param value The value to be tested against the current date format\n\t * @public\n\t */\n\tisValid(value: string | undefined): boolean {\n\t\tif (value === \"\") {\n\t\t\treturn true;\n\t\t}\n\t\treturn !!this.getFormat().parse(value as string);\n\t}\n\n\tnormalizeValue(value: string) {\n\t\tif (value === \"\") {\n\t\t\treturn value;\n\t\t}\n\t\treturn this.getFormat().format(this.getFormat().parse(value));\n\t}\n\n\t_modifyValueBy(amount: number, unit: string) {\n\t\tconst date = this.getFormat().parse(this._effectiveValue) as Date;\n\t\tif (!date) {\n\t\t\treturn;\n\t\t}\n\t\tif (unit === \"hour\") {\n\t\t\tdate.setHours(date.getHours() + amount);\n\t\t} else if (unit === \"minute\") {\n\t\t\tdate.setMinutes(date.getMinutes() + amount);\n\t\t} else if (unit === \"second\") {\n\t\t\tdate.setSeconds(date.getSeconds() + amount);\n\t\t}\n\n\t\tconst newValue = this.formatValue(date);\n\n\t\tthis._updateValueAndFireEvents(newValue, true, [\"change\", \"value-changed\"]);\n\t}\n\n\t/**\n\t * The listener for this event can't be passive as it calls preventDefault()\n\t * @param e Wheel Event\n\t * @private\n\t */\n\t_handleWheel(e: WheelEvent) {\n\t\te.preventDefault();\n\t}\n\n\t/**\n\t * Hides mobile device keyboard by temporary setting the input to readonly state.\n\t */\n\t_hideMobileKeyboard() {\n\t\tthis._getInput().readonly = true;\n\t\tsetTimeout(() => { this._getInput().readonly = false; }, 0);\n\t}\n\n\t_onfocusin(e: FocusEvent) {\n\t\tif (this._isMobileDevice) {\n\t\t\tthis._hideMobileKeyboard();\n\t\t\tif (this._isInputsPopoverOpen) {\n\t\t\t\tconst popover = this._getInputsPopover();\n\t\t\t\tpopover.applyFocus();\n\t\t\t}\n\t\t\te.preventDefault();\n\t\t}\n\t}\n\n\t_oninput(e: CustomEvent) {\n\t\tif (this._isPhone) {\n\t\t\te.preventDefault();\n\t\t}\n\t}\n\n\tget submitButtonLabel() {\n\t\treturn TimePicker.i18nBundle.getText(TIMEPICKER_SUBMIT_BUTTON);\n\t}\n\n\tget cancelButtonLabel() {\n\t\treturn TimePicker.i18nBundle.getText(TIMEPICKER_CANCEL_BUTTON);\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tget openIconName() {\n\t\treturn \"time-entry-request\";\n\t}\n}\n\nTimePicker.define();\n\nexport default TimePicker;\nexport type {\n\tTimeSelectionChangeEventDetail,\n\tTimePickerChangeEventDetail,\n\tTimePickerInputEventDetail,\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}