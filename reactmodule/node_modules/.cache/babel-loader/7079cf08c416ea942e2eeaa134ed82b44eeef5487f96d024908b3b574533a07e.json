{"ast":null,"code":"\"use strict\";\n\nconst g = /('')|'([^']+(?:''[^']*)*)(?:'|$)|\\{([0-9]+(?:\\s*,[^{}]*)?)\\}|[{}]/g,\n  i = (n, t) => (t = t || [], n.replace(g, (p, s, e, r, o) => {\n    if (s) return \"'\";\n    if (e) return e.replace(/''/g, \"'\");\n    if (r) {\n      const a = typeof r == \"string\" ? parseInt(r) : r;\n      return String(t[a]);\n    }\n    throw new Error(`[i18n]: pattern syntax error at pos ${o}`);\n  }));\nexport default i;","map":{"version":3,"names":["g","i","formatMessage","n","t","replace","p","s","e","r","o","a","parseInt","String","Error"],"sources":["/home/user/projects/reactproj/node_modules/@ui5/webcomponents-base/src/util/formatMessage.ts"],"sourcesContent":["const messageFormatRegEX = /('')|'([^']+(?:''[^']*)*)(?:'|$)|\\{([0-9]+(?:\\s*,[^{}]*)?)\\}|[{}]/g;\n\nconst formatMessage = (text: string, values: Array<number | string>) => {\n\tvalues = values || [];\n\n\treturn text.replace(messageFormatRegEX, ($0, $1, $2, $3: string | number, offset: number) => {\n\t\tif ($1) {\n\t\t\treturn '\\''; /* eslint-disable-line */\n\t\t}\n\n\t\tif ($2) {\n\t\t\treturn $2.replace(/''/g, '\\''); /* eslint-disable-line */\n\t\t}\n\n\t\tif ($3) {\n\t\t\tconst ind = typeof $3 === \"string\" ? parseInt($3) : $3;\n\t\t\treturn String(values[ind]);\n\t\t}\n\n\t\tthrow new Error(`[i18n]: pattern syntax error at pos ${offset}`);\n\t});\n};\n\nexport default formatMessage;\n"],"mappings":";;AAAA,MAAMA,CAAA,GAAqB;EAErBC,CAAA,GAAgBC,CAACC,CAAA,EAAcC,CAAA,MACpCA,CAAA,GAASA,CAAA,IAAU,EAAC,EAEbD,CAAA,CAAKE,OAAA,CAAQL,CAAA,EAAoB,CAACM,CAAA,EAAIC,CAAA,EAAIC,CAAA,EAAIC,CAAA,EAAqBC,CAAA,KAAmB;IAC5F,IAAIH,CAAA,EACH,OAAO;IAGR,IAAIC,CAAA,EACH,OAAOA,CAAA,CAAGH,OAAA,CAAQ,OAAO,GAAI;IAG9B,IAAII,CAAA,EAAI;MACP,MAAME,CAAA,GAAM,OAAOF,CAAA,IAAO,WAAWG,QAAA,CAASH,CAAE,IAAIA,CAAA;MACpD,OAAOI,MAAA,CAAOT,CAAA,CAAOO,CAAG,CAAC,CAC1B;IAAA;IAEA,MAAM,IAAIG,KAAA,CAAM,uCAAuCJ,CAAM,EAAE,CAChE;EAAA,CAAC;AAGF,eAAeT,CAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}