{"ast":null,"code":"\"use strict\";\n\nimport { getTheme as o } from \"../InitialConfiguration.js\";\nimport { reRenderAllUI5Elements as s } from \"../Render.js\";\nimport m from \"../theming/applyTheme.js\";\nimport a from \"../theming/getThemeDesignerTheme.js\";\nimport { DEFAULT_THEME as h, SUPPORTED_THEMES as T } from \"../generated/AssetParameters.js\";\nimport { boot as c, isBooted as u } from \"../Boot.js\";\nimport { attachConfigurationReset as f } from \"./ConfigurationReset.js\";\nlet t;\nf(() => {\n  t = void 0;\n});\nconst r = () => (t === void 0 && (t = o()), t),\n  g = async e => {\n    t !== e && (t = e, u() && (await m(t), await s({\n      themeAware: !0\n    })));\n  },\n  p = () => h,\n  d = e => {\n    const n = r();\n    return n === e || n === `${e}_exp`;\n  },\n  i = () => {\n    const e = r();\n    return y(e) ? !e.startsWith(\"sap_horizon\") : !a()?.baseThemeName?.startsWith(\"sap_horizon\");\n  },\n  l = async () => (await c(), i()),\n  y = e => T.includes(e);\nexport { r as getTheme, g as setTheme, d as isTheme, i as isLegacyThemeFamily, l as isLegacyThemeFamilyAsync, p as getDefaultTheme };","map":{"version":3,"names":["getTheme","o","reRenderAllUI5Elements","s","m","a","DEFAULT_THEME","h","SUPPORTED_THEMES","T","boot","c","isBooted","u","attachConfigurationReset","f","t","r","g","e","themeAware","p","getDefaultTheme","d","n","i","isLegacyThemeFamily","y","startsWith","baseThemeName","l","isLegacyThemeFamilyAsync","includes","setTheme","isTheme"],"sources":["/home/user/projects/reactproj/node_modules/@ui5/webcomponents-base/src/config/Theme.ts"],"sourcesContent":["import { getTheme as getConfiguredTheme } from \"../InitialConfiguration.js\";\nimport { reRenderAllUI5Elements } from \"../Render.js\";\nimport applyTheme from \"../theming/applyTheme.js\";\nimport getThemeDesignerTheme from \"../theming/getThemeDesignerTheme.js\";\nimport { DEFAULT_THEME, SUPPORTED_THEMES } from \"../generated/AssetParameters.js\";\nimport { boot, isBooted } from \"../Boot.js\";\nimport { attachConfigurationReset } from \"./ConfigurationReset.js\";\n\nlet curTheme: string | undefined;\n\nattachConfigurationReset(() => {\n\tcurTheme = undefined;\n});\n\n/**\n * Returns the current theme.\n * @public\n * @returns {string} the current theme name\n */\nconst getTheme = (): string => {\n\tif (curTheme === undefined) {\n\t\tcurTheme = getConfiguredTheme();\n\t}\n\n\treturn curTheme;\n};\n\n/**\n * Applies a new theme after fetching its assets from the network.\n * @public\n * @param {string} theme the name of the new theme\n * @returns {Promise<void>} a promise that is resolved when the new theme assets have been fetched and applied to the DOM\n */\nconst setTheme = async (theme: string): Promise<void> => {\n\tif (curTheme === theme) {\n\t\treturn;\n\t}\n\n\tcurTheme = theme;\n\n\tif (isBooted()) {\n\t\t// Update CSS Custom Properties\n\t\tawait applyTheme(curTheme);\n\t\tawait reRenderAllUI5Elements({ themeAware: true });\n\t}\n};\n\n/**\n * Returns the default theme.\n *\n * Note: Default theme might be different than the configurated one.\n *\n * @public\n * @returns {string}\n */\nconst getDefaultTheme = (): string => {\n\treturn DEFAULT_THEME;\n};\n\n/**\n * Returns if the given theme name is the one currently applied.\n * @private\n * @param {string} theme\n * @returns {boolean}\n */\nconst isTheme = (theme: string) => {\n\tconst currentTheme = getTheme();\n\treturn currentTheme === theme || currentTheme === `${theme}_exp`;\n};\n\n/**\n * Returns if the currently set theme is part of legacy theme families (\"sap_fiori_3\").\n * **Note**: in addition, the method checks the base theme of a custom theme, built via the ThemeDesigner.\n *\n * @private\n * @returns { boolean }\n */\nconst isLegacyThemeFamily = () => {\n\tconst currentTheme = getTheme();\n\n\tif (!isKnownTheme(currentTheme)) {\n\t\treturn !getThemeDesignerTheme()?.baseThemeName?.startsWith(\"sap_horizon\");\n\t}\n\n\treturn !currentTheme.startsWith(\"sap_horizon\");\n};\n\nconst isLegacyThemeFamilyAsync = async () => {\n\tawait boot();\n\treturn isLegacyThemeFamily();\n};\n\nconst isKnownTheme = (theme: string) => SUPPORTED_THEMES.includes(theme);\n\nexport {\n\tgetTheme,\n\tsetTheme,\n\tisTheme,\n\tisLegacyThemeFamily,\n\tisLegacyThemeFamilyAsync,\n\tgetDefaultTheme,\n};\n"],"mappings":";;AAAA,SAASA,QAAA,IAAYC,CAAA,QAA0B;AAC/C,SAASC,sBAAA,IAAAC,CAAA,QAA8B;AACvC,OAAOC,CAAA,MAAgB;AACvB,OAAOC,CAAA,MAA2B;AAClC,SAASC,aAAA,IAAAC,CAAA,EAAeC,gBAAA,IAAAC,CAAA,QAAwB;AAChD,SAASC,IAAA,IAAAC,CAAA,EAAMC,QAAA,IAAAC,CAAA,QAAgB;AAC/B,SAASC,wBAAA,IAAAC,CAAA,QAAgC;AAEzC,IAAIC,CAAA;AAEJD,CAAA,CAAyB,MAAM;EAC9BC,CAAA,GAAW,MACZ;AAAA,CAAC;AAOD,MAAMC,CAAA,GAAWjB,CAAA,MACZgB,CAAA,KAAa,WAChBA,CAAA,GAAWf,CAAA,CAAmB,IAGxBe,CAAA;EASFE,CAAA,GAAW,MAAOC,CAAA,IAAiC;IACpDH,CAAA,KAAaG,CAAA,KAIjBH,CAAA,GAAWG,CAAA,EAEPN,CAAA,CAAS,MAEZ,MAAMT,CAAA,CAAWY,CAAQ,GACzB,MAAMb,CAAA,CAAuB;MAAEiB,UAAA,EAAY;IAAK,CAAC,GAEnD;EAAA;EAUMC,CAAA,GAAkBC,CAAA,KAChBf,CAAA;EASFgB,CAAA,GAAWJ,CAAA,IAAkB;IAClC,MAAMK,CAAA,GAAeP,CAAA,CAAS;IAC9B,OAAOO,CAAA,KAAiBL,CAAA,IAASK,CAAA,KAAiB,GAAGL,CAAK,MAC3D;EAAA;EASMM,CAAA,GAAsBC,CAAA,KAAM;IACjC,MAAMP,CAAA,GAAeF,CAAA,CAAS;IAE9B,OAAKU,CAAA,CAAaR,CAAY,IAIvB,CAACA,CAAA,CAAaS,UAAA,CAAW,aAAa,IAHrC,CAACvB,CAAA,CAAsB,GAAGwB,aAAA,EAAeD,UAAA,CAAW,aAAa,CAI1E;EAAA;EAEME,CAAA,GAA2B,MAAAC,CAAA,MAChC,MAAMpB,CAAA,CAAK,GACJc,CAAA,CAAoB;EAGtBE,CAAA,GAAgBR,CAAA,IAAkBV,CAAA,CAAiBuB,QAAA,CAASb,CAAK;AAEvE,SACCF,CAAA,IAAAjB,QAAA,EACAkB,CAAA,IAAAe,QAAA,EACAV,CAAA,IAAAW,OAAA,EACAT,CAAA,IAAAC,mBAAA,EACAI,CAAA,IAAAC,wBAAA,EACAV,CAAA,IAAAC,eAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}