{"ast":null,"code":"var __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n    r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n    d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport customElement from \"@ui5/webcomponents-base/dist/decorators/customElement.js\";\nimport property from \"@ui5/webcomponents-base/dist/decorators/property.js\";\nimport litRender from \"@ui5/webcomponents-base/dist/renderer/LitRenderer.js\";\nimport Button from \"./Button.js\";\nimport ToggleButton from \"./ToggleButton.js\";\n// Template\nimport ToggleSpinButtonTemplate from \"./generated/templates/ToggleSpinButtonTemplate.lit.js\";\n/**\n * @class\n *\n * ### Overview\n *\n * `ui5-toggle-spin-button` is explicitly used in the new design of `ui5-time-picker`.\n * It extends `ui5-toggle-button` with some specific accessibility-related properties in order to\n * have spin button look and feel from accessibility point of view. This component should not be used separately.\n * @constructor\n * @extends ToggleButton\n * @since 1.15.0\n * @private\n */\nlet ToggleSpinButton = class ToggleSpinButton extends ToggleButton {\n  constructor() {\n    super(...arguments);\n    /**\n     * Defines the ARIA valuemin of the component.\n     * @default -1\n     */\n    this.valueMin = -1;\n    /**\n     * Defines the ARIA valuemax of the component.\n     * @default -1\n     */\n    this.valueMax = -1;\n    /**\n     * Defines the ARIA valuenow of the component.\n     * @default -1\n     */\n    this.valueNow = -1;\n  }\n  /**\n   * Override of the handler in order to prevent button toggle functionality\n   */\n  _onclick() {}\n  /**\n   * Override\n   */\n  get effectiveAccRole() {\n    return \"spinbutton\";\n  }\n};\n__decorate([property({\n  type: Number\n})], ToggleSpinButton.prototype, \"valueMin\", void 0);\n__decorate([property({\n  type: Number\n})], ToggleSpinButton.prototype, \"valueMax\", void 0);\n__decorate([property({\n  type: Number\n})], ToggleSpinButton.prototype, \"valueNow\", void 0);\n__decorate([property()], ToggleSpinButton.prototype, \"valueText\", void 0);\nToggleSpinButton = __decorate([customElement({\n  tag: \"ui5-toggle-spin-button\",\n  renderer: litRender,\n  styles: [Button.styles, ToggleButton.styles],\n  template: ToggleSpinButtonTemplate\n})], ToggleSpinButton);\nToggleSpinButton.define();\nexport default ToggleSpinButton;","map":{"version":3,"names":["customElement","property","litRender","Button","ToggleButton","ToggleSpinButtonTemplate","ToggleSpinButton","constructor","valueMin","valueMax","valueNow","_onclick","effectiveAccRole","__decorate","type","Number","tag","renderer","styles","template","define"],"sources":["/home/user/projects/reactproj/node_modules/@ui5/webcomponents/src/ToggleSpinButton.ts"],"sourcesContent":["import customElement from \"@ui5/webcomponents-base/dist/decorators/customElement.js\";\nimport property from \"@ui5/webcomponents-base/dist/decorators/property.js\";\nimport litRender from \"@ui5/webcomponents-base/dist/renderer/LitRenderer.js\";\n\nimport Button from \"./Button.js\";\nimport ToggleButton from \"./ToggleButton.js\";\n\n// Template\nimport ToggleSpinButtonTemplate from \"./generated/templates/ToggleSpinButtonTemplate.lit.js\";\n\n/**\n * @class\n *\n * ### Overview\n *\n * `ui5-toggle-spin-button` is explicitly used in the new design of `ui5-time-picker`.\n * It extends `ui5-toggle-button` with some specific accessibility-related properties in order to\n * have spin button look and feel from accessibility point of view. This component should not be used separately.\n * @constructor\n * @extends ToggleButton\n * @since 1.15.0\n * @private\n */\n@customElement({\n\ttag: \"ui5-toggle-spin-button\",\n\trenderer: litRender,\n\tstyles: [Button.styles, ToggleButton.styles],\n\ttemplate: ToggleSpinButtonTemplate,\n})\n\nclass ToggleSpinButton extends ToggleButton {\n\t/**\n\t * Defines the ARIA valuemin of the component.\n\t * @default -1\n\t */\n\t@property({ type: Number })\n\tvalueMin = -1;\n\n\t/**\n\t * Defines the ARIA valuemax of the component.\n\t * @default -1\n\t */\n\t@property({ type: Number })\n\tvalueMax = -1;\n\n\t/**\n\t * Defines the ARIA valuenow of the component.\n\t * @default -1\n\t */\n\t@property({ type: Number })\n\tvalueNow = -1;;\n\n\t/**\n\t * Defines the ARIA valuetext of the component.\n\t * @default undefined\n\t */\n\t@property()\n\tvalueText?: string;\n\n\t/**\n\t * Override of the handler in order to prevent button toggle functionality\n\t */\n\t_onclick() {}\n\n\t/**\n\t * Override\n\t */\n\tget effectiveAccRole() {\n\t\treturn \"spinbutton\";\n\t}\n}\n\nToggleSpinButton.define();\n\nexport default ToggleSpinButton;\n"],"mappings":";;;;;;;AAAA,OAAOA,aAAa,MAAM,0DAA0D;AACpF,OAAOC,QAAQ,MAAM,qDAAqD;AAC1E,OAAOC,SAAS,MAAM,sDAAsD;AAE5E,OAAOC,MAAM,MAAM,aAAa;AAChC,OAAOC,YAAY,MAAM,mBAAmB;AAE5C;AACA,OAAOC,wBAAwB,MAAM,uDAAuD;AAE5F;;;;;;;;;;;;;AAoBA,IAAMC,gBAAgB,GAAtB,MAAMA,gBAAiB,SAAQF,YAAY;EAA3CG,YAAA;;IACC;;;;IAKA,KAAAC,QAAQ,GAAG,CAAC,CAAC;IAEb;;;;IAKA,KAAAC,QAAQ,GAAG,CAAC,CAAC;IAEb;;;;IAKA,KAAAC,QAAQ,GAAG,CAAC,CAAC;EAoBd;EAXC;;;EAGAC,QAAQA,CAAA,GAAI;EAEZ;;;EAGA,IAAIC,gBAAgBA,CAAA;IACnB,OAAO,YAAY;EACpB;CACA;AAlCAC,UAAA,EADCZ,QAAQ,CAAC;EAAEa,IAAI,EAAEC;AAAM,CAAE,CAAC,C,iDACb;AAOdF,UAAA,EADCZ,QAAQ,CAAC;EAAEa,IAAI,EAAEC;AAAM,CAAE,CAAC,C,iDACb;AAOdF,UAAA,EADCZ,QAAQ,CAAC;EAAEa,IAAI,EAAEC;AAAM,CAAE,CAAC,C,iDACb;AAOdF,UAAA,EADCZ,QAAQ,EAAE,C,kDACQ;AA3BdK,gBAAgB,GAAAO,UAAA,EAPrBb,aAAa,CAAC;EACdgB,GAAG,EAAE,wBAAwB;EAC7BC,QAAQ,EAAEf,SAAS;EACnBgB,MAAM,EAAE,CAACf,MAAM,CAACe,MAAM,EAAEd,YAAY,CAACc,MAAM,CAAC;EAC5CC,QAAQ,EAAEd;CACV,CAAC,C,EAEIC,gBAAgB,CAwCrB;AAEDA,gBAAgB,CAACc,MAAM,EAAE;AAEzB,eAAed,gBAAgB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}