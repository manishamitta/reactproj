{"ast":null,"code":"\"use strict\";\n\nimport c from \"../getSharedResource.js\";\nimport { getTheme as p } from \"../config/Theme.js\";\nconst u = new Map([[\"sap_horizon\", \"V5\"], [\"sap_horizon_dark\", \"V5\"], [\"sap_horizon_hcb\", \"V5/HC\"], [\"sap_horizon_hcw\", \"V5/HC\"]]),\n  e = \"V4\",\n  i = new Map(),\n  l = c(\"SVGIllustration.registry\", new Map()),\n  a = c(\"SVGIllustration.promises\", new Map()),\n  I = () => {\n    const s = p();\n    return u.has(s) ? u.get(s) : e;\n  },\n  g = s => {\n    let t = I();\n    const [o, r] = s.split(\"/\");\n    let n = `${o}/${t}/${r}`;\n    return !i.has(n) && t !== e && (t = e, n = `${o}/${t}/${r}`), {\n      registryKey: n,\n      collection: t\n    };\n  },\n  h = (s, t) => {\n    const o = t.collection || e;\n    l.set(`${t.set}/${o}/${s}`, {\n      dialogSvg: t.dialogSvg,\n      sceneSvg: t.sceneSvg,\n      spotSvg: t.spotSvg,\n      dotSvg: t.dotSvg,\n      title: t.title,\n      subtitle: t.subtitle\n    });\n  },\n  y = (s, t) => {\n    i.set(s, t);\n  },\n  m = s => {\n    const {\n      registryKey: t\n    } = g(s);\n    if (!a.has(t)) {\n      if (!i.has(t)) {\n        const r = s.startsWith(\"fiori/\") ? s.replace(\"fiori/\", \"\") : s;\n        throw new Error(`No loader registered for the ${s} illustration. Probably you forgot to import the \"@ui5/webcomponents-fiori/dist/illustrations/${r}.js\" module. Or you can import the \"@ui5/webcomponents-fiori/dist/illustrations/AllIllustrations.js\" module that will make all illustrations available, but fetch only the ones used.`);\n      }\n      const o = i.get(t);\n      a.set(t, o(t));\n    }\n    return a.get(t);\n  },\n  d = s => {\n    const {\n      registryKey: t\n    } = g(s);\n    return l.get(t);\n  },\n  S = async s => {\n    const {\n      registryKey: t\n    } = g(s);\n    return await m(s), l.get(t);\n  };\nexport { d as getIllustrationDataSync, h as registerIllustration, y as registerIllustrationLoader, S as getIllustrationData };","map":{"version":3,"names":["c","getTheme","p","u","Map","e","i","l","a","I","getCollection","s","has","get","g","t","o","r","split","n","registryKey","collection","h","registerIllustration","set","dialogSvg","sceneSvg","spotSvg","dotSvg","title","subtitle","y","registerIllustrationLoader","m","startsWith","replace","Error","d","S","getIllustrationDataSync","getIllustrationData"],"sources":["/home/user/projects/reactproj/node_modules/@ui5/webcomponents-base/src/asset-registries/Illustrations.ts"],"sourcesContent":["import getSharedResource from \"../getSharedResource.js\";\nimport type { I18nText } from \"../i18nBundle.js\";\nimport { getTheme } from \"../config/Theme.js\";\n\ntype IllustrationLoader = (illustrationName: string) => Promise<IllustrationData>;\n\ntype IllustrationProperties = {\n\tdialogSvg: string,\n\tsceneSvg: string,\n\tspotSvg: string,\n\tdotSvg: string,\n\ttitle: I18nText,\n\tsubtitle: I18nText,\n};\n\ntype IllustrationData = IllustrationProperties & {\n\tset: string,\n\tcollection: string,\n};\n\nconst IllustrationCollections = new Map([\n\t[\"sap_horizon\", \"V5\"],\n\t[\"sap_horizon_dark\", \"V5\"],\n\t[\"sap_horizon_hcb\", \"V5/HC\"],\n\t[\"sap_horizon_hcw\", \"V5/HC\"],\n]);\n\nconst FALLBACK_COLLECTION = \"V4\";\n\nconst loaders = new Map<string, IllustrationLoader>();\nconst registry = getSharedResource<Map<string, IllustrationProperties>>(\"SVGIllustration.registry\", new Map());\nconst illustrationPromises = getSharedResource<Map<string, Promise<IllustrationData>>>(\"SVGIllustration.promises\", new Map());\n\nconst getCollection = () => {\n\tconst theme = getTheme();\n\n\tif (IllustrationCollections.has(theme)) {\n\t\treturn IllustrationCollections.get(theme);\n\t}\n\n\treturn FALLBACK_COLLECTION;\n};\n\n/**\n * Processes the name of the illustration\n * The name is used to generate the registry key and the loader key\n * The registry key is used to store and get the illustration data from the registry\n * The loader key is used to store and get the illustration loader from the loaders map\n * The function generates the correct registry key and loader key based on whether an loader exists for the illustration\n * If there is no loader registered for the collection, it falls back to the default collection\n */\nconst processName = (name: string) => {\n\tlet collection = getCollection();\n\tconst [set, illustrationName] = name.split(\"/\");\n\tlet registryKey = `${set}/${collection}/${illustrationName}`;\n\n\tif (!loaders.has(registryKey) && collection !== FALLBACK_COLLECTION) {\n\t\tcollection = FALLBACK_COLLECTION;\n\t\tregistryKey = `${set}/${collection}/${illustrationName}`;\n\t}\n\n\treturn {\n\t\tregistryKey,\n\t\tcollection,\n\t};\n};\n\nconst registerIllustration = (name: string, data: IllustrationData) => {\n\tconst collection = data.collection || FALLBACK_COLLECTION;\n\tregistry.set(`${data.set}/${collection}/${name}`, {\n\t\tdialogSvg: data.dialogSvg,\n\t\tsceneSvg: data.sceneSvg,\n\t\tspotSvg: data.spotSvg,\n\t\tdotSvg: data.dotSvg,\n\t\ttitle: data.title,\n\t\tsubtitle: data.subtitle,\n\t});\n};\n\nconst registerIllustrationLoader = (illustrationName: string, loader: IllustrationLoader) => {\n\tloaders.set(illustrationName, loader);\n};\n\nconst _loadIllustrationOnce = (illustrationName: string) => {\n\tconst { registryKey } = processName(illustrationName);\n\tif (!illustrationPromises.has(registryKey)) {\n\t\tif (!loaders.has(registryKey)) {\n\t\t\tconst illustrationPath = illustrationName.startsWith(\"fiori/\") ? illustrationName.replace(\"fiori/\", \"\") : illustrationName;\n\t\t\tthrow new Error(`No loader registered for the ${illustrationName} illustration. Probably you forgot to import the \"@ui5/webcomponents-fiori/dist/illustrations/${illustrationPath}.js\" module. Or you can import the \"@ui5/webcomponents-fiori/dist/illustrations/AllIllustrations.js\" module that will make all illustrations available, but fetch only the ones used.`);\n\t\t}\n\n\t\tconst loadIllustrations = loaders.get(registryKey)!;\n\t\tillustrationPromises.set(registryKey, loadIllustrations(registryKey));\n\t}\n\treturn illustrationPromises.get(registryKey);\n};\n\nconst getIllustrationDataSync = (illustrationName: string) => {\n\tconst { registryKey } = processName(illustrationName);\n\treturn registry.get(registryKey);\n};\n\nconst getIllustrationData = async (illustrationName: string) => {\n\tconst { registryKey } = processName(illustrationName);\n\n\tawait _loadIllustrationOnce(illustrationName);\n\treturn registry.get(registryKey);\n};\n\nexport {\n\tgetIllustrationDataSync,\n\tregisterIllustration,\n\tregisterIllustrationLoader,\n\tgetIllustrationData,\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}