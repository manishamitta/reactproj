{"ast":null,"code":"var __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n    r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n    d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar ProgressIndicator_1;\nimport UI5Element from \"@ui5/webcomponents-base/dist/UI5Element.js\";\nimport customElement from \"@ui5/webcomponents-base/dist/decorators/customElement.js\";\nimport property from \"@ui5/webcomponents-base/dist/decorators/property.js\";\nimport litRender from \"@ui5/webcomponents-base/dist/renderer/LitRenderer.js\";\nimport AnimationMode from \"@ui5/webcomponents-base/dist/types/AnimationMode.js\";\nimport ValueState from \"@ui5/webcomponents-base/dist/types/ValueState.js\";\nimport { getAnimationMode } from \"@ui5/webcomponents-base/dist/config/AnimationMode.js\";\nimport { getI18nBundle } from \"@ui5/webcomponents-base/dist/i18nBundle.js\";\nimport Icon from \"./Icon.js\";\nimport { VALUE_STATE_ERROR, VALUE_STATE_WARNING, VALUE_STATE_SUCCESS, VALUE_STATE_INFORMATION } from \"./generated/i18n/i18n-defaults.js\";\n// Template\nimport ProgressIndicatorTemplate from \"./generated/templates/ProgressIndicatorTemplate.lit.js\";\n// Styles\nimport ProgressIndicatorCss from \"./generated/themes/ProgressIndicator.css.js\";\n/**\n * @class\n *\n * ### Overview\n * Shows the progress of a process in a graphical way. To indicate the progress,\n * the inside of the component is filled with a color.\n *\n * ### Responsive Behavior\n * You can change the size of the Progress Indicator by changing its `width` or `height` CSS properties.\n *\n * ### ES6 Module Import\n *\n * `import \"@ui5/webcomponents/dist/ProgressIndicator.js\";`\n * @csspart bar - Used to style the main bar of the `ui5-progress-indicator`\n * @csspart remaining-bar - Used to style the remaining bar of the `ui5-progress-indicator`\n * @constructor\n * @extends UI5Element\n * @public\n * @since 1.0.0-rc.8\n */\nlet ProgressIndicator = ProgressIndicator_1 = class ProgressIndicator extends UI5Element {\n  constructor() {\n    super();\n    /**\n     * Defines whether the component value is shown.\n     * @default false\n     * @public\n     */\n    this.hideValue = false;\n    /**\n     * Specifies the numerical value in percent for the length of the component.\n     *\n     * **Note:**\n     * If a value greater than 100 is provided, the percentValue is set to 100. In other cases of invalid value, percentValue is set to its default of 0.\n     * @default 0\n     * @public\n     */\n    this.value = 0;\n    /**\n     * Defines the value state of the component.\n     * @default \"None\"\n     * @public\n     */\n    this.valueState = \"None\";\n    this._previousValue = 0;\n    this._transitionDuration = 0;\n  }\n  onBeforeRendering() {\n    this._transitionDuration = Math.abs(this._previousValue - this.validatedValue) * 20;\n    this._previousValue = this.validatedValue;\n  }\n  valueStateTextMappings() {\n    return {\n      \"Negative\": ProgressIndicator_1.i18nBundle.getText(VALUE_STATE_ERROR),\n      \"Critical\": ProgressIndicator_1.i18nBundle.getText(VALUE_STATE_WARNING),\n      \"Positive\": ProgressIndicator_1.i18nBundle.getText(VALUE_STATE_SUCCESS),\n      \"Information\": ProgressIndicator_1.i18nBundle.getText(VALUE_STATE_INFORMATION)\n    };\n  }\n  valueStateIconMappings() {\n    return {\n      \"Negative\": \"status-negative\",\n      \"Critical\": \"status-critical\",\n      \"Positive\": \"status-positive\",\n      \"Information\": \"information\"\n    };\n  }\n  get styles() {\n    return {\n      bar: {\n        \"width\": `${this.validatedValue}%`,\n        \"transition-duration\": this.shouldAnimate ? `${this._transitionDuration}ms` : \"none\"\n      }\n    };\n  }\n  get classes() {\n    return {\n      root: {\n        \"ui5-progress-indicator-max-value\": this.validatedValue === 100,\n        \"ui5-progress-indicator-min-value\": this.validatedValue === 0\n      }\n    };\n  }\n  get validatedValue() {\n    if (this.value < 0) {\n      return 0;\n    }\n    if (this.value > 100) {\n      return 100;\n    }\n    return this.value;\n  }\n  get showValueInRemainingBar() {\n    return this.value <= 50;\n  }\n  get shouldAnimate() {\n    return getAnimationMode() !== AnimationMode.None;\n  }\n  get valueStateText() {\n    const percentValue = `${this.validatedValue}%`;\n    const valueText = this.valueStateTextMappings()[this.valueState];\n    return valueText ? `${percentValue} ${valueText}` : percentValue;\n  }\n  get showIcon() {\n    return this.valueState !== ValueState.None;\n  }\n  get valueStateIcon() {\n    return this.valueStateIconMappings()[this.valueState];\n  }\n  static async onDefine() {\n    ProgressIndicator_1.i18nBundle = await getI18nBundle(\"@ui5/webcomponents\");\n  }\n};\n__decorate([property()], ProgressIndicator.prototype, \"accessibleName\", void 0);\n__decorate([property({\n  type: Boolean\n})], ProgressIndicator.prototype, \"hideValue\", void 0);\n__decorate([property({\n  type: Number\n})], ProgressIndicator.prototype, \"value\", void 0);\n__decorate([property()], ProgressIndicator.prototype, \"displayValue\", void 0);\n__decorate([property()], ProgressIndicator.prototype, \"valueState\", void 0);\nProgressIndicator = ProgressIndicator_1 = __decorate([customElement({\n  tag: \"ui5-progress-indicator\",\n  renderer: litRender,\n  styles: ProgressIndicatorCss,\n  template: ProgressIndicatorTemplate,\n  dependencies: [Icon]\n})], ProgressIndicator);\nProgressIndicator.define();\nexport default ProgressIndicator;","map":{"version":3,"names":["UI5Element","customElement","property","litRender","AnimationMode","ValueState","getAnimationMode","getI18nBundle","Icon","VALUE_STATE_ERROR","VALUE_STATE_WARNING","VALUE_STATE_SUCCESS","VALUE_STATE_INFORMATION","ProgressIndicatorTemplate","ProgressIndicatorCss","ProgressIndicator","ProgressIndicator_1","constructor","hideValue","value","valueState","_previousValue","_transitionDuration","onBeforeRendering","Math","abs","validatedValue","valueStateTextMappings","i18nBundle","getText","valueStateIconMappings","styles","bar","shouldAnimate","classes","root","showValueInRemainingBar","None","valueStateText","percentValue","valueText","showIcon","valueStateIcon","onDefine","__decorate","type","Boolean","Number","tag","renderer","template","dependencies","define"],"sources":["/home/user/projects/reactproj/node_modules/@ui5/webcomponents/src/ProgressIndicator.ts"],"sourcesContent":["import UI5Element from \"@ui5/webcomponents-base/dist/UI5Element.js\";\nimport customElement from \"@ui5/webcomponents-base/dist/decorators/customElement.js\";\nimport property from \"@ui5/webcomponents-base/dist/decorators/property.js\";\nimport litRender from \"@ui5/webcomponents-base/dist/renderer/LitRenderer.js\";\nimport AnimationMode from \"@ui5/webcomponents-base/dist/types/AnimationMode.js\";\nimport ValueState from \"@ui5/webcomponents-base/dist/types/ValueState.js\";\nimport { getAnimationMode } from \"@ui5/webcomponents-base/dist/config/AnimationMode.js\";\nimport { getI18nBundle } from \"@ui5/webcomponents-base/dist/i18nBundle.js\";\nimport type I18nBundle from \"@ui5/webcomponents-base/dist/i18nBundle.js\";\nimport Icon from \"./Icon.js\";\nimport {\n\tVALUE_STATE_ERROR,\n\tVALUE_STATE_WARNING,\n\tVALUE_STATE_SUCCESS,\n\tVALUE_STATE_INFORMATION,\n} from \"./generated/i18n/i18n-defaults.js\";\n\n// Template\nimport ProgressIndicatorTemplate from \"./generated/templates/ProgressIndicatorTemplate.lit.js\";\n\n// Styles\nimport ProgressIndicatorCss from \"./generated/themes/ProgressIndicator.css.js\";\n\n/**\n * @class\n *\n * ### Overview\n * Shows the progress of a process in a graphical way. To indicate the progress,\n * the inside of the component is filled with a color.\n *\n * ### Responsive Behavior\n * You can change the size of the Progress Indicator by changing its `width` or `height` CSS properties.\n *\n * ### ES6 Module Import\n *\n * `import \"@ui5/webcomponents/dist/ProgressIndicator.js\";`\n * @csspart bar - Used to style the main bar of the `ui5-progress-indicator`\n * @csspart remaining-bar - Used to style the remaining bar of the `ui5-progress-indicator`\n * @constructor\n * @extends UI5Element\n * @public\n * @since 1.0.0-rc.8\n */\n@customElement({\n\ttag: \"ui5-progress-indicator\",\n\trenderer: litRender,\n\tstyles: ProgressIndicatorCss,\n\ttemplate: ProgressIndicatorTemplate,\n\tdependencies: [Icon],\n})\n\nclass ProgressIndicator extends UI5Element {\n\t/**\n\t * Defines the accessible ARIA name of the component.\n\t * @default undefined\n\t * @public\n\t * @since 1.16.0\n\t*/\n\t@property()\n\taccessibleName?: string;\n\n\t/**\n\t * Defines whether the component value is shown.\n\t * @default false\n\t * @public\n\t */\n\t@property({ type: Boolean })\n\thideValue = false;\n\n\t/**\n\t * Specifies the numerical value in percent for the length of the component.\n\t *\n\t * **Note:**\n\t * If a value greater than 100 is provided, the percentValue is set to 100. In other cases of invalid value, percentValue is set to its default of 0.\n\t * @default 0\n\t * @public\n\t */\n\t@property({ type: Number })\n\tvalue = 0;\n\n\t/**\n\t * Specifies the text value to be displayed in the bar.\n\t *\n\t * **Note:**\n\t *\n\t * - If there is no value provided or the value is empty, the default percentage value is shown.\n\t * - If `hideValue` property is `true` both the `displayValue` and `value` property values are not shown.\n\t * @default undefined\n\t * @public\n\t */\n\t@property()\n\tdisplayValue?: string;\n\n\t/**\n\t * Defines the value state of the component.\n\t * @default \"None\"\n\t * @public\n\t */\n\t@property()\n\tvalueState: `${ValueState}` = \"None\";\n\n\tstatic i18nBundle: I18nBundle;\n\t_previousValue: number;\n\t_transitionDuration: number;\n\n\tconstructor() {\n\t\tsuper();\n\n\t\tthis._previousValue = 0;\n\t\tthis._transitionDuration = 0;\n\t}\n\n\tonBeforeRendering() {\n\t\tthis._transitionDuration = Math.abs(this._previousValue - this.validatedValue) * 20;\n\t\tthis._previousValue = this.validatedValue;\n\t}\n\n\tvalueStateTextMappings(): Record<string, string> {\n\t\treturn {\n\t\t\t\"Negative\": ProgressIndicator.i18nBundle.getText(VALUE_STATE_ERROR),\n\t\t\t\"Critical\": ProgressIndicator.i18nBundle.getText(VALUE_STATE_WARNING),\n\t\t\t\"Positive\": ProgressIndicator.i18nBundle.getText(VALUE_STATE_SUCCESS),\n\t\t\t\"Information\": ProgressIndicator.i18nBundle.getText(VALUE_STATE_INFORMATION),\n\t\t};\n\t}\n\n\tvalueStateIconMappings(): Record<string, string> {\n\t\treturn {\n\t\t\t\"Negative\": \"status-negative\",\n\t\t\t\"Critical\": \"status-critical\",\n\t\t\t\"Positive\": \"status-positive\",\n\t\t\t\"Information\": \"information\",\n\t\t};\n\t}\n\n\tget styles() {\n\t\treturn {\n\t\t\tbar: {\n\t\t\t\t\"width\": `${this.validatedValue}%`,\n\t\t\t\t\"transition-duration\": this.shouldAnimate ? `${this._transitionDuration}ms` : \"none\",\n\t\t\t},\n\t\t};\n\t}\n\n\tget classes() {\n\t\treturn {\n\t\t\troot: {\n\t\t\t\t\"ui5-progress-indicator-max-value\": this.validatedValue === 100,\n\t\t\t\t\"ui5-progress-indicator-min-value\": this.validatedValue === 0,\n\t\t\t},\n\t\t};\n\t}\n\n\tget validatedValue() {\n\t\tif (this.value < 0) {\n\t\t\treturn 0;\n\t\t}\n\n\t\tif (this.value > 100) {\n\t\t\treturn 100;\n\t\t}\n\n\t\treturn this.value;\n\t}\n\n\tget showValueInRemainingBar() {\n\t\treturn this.value <= 50;\n\t}\n\n\tget shouldAnimate() {\n\t\treturn getAnimationMode() !== AnimationMode.None;\n\t}\n\n\tget valueStateText() {\n\t\tconst percentValue = `${this.validatedValue}%`;\n\t\tconst valueText = this.valueStateTextMappings()[this.valueState];\n\n\t\treturn valueText ? `${percentValue} ${valueText}` : percentValue;\n\t}\n\n\tget showIcon() {\n\t\treturn this.valueState !== ValueState.None;\n\t}\n\n\tget valueStateIcon() {\n\t\treturn this.valueStateIconMappings()[this.valueState];\n\t}\n\n\tstatic async onDefine() {\n\t\tProgressIndicator.i18nBundle = await getI18nBundle(\"@ui5/webcomponents\");\n\t}\n}\n\nProgressIndicator.define();\n\nexport default ProgressIndicator;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}