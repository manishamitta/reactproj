{"ast":null,"code":"var __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n    r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n    d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport customElement from \"@ui5/webcomponents-base/dist/decorators/customElement.js\";\nimport property from \"@ui5/webcomponents-base/dist/decorators/property.js\";\nimport { isSpaceShift } from \"@ui5/webcomponents-base/dist/Keys.js\";\nimport { isSafari } from \"@ui5/webcomponents-base/dist/Device.js\";\nimport Button from \"./Button.js\";\nimport ToggleButtonTemplate from \"./generated/templates/ToggleButtonTemplate.lit.js\";\n// Styles\nimport toggleBtnCss from \"./generated/themes/ToggleButton.css.js\";\n/**\n * @class\n *\n * ### Overview\n *\n * The `ui5-toggle-button` component is an enhanced `ui5-button`\n * that can be toggled between pressed and normal states.\n * Users can use the `ui5-toggle-button` as a switch to turn a setting on or off.\n * It can also be used to represent an independent choice similar to a check box.\n *\n * Clicking or tapping on a `ui5-toggle-button` changes its state to `pressed`. The button returns to\n * its initial state when the user clicks or taps on it again.\n * By applying additional custom CSS-styling classes, apps can give a different style to any `ui5-toggle-button`.\n *\n * ### ES6 Module Import\n *\n * `import \"@ui5/webcomponents/dist/ToggleButton.js\";`\n * @constructor\n * @extends Button\n * @public\n */\nlet ToggleButton = class ToggleButton extends Button {\n  constructor() {\n    super(...arguments);\n    /**\n     * Determines whether the component is displayed as pressed.\n     * @default false\n     * @public\n     */\n    this.pressed = false;\n  }\n  _onclick() {\n    this.pressed = !this.pressed;\n    if (isSafari()) {\n      this.getDomRef().focus();\n    }\n  }\n  _onkeyup(e) {\n    if (isSpaceShift(e)) {\n      e.preventDefault();\n      return;\n    }\n    super._onkeyup(e);\n  }\n};\n__decorate([property({\n  type: Boolean\n})], ToggleButton.prototype, \"pressed\", void 0);\nToggleButton = __decorate([customElement({\n  tag: \"ui5-toggle-button\",\n  template: ToggleButtonTemplate,\n  styles: [Button.styles, toggleBtnCss]\n})], ToggleButton);\nToggleButton.define();\nexport default ToggleButton;","map":{"version":3,"names":["customElement","property","isSpaceShift","isSafari","Button","ToggleButtonTemplate","toggleBtnCss","ToggleButton","constructor","pressed","_onclick","getDomRef","focus","_onkeyup","e","preventDefault","__decorate","type","Boolean","tag","template","styles","define"],"sources":["/home/user/projects/reactproj/node_modules/@ui5/webcomponents/src/ToggleButton.ts"],"sourcesContent":["import customElement from \"@ui5/webcomponents-base/dist/decorators/customElement.js\";\nimport property from \"@ui5/webcomponents-base/dist/decorators/property.js\";\n\nimport { isSpaceShift } from \"@ui5/webcomponents-base/dist/Keys.js\";\nimport { isSafari } from \"@ui5/webcomponents-base/dist/Device.js\";\nimport Button from \"./Button.js\";\nimport ToggleButtonTemplate from \"./generated/templates/ToggleButtonTemplate.lit.js\";\n\n// Styles\nimport toggleBtnCss from \"./generated/themes/ToggleButton.css.js\";\n\n/**\n * @class\n *\n * ### Overview\n *\n * The `ui5-toggle-button` component is an enhanced `ui5-button`\n * that can be toggled between pressed and normal states.\n * Users can use the `ui5-toggle-button` as a switch to turn a setting on or off.\n * It can also be used to represent an independent choice similar to a check box.\n *\n * Clicking or tapping on a `ui5-toggle-button` changes its state to `pressed`. The button returns to\n * its initial state when the user clicks or taps on it again.\n * By applying additional custom CSS-styling classes, apps can give a different style to any `ui5-toggle-button`.\n *\n * ### ES6 Module Import\n *\n * `import \"@ui5/webcomponents/dist/ToggleButton.js\";`\n * @constructor\n * @extends Button\n * @public\n */\n@customElement({\n\ttag: \"ui5-toggle-button\",\n\ttemplate: ToggleButtonTemplate,\n\tstyles: [Button.styles, toggleBtnCss],\n})\nclass ToggleButton extends Button {\n\t/**\n\t * Determines whether the component is displayed as pressed.\n\t * @default false\n\t * @public\n\t */\n\t@property({ type: Boolean })\n\tpressed = false;\n\n\t_onclick() {\n\t\tthis.pressed = !this.pressed;\n\n\t\tif (isSafari()) {\n\t\t\tthis.getDomRef()!.focus();\n\t\t}\n\t}\n\n\t_onkeyup(e: KeyboardEvent) {\n\t\tif (isSpaceShift(e)) {\n\t\t\te.preventDefault();\n\t\t\treturn;\n\t\t}\n\n\t\tsuper._onkeyup(e);\n\t}\n}\n\nToggleButton.define();\n\nexport default ToggleButton;\n"],"mappings":";;;;;;;AAAA,OAAOA,aAAa,MAAM,0DAA0D;AACpF,OAAOC,QAAQ,MAAM,qDAAqD;AAE1E,SAASC,YAAY,QAAQ,sCAAsC;AACnE,SAASC,QAAQ,QAAQ,wCAAwC;AACjE,OAAOC,MAAM,MAAM,aAAa;AAChC,OAAOC,oBAAoB,MAAM,mDAAmD;AAEpF;AACA,OAAOC,YAAY,MAAM,wCAAwC;AAEjE;;;;;;;;;;;;;;;;;;;;;AA0BA,IAAMC,YAAY,GAAlB,MAAMA,YAAa,SAAQH,MAAM;EAAjCI,YAAA;;IACC;;;;;IAMA,KAAAC,OAAO,GAAG,KAAK;EAkBhB;EAhBCC,QAAQA,CAAA;IACP,IAAI,CAACD,OAAO,GAAG,CAAC,IAAI,CAACA,OAAO;IAE5B,IAAIN,QAAQ,EAAE,EAAE;MACf,IAAI,CAACQ,SAAS,EAAG,CAACC,KAAK,EAAE;;EAE3B;EAEAC,QAAQA,CAACC,CAAgB;IACxB,IAAIZ,YAAY,CAACY,CAAC,CAAC,EAAE;MACpBA,CAAC,CAACC,cAAc,EAAE;MAClB;;IAGD,KAAK,CAACF,QAAQ,CAACC,CAAC,CAAC;EAClB;CACA;AAlBAE,UAAA,EADCf,QAAQ,CAAC;EAAEgB,IAAI,EAAEC;AAAO,CAAE,CAAC,C,4CACZ;AAPXX,YAAY,GAAAS,UAAA,EALjBhB,aAAa,CAAC;EACdmB,GAAG,EAAE,mBAAmB;EACxBC,QAAQ,EAAEf,oBAAoB;EAC9BgB,MAAM,EAAE,CAACjB,MAAM,CAACiB,MAAM,EAAEf,YAAY;CACpC,CAAC,C,EACIC,YAAY,CAyBjB;AAEDA,YAAY,CAACe,MAAM,EAAE;AAErB,eAAef,YAAY","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}