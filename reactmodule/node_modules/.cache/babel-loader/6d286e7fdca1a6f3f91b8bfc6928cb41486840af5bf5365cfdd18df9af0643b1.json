{"ast":null,"code":"import ButtonDesign from '@ui5/webcomponents/dist/types/ButtonDesign.js';\nimport IconMode from '@ui5/webcomponents/dist/types/IconMode.js';\nimport iconNavDownArrow from '@ui5/webcomponents-icons/dist/navigation-down-arrow.js';\nimport iconNavRightArrow from '@ui5/webcomponents-icons/dist/navigation-right-arrow.js';\nimport { CssSizeVariables, useCurrentTheme, useStylesheet } from '@ui5/webcomponents-react-base';\nimport { clsx } from 'clsx';\nimport { Button, Icon } from '../../../../webComponents/index.js';\nimport { classNames, styleData } from './Expandable.module.css.js';\nimport { jsx as _jsx, Fragment as _Fragment, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst getPadding = level => {\n  switch (level) {\n    case 0:\n      return '0px';\n    case 1:\n      return CssSizeVariables.ui5WcrAnalyticalTableTreePaddingLevel1;\n    case 2:\n      return CssSizeVariables.ui5WcrAnalyticalTableTreePaddingLevel2;\n    case 3:\n      return CssSizeVariables.ui5WcrAnalyticalTableTreePaddingLevel3;\n    default:\n      return `calc(${CssSizeVariables.ui5WcrAnalyticalTableTreePaddingLevel3} + ${level - 3}rem * 0.5)`;\n  }\n};\nexport const Expandable = props => {\n  const {\n    cell,\n    row,\n    column,\n    visibleColumns: columns,\n    webComponentsReactProperties\n  } = props;\n  const {\n    renderRowSubComponent,\n    alwaysShowSubComponent,\n    translatableTexts\n  } = webComponentsReactProperties;\n  const currentTheme = useCurrentTheme();\n  useStylesheet(styleData, Expandable.displayName);\n  const shouldRenderButton = currentTheme === 'sap_horizon' || currentTheme === 'sap_horizon_dark';\n  const tableColumns = columns.filter(_ref => {\n    let {\n      id\n    } = _ref;\n    return id !== '__ui5wcr__internal_selection_column' && id !== '__ui5wcr__internal_highlight_column' && id !== '__ui5wcr__internal_navigation_column';\n  });\n  const columnIndex = tableColumns.findIndex(col => col.id === column.id);\n  const paddingLeft = getPadding(row.depth);\n  const rowProps = row.getToggleRowExpandedProps();\n  const subComponentExpandable = typeof renderRowSubComponent === 'function' && !!renderRowSubComponent(row) && !alwaysShowSubComponent;\n  return /*#__PURE__*/_jsxs(_Fragment, {\n    children: [columnIndex === 0 && /*#__PURE__*/\n    // todo rowProps should be applied to the whole row, not just the cell. We should consider refactoring this.\n    _jsx(_Fragment, {\n      children: row.canExpand || subComponentExpandable ? /*#__PURE__*/_jsx(\"span\", {\n        title: row.isExpanded ? translatableTexts.collapseNodeA11yText : translatableTexts.expandNodeA11yText,\n        style: {\n          ...rowProps.style,\n          paddingInlineStart: paddingLeft\n        },\n        className: classNames.container,\n        \"aria-expanded\": row.isExpanded,\n        \"aria-label\": row.isExpanded ? translatableTexts.collapseA11yText : translatableTexts.expandA11yText,\n        children: shouldRenderButton ? /*#__PURE__*/_jsx(Button, {\n          tabIndex: -1,\n          icon: row.isExpanded ? iconNavDownArrow : iconNavRightArrow,\n          design: ButtonDesign.Transparent,\n          onClick: rowProps.onClick,\n          className: classNames.button\n        }) : /*#__PURE__*/_jsx(Icon, {\n          tabIndex: -1,\n          onClick: rowProps.onClick,\n          mode: IconMode.Interactive,\n          name: row.isExpanded ? iconNavDownArrow : iconNavRightArrow,\n          \"data-component-name\": \"AnalyticalTableExpandIcon\",\n          className: classNames.icon\n        })\n      }) : /*#__PURE__*/_jsx(\"span\", {\n        style: {\n          paddingInlineStart: paddingLeft\n        },\n        \"data-component-name\": \"AnalyticalTableNonExpandableCellSpacer\",\n        className: clsx(classNames.nonExpandableCellSpacer, shouldRenderButton && classNames.withExpandableButton)\n      })\n    }), cell.render('Cell')]\n  });\n};\nExpandable.displayName = 'Expandable';","map":{"version":3,"names":["ButtonDesign","IconMode","iconNavDownArrow","iconNavRightArrow","CssSizeVariables","useCurrentTheme","useStylesheet","clsx","Button","Icon","classNames","styleData","jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","getPadding","level","ui5WcrAnalyticalTableTreePaddingLevel1","ui5WcrAnalyticalTableTreePaddingLevel2","ui5WcrAnalyticalTableTreePaddingLevel3","Expandable","props","cell","row","column","visibleColumns","columns","webComponentsReactProperties","renderRowSubComponent","alwaysShowSubComponent","translatableTexts","currentTheme","displayName","shouldRenderButton","tableColumns","filter","_ref","id","columnIndex","findIndex","col","paddingLeft","depth","rowProps","getToggleRowExpandedProps","subComponentExpandable","children","canExpand","title","isExpanded","collapseNodeA11yText","expandNodeA11yText","style","paddingInlineStart","className","container","collapseA11yText","expandA11yText","tabIndex","icon","design","Transparent","onClick","button","mode","Interactive","name","nonExpandableCellSpacer","withExpandableButton","render"],"sources":["/home/user/projects/reactproj/node_modules/@ui5/webcomponents-react/dist/components/AnalyticalTable/defaults/Column/Expandable.js"],"sourcesContent":["import ButtonDesign from '@ui5/webcomponents/dist/types/ButtonDesign.js';\nimport IconMode from '@ui5/webcomponents/dist/types/IconMode.js';\nimport iconNavDownArrow from '@ui5/webcomponents-icons/dist/navigation-down-arrow.js';\nimport iconNavRightArrow from '@ui5/webcomponents-icons/dist/navigation-right-arrow.js';\nimport { CssSizeVariables, useCurrentTheme, useStylesheet } from '@ui5/webcomponents-react-base';\nimport { clsx } from 'clsx';\nimport { Button, Icon } from '../../../../webComponents/index.js';\nimport { classNames, styleData } from './Expandable.module.css.js';\nimport { jsx as _jsx, Fragment as _Fragment, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst getPadding = level => {\n  switch (level) {\n    case 0:\n      return '0px';\n    case 1:\n      return CssSizeVariables.ui5WcrAnalyticalTableTreePaddingLevel1;\n    case 2:\n      return CssSizeVariables.ui5WcrAnalyticalTableTreePaddingLevel2;\n    case 3:\n      return CssSizeVariables.ui5WcrAnalyticalTableTreePaddingLevel3;\n    default:\n      return `calc(${CssSizeVariables.ui5WcrAnalyticalTableTreePaddingLevel3} + ${level - 3}rem * 0.5)`;\n  }\n};\nexport const Expandable = props => {\n  const {\n    cell,\n    row,\n    column,\n    visibleColumns: columns,\n    webComponentsReactProperties\n  } = props;\n  const {\n    renderRowSubComponent,\n    alwaysShowSubComponent,\n    translatableTexts\n  } = webComponentsReactProperties;\n  const currentTheme = useCurrentTheme();\n  useStylesheet(styleData, Expandable.displayName);\n  const shouldRenderButton = currentTheme === 'sap_horizon' || currentTheme === 'sap_horizon_dark';\n  const tableColumns = columns.filter(({\n    id\n  }) => id !== '__ui5wcr__internal_selection_column' && id !== '__ui5wcr__internal_highlight_column' && id !== '__ui5wcr__internal_navigation_column');\n  const columnIndex = tableColumns.findIndex(col => col.id === column.id);\n  const paddingLeft = getPadding(row.depth);\n  const rowProps = row.getToggleRowExpandedProps();\n  const subComponentExpandable = typeof renderRowSubComponent === 'function' && !!renderRowSubComponent(row) && !alwaysShowSubComponent;\n  return /*#__PURE__*/_jsxs(_Fragment, {\n    children: [columnIndex === 0 &&\n    /*#__PURE__*/\n    // todo rowProps should be applied to the whole row, not just the cell. We should consider refactoring this.\n    _jsx(_Fragment, {\n      children: row.canExpand || subComponentExpandable ? /*#__PURE__*/_jsx(\"span\", {\n        title: row.isExpanded ? translatableTexts.collapseNodeA11yText : translatableTexts.expandNodeA11yText,\n        style: {\n          ...rowProps.style,\n          paddingInlineStart: paddingLeft\n        },\n        className: classNames.container,\n        \"aria-expanded\": row.isExpanded,\n        \"aria-label\": row.isExpanded ? translatableTexts.collapseA11yText : translatableTexts.expandA11yText,\n        children: shouldRenderButton ? /*#__PURE__*/_jsx(Button, {\n          tabIndex: -1,\n          icon: row.isExpanded ? iconNavDownArrow : iconNavRightArrow,\n          design: ButtonDesign.Transparent,\n          onClick: rowProps.onClick,\n          className: classNames.button\n        }) : /*#__PURE__*/_jsx(Icon, {\n          tabIndex: -1,\n          onClick: rowProps.onClick,\n          mode: IconMode.Interactive,\n          name: row.isExpanded ? iconNavDownArrow : iconNavRightArrow,\n          \"data-component-name\": \"AnalyticalTableExpandIcon\",\n          className: classNames.icon\n        })\n      }) : /*#__PURE__*/_jsx(\"span\", {\n        style: {\n          paddingInlineStart: paddingLeft\n        },\n        \"data-component-name\": \"AnalyticalTableNonExpandableCellSpacer\",\n        className: clsx(classNames.nonExpandableCellSpacer, shouldRenderButton && classNames.withExpandableButton)\n      })\n    }), cell.render('Cell')]\n  });\n};\nExpandable.displayName = 'Expandable';"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}