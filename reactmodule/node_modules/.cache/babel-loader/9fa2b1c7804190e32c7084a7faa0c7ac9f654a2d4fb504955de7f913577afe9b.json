{"ast":null,"code":"\"use strict\";\n\nimport { hasStyle as e, createStyle as o } from \"./ManagedStyles.js\";\nimport { getFeature as r } from \"./FeaturesRegistry.js\";\nimport a from \"./generated/css/FontFace.css.js\";\nimport n from \"./generated/css/OverrideFontFace.css.js\";\nimport { getDefaultFontLoading as f } from \"./config/Fonts.js\";\nconst i = () => {\n    const t = r(\"OpenUI5Support\");\n    (!t || !t.isOpenUI5Detected()) && p(), c();\n  },\n  p = () => {\n    const t = document.querySelector(\"head>style[data-ui5-font-face]\");\n    !f() || t || e(\"data-ui5-font-face\") || o(a, \"data-ui5-font-face\");\n  },\n  c = () => {\n    e(\"data-ui5-font-face-override\") || o(n, \"data-ui5-font-face-override\");\n  };\nexport default i;","map":{"version":3,"names":["hasStyle","e","createStyle","o","getFeature","r","a","n","getDefaultFontLoading","f","i","insertFontFace","t","isOpenUI5Detected","p","c","insertMainFontFace","document","querySelector","insertOverrideFontFace"],"sources":["/home/user/projects/reactproj/node_modules/@ui5/webcomponents-base/src/FontFace.ts"],"sourcesContent":["import { hasStyle, createStyle } from \"./ManagedStyles.js\";\nimport { getFeature } from \"./FeaturesRegistry.js\";\nimport fontFaceCSS from \"./generated/css/FontFace.css.js\";\nimport overrideFontFaceCSS from \"./generated/css/OverrideFontFace.css.js\";\nimport type OpenUI5Support from \"./features/OpenUI5Support.js\";\nimport { getDefaultFontLoading } from \"./config/Fonts.js\";\n\nconst insertFontFace = () => {\n\tconst openUI5Support = getFeature<typeof OpenUI5Support>(\"OpenUI5Support\");\n\n\t// Only set the main font if there is no OpenUI5 support, or there is, but OpenUI5 is not loaded\n\tif ((!openUI5Support || !openUI5Support.isOpenUI5Detected())) {\n\t\tinsertMainFontFace();\n\t}\n\n\t// Always set the override font - OpenUI5 in CSS Vars mode does not set it, unlike the main font\n\tinsertOverrideFontFace();\n};\n\nconst insertMainFontFace = () => {\n\tconst hasFontStyles = document.querySelector(\"head>style[data-ui5-font-face]\");\n\n\tif (!getDefaultFontLoading() || hasFontStyles) {\n\t\treturn;\n\t}\n\n\tif (!hasStyle(\"data-ui5-font-face\")) {\n\t\tcreateStyle(fontFaceCSS, \"data-ui5-font-face\");\n\t}\n};\n\nconst insertOverrideFontFace = () => {\n\tif (!hasStyle(\"data-ui5-font-face-override\")) {\n\t\tcreateStyle(overrideFontFaceCSS, \"data-ui5-font-face-override\");\n\t}\n};\n\nexport default insertFontFace;\n"],"mappings":";;AAAA,SAASA,QAAA,IAAAC,CAAA,EAAUC,WAAA,IAAAC,CAAA,QAAmB;AACtC,SAASC,UAAA,IAAAC,CAAA,QAAkB;AAC3B,OAAOC,CAAA,MAAiB;AACxB,OAAOC,CAAA,MAAyB;AAEhC,SAASC,qBAAA,IAAAC,CAAA,QAA6B;AAEtC,MAAMC,CAAA,GAAiBC,CAAA,KAAM;IAC5B,MAAMC,CAAA,GAAiBP,CAAA,CAAkC,gBAAgB;IAAA,CAGpE,CAACO,CAAA,IAAkB,CAACA,CAAA,CAAeC,iBAAA,CAAkB,MACzDC,CAAA,CAAmB,GAIpBC,CAAA,CAAuB,CACxB;EAAA;EAEMD,CAAA,GAAqBE,CAAA,KAAM;IAChC,MAAMJ,CAAA,GAAgBK,QAAA,CAASC,aAAA,CAAc,gCAAgC;IAEzE,CAACT,CAAA,CAAsB,KAAKG,CAAA,IAI3BX,CAAA,CAAS,oBAAoB,KACjCE,CAAA,CAAYG,CAAA,EAAa,oBAAoB,CAE/C;EAAA;EAEMS,CAAA,GAAyBI,CAAA,KAAM;IAC/BlB,CAAA,CAAS,6BAA6B,KAC1CE,CAAA,CAAYI,CAAA,EAAqB,6BAA6B,CAEhE;EAAA;AAEA,eAAeG,CAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}