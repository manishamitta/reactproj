{"ast":null,"code":"\"use strict\";\n\nimport o from \"./isElementTabbable.js\";\nconst b = t => a([...t.children]),\n  E = t => {\n    const n = a([...t.children]);\n    return n.length ? n[n.length - 1] : null;\n  },\n  a = (t, n) => {\n    const l = n || [];\n    return t && t.forEach(r => {\n      if (r.nodeType === Node.TEXT_NODE || r.nodeType === Node.COMMENT_NODE) return;\n      const e = r;\n      if (!e.hasAttribute(\"data-sap-no-tab-ref\")) if (o(e) && l.push(e), e.tagName === \"SLOT\") a(e.assignedNodes(), l);else {\n        const s = e.shadowRoot ? e.shadowRoot.children : e.children;\n        a([...s], l);\n      }\n    }), l;\n  };\nexport { b as getTabbableElements, E as getLastTabbableElement };","map":{"version":3,"names":["o","b","t","a","children","E","n","length","getTabbables","l","forEach","r","nodeType","Node","TEXT_NODE","COMMENT_NODE","e","hasAttribute","push","tagName","assignedNodes","s","shadowRoot","getTabbableElements","getLastTabbableElement"],"sources":["/home/user/projects/reactproj/node_modules/@ui5/webcomponents-base/src/util/TabbableElements.ts"],"sourcesContent":["import isElementTabbable from \"./isElementTabbable.js\";\n\n/**\n * Returns the tabbable elements within the provided HTMLElement.\n *\n * @public\n * @param { HTMLElement } el the component to operate on (component that slots or contains within its shadow root the items the user navigates among)\n * @returns { Array<HTMLElement> } the tabbable elements\n */\nconst getTabbableElements = (el: HTMLElement): Array<HTMLElement> => {\n\treturn getTabbables([...el.children]);\n};\n\n/**\n * Returns the last tabbable element within the provided HTMLElement.\n *\n * @public\n * @param { HTMLElement } el the component to operate on (component that slots or contains within its shadow root the items the user navigates among)\n * @returns { HTMLElement | null } the last tabbable element or \"null\" if not found\n */\nconst getLastTabbableElement = (el: HTMLElement): HTMLElement | null => {\n\tconst tabbables = getTabbables([...el.children]);\n\treturn tabbables.length ? tabbables[tabbables.length - 1] : null;\n};\n\nconst getTabbables = (nodes: Array<Node>, tabbables?: Array<HTMLElement>): Array<HTMLElement> => {\n\tconst tabbableElements = tabbables || [];\n\n\tif (!nodes) {\n\t\treturn tabbableElements;\n\t}\n\n\tnodes.forEach(currentNode => {\n\t\tif (currentNode.nodeType === Node.TEXT_NODE || currentNode.nodeType === Node.COMMENT_NODE) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst currentElement = currentNode as HTMLElement;\n\t\tif (currentElement.hasAttribute(\"data-sap-no-tab-ref\")) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (isElementTabbable(currentElement)) {\n\t\t\ttabbableElements.push(currentElement);\n\t\t}\n\n\t\tif (currentElement.tagName === \"SLOT\") {\n\t\t\tgetTabbables((currentElement as HTMLSlotElement).assignedNodes() as Array<HTMLElement>, tabbableElements);\n\t\t} else {\n\t\t\tconst children = currentElement.shadowRoot ? currentElement.shadowRoot.children : currentElement.children;\n\t\t\tgetTabbables([...children], tabbableElements);\n\t\t}\n\t});\n\n\treturn tabbableElements;\n};\n\nexport {\n\tgetTabbableElements,\n\tgetLastTabbableElement,\n};\n"],"mappings":";;AAAA,OAAOA,CAAA,MAAuB;AAS9B,MAAMC,CAAA,GAAuBC,CAAA,IACrBC,CAAA,CAAa,CAAC,GAAGD,CAAA,CAAGE,QAAQ,CAAC;EAU/BC,CAAA,GAA0BH,CAAA,IAAwC;IACvE,MAAMI,CAAA,GAAYH,CAAA,CAAa,CAAC,GAAGD,CAAA,CAAGE,QAAQ,CAAC;IAC/C,OAAOE,CAAA,CAAUC,MAAA,GAASD,CAAA,CAAUA,CAAA,CAAUC,MAAA,GAAS,CAAC,IAAI,IAC7D;EAAA;EAEMJ,CAAA,GAAeK,CAACN,CAAA,EAAoBI,CAAA,KAAuD;IAChG,MAAMG,CAAA,GAAmBH,CAAA,IAAa,EAAC;IAEvC,OAAKJ,CAAA,IAILA,CAAA,CAAMQ,OAAA,CAAQC,CAAA,IAAe;MAC5B,IAAIA,CAAA,CAAYC,QAAA,KAAaC,IAAA,CAAKC,SAAA,IAAaH,CAAA,CAAYC,QAAA,KAAaC,IAAA,CAAKE,YAAA,EAC5E;MAGD,MAAMC,CAAA,GAAiBL,CAAA;MACvB,IAAI,CAAAK,CAAA,CAAeC,YAAA,CAAa,qBAAqB,GAQrD,IAJIjB,CAAA,CAAkBgB,CAAc,KACnCP,CAAA,CAAiBS,IAAA,CAAKF,CAAc,GAGjCA,CAAA,CAAeG,OAAA,KAAY,QAC9BhB,CAAA,CAAca,CAAA,CAAmCI,aAAA,CAAc,GAAyBX,CAAgB,OAClG;QACN,MAAMY,CAAA,GAAWL,CAAA,CAAeM,UAAA,GAAaN,CAAA,CAAeM,UAAA,CAAWlB,QAAA,GAAWY,CAAA,CAAeZ,QAAA;QACjGD,CAAA,CAAa,CAAC,GAAGkB,CAAQ,GAAGZ,CAAgB,CAC7C;MAAA;IACD,CAAC,GAEMA,CACR;EAAA;AAEA,SACCR,CAAA,IAAAsB,mBAAA,EACAlB,CAAA,IAAAmB,sBAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}