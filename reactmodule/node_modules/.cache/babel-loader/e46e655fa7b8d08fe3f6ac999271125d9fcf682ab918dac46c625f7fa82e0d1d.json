{"ast":null,"code":"\"use strict\";\n\nimport { getCustomCSS as i, attachCustomCSSChange as f } from \"./CustomStyle.js\";\nimport r from \"./getStylesString.js\";\nimport { getFeature as p } from \"../FeaturesRegistry.js\";\nconst e = new Map();\nf(t => {\n  e.delete(`${t}_normal`);\n});\nconst y = t => {\n  const o = t.getMetadata().getTag(),\n    n = `${o}_normal`,\n    s = p(\"OpenUI5Enablement\");\n  if (!e.has(n)) {\n    let l = \"\";\n    s && (l = r(s.getBusyIndicatorStyles()));\n    const a = i(o) || \"\",\n      m = `${r(t.styles)} ${a} ${l}`;\n    e.set(n, m);\n  }\n  return e.get(n);\n};\nexport default y;","map":{"version":3,"names":["getCustomCSS","i","attachCustomCSSChange","f","r","getFeature","p","e","Map","t","delete","y","o","getMetadata","getTag","n","s","has","l","getBusyIndicatorStyles","a","m","styles","set","get"],"sources":["/home/user/projects/reactproj/node_modules/@ui5/webcomponents-base/src/theming/getEffectiveStyle.ts"],"sourcesContent":["import { getCustomCSS, attachCustomCSSChange } from \"./CustomStyle.js\";\nimport getStylesString from \"./getStylesString.js\";\nimport { getFeature } from \"../FeaturesRegistry.js\";\nimport type UI5Element from \"../UI5Element.js\";\nimport type OpenUI5Enablement from \"../features/OpenUI5Enablement.js\";\n\nconst effectiveStyleMap = new Map<string, string>();\n\nattachCustomCSSChange((tag: string) => {\n\teffectiveStyleMap.delete(`${tag}_normal`); // there is custom CSS only for the component itself, not for its static area part\n});\n\nconst getEffectiveStyle = (ElementClass: typeof UI5Element) => {\n\tconst tag = ElementClass.getMetadata().getTag();\n\tconst key = `${tag}_normal`;\n\tconst openUI5Enablement = getFeature<typeof OpenUI5Enablement>(\"OpenUI5Enablement\");\n\n\tif (!effectiveStyleMap.has(key)) {\n\t\tlet busyIndicatorStyles = \"\";\n\n\t\tif (openUI5Enablement) {\n\t\t\tbusyIndicatorStyles = getStylesString(openUI5Enablement.getBusyIndicatorStyles());\n\t\t}\n\n\t\tconst customStyle = getCustomCSS(tag) || \"\";\n\t\tconst builtInStyles = getStylesString(ElementClass.styles);\n\n\t\tconst effectiveStyle = `${builtInStyles} ${customStyle} ${busyIndicatorStyles}`;\n\t\teffectiveStyleMap.set(key, effectiveStyle);\n\t}\n\n\treturn effectiveStyleMap.get(key)!; // The key is guaranteed to exist\n};\n\nexport default getEffectiveStyle;\n"],"mappings":";;AAAA,SAASA,YAAA,IAAAC,CAAA,EAAcC,qBAAA,IAAAC,CAAA,QAA6B;AACpD,OAAOC,CAAA,MAAqB;AAC5B,SAASC,UAAA,IAAAC,CAAA,QAAkB;AAI3B,MAAMC,CAAA,GAAoB,IAAIC,GAAA;AAE9BL,CAAA,CAAuBM,CAAA,IAAgB;EACtCF,CAAA,CAAkBG,MAAA,CAAO,GAAGD,CAAG,SAAS,CACzC;AAAA,CAAC;AAED,MAAME,CAAA,GAAqBF,CAAA,IAAoC;EAC9D,MAAMG,CAAA,GAAMH,CAAA,CAAaI,WAAA,CAAY,EAAEC,MAAA,CAAO;IACxCC,CAAA,GAAM,GAAGH,CAAG;IACZI,CAAA,GAAoBV,CAAA,CAAqC,mBAAmB;EAElF,IAAI,CAACC,CAAA,CAAkBU,GAAA,CAAIF,CAAG,GAAG;IAChC,IAAIG,CAAA,GAAsB;IAEtBF,CAAA,KACHE,CAAA,GAAsBd,CAAA,CAAgBY,CAAA,CAAkBG,sBAAA,CAAuB,CAAC;IAGjF,MAAMC,CAAA,GAAcnB,CAAA,CAAaW,CAAG,KAAK;MAGnCS,CAAA,GAAiB,GAFDjB,CAAA,CAAgBK,CAAA,CAAaa,MAAM,CAElB,IAAIF,CAAW,IAAIF,CAAmB;IAC7EX,CAAA,CAAkBgB,GAAA,CAAIR,CAAA,EAAKM,CAAc,CAC1C;EAAA;EAEA,OAAOd,CAAA,CAAkBiB,GAAA,CAAIT,CAAG,CACjC;AAAA;AAEA,eAAeJ,CAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}