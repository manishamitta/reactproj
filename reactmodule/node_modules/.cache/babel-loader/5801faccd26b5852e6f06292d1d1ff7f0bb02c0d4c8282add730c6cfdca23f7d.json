{"ast":null,"code":"\"use strict\";\n\nimport a from \"./util/getSingletonElementInstance.js\";\nconst u = () => {\n    const t = document.createElement(\"meta\");\n    return t.setAttribute(\"name\", \"ui5-shared-resources\"), t.setAttribute(\"content\", \"\"), t;\n  },\n  l = () => typeof document > \"u\" ? null : a('meta[name=\"ui5-shared-resources\"]', document.head, u),\n  m = (t, o) => {\n    const r = t.split(\".\");\n    let e = l();\n    if (!e) return o;\n    for (let n = 0; n < r.length; n++) {\n      const s = r[n],\n        c = n === r.length - 1;\n      Object.prototype.hasOwnProperty.call(e, s) || (e[s] = c ? o : {}), e = e[s];\n    }\n    return e;\n  };\nexport default m;","map":{"version":3,"names":["a","u","getMetaDomEl","t","document","createElement","setAttribute","l","getSharedResourcesInstance","head","m","getSharedResource","o","r","split","e","n","length","s","c","Object","prototype","hasOwnProperty","call"],"sources":["/home/user/projects/reactproj/node_modules/@ui5/webcomponents-base/src/getSharedResource.ts"],"sourcesContent":["import getSingletonElementInstance from \"./util/getSingletonElementInstance.js\";\n\nconst getMetaDomEl = () => {\n\tconst el = document.createElement(\"meta\");\n\tel.setAttribute(\"name\", \"ui5-shared-resources\");\n\tel.setAttribute(\"content\", \"\"); // attribute \"content\" should be present when \"name\" is set.\n\treturn el;\n};\n\nconst getSharedResourcesInstance = (): Element | null => {\n\tif (typeof document === \"undefined\") {\n\t\treturn null;\n\t}\n\treturn getSingletonElementInstance(`meta[name=\"ui5-shared-resources\"]`, document.head, getMetaDomEl);\n};\n\n/**\n * Use this method to initialize/get resources that you would like to be shared among UI5 Web Components runtime instances.\n * The data will be accessed via a singleton \"ui5-shared-resources\" HTML element in the \"body\" element of the page.\n *\n * @public\n * @param namespace Unique ID of the resource, may contain \".\" to denote hierarchy\n * @param initialValue Object or primitive that will be used as an initial value if the resource does not exist\n * @returns {*}\n */\nconst getSharedResource = <T>(namespace: string, initialValue: T): T => {\n\tconst parts = namespace.split(\".\");\n\tlet current = getSharedResourcesInstance() as Record<string, any>;\n\n\tif (!current) {\n\t\treturn initialValue;\n\t}\n\n\tfor (let i = 0; i < parts.length; i++) {\n\t\tconst part = parts[i];\n\t\tconst lastPart = i === parts.length - 1;\n\t\tif (!Object.prototype.hasOwnProperty.call(current, part)) {\n\t\t\tcurrent[part] = lastPart ? initialValue : {};\n\t\t}\n\t\tcurrent = current[part];\n\t}\n\n\treturn current as T;\n};\n\nexport default getSharedResource;\n"],"mappings":";;AAAA,OAAOA,CAAA,MAAiC;AAExC,MAAMC,CAAA,GAAeC,CAAA,KAAM;IAC1B,MAAMC,CAAA,GAAKC,QAAA,CAASC,aAAA,CAAc,MAAM;IACxC,OAAAF,CAAA,CAAGG,YAAA,CAAa,QAAQ,sBAAsB,GAC9CH,CAAA,CAAGG,YAAA,CAAa,WAAW,EAAE,GACtBH,CACR;EAAA;EAEMI,CAAA,GAA6BC,CAAA,KAC9B,OAAOJ,QAAA,GAAa,MAChB,OAEDJ,CAAA,CAA4B,qCAAqCI,QAAA,CAASK,IAAA,EAAMR,CAAY;EAY9FS,CAAA,GAAoBC,CAAIR,CAAA,EAAmBS,CAAA,KAAuB;IACvE,MAAMC,CAAA,GAAQV,CAAA,CAAUW,KAAA,CAAM,GAAG;IACjC,IAAIC,CAAA,GAAUR,CAAA,CAA2B;IAEzC,IAAI,CAACQ,CAAA,EACJ,OAAOH,CAAA;IAGR,SAASI,CAAA,GAAI,GAAGA,CAAA,GAAIH,CAAA,CAAMI,MAAA,EAAQD,CAAA,IAAK;MACtC,MAAME,CAAA,GAAOL,CAAA,CAAMG,CAAC;QACdG,CAAA,GAAWH,CAAA,KAAMH,CAAA,CAAMI,MAAA,GAAS;MACjCG,MAAA,CAAOC,SAAA,CAAUC,cAAA,CAAeC,IAAA,CAAKR,CAAA,EAASG,CAAI,MACtDH,CAAA,CAAQG,CAAI,IAAIC,CAAA,GAAWP,CAAA,GAAe,CAAC,IAE5CG,CAAA,GAAUA,CAAA,CAAQG,CAAI,CACvB;IAAA;IAEA,OAAOH,CACR;EAAA;AAEA,eAAeL,CAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}