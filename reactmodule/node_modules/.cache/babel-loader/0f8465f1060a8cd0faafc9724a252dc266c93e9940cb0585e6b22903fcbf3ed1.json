{"ast":null,"code":"var __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n    r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n    d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar SplitButton_1;\nimport UI5Element from \"@ui5/webcomponents-base/dist/UI5Element.js\";\nimport customElement from \"@ui5/webcomponents-base/dist/decorators/customElement.js\";\nimport event from \"@ui5/webcomponents-base/dist/decorators/event.js\";\nimport property from \"@ui5/webcomponents-base/dist/decorators/property.js\";\nimport slot from \"@ui5/webcomponents-base/dist/decorators/slot.js\";\nimport { isEscape, isSpace, isEnter, isDown, isUp, isDownAlt, isUpAlt, isF4, isShift, isTabNext, isTabPrevious } from \"@ui5/webcomponents-base/dist/Keys.js\";\nimport AriaHasPopup from \"@ui5/webcomponents-base/dist/types/AriaHasPopup.js\";\nimport { getI18nBundle } from \"@ui5/webcomponents-base/dist/i18nBundle.js\";\nimport { getEventMark } from \"@ui5/webcomponents-base/dist/MarkedEvents.js\";\nimport litRender from \"@ui5/webcomponents-base/dist/renderer/LitRenderer.js\";\nimport \"@ui5/webcomponents-icons/dist/slim-arrow-down.js\";\nimport Button from \"./Button.js\";\nimport { SPLIT_BUTTON_DESCRIPTION, SPLIT_BUTTON_KEYBOARD_HINT, SPLIT_BUTTON_ARROW_BUTTON_TOOLTIP } from \"./generated/i18n/i18n-defaults.js\";\n// Template\nimport SplitButtonTemplate from \"./generated/templates/SplitButtonTemplate.lit.js\";\n// Styles\nimport SplitButtonCss from \"./generated/themes/SplitButton.css.js\";\n/**\n * @class\n *\n * ### Overview\n *\n * `ui5-split-button` enables users to trigger actions. It is constructed of two separate actions -\n * default action and arrow action that can be activated by clicking or tapping, or by\n * pressing certain keyboard keys - `Space` or `Enter` for default action,\n * and `Arrow Down` or `Arrow Up` for arrow action.\n *\n * ### Usage\n *\n * `ui5-split-button` consists two separate buttons:\n *\n * - for the first one (default action) you can define some `text` or an `icon`, or both.\n * - the second one (arrow action) contains only `slim-arrow-down` icon.\n *\n * You can choose a `design` from a set of predefined types (the same as for ui5-button) that offer\n * different styling to correspond to the triggered action. Both text and arrow actions have the same design.\n *\n * You can set the `ui5-split-button` as enabled or disabled. Both parts of an enabled\n * `ui5-split-button` can be pressed by clicking or tapping it, or by certain keys, which changes\n * the style to provide visual feedback to the user that it is pressed or hovered over with\n * the mouse cursor. A disabled `ui5-split-button` appears inactive and any of the two buttons\n * cannot be pressed.\n *\n * ### Keyboard Handling\n *\n * - `Space` or `Enter` - triggers the default action\n * - `Shift` or `Escape` - if `Space` is pressed, releases the default action button without triggering the click event.\n * - `Arrow Down`, `Arrow Up`, `Alt`+`Arrow Down`, `Alt`+`Arrow Up`, or `F4` - triggers the arrow action\n * There are separate events that are fired on activating of `ui5-split-button` parts:\n *\n * - `click` for the first button (default action)\n * - `arrow-click` for the second button (arrow action)\n *\n * ### ES6 Module Import\n *\n * `import \"@ui5/webcomponents/dist/SplitButton.js\";`\n * @constructor\n * @extends UI5Element\n * @public\n * @since 1.1.0\n */\nlet SplitButton = SplitButton_1 = class SplitButton extends UI5Element {\n  static async onDefine() {\n    SplitButton_1.i18nBundle = await getI18nBundle(\"@ui5/webcomponents\");\n  }\n  constructor() {\n    super();\n    /**\n     * Defines whether the arrow button should have the active state styles or not.\n     * @default false\n     * @public\n     * @since 1.21.0\n     */\n    this.activeArrowButton = false;\n    /**\n     * Defines the component design.\n     * @default \"Default\"\n     * @public\n     */\n    this.design = \"Default\";\n    /**\n     * Defines whether the component is disabled.\n     * A disabled component can't be pressed or\n     * focused, and it is not in the tab chain.\n     * @default false\n     * @public\n     */\n    this.disabled = false;\n    /**\n     * Defines the tabIndex of the component.\n     * @default \"0\"\n     * @private\n     */\n    this._tabIndex = \"0\";\n    /**\n     * Indicates if there is Space key pressed\n     * @default false\n     * @private\n     */\n    this._spacePressed = false;\n    /**\n     * Indicates if there is SHIFT or ESCAPE key pressed\n     * @default false\n     * @private\n     */\n    this._shiftOrEscapePressed = false;\n    /**\n     * Defines the active state of the text button\n     * @default false\n     * @private\n     */\n    this._textButtonActive = false;\n    /**\n     * Defines the state of the internal Button used for the Arrow button of the SplitButton.\n     * @default false\n     * @private\n     */\n    this._activeArrowButton = false;\n    this._isDefaultActionPressed = false;\n    this._isKeyDownOperation = false;\n    const handleTouchStartEvent = e => {\n      e.stopPropagation();\n      this._textButtonActive = true;\n      this._tabIndex = \"-1\";\n    };\n    this._textButtonPress = {\n      handleEvent: handleTouchStartEvent,\n      passive: true\n    };\n  }\n  onBeforeRendering() {\n    if (this.disabled) {\n      this._tabIndex = \"-1\";\n    }\n  }\n  _handleMouseClick(e) {\n    this._fireClick(e);\n  }\n  _onFocusOut(e) {\n    if (this.disabled || getEventMark(e)) {\n      return;\n    }\n    this._shiftOrEscapePressed = false;\n    this._setTabIndexValue();\n  }\n  _onFocusIn(e) {\n    if (this.disabled || getEventMark(e)) {\n      return;\n    }\n    this._shiftOrEscapePressed = false;\n  }\n  _onInnerButtonFocusIn(e) {\n    e.stopPropagation();\n    this._setTabIndexValue(true);\n    const target = e.target;\n    target.focus();\n  }\n  _onKeyDown(e) {\n    this._isKeyDownOperation = true;\n    if (this._isArrowKeyAction(e)) {\n      this._handleArrowButtonAction(e);\n      this._activeArrowButton = true;\n    } else if (this._isDefaultAction(e)) {\n      this._handleDefaultAction(e);\n      this._isDefaultActionPressed = true;\n    }\n    if (this._spacePressed && this._isShiftOrEscape(e)) {\n      this._handleShiftOrEscapePressed();\n    }\n    // Handles button freeze issue when pressing Enter/Space and navigating with Tab/Shift+Tab simultaneously.\n    if (this._isDefaultActionPressed && (isTabNext(e) || isTabPrevious(e))) {\n      this._activeArrowButton = false;\n      this._textButtonActive = false;\n    }\n    this._tabIndex = \"-1\";\n  }\n  _onKeyUp(e) {\n    this._isKeyDownOperation = false;\n    if (this._isArrowKeyAction(e)) {\n      e.preventDefault();\n      this._activeArrowButton = false;\n      this._textButtonActive = false;\n    } else if (this._isDefaultAction(e)) {\n      this._isDefaultActionPressed = false;\n      this._textButtonActive = false;\n      if (isSpace(e)) {\n        e.preventDefault();\n        e.stopPropagation();\n        this._fireClick();\n        this._spacePressed = false;\n        this._textButtonActive = false;\n      }\n    }\n    if (this._isShiftOrEscape(e)) {\n      this._handleShiftOrEscapePressed();\n    }\n    this._tabIndex = \"-1\";\n  }\n  _fireClick(e) {\n    e?.stopPropagation();\n    if (!this._shiftOrEscapePressed) {\n      this.fireEvent(\"click\");\n    }\n    this._shiftOrEscapePressed = false;\n  }\n  _fireArrowClick(e) {\n    e?.stopPropagation();\n    this.fireEvent(\"arrow-click\");\n  }\n  _textButtonRelease() {\n    this._textButtonActive = false;\n    this._tabIndex = \"-1\";\n  }\n  _arrowButtonPress(e) {\n    e.stopPropagation();\n    this._tabIndex = \"-1\";\n  }\n  _arrowButtonRelease(e) {\n    e.preventDefault();\n    this._tabIndex = \"-1\";\n  }\n  _setTabIndexValue(innerButtonPressed) {\n    this._tabIndex = this.disabled ? \"-1\" : \"0\";\n    if (this._tabIndex === \"-1\" && innerButtonPressed) {\n      this._tabIndex = \"0\";\n    }\n  }\n  _onArrowButtonActiveStateChange(e) {\n    if (this.activeArrowButton) {\n      e.preventDefault();\n    }\n  }\n  /**\n   * Checks if the pressed key is an arrow key.\n   * @param e - keyboard event\n   * @private\n   */\n  _isArrowKeyAction(e) {\n    return isDown(e) || isUp(e) || isDownAlt(e) || isUpAlt(e) || isF4(e);\n  }\n  /**\n   * Checks if the pressed key is a default action key (Space or Enter).\n   * @param e - keyboard event\n   * @private\n   */\n  _isDefaultAction(e) {\n    return isSpace(e) || isEnter(e);\n  }\n  /**\n   * Checks if the pressed key is an escape key or shift key.\n   * @param e - keyboard event\n   * @private\n   */\n  _isShiftOrEscape(e) {\n    return isEscape(e) || isShift(e);\n  }\n  /**\n   * Handles the click event and the focus on the arrow button.\n   * @param e - keyboard event\n   * @private\n   */\n  _handleArrowButtonAction(e) {\n    e.preventDefault();\n    this._fireArrowClick(e);\n    if (isSpace(e)) {\n      this._spacePressed = true;\n    }\n  }\n  /**\n   * Handles the default action and the active state of the respective button.\n   * @param e - keyboard event\n   * @private\n   */\n  _handleDefaultAction(e) {\n    e.preventDefault();\n    const wasSpacePressed = isSpace(e);\n    const target = e.target;\n    if (this.arrowButton && target === this.arrowButton) {\n      this._activeArrowButton = true;\n      this._fireArrowClick();\n      if (wasSpacePressed) {\n        this._spacePressed = true;\n        this._textButtonActive = false;\n      }\n    } else {\n      this._textButtonActive = true;\n      this._fireClick();\n      if (wasSpacePressed) {\n        this._spacePressed = true;\n      }\n    }\n  }\n  _handleShiftOrEscapePressed() {\n    this._shiftOrEscapePressed = true;\n    this._textButtonActive = false;\n    this._isKeyDownOperation = false;\n  }\n  get effectiveActiveArrowButton() {\n    return this.activeArrowButton || this._activeArrowButton;\n  }\n  get textButtonAccText() {\n    return this.textContent;\n  }\n  get isTextButton() {\n    return !!this.textContent;\n  }\n  get textButton() {\n    return this.getDomRef()?.querySelector(\".ui5-split-text-button\");\n  }\n  get arrowButton() {\n    return this.getDomRef()?.querySelector(\".ui5-split-arrow-button\");\n  }\n  get accInfo() {\n    return {\n      root: {\n        \"description\": SplitButton_1.i18nBundle.getText(SPLIT_BUTTON_DESCRIPTION),\n        \"keyboardHint\": SplitButton_1.i18nBundle.getText(SPLIT_BUTTON_KEYBOARD_HINT)\n      },\n      arrowButton: {\n        \"title\": this.arrowButtonTooltip,\n        \"accessibilityAttributes\": {\n          \"hasPopup\": AriaHasPopup.Menu.toLocaleLowerCase()\n        }\n      }\n    };\n  }\n  get arrowButtonTooltip() {\n    return SplitButton_1.i18nBundle.getText(SPLIT_BUTTON_ARROW_BUTTON_TOOLTIP);\n  }\n  get ariaLabelText() {\n    return [SplitButton_1.i18nBundle.getText(SPLIT_BUTTON_DESCRIPTION), SplitButton_1.i18nBundle.getText(SPLIT_BUTTON_KEYBOARD_HINT)].join(\" \");\n  }\n};\n__decorate([property()], SplitButton.prototype, \"icon\", void 0);\n__decorate([property({\n  type: Boolean\n})], SplitButton.prototype, \"activeArrowButton\", void 0);\n__decorate([property()], SplitButton.prototype, \"design\", void 0);\n__decorate([property({\n  type: Boolean\n})], SplitButton.prototype, \"disabled\", void 0);\n__decorate([property()], SplitButton.prototype, \"accessibleName\", void 0);\n__decorate([property({\n  noAttribute: true\n})], SplitButton.prototype, \"_tabIndex\", void 0);\n__decorate([property({\n  type: Boolean,\n  noAttribute: true\n})], SplitButton.prototype, \"_spacePressed\", void 0);\n__decorate([property({\n  type: Boolean,\n  noAttribute: true\n})], SplitButton.prototype, \"_shiftOrEscapePressed\", void 0);\n__decorate([property({\n  type: Boolean,\n  noAttribute: true\n})], SplitButton.prototype, \"_textButtonActive\", void 0);\n__decorate([property({\n  type: Boolean,\n  noAttribute: true\n})], SplitButton.prototype, \"_activeArrowButton\", void 0);\n__decorate([slot({\n  type: Node,\n  \"default\": true\n})], SplitButton.prototype, \"text\", void 0);\nSplitButton = SplitButton_1 = __decorate([customElement({\n  tag: \"ui5-split-button\",\n  renderer: litRender,\n  styles: SplitButtonCss,\n  template: SplitButtonTemplate,\n  dependencies: [Button]\n})\n/**\n * Fired when the user clicks on the default action.\n * @public\n */, event(\"click\")\n/**\n * Fired when the user clicks on the arrow action.\n * @public\n */, event(\"arrow-click\")], SplitButton);\nSplitButton.define();\nexport default SplitButton;","map":{"version":3,"names":["UI5Element","customElement","event","property","slot","isEscape","isSpace","isEnter","isDown","isUp","isDownAlt","isUpAlt","isF4","isShift","isTabNext","isTabPrevious","AriaHasPopup","getI18nBundle","getEventMark","litRender","Button","SPLIT_BUTTON_DESCRIPTION","SPLIT_BUTTON_KEYBOARD_HINT","SPLIT_BUTTON_ARROW_BUTTON_TOOLTIP","SplitButtonTemplate","SplitButtonCss","SplitButton","SplitButton_1","onDefine","i18nBundle","constructor","activeArrowButton","design","disabled","_tabIndex","_spacePressed","_shiftOrEscapePressed","_textButtonActive","_activeArrowButton","_isDefaultActionPressed","_isKeyDownOperation","handleTouchStartEvent","e","stopPropagation","_textButtonPress","handleEvent","passive","onBeforeRendering","_handleMouseClick","_fireClick","_onFocusOut","_setTabIndexValue","_onFocusIn","_onInnerButtonFocusIn","target","focus","_onKeyDown","_isArrowKeyAction","_handleArrowButtonAction","_isDefaultAction","_handleDefaultAction","_isShiftOrEscape","_handleShiftOrEscapePressed","_onKeyUp","preventDefault","fireEvent","_fireArrowClick","_textButtonRelease","_arrowButtonPress","_arrowButtonRelease","innerButtonPressed","_onArrowButtonActiveStateChange","wasSpacePressed","arrowButton","effectiveActiveArrowButton","textButtonAccText","textContent","isTextButton","textButton","getDomRef","querySelector","accInfo","root","getText","arrowButtonTooltip","Menu","toLocaleLowerCase","ariaLabelText","join","__decorate","type","Boolean","noAttribute","Node","tag","renderer","styles","template","dependencies","define"],"sources":["/home/user/projects/reactproj/node_modules/@ui5/webcomponents/src/SplitButton.ts"],"sourcesContent":["import UI5Element from \"@ui5/webcomponents-base/dist/UI5Element.js\";\nimport customElement from \"@ui5/webcomponents-base/dist/decorators/customElement.js\";\nimport event from \"@ui5/webcomponents-base/dist/decorators/event.js\";\nimport property from \"@ui5/webcomponents-base/dist/decorators/property.js\";\nimport slot from \"@ui5/webcomponents-base/dist/decorators/slot.js\";\nimport {\n\tisEscape,\n\tisSpace,\n\tisEnter,\n\tisDown,\n\tisUp,\n\tisDownAlt,\n\tisUpAlt,\n\tisF4,\n\tisShift,\n\tisTabNext,\n\tisTabPrevious,\n} from \"@ui5/webcomponents-base/dist/Keys.js\";\nimport AriaHasPopup from \"@ui5/webcomponents-base/dist/types/AriaHasPopup.js\";\nimport { getI18nBundle } from \"@ui5/webcomponents-base/dist/i18nBundle.js\";\nimport type I18nBundle from \"@ui5/webcomponents-base/dist/i18nBundle.js\";\nimport { getEventMark } from \"@ui5/webcomponents-base/dist/MarkedEvents.js\";\nimport litRender from \"@ui5/webcomponents-base/dist/renderer/LitRenderer.js\";\nimport \"@ui5/webcomponents-icons/dist/slim-arrow-down.js\";\nimport type ButtonDesign from \"./types/ButtonDesign.js\";\nimport Button from \"./Button.js\";\n\nimport {\n\tSPLIT_BUTTON_DESCRIPTION,\n\tSPLIT_BUTTON_KEYBOARD_HINT,\n\tSPLIT_BUTTON_ARROW_BUTTON_TOOLTIP,\n} from \"./generated/i18n/i18n-defaults.js\";\n\n// Template\nimport SplitButtonTemplate from \"./generated/templates/SplitButtonTemplate.lit.js\";\n\n// Styles\nimport SplitButtonCss from \"./generated/themes/SplitButton.css.js\";\n\n/**\n * @class\n *\n * ### Overview\n *\n * `ui5-split-button` enables users to trigger actions. It is constructed of two separate actions -\n * default action and arrow action that can be activated by clicking or tapping, or by\n * pressing certain keyboard keys - `Space` or `Enter` for default action,\n * and `Arrow Down` or `Arrow Up` for arrow action.\n *\n * ### Usage\n *\n * `ui5-split-button` consists two separate buttons:\n *\n * - for the first one (default action) you can define some `text` or an `icon`, or both.\n * - the second one (arrow action) contains only `slim-arrow-down` icon.\n *\n * You can choose a `design` from a set of predefined types (the same as for ui5-button) that offer\n * different styling to correspond to the triggered action. Both text and arrow actions have the same design.\n *\n * You can set the `ui5-split-button` as enabled or disabled. Both parts of an enabled\n * `ui5-split-button` can be pressed by clicking or tapping it, or by certain keys, which changes\n * the style to provide visual feedback to the user that it is pressed or hovered over with\n * the mouse cursor. A disabled `ui5-split-button` appears inactive and any of the two buttons\n * cannot be pressed.\n *\n * ### Keyboard Handling\n *\n * - `Space` or `Enter` - triggers the default action\n * - `Shift` or `Escape` - if `Space` is pressed, releases the default action button without triggering the click event.\n * - `Arrow Down`, `Arrow Up`, `Alt`+`Arrow Down`, `Alt`+`Arrow Up`, or `F4` - triggers the arrow action\n * There are separate events that are fired on activating of `ui5-split-button` parts:\n *\n * - `click` for the first button (default action)\n * - `arrow-click` for the second button (arrow action)\n *\n * ### ES6 Module Import\n *\n * `import \"@ui5/webcomponents/dist/SplitButton.js\";`\n * @constructor\n * @extends UI5Element\n * @public\n * @since 1.1.0\n */\n@customElement({\n\ttag: \"ui5-split-button\",\n\trenderer: litRender,\n\tstyles: SplitButtonCss,\n\ttemplate: SplitButtonTemplate,\n\tdependencies: [Button],\n})\n/**\n * Fired when the user clicks on the default action.\n * @public\n */\n@event(\"click\")\n\n/**\n * Fired when the user clicks on the arrow action.\n * @public\n */\n@event(\"arrow-click\")\nclass SplitButton extends UI5Element {\n\t/**\n\t * Defines the icon to be displayed as graphical element within the component.\n\t * The SAP-icons font provides numerous options.\n\t *\n\t * Example:\n\t *\n\t * See all the available icons in the [Icon Explorer](https://sdk.openui5.org/test-resources/sap/m/demokit/iconExplorer/webapp/index.html).\n\t * @default undefined\n\t * @public\n\t */\n\t@property()\n\ticon?: string;\n\n\t/**\n\t * Defines whether the arrow button should have the active state styles or not.\n\t * @default false\n\t * @public\n\t * @since 1.21.0\n\t */\n\t@property({ type: Boolean })\n\tactiveArrowButton = false;\n\n\t/**\n\t * Defines the component design.\n\t * @default \"Default\"\n\t * @public\n\t */\n\t@property()\n\tdesign: `${ButtonDesign}` = \"Default\";\n\n\t/**\n\t * Defines whether the component is disabled.\n\t * A disabled component can't be pressed or\n\t * focused, and it is not in the tab chain.\n\t * @default false\n\t * @public\n\t */\n\t@property({ type: Boolean })\n\tdisabled = false;\n\n\t/**\n\t * Defines the accessible ARIA name of the component.\n\t * @default undefined\n\t * @public\n\t */\n\t@property()\n\taccessibleName?: string;\n\n\t/**\n\t * Defines the tabIndex of the component.\n\t * @default \"0\"\n\t * @private\n\t */\n\t@property({ noAttribute: true })\n\t_tabIndex = \"0\"\n\n\t/**\n\t * Indicates if there is Space key pressed\n\t * @default false\n\t * @private\n\t */\n\t@property({ type: Boolean, noAttribute: true })\n\t_spacePressed = false;\n\n\t/**\n\t * Indicates if there is SHIFT or ESCAPE key pressed\n\t * @default false\n\t * @private\n\t */\n\t@property({ type: Boolean, noAttribute: true })\n\t_shiftOrEscapePressed = false;\n\n\t/**\n\t * Defines the active state of the text button\n\t * @default false\n\t * @private\n\t */\n\t@property({ type: Boolean, noAttribute: true })\n\t_textButtonActive = false;\n\n\t/**\n\t * Defines the state of the internal Button used for the Arrow button of the SplitButton.\n\t * @default false\n\t * @private\n\t */\n\t@property({ type: Boolean, noAttribute: true })\n\t_activeArrowButton = false;\n\n\t/**\n\t * Defines the text of the component.\n\t *\n\t * **Note:** Although this slot accepts HTML Elements, it is strongly recommended that you only use text in order to preserve the intended design.\n\t * @public\n\t */\n\t@slot({ type: Node, \"default\": true })\n\ttext!: Array<Node>;\n\n\t_textButtonPress: { handleEvent: (e: MouseEvent) => void, passive: boolean };\n\t_isDefaultActionPressed = false;\n\t_isKeyDownOperation = false;\n\n\tstatic i18nBundle: I18nBundle;\n\n\tstatic async onDefine() {\n\t\tSplitButton.i18nBundle = await getI18nBundle(\"@ui5/webcomponents\");\n\t}\n\n\tconstructor() {\n\t\tsuper();\n\n\t\tconst handleTouchStartEvent = (e: MouseEvent) => {\n\t\t\te.stopPropagation();\n\t\t\tthis._textButtonActive = true;\n\t\t\tthis._tabIndex = \"-1\";\n\t\t};\n\n\t\tthis._textButtonPress = {\n\t\t\thandleEvent: handleTouchStartEvent,\n\t\t\tpassive: true,\n\t\t};\n\t}\n\n\tonBeforeRendering() {\n\t\tif (this.disabled) {\n\t\t\tthis._tabIndex = \"-1\";\n\t\t}\n\t}\n\n\t_handleMouseClick(e: MouseEvent) {\n\t\tthis._fireClick(e);\n\t}\n\n\t_onFocusOut(e: FocusEvent) {\n\t\tif (this.disabled || getEventMark(e)) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._shiftOrEscapePressed = false;\n\t\tthis._setTabIndexValue();\n\t}\n\n\t_onFocusIn(e: FocusEvent) {\n\t\tif (this.disabled || getEventMark(e)) {\n\t\t\treturn;\n\t\t}\n\t\tthis._shiftOrEscapePressed = false;\n\t}\n\n\t_onInnerButtonFocusIn(e: FocusEvent) {\n\t\te.stopPropagation();\n\t\tthis._setTabIndexValue(true);\n\t\tconst target = e.target as Button;\n\t\ttarget.focus();\n\t}\n\n\t_onKeyDown(e: KeyboardEvent) {\n\t\tthis._isKeyDownOperation = true;\n\t\tif (this._isArrowKeyAction(e)) {\n\t\t\tthis._handleArrowButtonAction(e);\n\t\t\tthis._activeArrowButton = true;\n\t\t} else if (this._isDefaultAction(e)) {\n\t\t\tthis._handleDefaultAction(e);\n\t\t\tthis._isDefaultActionPressed = true;\n\t\t}\n\n\t\tif (this._spacePressed && this._isShiftOrEscape(e)) {\n\t\t\tthis._handleShiftOrEscapePressed();\n\t\t}\n\n\t\t// Handles button freeze issue when pressing Enter/Space and navigating with Tab/Shift+Tab simultaneously.\n\t\tif (this._isDefaultActionPressed && (isTabNext(e) || isTabPrevious(e))) {\n\t\t\tthis._activeArrowButton = false;\n\t\t\tthis._textButtonActive = false;\n\t\t}\n\n\t\tthis._tabIndex = \"-1\";\n\t}\n\n\t_onKeyUp(e: KeyboardEvent) {\n\t\tthis._isKeyDownOperation = false;\n\t\tif (this._isArrowKeyAction(e)) {\n\t\t\te.preventDefault();\n\t\t\tthis._activeArrowButton = false;\n\t\t\tthis._textButtonActive = false;\n\t\t} else if (this._isDefaultAction(e)) {\n\t\t\tthis._isDefaultActionPressed = false;\n\t\t\tthis._textButtonActive = false;\n\t\t\tif (isSpace(e)) {\n\t\t\t\te.preventDefault();\n\t\t\t\te.stopPropagation();\n\t\t\t\tthis._fireClick();\n\t\t\t\tthis._spacePressed = false;\n\t\t\t\tthis._textButtonActive = false;\n\t\t\t}\n\t\t}\n\n\t\tif (this._isShiftOrEscape(e)) {\n\t\t\tthis._handleShiftOrEscapePressed();\n\t\t}\n\n\t\tthis._tabIndex = \"-1\";\n\t}\n\n\t_fireClick(e?: Event) {\n\t\te?.stopPropagation();\n\t\tif (!this._shiftOrEscapePressed) {\n\t\t\tthis.fireEvent(\"click\");\n\t\t}\n\t\tthis._shiftOrEscapePressed = false;\n\t}\n\n\t_fireArrowClick(e?: Event) {\n\t\te?.stopPropagation();\n\n\t\tthis.fireEvent(\"arrow-click\");\n\t}\n\n\t_textButtonRelease() {\n\t\tthis._textButtonActive = false;\n\t\tthis._tabIndex = \"-1\";\n\t}\n\n\t_arrowButtonPress(e: MouseEvent) {\n\t\te.stopPropagation();\n\n\t\tthis._tabIndex = \"-1\";\n\t}\n\n\t_arrowButtonRelease(e: MouseEvent) {\n\t\te.preventDefault();\n\n\t\tthis._tabIndex = \"-1\";\n\t}\n\n\t_setTabIndexValue(innerButtonPressed?: boolean) {\n\t\tthis._tabIndex = this.disabled ? \"-1\" : \"0\";\n\n\t\tif (this._tabIndex === \"-1\" && innerButtonPressed) {\n\t\t\tthis._tabIndex = \"0\";\n\t\t}\n\t}\n\n\t_onArrowButtonActiveStateChange(e: CustomEvent) {\n\t\tif (this.activeArrowButton) {\n\t\t\te.preventDefault();\n\t\t}\n\t}\n\n\t/**\n\t * Checks if the pressed key is an arrow key.\n\t * @param e - keyboard event\n\t * @private\n\t */\n\t_isArrowKeyAction(e: KeyboardEvent): boolean {\n\t\treturn isDown(e) || isUp(e) || isDownAlt(e) || isUpAlt(e) || isF4(e);\n\t}\n\n\t/**\n\t * Checks if the pressed key is a default action key (Space or Enter).\n\t * @param e - keyboard event\n\t * @private\n\t */\n\t_isDefaultAction(e: KeyboardEvent): boolean {\n\t\treturn isSpace(e) || isEnter(e);\n\t}\n\n\t/**\n\t * Checks if the pressed key is an escape key or shift key.\n\t * @param e - keyboard event\n\t * @private\n\t */\n\t_isShiftOrEscape(e: KeyboardEvent): boolean {\n\t\treturn isEscape(e) || isShift(e);\n\t}\n\n\t/**\n\t * Handles the click event and the focus on the arrow button.\n\t * @param e - keyboard event\n\t * @private\n\t */\n\t_handleArrowButtonAction(e: KeyboardEvent | MouseEvent) {\n\t\te.preventDefault();\n\n\t\tthis._fireArrowClick(e);\n\n\t\tif (isSpace((e as KeyboardEvent))) {\n\t\t\tthis._spacePressed = true;\n\t\t}\n\t}\n\n\t/**\n\t * Handles the default action and the active state of the respective button.\n\t * @param e - keyboard event\n\t * @private\n\t */\n\t_handleDefaultAction(e: KeyboardEvent) {\n\t\te.preventDefault();\n\t\tconst wasSpacePressed = isSpace(e);\n\t\tconst target = e.target as Button;\n\n\t\tif (this.arrowButton && target === this.arrowButton) {\n\t\t\tthis._activeArrowButton = true;\n\t\t\tthis._fireArrowClick();\n\t\t\tif (wasSpacePressed) {\n\t\t\t\tthis._spacePressed = true;\n\t\t\t\tthis._textButtonActive = false;\n\t\t\t}\n\t\t} else {\n\t\t\tthis._textButtonActive = true;\n\t\t\tthis._fireClick();\n\t\t\tif (wasSpacePressed) {\n\t\t\t\tthis._spacePressed = true;\n\t\t\t}\n\t\t}\n\t}\n\n\t_handleShiftOrEscapePressed() {\n\t\tthis._shiftOrEscapePressed = true;\n\t\tthis._textButtonActive = false;\n\t\tthis._isKeyDownOperation = false;\n\t}\n\n\tget effectiveActiveArrowButton() {\n\t\treturn this.activeArrowButton || this._activeArrowButton;\n\t}\n\n\tget textButtonAccText() {\n\t\treturn this.textContent;\n\t}\n\n\tget isTextButton() {\n\t\treturn !!this.textContent;\n\t}\n\n\tget textButton() {\n\t\treturn this.getDomRef()?.querySelector<Button>(\".ui5-split-text-button\");\n\t}\n\n\tget arrowButton() {\n\t\treturn this.getDomRef()?.querySelector<Button>(\".ui5-split-arrow-button\");\n\t}\n\n\tget accInfo() {\n\t\treturn {\n\t\t\troot: {\n\t\t\t\t\"description\": SplitButton.i18nBundle.getText(SPLIT_BUTTON_DESCRIPTION),\n\t\t\t\t\"keyboardHint\": SplitButton.i18nBundle.getText(SPLIT_BUTTON_KEYBOARD_HINT),\n\t\t\t},\n\t\t\tarrowButton: {\n\t\t\t\t\"title\": this.arrowButtonTooltip,\n\t\t\t\t\"accessibilityAttributes\": {\n\t\t\t\t\t\"hasPopup\": AriaHasPopup.Menu.toLocaleLowerCase(),\n\t\t\t\t},\n\t\t\t},\n\t\t};\n\t}\n\n\tget arrowButtonTooltip() {\n\t\treturn SplitButton.i18nBundle.getText(SPLIT_BUTTON_ARROW_BUTTON_TOOLTIP);\n\t}\n\n\tget ariaLabelText() {\n\t\treturn [SplitButton.i18nBundle.getText(SPLIT_BUTTON_DESCRIPTION), SplitButton.i18nBundle.getText(SPLIT_BUTTON_KEYBOARD_HINT)].join(\" \");\n\t}\n}\n\nSplitButton.define();\n\nexport default SplitButton;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}