{"ast":null,"code":"'use client';\n\nimport { attachDirectionChange, detachDirectionChange } from '@ui5/webcomponents-base/dist/locale/directionChange.js';\nimport { useRef, useState } from 'react';\nimport { useIsomorphicLayoutEffect } from '../hooks/index.js';\nconst useIsRTL = elementRef => {\n  const [isRTL, setRTL] = useState(false); // initial value is always LTR (also for SSR)\n  const isMounted = useRef(false);\n  useIsomorphicLayoutEffect(() => {\n    isMounted.current = true;\n    setRTL(elementRef.current?.matches(':dir(rtl)') ?? false);\n    const handleDirectionChange = () => {\n      if (isMounted.current) {\n        setRTL(elementRef.current?.matches(':dir(rtl)') ?? false);\n      }\n    };\n    attachDirectionChange(handleDirectionChange);\n    return () => {\n      isMounted.current = false;\n      detachDirectionChange(handleDirectionChange);\n    };\n  }, []);\n  return isRTL;\n};\nexport { useIsRTL };","map":{"version":3,"names":["attachDirectionChange","detachDirectionChange","useRef","useState","useIsomorphicLayoutEffect","useIsRTL","elementRef","isRTL","setRTL","isMounted","current","matches","handleDirectionChange"],"sources":["/home/user/projects/reactproj/node_modules/@ui5/webcomponents-react-base/dist/hooks/useIsRTL.js"],"sourcesContent":["'use client';\nimport { attachDirectionChange, detachDirectionChange } from '@ui5/webcomponents-base/dist/locale/directionChange.js';\nimport { useRef, useState } from 'react';\nimport { useIsomorphicLayoutEffect } from '../hooks/index.js';\nconst useIsRTL = (elementRef) => {\n    const [isRTL, setRTL] = useState(false); // initial value is always LTR (also for SSR)\n    const isMounted = useRef(false);\n    useIsomorphicLayoutEffect(() => {\n        isMounted.current = true;\n        setRTL(elementRef.current?.matches(':dir(rtl)') ?? false);\n        const handleDirectionChange = () => {\n            if (isMounted.current) {\n                setRTL(elementRef.current?.matches(':dir(rtl)') ?? false);\n            }\n        };\n        attachDirectionChange(handleDirectionChange);\n        return () => {\n            isMounted.current = false;\n            detachDirectionChange(handleDirectionChange);\n        };\n    }, []);\n    return isRTL;\n};\nexport { useIsRTL };\n"],"mappings":"AAAA,YAAY;;AACZ,SAASA,qBAAqB,EAAEC,qBAAqB,QAAQ,wDAAwD;AACrH,SAASC,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AACxC,SAASC,yBAAyB,QAAQ,mBAAmB;AAC7D,MAAMC,QAAQ,GAAIC,UAAU,IAAK;EAC7B,MAAM,CAACC,KAAK,EAAEC,MAAM,CAAC,GAAGL,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;EACzC,MAAMM,SAAS,GAAGP,MAAM,CAAC,KAAK,CAAC;EAC/BE,yBAAyB,CAAC,MAAM;IAC5BK,SAAS,CAACC,OAAO,GAAG,IAAI;IACxBF,MAAM,CAACF,UAAU,CAACI,OAAO,EAAEC,OAAO,CAAC,WAAW,CAAC,IAAI,KAAK,CAAC;IACzD,MAAMC,qBAAqB,GAAGA,CAAA,KAAM;MAChC,IAAIH,SAAS,CAACC,OAAO,EAAE;QACnBF,MAAM,CAACF,UAAU,CAACI,OAAO,EAAEC,OAAO,CAAC,WAAW,CAAC,IAAI,KAAK,CAAC;MAC7D;IACJ,CAAC;IACDX,qBAAqB,CAACY,qBAAqB,CAAC;IAC5C,OAAO,MAAM;MACTH,SAAS,CAACC,OAAO,GAAG,KAAK;MACzBT,qBAAqB,CAACW,qBAAqB,CAAC;IAChD,CAAC;EACL,CAAC,EAAE,EAAE,CAAC;EACN,OAAOL,KAAK;AAChB,CAAC;AACD,SAASF,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}