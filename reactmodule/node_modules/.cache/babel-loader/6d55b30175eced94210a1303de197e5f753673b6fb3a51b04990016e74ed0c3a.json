{"ast":null,"code":"var __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n    r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n    d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar FlexibleColumnLayout_1;\nimport UI5Element from \"@ui5/webcomponents-base/dist/UI5Element.js\";\nimport customElement from \"@ui5/webcomponents-base/dist/decorators/customElement.js\";\nimport property from \"@ui5/webcomponents-base/dist/decorators/property.js\";\nimport slot from \"@ui5/webcomponents-base/dist/decorators/slot.js\";\nimport event from \"@ui5/webcomponents-base/dist/decorators/event.js\";\nimport litRender from \"@ui5/webcomponents-base/dist/renderer/LitRenderer.js\";\nimport ResizeHandler from \"@ui5/webcomponents-base/dist/delegate/ResizeHandler.js\";\nimport { supportsTouch } from \"@ui5/webcomponents-base/dist/Device.js\";\nimport { getI18nBundle } from \"@ui5/webcomponents-base/dist/i18nBundle.js\";\nimport AnimationMode from \"@ui5/webcomponents-base/dist/types/AnimationMode.js\";\nimport { getAnimationMode } from \"@ui5/webcomponents-base/dist/config/AnimationMode.js\";\nimport Icon from \"@ui5/webcomponents/dist/Icon.js\";\nimport \"@ui5/webcomponents-icons/dist/vertical-grip.js\";\nimport { renderFinished } from \"@ui5/webcomponents-base/dist/Render.js\";\nimport { isLeft, isRight, isLeftShift, isRightShift, isHome, isEnd } from \"@ui5/webcomponents-base/dist/Keys.js\";\nimport FCLLayout from \"./types/FCLLayout.js\";\nimport { getLayoutsByMedia } from \"./fcl-utils/FCLLayout.js\";\n// Texts\nimport { FCL_START_COLUMN_TXT, FCL_MIDDLE_COLUMN_TXT, FCL_END_COLUMN_TXT, FCL_START_SEPARATOR_TOOLTIP, FCL_END_SEPARATOR_TOOLTIP } from \"./generated/i18n/i18n-defaults.js\";\n// Template\nimport FlexibleColumnLayoutTemplate from \"./generated/templates/FlexibleColumnLayoutTemplate.lit.js\";\n// Styles\nimport FlexibleColumnLayoutCss from \"./generated/themes/FlexibleColumnLayout.css.js\";\nvar MEDIA;\n(function (MEDIA) {\n  MEDIA[\"PHONE\"] = \"phone\";\n  MEDIA[\"TABLET\"] = \"tablet\";\n  MEDIA[\"DESKTOP\"] = \"desktop\";\n})(MEDIA || (MEDIA = {}));\nconst BREAKPOINTS = {\n  \"PHONE\": 599,\n  \"TABLET\": 1023\n};\nconst COLUMN = {\n  START: 0,\n  MID: 1,\n  END: 2\n};\nconst COLUMN_MIN_WIDTH = 248;\n/**\n * @class\n *\n * ### Overview\n *\n * The `FlexibleColumnLayout` implements the list-detail-detail paradigm by displaying up to three pages in separate columns.\n * There are several possible layouts that can be changed either with the component API, or by dragging the column separators.\n *\n * ### Usage\n *\n * Use this component for applications that need to display several logical levels of related information side by side (e.g. list of items, item, sub-item, etc.).\n * The Component is flexible in a sense that the application can focus the user's attention on one particular column.\n *\n * ### Responsive Behavior\n *\n * The `FlexibleColumnLayout` automatically displays the maximum possible number of columns based on `layout` property and the window size.\n * The component would display 1 column for window size smaller than 599px, up to two columns between 599px and 1023px,\n * and 3 columns for sizes bigger than 1023px.\n *\n * **Note:** When the component displays more than one column, the minimal width of each column is 248px. Consequently, when the user drags a column separator to resize the columns, the minimal allowed width of any resized column is 248px.\n *\n * ### Keyboard Handling\n *\n * #### Basic Navigation\n *\n * When a column separator is focused,  the following keyboard\n * shortcuts allow the user to resize the columns and change the layout:\n *\n * - [Shift] + [Left] or [Shift] + [Right] - Moves the separator to the left or right, which resizes the columns accordingly.\n * - [Left] or [Right] - Moves the separator to the left or right with a bigger step, which resizes the columns accordingly.\n * - [Home] - Moves the separator to the start position.\n * - [End] - Moves the separator to the end position.\n * - This component provides a build in fast navigation group which can be used via [F6] / [Shift] + [F6] / [Ctrl] + [Alt/Option] / [Down] or [Ctrl] + [Alt/Option] + [Up].\n * In order to use this functionality, you need to import the following module:\n * `import \"@ui5/webcomponents-base/dist/features/F6Navigation.js\"`\n *\n * #### Fast Navigation\n * This component provides a build in fast navigation group which can be used via [F6] / [Shift] + [F6] / [Ctrl] + [Alt/Option] / [Down] or [Ctrl] + [Alt/Option] + [Up].\n * In order to use this functionality, you need to import the following module:\n * `import \"@ui5/webcomponents-base/dist/features/F6Navigation.js\"`\n *\n * ### ES6 Module Import\n *\n * `import \"@ui5/webcomponents-fiori/dist/FlexibleColumnLayout.js\";`\n * @constructor\n * @extends UI5Element\n * @public\n * @since 1.0.0-rc.8\n */\nlet FlexibleColumnLayout = FlexibleColumnLayout_1 = class FlexibleColumnLayout extends UI5Element {\n  constructor() {\n    super();\n    /**\n    * Defines the columns layout and their proportion.\n    *\n    * **Note:** The layout also depends on the screen size - one column for screens smaller than 599px,\n    * two columns between 599px and 1023px and three columns for sizes bigger than 1023px.\n    *\n    * **For example:** layout=`TwoColumnsStartExpanded` means the layout will display up to two columns\n    * in 67%/33% proportion.\n    * @default \"OneColumn\"\n    * @public\n    */\n    this.layout = \"OneColumn\";\n    /**\n    * Specifies if the user is allowed to change the columns layout by dragging the separator between the columns.\n    * @default false\n    * @public\n    * @since 2.0.0\n    */\n    this.disableResizing = false;\n    /**\n    * Defines additional accessibility attributes on different areas of the component.\n    *\n    * The accessibilityAttributes object has the following fields,\n    * where each field is an object supporting one or more accessibility attributes:\n    *\n    *  - **startColumn**: `startColumn.role` and `startColumn.name`.\n    *  - **midColumn**: `midColumn.role` and `midColumn.name`.\n    *  - **endColumn**: `endColumn.role` and `endColumn.name`.\n    *  - **startSeparator**: `startSeparator.role` and `startSeparator.name`.\n    *  - **endSeparator**: `endSeparator.role` and `endSeparator.name`.\n    *\n    * The accessibility attributes support the following values:\n    *\n    * - **role**: Defines the accessible ARIA landmark role of the area.\n    * Accepts the following values: `none`, `complementary`, `contentinfo`, `main` or `region`.\n    *\n    * - **name**: Defines the accessible ARIA name of the area.\n    * Accepts any string.\n    *\n    * @default {}\n    * @public\n    * @since 2.0.0\n    */\n    this.accessibilityAttributes = {};\n    /**\n    * Defines the component width in px.\n    * @default 0\n    * @private\n    */\n    this._width = 0;\n    /**\n    * Defines the visible columns count - 1, 2 or 3.\n    * @default 1\n    * @private\n    */\n    this._visibleColumns = 1;\n    this._userDefinedColumnLayouts = {\n      tablet: {},\n      desktop: {}\n    };\n    this.columnResizeHandler = e => {\n      e.target.classList.add(\"ui5-fcl-column--hidden\");\n    };\n    this._prevLayout = null;\n    this.initialRendering = true;\n    this._handleResize = this.handleResize.bind(this);\n    this._onSeparatorMove = this.onSeparatorMove.bind(this);\n    this._onSeparatorMoveEnd = this.onSeparatorMoveEnd.bind(this);\n    const handleTouchStartEvent = e => {\n      this.onSeparatorPress(e);\n    };\n    this._ontouchstart = {\n      handleEvent: handleTouchStartEvent,\n      passive: true\n    };\n  }\n  static async onDefine() {\n    FlexibleColumnLayout_1.i18nBundle = await getI18nBundle(\"@ui5/webcomponents-fiori\");\n  }\n  static get ANIMATION_DURATION() {\n    return getAnimationMode() !== AnimationMode.None ? 560 : 0;\n  }\n  onEnterDOM() {\n    ResizeHandler.register(this, this._handleResize.bind(this));\n  }\n  onExitDOM() {\n    ResizeHandler.deregister(this, this._handleResize);\n  }\n  onAfterRendering() {\n    if (this.initialRendering) {\n      this.handleInitialRendering();\n      return;\n    }\n    this.syncLayout();\n  }\n  handleInitialRendering() {\n    this._prevLayout = this.layout;\n    this.updateLayout();\n    this.initialRendering = false;\n  }\n  handleResize() {\n    if (this.initialRendering) {\n      return;\n    }\n    // store the previous layout\n    const prevLayoutHash = this.columnLayout.join();\n    // update the column layout, based on the current width\n    this.updateLayout();\n    // fire layout-change if the column layout changed\n    if (prevLayoutHash !== this.columnLayout.join()) {\n      this.fireLayoutChange(false, true);\n    }\n  }\n  updateLayout() {\n    this._width = this.widthDOM;\n    this._columnLayout = this.nextColumnLayout(this.effectiveLayout);\n    this._visibleColumns = this.calcVisibleColumns(this._columnLayout);\n    this.toggleColumns();\n  }\n  syncLayout() {\n    if (this._prevLayout !== this.layout) {\n      this.updateLayout();\n      this._prevLayout = this.layout;\n    }\n  }\n  toggleColumns() {\n    this.toggleColumn(\"start\");\n    this.toggleColumn(\"mid\");\n    this.toggleColumn(\"end\");\n  }\n  toggleColumn(column) {\n    let columnWidth;\n    let columnDOM;\n    if (column === \"start\") {\n      columnWidth = this.startColumnWidth;\n      columnDOM = this.startColumnDOM;\n    } else if (column === \"mid\") {\n      columnWidth = this.midColumnWidth;\n      columnDOM = this.midColumnDOM;\n    } else {\n      columnWidth = this.endColumnWidth;\n      columnDOM = this.endColumnDOM;\n    }\n    const currentlyHidden = this._isColumnHidden(columnWidth);\n    const previouslyHidden = this._isColumnHidden(columnDOM.style.width);\n    // no change\n    if (currentlyHidden && previouslyHidden) {\n      return;\n    }\n    // column resizing: from 33% to 67%, from 25% to 50%, etc.\n    if (!currentlyHidden && !previouslyHidden) {\n      columnDOM.style.width = typeof columnWidth === \"number\" ? `${columnWidth}px` : columnWidth;\n      return;\n    }\n    // hide column: 33% to 0, 25% to 0, etc .\n    if (currentlyHidden) {\n      // animate the width\n      columnDOM.style.width = typeof columnWidth === \"number\" ? `${columnWidth}px` : columnWidth;\n      // hide column with delay to allow the animation runs entirely\n      columnDOM.addEventListener(\"transitionend\", this.columnResizeHandler);\n      return;\n    }\n    // show column: from 0 to 33%, from 0 to 25%, etc.\n    if (previouslyHidden) {\n      columnDOM.removeEventListener(\"transitionend\", this.columnResizeHandler);\n      columnDOM.classList.remove(\"ui5-fcl-column--hidden\");\n      columnDOM.style.width = typeof columnWidth === \"number\" ? `${columnWidth}px` : columnWidth;\n    }\n  }\n  nextColumnLayout(layout) {\n    let userDefinedLayout;\n    if (this.media !== MEDIA.PHONE) {\n      userDefinedLayout = this._userDefinedColumnLayouts[this.media][layout];\n    }\n    return userDefinedLayout || this._effectiveLayoutsByMedia[this.media][layout].layout;\n  }\n  calcVisibleColumns(colLayout) {\n    return colLayout.filter(colWidth => !this._isColumnHidden(colWidth)).length;\n  }\n  fireLayoutChange(separatorUsed, resized) {\n    this.fireEvent(\"layout-change\", {\n      layout: this.layout,\n      columnLayout: this._columnLayout,\n      startColumnVisible: this.startColumnVisible,\n      midColumnVisible: this.midColumnVisible,\n      endColumnVisible: this.endColumnVisible,\n      separatorsUsed: separatorUsed,\n      resized\n    });\n  }\n  onSeparatorPress(e) {\n    const pressedSeparator = e.target.closest(\".ui5-fcl-separator\");\n    if (pressedSeparator.classList.contains(\"ui5-fcl-separator-start\") && !this.showStartSeparatorGrip) {\n      return;\n    }\n    const isTouch = e instanceof TouchEvent,\n      cursorPositionX = this.getPageXValueFromEvent(e);\n    this.separatorMovementSession = this.initSeparatorMovementSession(pressedSeparator, cursorPositionX, isTouch);\n  }\n  onSeparatorMove(e) {\n    e.preventDefault(); // prevent text selection etc. while dragging\n    if (!this.separatorMovementSession) {\n      return;\n    }\n    const latestCursorX = this.getPageXValueFromEvent(e),\n      movementDelta = latestCursorX - this.separatorMovementSession.cursorPositionX;\n    if (!movementDelta) {\n      return;\n    }\n    const movedSeparator = this.separatorMovementSession.separator,\n      latestSeparatorX = movedSeparator.getBoundingClientRect().x,\n      isForwardMove = movementDelta > 0; // is start-to-end direction\n    // if the dragged separator was re-rendered away from the cursor\n    // due to change of layout during drag\n    // => check if the cursor lags-behind the separator\n    // and skip resizing untill the cursor catches-up with the separator\n    if (this.isSeparatorAheadOfCursor(latestCursorX, latestSeparatorX, isForwardMove)) {\n      this.separatorMovementSession.cursorPositionX = latestCursorX;\n      return;\n    }\n    const layoutBeforeMove = this.separatorMovementSession.tmpFCLLayout;\n    // synchronously move the separator in DOM => resizes the columns accordingly\n    const layoutAfterMove = this.moveSeparator(movedSeparator, movementDelta, layoutBeforeMove);\n    this.separatorMovementSession.cursorPositionX = latestCursorX;\n    this.separatorMovementSession.tmpFCLLayout = layoutAfterMove;\n  }\n  onSeparatorMoveEnd() {\n    if (!this.separatorMovementSession) {\n      return;\n    }\n    const newLayout = this.separatorMovementSession.tmpFCLLayout;\n    const newColumnLayout = this._columnLayout;\n    this.saveUserDefinedColumnLayout(newLayout, newColumnLayout);\n    this.exitSeparatorMovementSession();\n  }\n  initSeparatorMovementSession(separator, cursorPositionX, isTouch) {\n    this.attachMoveListeners(isTouch);\n    this.toggleSideAnimations(separator, false); // toggle animations for side colmns\n    return {\n      separator,\n      cursorPositionX,\n      tmpFCLLayout: this.layout\n    };\n  }\n  exitSeparatorMovementSession() {\n    const movedSeparator = this.separatorMovementSession.separator;\n    const hasAnimation = getAnimationMode() !== AnimationMode.None;\n    this.detachMoveListeners();\n    this.toggleSideAnimations(movedSeparator, hasAnimation); // restore animations for side columns\n    movedSeparator.focus();\n    this.separatorMovementSession = null;\n  }\n  saveUserDefinedColumnLayout(newLayout, newColumnLayout) {\n    const media = this.media;\n    this._userDefinedColumnLayouts[media][newLayout] = newColumnLayout;\n    if (this.layout !== newLayout) {\n      this.layout = newLayout;\n      this.fireLayoutChange(true, false);\n    }\n  }\n  isSeparatorAheadOfCursor(cursorX, separatorX, isForwardMove) {\n    if (isForwardMove) {\n      return separatorX > cursorX;\n    }\n    return separatorX < cursorX;\n  }\n  calculateNewColumnWidth(columnToResize, widthDelta) {\n    const columnWidths = this._columnLayout.map(x => this.convertColumnWidthToPixels(x)),\n      adjacentColumnToResize = COLUMN.MID,\n      // column to compensate the resize of the given column\n      columnNewWidth = columnWidths[columnToResize] + widthDelta,\n      adjacentColumnNewWidth = columnWidths[adjacentColumnToResize] - widthDelta;\n    if (columnNewWidth < COLUMN_MIN_WIDTH) {\n      // user is trying to shrink a column below its min-width\n      // or to reveal a hidden column\n      return COLUMN_MIN_WIDTH;\n    }\n    if (adjacentColumnNewWidth < COLUMN_MIN_WIDTH) {\n      const correction = COLUMN_MIN_WIDTH - adjacentColumnNewWidth;\n      // constrain the new width to preserve the min-width of the adjacent column\n      return columnNewWidth - correction;\n    }\n    return columnNewWidth;\n  }\n  moveSeparator(separator, offsetX, fclLayoutBeforeMove) {\n    const isStartSeparator = separator === this.startSeparatorDOM,\n      isRTL = this.effectiveDir === \"rtl\";\n    let selectedColumnToResize, columnWidthDelta;\n    if (isRTL) {\n      offsetX = -offsetX;\n    }\n    if (isStartSeparator) {\n      selectedColumnToResize = COLUMN.START;\n      // move in direction start-to-end expands start column\n      columnWidthDelta = offsetX;\n    } else {\n      selectedColumnToResize = COLUMN.END;\n      // move in direction start-to-end shrinks end column\n      columnWidthDelta = -offsetX;\n    }\n    const isStartToEndDirection = offsetX > 0,\n      newColumnWidth = this.calculateNewColumnWidth(selectedColumnToResize, columnWidthDelta),\n      newColumnLayout = this.adjustColumnLayout(selectedColumnToResize, newColumnWidth, true),\n      newFCLLayout = this.getNextLayoutOnSeparatorMovement(separator, isStartToEndDirection, fclLayoutBeforeMove, newColumnLayout);\n    if (fclLayoutBeforeMove !== newFCLLayout) {\n      this._columnLayout = this.nextColumnLayout(newFCLLayout);\n      this._visibleColumns = this.calcVisibleColumns(this._columnLayout);\n    }\n    // apply the requested resize on <code>this._columnLayout</code>\n    this.adjustColumnLayout(selectedColumnToResize, newColumnWidth);\n    this.toggleColumns();\n    return newFCLLayout;\n  }\n  adjustColumnLayout(columnToResize, newSize) {\n    let createNewArray = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n    if (!this._columnLayout) {\n      return;\n    }\n    const columnLayoutInPx = this._columnLayout.map(x => this.convertColumnWidthToPixels(x));\n    // apply the new size\n    columnLayoutInPx[columnToResize] = newSize;\n    columnLayoutInPx[COLUMN.MID] = this._availableWidthForColumns - columnLayoutInPx[COLUMN.START] - columnLayoutInPx[COLUMN.END];\n    const columnLayoutToAdjust = createNewArray ? [] : this._columnLayout;\n    columnLayoutInPx.forEach((x, i) => {\n      columnLayoutToAdjust[i] = this.convertToRelativeColumnWidth(columnLayoutInPx[i]);\n    });\n    return columnLayoutToAdjust;\n  }\n  async _onkeydown(e) {\n    const stepSize = 2,\n      bigStepSize = this._width,\n      isRTL = this.effectiveDir === \"rtl\";\n    let step = 0;\n    if (isLeft(e)) {\n      step = -stepSize * 10;\n    } else if (isRight(e)) {\n      step = stepSize * 10;\n    } else if (isLeftShift(e)) {\n      step = -stepSize;\n    } else if (isRightShift(e)) {\n      step = stepSize;\n    } else if (isHome(e)) {\n      e.preventDefault();\n      step = isRTL ? bigStepSize : -bigStepSize;\n    } else if (isEnd(e)) {\n      e.preventDefault();\n      step = isRTL ? -bigStepSize : bigStepSize;\n    }\n    if (!step) {\n      return;\n    }\n    const separator = e.target;\n    if (!this.separatorMovementSession) {\n      this.separatorMovementSession = this.initSeparatorMovementSession(separator, 0, false);\n    }\n    const layoutBeforeMove = this.separatorMovementSession.tmpFCLLayout;\n    const layoutAfterMove = this.moveSeparator(separator, step, layoutBeforeMove);\n    this.separatorMovementSession.tmpFCLLayout = layoutAfterMove;\n    await renderFinished();\n    separator.focus();\n  }\n  _onkeyup() {\n    if (this.separatorMovementSession) {\n      this.onSeparatorMoveEnd();\n    }\n  }\n  attachMoveListeners(isTouch) {\n    const domRef = this.getDomRef();\n    if (!domRef) {\n      return;\n    }\n    if (isTouch && supportsTouch()) {\n      domRef.addEventListener(\"touchmove\", this._onSeparatorMove);\n      domRef.addEventListener(\"touchend\", this._onSeparatorMoveEnd);\n    } else {\n      domRef.addEventListener(\"mousemove\", this._onSeparatorMove);\n      domRef.addEventListener(\"mouseup\", this._onSeparatorMoveEnd);\n    }\n  }\n  detachMoveListeners() {\n    const domRef = this.getDomRef();\n    if (!domRef) {\n      return;\n    }\n    domRef.removeEventListener(\"mouseup\", this._onSeparatorMoveEnd);\n    domRef.removeEventListener(\"touchend\", this._onSeparatorMoveEnd);\n    // Only one of the following was attached, but it's ok to remove both as there is no error\n    domRef.removeEventListener(\"mousemove\", this._onSeparatorMove);\n    domRef.removeEventListener(\"touchmove\", this._onSeparatorMove);\n  }\n  toggleSideAnimations(separator, shouldAnimate) {\n    const adjacentColumns = [separator.previousElementSibling, separator.nextElementSibling];\n    adjacentColumns.forEach(column => column.classList.toggle(\"ui5-fcl-column-animation\", shouldAnimate));\n  }\n  getPageXValueFromEvent(e) {\n    if (supportsTouch() && e instanceof TouchEvent) {\n      if (e.changedTouches && e.changedTouches.length > 0) {\n        return e.changedTouches[0].pageX;\n      }\n      return 0;\n    }\n    return e.pageX; // MouseEvent\n  }\n  convertColumnWidthToPixels(width) {\n    if (typeof width === \"number\") {\n      return width;\n    }\n    const parsedValue = parseFloat(width),\n      totalWidth = this._availableWidthForColumns;\n    if (width.endsWith(\"%\")) {\n      return totalWidth / 100 * parsedValue;\n    }\n    return parsedValue;\n  }\n  convertToRelativeColumnWidth(pxWidth) {\n    if (typeof pxWidth === \"string\") {\n      return pxWidth;\n    }\n    if (pxWidth === 0) {\n      return \"0px\";\n    }\n    return `${pxWidth / this._availableWidthForColumns * 100}%`;\n  }\n  getNextLayoutOnSeparatorMovement(separator, isStartToEndDirection, fclLayoutBeforeMove, columnLayoutAfterMove) {\n    const isStartSeparator = separator === this.startSeparatorDOM,\n      separatorName = isStartSeparator ? \"start\" : \"end\",\n      moved = options => {\n        return options.from === fclLayoutBeforeMove && options.separator === separatorName && options.forward === isStartToEndDirection;\n      },\n      newColumnLayout = columnLayoutAfterMove.map(x => this.convertColumnWidthToPixels(x)),\n      newColumnWidths = {\n        start: newColumnLayout[0],\n        mid: newColumnLayout[1],\n        end: newColumnLayout[2]\n      },\n      startColumnPxWidth = newColumnWidths.start,\n      startColumnPercentWidth = startColumnPxWidth / this.widthDOM * 100,\n      isTablet = this.media === MEDIA.TABLET;\n    if (moved({\n      separator: \"start\",\n      from: FCLLayout.TwoColumnsMidExpanded,\n      forward: true\n    }) && newColumnWidths.start >= newColumnWidths.mid) {\n      return FCLLayout.TwoColumnsStartExpanded;\n    }\n    if (moved({\n      separator: \"start\",\n      from: FCLLayout.TwoColumnsStartExpanded,\n      forward: false\n    }) && newColumnWidths.start < newColumnWidths.mid) {\n      return FCLLayout.TwoColumnsMidExpanded;\n    }\n    if (moved({\n      separator: \"start\",\n      from: FCLLayout.ThreeColumnsMidExpanded,\n      forward: true\n    }) && startColumnPercentWidth >= 33) {\n      return FCLLayout.ThreeColumnsMidExpandedEndHidden;\n    }\n    if (moved({\n      separator: \"start\",\n      from: FCLLayout.ThreeColumnsMidExpandedEndHidden,\n      forward: false\n    }) && !isTablet && startColumnPercentWidth < 33) {\n      return FCLLayout.ThreeColumnsMidExpanded;\n    }\n    if (moved({\n      separator: \"end\",\n      from: FCLLayout.ThreeColumnsMidExpandedEndHidden,\n      forward: false\n      // ceil before comparing to avoid floating point precision issues\n    }) && Math.ceil(newColumnWidths.end) >= COLUMN_MIN_WIDTH) {\n      return FCLLayout.ThreeColumnsMidExpanded;\n    }\n    if (moved({\n      separator: \"end\",\n      from: FCLLayout.ThreeColumnsMidExpanded,\n      forward: false\n    }) && newColumnWidths.mid < newColumnWidths.end) {\n      return FCLLayout.ThreeColumnsEndExpanded;\n    }\n    if (moved({\n      separator: \"end\",\n      from: FCLLayout.ThreeColumnsEndExpanded,\n      forward: true\n    }) && newColumnWidths.mid >= newColumnWidths.end) {\n      return FCLLayout.ThreeColumnsMidExpanded;\n    }\n    if (moved({\n      separator: \"start\",\n      from: FCLLayout.ThreeColumnsMidExpandedEndHidden,\n      forward: true\n    }) && newColumnWidths.start >= newColumnWidths.mid) {\n      return FCLLayout.ThreeColumnsStartExpandedEndHidden;\n    }\n    if (moved({\n      separator: \"start\",\n      from: FCLLayout.ThreeColumnsStartExpandedEndHidden,\n      forward: false\n    }) && newColumnWidths.start < newColumnWidths.mid) {\n      return FCLLayout.ThreeColumnsMidExpandedEndHidden;\n    }\n    if (moved({\n      separator: \"start\",\n      from: FCLLayout.ThreeColumnsMidExpanded,\n      forward: true\n      // ceil before comparing to avoid floating point precision issues\n    }) && isTablet && Math.ceil(startColumnPxWidth) >= COLUMN_MIN_WIDTH) {\n      return FCLLayout.ThreeColumnsMidExpandedEndHidden;\n    }\n    if (moved({\n      separator: \"end\",\n      from: FCLLayout.ThreeColumnsMidExpandedEndHidden,\n      forward: false\n      // ceil before comparing to avoid floating point precision issues\n    }) && isTablet && Math.ceil(newColumnWidths.end) >= COLUMN_MIN_WIDTH) {\n      return FCLLayout.ThreeColumnsMidExpanded;\n    }\n    return fclLayoutBeforeMove; // no layout change\n  }\n  get _availableWidthForColumns() {\n    let width = this._width;\n    if (this.showStartSeparator) {\n      width -= this.startSeparatorDOM.offsetWidth;\n    }\n    if (this.showEndSeparator) {\n      width -= this.endSeparatorDOM.offsetWidth;\n    }\n    return width;\n  }\n  /**\n   * Checks if a column is hidden based on its width.\n   */\n  _isColumnHidden(columnWidth) {\n    return columnWidth === 0 || columnWidth === \"0px\";\n  }\n  /**\n  * Returns the current column layout, based on both the `layout` property and the screen size.\n  *\n  * **For example:** [\"67%\", \"33%\", 0], [\"100%\", 0, 0], [\"25%\", \"50%\", \"25%\"], etc,\n  * where the numbers represents the width of the start, middle and end columns.\n  * @default undefined\n  * @public\n  */\n  get columnLayout() {\n    return this._columnLayout;\n  }\n  /**\n  * Returns if the `start` column is visible.\n  * @default true\n  * @public\n  */\n  get startColumnVisible() {\n    if (this._columnLayout) {\n      return !this._isColumnHidden(this._columnLayout[0]);\n    }\n    return false;\n  }\n  /**\n  * Returns if the `middle` column is visible.\n  * @default false\n  * @public\n  */\n  get midColumnVisible() {\n    if (this._columnLayout) {\n      return !this._isColumnHidden(this._columnLayout[1]);\n    }\n    return false;\n  }\n  /**\n  * Returns if the `end` column is visible.\n  * @default false\n  * @public\n  */\n  get endColumnVisible() {\n    if (this._columnLayout) {\n      return !this._isColumnHidden(this._columnLayout[2]);\n    }\n    return false;\n  }\n  /**\n  * Returns the number of currently visible columns.\n  * @default 1\n  * @public\n  */\n  get visibleColumns() {\n    return this._visibleColumns;\n  }\n  get classes() {\n    const hasAnimation = getAnimationMode() !== AnimationMode.None;\n    return {\n      root: {\n        \"ui5-fcl-root\": true\n      },\n      columns: {\n        start: {\n          \"ui5-fcl-column\": true,\n          \"ui5-fcl-column-animation\": hasAnimation,\n          \"ui5-fcl-column--start\": true\n        },\n        middle: {\n          \"ui5-fcl-column\": true,\n          \"ui5-fcl-column-animation\": hasAnimation,\n          \"ui5-fcl-column--middle\": true\n        },\n        end: {\n          \"ui5-fcl-column\": true,\n          \"ui5-fcl-column-animation\": hasAnimation,\n          \"ui5-fcl-column--end\": true\n        }\n      }\n    };\n  }\n  get styles() {\n    return {\n      separator: {\n        start: {\n          display: this.showStartSeparator ? \"flex\" : \"none\"\n        },\n        end: {\n          display: this.showEndSeparator ? \"flex\" : \"none\"\n        }\n      },\n      grip: {\n        start: {\n          display: this.showStartSeparatorGrip ? \"inline-block\" : \"none\"\n        },\n        end: {\n          display: this.showEndSeparatorGrip ? \"inline-block\" : \"none\"\n        }\n      }\n    };\n  }\n  get startColumnWidth() {\n    return this._columnLayout ? this._columnLayout[0] : \"100%\";\n  }\n  get midColumnWidth() {\n    return this._columnLayout ? this._columnLayout[1] : \"0px\";\n  }\n  get endColumnWidth() {\n    return this._columnLayout ? this._columnLayout[2] : \"0px\";\n  }\n  get showStartSeparator() {\n    return this.effectiveSeparatorsInfo[0].visible;\n  }\n  get showEndSeparator() {\n    return this.effectiveSeparatorsInfo[1].visible;\n  }\n  get showStartSeparatorGrip() {\n    return this.disableResizing ? false : this.startSeparatorGripVisibility;\n  }\n  get showEndSeparatorGrip() {\n    return this.disableResizing ? false : this.endSeparatorGripVisibility;\n  }\n  get startSeparatorGripVisibility() {\n    return this.effectiveSeparatorsInfo[0].gripVisible;\n  }\n  get endSeparatorGripVisibility() {\n    return this.effectiveSeparatorsInfo[1].gripVisible;\n  }\n  get effectiveSeparatorsInfo() {\n    return this._effectiveLayoutsByMedia[this.media][this.effectiveLayout].separators;\n  }\n  get effectiveLayout() {\n    return this.separatorMovementSession?.tmpFCLLayout || this.layout;\n  }\n  get startSeparatorDOM() {\n    return this.shadowRoot.querySelector(\".ui5-fcl-separator-start\");\n  }\n  get endSeparatorDOM() {\n    return this.shadowRoot.querySelector(\".ui5-fcl-separator-end\");\n  }\n  get startSeparatorTabIndex() {\n    if (this.showStartSeparatorGrip) {\n      return 0;\n    }\n  }\n  get endSeparatorTabIndex() {\n    if (this.showEndSeparatorGrip) {\n      return 0;\n    }\n    return -1;\n  }\n  get media() {\n    if (this._width <= BREAKPOINTS.PHONE) {\n      return MEDIA.PHONE;\n    }\n    if (this._width <= BREAKPOINTS.TABLET) {\n      return MEDIA.TABLET;\n    }\n    return MEDIA.DESKTOP;\n  }\n  get widthDOM() {\n    return this.getBoundingClientRect().width;\n  }\n  get startColumnDOM() {\n    return this.shadowRoot.querySelector(\".ui5-fcl-column--start\");\n  }\n  get midColumnDOM() {\n    return this.shadowRoot.querySelector(\".ui5-fcl-column--middle\");\n  }\n  get endColumnDOM() {\n    return this.shadowRoot.querySelector(\".ui5-fcl-column--end\");\n  }\n  get accStartColumnText() {\n    return this.accessibilityAttributes.startColumn?.name || FlexibleColumnLayout_1.i18nBundle.getText(FCL_START_COLUMN_TXT);\n  }\n  get accMiddleColumnText() {\n    return this.accessibilityAttributes.midColumn?.name || FlexibleColumnLayout_1.i18nBundle.getText(FCL_MIDDLE_COLUMN_TXT);\n  }\n  get accEndColumnText() {\n    return this.accessibilityAttributes.endColumn?.name || FlexibleColumnLayout_1.i18nBundle.getText(FCL_END_COLUMN_TXT);\n  }\n  get accStartSeparatorText() {\n    let name = this.accessibilityAttributes.startSeparator?.name;\n    if (!name && this.showStartSeparatorGrip) {\n      name = FlexibleColumnLayout_1.i18nBundle.getText(FCL_START_SEPARATOR_TOOLTIP);\n    }\n    return name;\n  }\n  get accEndSeparatorText() {\n    return this.accessibilityAttributes.endSeparator?.name || FlexibleColumnLayout_1.i18nBundle.getText(FCL_END_SEPARATOR_TOOLTIP);\n  }\n  get accStartColumnRole() {\n    if (this.startColumnVisible) {\n      return this.accessibilityAttributes.startColumn?.role || \"region\";\n    }\n    return undefined;\n  }\n  get accMiddleColumnRole() {\n    if (this.midColumnVisible) {\n      return this.accessibilityAttributes.midColumn?.role || \"region\";\n    }\n    return undefined;\n  }\n  get accEndColumnRole() {\n    if (this.endColumnVisible) {\n      return this.accessibilityAttributes.endColumn?.role || \"region\";\n    }\n    return undefined;\n  }\n  get accStartSeparatorRole() {\n    return this.accessibilityAttributes.startSeparator?.role || \"separator\";\n  }\n  get accEndSeparatorRole() {\n    return this.accessibilityAttributes.endSeparator?.role || \"separator\";\n  }\n  get _effectiveLayoutsByMedia() {\n    return this._layoutsConfiguration || getLayoutsByMedia();\n  }\n  get _accAttributes() {\n    return {\n      columns: {\n        start: {\n          role: this.accStartColumnRole,\n          ariaHidden: !this.startColumnVisible || undefined\n        },\n        middle: {\n          role: this.accMiddleColumnRole,\n          ariaHidden: !this.midColumnVisible || undefined\n        },\n        end: {\n          role: this.accEndColumnRole,\n          ariaHidden: !this.endColumnVisible || undefined\n        }\n      }\n    };\n  }\n};\n__decorate([property()], FlexibleColumnLayout.prototype, \"layout\", void 0);\n__decorate([property({\n  type: Boolean\n})], FlexibleColumnLayout.prototype, \"disableResizing\", void 0);\n__decorate([property({\n  type: Object\n})], FlexibleColumnLayout.prototype, \"accessibilityAttributes\", void 0);\n__decorate([property({\n  type: Number\n})], FlexibleColumnLayout.prototype, \"_width\", void 0);\n__decorate([property({\n  type: Array\n})], FlexibleColumnLayout.prototype, \"_columnLayout\", void 0);\n__decorate([property({\n  type: Number\n})], FlexibleColumnLayout.prototype, \"_visibleColumns\", void 0);\n__decorate([property({\n  type: Object\n})], FlexibleColumnLayout.prototype, \"_layoutsConfiguration\", void 0);\n__decorate([slot()], FlexibleColumnLayout.prototype, \"startColumn\", void 0);\n__decorate([slot()], FlexibleColumnLayout.prototype, \"midColumn\", void 0);\n__decorate([slot()], FlexibleColumnLayout.prototype, \"endColumn\", void 0);\nFlexibleColumnLayout = FlexibleColumnLayout_1 = __decorate([customElement({\n  tag: \"ui5-flexible-column-layout\",\n  fastNavigation: true,\n  renderer: litRender,\n  styles: FlexibleColumnLayoutCss,\n  template: FlexibleColumnLayoutTemplate,\n  dependencies: [Icon]\n})\n/**\n * Fired when the layout changes via user interaction by dragging the separators\n * or by changing the component size due to resizing.\n * @param {FCLLayout} layout The current layout\n * @param {array} columnLayout The effective column layout, f.e [67%, 33%, 0]\n * @param {boolean} startColumnVisible Indicates if the start column is currently visible\n * @param {boolean} midColumnVisible Indicates if the middle column is currently visible\n * @param {boolean} endColumnVisible Indicates if the end column is currently visible\n * @param {boolean} separatorsUsed Indicates if the layout was changed by dragging the column separators\n * @param {boolean} resized Indicates if the layout was changed by resizing the entire component\n * @public\n */, event(\"layout-change\", {\n  detail: {\n    /**\n    * @public\n    */\n    layout: {\n      type: FCLLayout\n    },\n    /**\n    * @public\n    */\n    columnLayout: {\n      type: Array\n    },\n    /**\n    * @public\n    */\n    startColumnVisible: {\n      type: Boolean\n    },\n    /**\n    * @public\n    */\n    midColumnVisible: {\n      type: Boolean\n    },\n    /**\n    * @public\n    */\n    endColumnVisible: {\n      type: Boolean\n    },\n    /**\n     * @public\n    */\n    separatorsUsed: {\n      type: Boolean\n    },\n    /**\n     * @public\n    */\n    resized: {\n      type: Boolean\n    }\n  }\n})], FlexibleColumnLayout);\nFlexibleColumnLayout.define();\nexport default FlexibleColumnLayout;","map":{"version":3,"names":["UI5Element","customElement","property","slot","event","litRender","ResizeHandler","supportsTouch","getI18nBundle","AnimationMode","getAnimationMode","Icon","renderFinished","isLeft","isRight","isLeftShift","isRightShift","isHome","isEnd","FCLLayout","getLayoutsByMedia","FCL_START_COLUMN_TXT","FCL_MIDDLE_COLUMN_TXT","FCL_END_COLUMN_TXT","FCL_START_SEPARATOR_TOOLTIP","FCL_END_SEPARATOR_TOOLTIP","FlexibleColumnLayoutTemplate","FlexibleColumnLayoutCss","MEDIA","BREAKPOINTS","COLUMN","START","MID","END","COLUMN_MIN_WIDTH","FlexibleColumnLayout","FlexibleColumnLayout_1","constructor","layout","disableResizing","accessibilityAttributes","_width","_visibleColumns","_userDefinedColumnLayouts","tablet","desktop","columnResizeHandler","e","target","classList","add","_prevLayout","initialRendering","_handleResize","handleResize","bind","_onSeparatorMove","onSeparatorMove","_onSeparatorMoveEnd","onSeparatorMoveEnd","handleTouchStartEvent","onSeparatorPress","_ontouchstart","handleEvent","passive","onDefine","i18nBundle","ANIMATION_DURATION","None","onEnterDOM","register","onExitDOM","deregister","onAfterRendering","handleInitialRendering","syncLayout","updateLayout","prevLayoutHash","columnLayout","join","fireLayoutChange","widthDOM","_columnLayout","nextColumnLayout","effectiveLayout","calcVisibleColumns","toggleColumns","toggleColumn","column","columnWidth","columnDOM","startColumnWidth","startColumnDOM","midColumnWidth","midColumnDOM","endColumnWidth","endColumnDOM","currentlyHidden","_isColumnHidden","previouslyHidden","style","width","addEventListener","removeEventListener","remove","userDefinedLayout","media","PHONE","_effectiveLayoutsByMedia","colLayout","filter","colWidth","length","separatorUsed","resized","fireEvent","startColumnVisible","midColumnVisible","endColumnVisible","separatorsUsed","pressedSeparator","closest","contains","showStartSeparatorGrip","isTouch","TouchEvent","cursorPositionX","getPageXValueFromEvent","separatorMovementSession","initSeparatorMovementSession","preventDefault","latestCursorX","movementDelta","movedSeparator","separator","latestSeparatorX","getBoundingClientRect","x","isForwardMove","isSeparatorAheadOfCursor","layoutBeforeMove","tmpFCLLayout","layoutAfterMove","moveSeparator","newLayout","newColumnLayout","saveUserDefinedColumnLayout","exitSeparatorMovementSession","attachMoveListeners","toggleSideAnimations","hasAnimation","detachMoveListeners","focus","cursorX","separatorX","calculateNewColumnWidth","columnToResize","widthDelta","columnWidths","map","convertColumnWidthToPixels","adjacentColumnToResize","columnNewWidth","adjacentColumnNewWidth","correction","offsetX","fclLayoutBeforeMove","isStartSeparator","startSeparatorDOM","isRTL","effectiveDir","selectedColumnToResize","columnWidthDelta","isStartToEndDirection","newColumnWidth","adjustColumnLayout","newFCLLayout","getNextLayoutOnSeparatorMovement","newSize","createNewArray","arguments","undefined","columnLayoutInPx","_availableWidthForColumns","columnLayoutToAdjust","forEach","i","convertToRelativeColumnWidth","_onkeydown","stepSize","bigStepSize","step","_onkeyup","domRef","getDomRef","shouldAnimate","adjacentColumns","previousElementSibling","nextElementSibling","toggle","changedTouches","pageX","parsedValue","parseFloat","totalWidth","endsWith","pxWidth","columnLayoutAfterMove","separatorName","moved","options","from","forward","newColumnWidths","start","mid","end","startColumnPxWidth","startColumnPercentWidth","isTablet","TABLET","TwoColumnsMidExpanded","TwoColumnsStartExpanded","ThreeColumnsMidExpanded","ThreeColumnsMidExpandedEndHidden","Math","ceil","ThreeColumnsEndExpanded","ThreeColumnsStartExpandedEndHidden","showStartSeparator","offsetWidth","showEndSeparator","endSeparatorDOM","visibleColumns","classes","root","columns","middle","styles","display","grip","showEndSeparatorGrip","effectiveSeparatorsInfo","visible","startSeparatorGripVisibility","endSeparatorGripVisibility","gripVisible","separators","shadowRoot","querySelector","startSeparatorTabIndex","endSeparatorTabIndex","DESKTOP","accStartColumnText","startColumn","name","getText","accMiddleColumnText","midColumn","accEndColumnText","endColumn","accStartSeparatorText","startSeparator","accEndSeparatorText","endSeparator","accStartColumnRole","role","accMiddleColumnRole","accEndColumnRole","accStartSeparatorRole","accEndSeparatorRole","_layoutsConfiguration","_accAttributes","ariaHidden","__decorate","type","Boolean","Object","Number","Array","tag","fastNavigation","renderer","template","dependencies","detail","define"],"sources":["/home/user/projects/reactproj/node_modules/@ui5/webcomponents-fiori/src/FlexibleColumnLayout.ts"],"sourcesContent":["import UI5Element from \"@ui5/webcomponents-base/dist/UI5Element.js\";\nimport customElement from \"@ui5/webcomponents-base/dist/decorators/customElement.js\";\nimport property from \"@ui5/webcomponents-base/dist/decorators/property.js\";\nimport slot from \"@ui5/webcomponents-base/dist/decorators/slot.js\";\nimport event from \"@ui5/webcomponents-base/dist/decorators/event.js\";\nimport litRender from \"@ui5/webcomponents-base/dist/renderer/LitRenderer.js\";\nimport ResizeHandler from \"@ui5/webcomponents-base/dist/delegate/ResizeHandler.js\";\nimport { supportsTouch } from \"@ui5/webcomponents-base/dist/Device.js\";\nimport type AriaLandmarkRole from \"@ui5/webcomponents-base/dist/types/AriaLandmarkRole.js\";\nimport { getI18nBundle } from \"@ui5/webcomponents-base/dist/i18nBundle.js\";\nimport type I18nBundle from \"@ui5/webcomponents-base/dist/i18nBundle.js\";\nimport AnimationMode from \"@ui5/webcomponents-base/dist/types/AnimationMode.js\";\nimport { getAnimationMode } from \"@ui5/webcomponents-base/dist/config/AnimationMode.js\";\nimport Icon from \"@ui5/webcomponents/dist/Icon.js\";\nimport \"@ui5/webcomponents-icons/dist/vertical-grip.js\";\nimport { renderFinished } from \"@ui5/webcomponents-base/dist/Render.js\";\nimport {\n\tisLeft,\n\tisRight,\n\tisLeftShift,\n\tisRightShift,\n\tisHome,\n\tisEnd,\n} from \"@ui5/webcomponents-base/dist/Keys.js\";\nimport type { PassiveEventListenerObject } from \"@ui5/webcomponents-base/dist/types.js\";\nimport FCLLayout from \"./types/FCLLayout.js\";\nimport type { LayoutConfiguration } from \"./fcl-utils/FCLLayout.js\";\nimport {\n\tgetLayoutsByMedia,\n} from \"./fcl-utils/FCLLayout.js\";\n\n// Texts\nimport {\n\tFCL_START_COLUMN_TXT,\n\tFCL_MIDDLE_COLUMN_TXT,\n\tFCL_END_COLUMN_TXT,\n\tFCL_START_SEPARATOR_TOOLTIP,\n\tFCL_END_SEPARATOR_TOOLTIP,\n} from \"./generated/i18n/i18n-defaults.js\";\n\n// Template\nimport FlexibleColumnLayoutTemplate from \"./generated/templates/FlexibleColumnLayoutTemplate.lit.js\";\n\n// Styles\nimport FlexibleColumnLayoutCss from \"./generated/themes/FlexibleColumnLayout.css.js\";\n\nenum MEDIA {\n\tPHONE = \"phone\",\n\tTABLET = \"tablet\",\n\tDESKTOP = \"desktop\",\n}\n\nconst BREAKPOINTS = {\n\t\"PHONE\": 599,\n\t\"TABLET\": 1023,\n} as const;\n\nconst COLUMN = {\n\tSTART: 0,\n\tMID: 1,\n\tEND: 2,\n} as const;\n\nconst COLUMN_MIN_WIDTH = 248;\n\ntype SeparatorMovementSession = {\n\tseparator: HTMLElement,\n\tcursorPositionX: number, // the position X of the mouse/finger that indicates where to move the separator\n\ttmpFCLLayout: FCLLayout, // the layout that corresponds to the latest separator position\n};\n\ntype FlexibleColumnLayoutColumnLayout = Array<string | number>;\n\ntype FlexibleColumnLayoutLayoutChangeEventDetail = {\n\tlayout: `${FCLLayout}`,\n\tcolumnLayout: FlexibleColumnLayoutColumnLayout,\n\tstartColumnVisible: boolean,\n\tmidColumnVisible: boolean,\n\tendColumnVisible: boolean,\n\tseparatorsUsed: boolean,\n\tresized: boolean,\n};\n\ntype FCLAccessibilityRoles = Extract<Lowercase<AriaLandmarkRole>, \"none\" | \"complementary\" | \"contentinfo\" | \"main\" | \"region\">\ntype FCLAccessibilityAttributes = {\n\tstartColumn?: {\n\t\trole: FCLAccessibilityRoles,\n\t\tname: string,\n\t},\n\tmidColumn?: {\n\t\trole: FCLAccessibilityRoles,\n\t\tname: string,\n\t},\n\tendColumn?: {\n\t\trole: FCLAccessibilityRoles,\n\t\tname: string,\n\t},\n\tstartSeparator?: {\n\t\trole: FCLAccessibilityRoles,\n\t\tname: string,\n\t},\n\tendSeparator?: {\n\t\trole: FCLAccessibilityRoles,\n\t\tname: string,\n\t},\n}\n\ntype UserDefinedColumnLayouts = {\n\t\"tablet\": {\n\t\t[layoutName in FCLLayout]?: FlexibleColumnLayoutColumnLayout;\n\t},\n\t\"desktop\": {\n\t\t[layoutName in FCLLayout]?: FlexibleColumnLayoutColumnLayout;\n\t},\n}\n\n/**\n * @class\n *\n * ### Overview\n *\n * The `FlexibleColumnLayout` implements the list-detail-detail paradigm by displaying up to three pages in separate columns.\n * There are several possible layouts that can be changed either with the component API, or by dragging the column separators.\n *\n * ### Usage\n *\n * Use this component for applications that need to display several logical levels of related information side by side (e.g. list of items, item, sub-item, etc.).\n * The Component is flexible in a sense that the application can focus the user's attention on one particular column.\n *\n * ### Responsive Behavior\n *\n * The `FlexibleColumnLayout` automatically displays the maximum possible number of columns based on `layout` property and the window size.\n * The component would display 1 column for window size smaller than 599px, up to two columns between 599px and 1023px,\n * and 3 columns for sizes bigger than 1023px.\n *\n * **Note:** When the component displays more than one column, the minimal width of each column is 248px. Consequently, when the user drags a column separator to resize the columns, the minimal allowed width of any resized column is 248px.\n *\n * ### Keyboard Handling\n *\n * #### Basic Navigation\n *\n * When a column separator is focused,  the following keyboard\n * shortcuts allow the user to resize the columns and change the layout:\n *\n * - [Shift] + [Left] or [Shift] + [Right] - Moves the separator to the left or right, which resizes the columns accordingly.\n * - [Left] or [Right] - Moves the separator to the left or right with a bigger step, which resizes the columns accordingly.\n * - [Home] - Moves the separator to the start position.\n * - [End] - Moves the separator to the end position.\n * - This component provides a build in fast navigation group which can be used via [F6] / [Shift] + [F6] / [Ctrl] + [Alt/Option] / [Down] or [Ctrl] + [Alt/Option] + [Up].\n * In order to use this functionality, you need to import the following module:\n * `import \"@ui5/webcomponents-base/dist/features/F6Navigation.js\"`\n *\n * #### Fast Navigation\n * This component provides a build in fast navigation group which can be used via [F6] / [Shift] + [F6] / [Ctrl] + [Alt/Option] / [Down] or [Ctrl] + [Alt/Option] + [Up].\n * In order to use this functionality, you need to import the following module:\n * `import \"@ui5/webcomponents-base/dist/features/F6Navigation.js\"`\n *\n * ### ES6 Module Import\n *\n * `import \"@ui5/webcomponents-fiori/dist/FlexibleColumnLayout.js\";`\n * @constructor\n * @extends UI5Element\n * @public\n * @since 1.0.0-rc.8\n */\n@customElement({\n\ttag: \"ui5-flexible-column-layout\",\n\tfastNavigation: true,\n\trenderer: litRender,\n\tstyles: FlexibleColumnLayoutCss,\n\ttemplate: FlexibleColumnLayoutTemplate,\n\tdependencies: [Icon],\n})\n\n/**\n * Fired when the layout changes via user interaction by dragging the separators\n * or by changing the component size due to resizing.\n * @param {FCLLayout} layout The current layout\n * @param {array} columnLayout The effective column layout, f.e [67%, 33%, 0]\n * @param {boolean} startColumnVisible Indicates if the start column is currently visible\n * @param {boolean} midColumnVisible Indicates if the middle column is currently visible\n * @param {boolean} endColumnVisible Indicates if the end column is currently visible\n * @param {boolean} separatorsUsed Indicates if the layout was changed by dragging the column separators\n * @param {boolean} resized Indicates if the layout was changed by resizing the entire component\n * @public\n */\n@event<FlexibleColumnLayoutLayoutChangeEventDetail>(\"layout-change\", {\n\tdetail: {\n\t\t/**\n\t\t* @public\n\t\t*/\n\t\tlayout: { type: FCLLayout },\n\t\t/**\n\t\t* @public\n\t\t*/\n\t\tcolumnLayout: { type: Array },\n\t\t/**\n\t\t* @public\n\t\t*/\n\t\tstartColumnVisible: { type: Boolean },\n\t\t/**\n\t\t* @public\n\t\t*/\n\t\tmidColumnVisible: { type: Boolean },\n\t\t/**\n\t\t* @public\n\t\t*/\n\t\tendColumnVisible: { type: Boolean },\n\t\t/**\n\t\t * @public\n\t\t*/\n\t\tseparatorsUsed: { type: Boolean },\n\t\t/**\n\t\t * @public\n\t\t*/\n\t\tresized: { type: Boolean },\n\t},\n})\nclass FlexibleColumnLayout extends UI5Element {\n\t/**\n\t* Defines the columns layout and their proportion.\n\t*\n\t* **Note:** The layout also depends on the screen size - one column for screens smaller than 599px,\n\t* two columns between 599px and 1023px and three columns for sizes bigger than 1023px.\n\t*\n\t* **For example:** layout=`TwoColumnsStartExpanded` means the layout will display up to two columns\n\t* in 67%/33% proportion.\n\t* @default \"OneColumn\"\n\t* @public\n\t*/\n\t@property()\n\tlayout: `${FCLLayout}` = \"OneColumn\";\n\n\t/**\n\t* Specifies if the user is allowed to change the columns layout by dragging the separator between the columns.\n\t* @default false\n\t* @public\n\t* @since 2.0.0\n\t*/\n\t@property({ type: Boolean })\n\tdisableResizing = false;\n\n\t/**\n\t* Defines additional accessibility attributes on different areas of the component.\n\t*\n\t* The accessibilityAttributes object has the following fields,\n\t* where each field is an object supporting one or more accessibility attributes:\n\t*\n\t*  - **startColumn**: `startColumn.role` and `startColumn.name`.\n\t*  - **midColumn**: `midColumn.role` and `midColumn.name`.\n\t*  - **endColumn**: `endColumn.role` and `endColumn.name`.\n\t*  - **startSeparator**: `startSeparator.role` and `startSeparator.name`.\n\t*  - **endSeparator**: `endSeparator.role` and `endSeparator.name`.\n\t*\n\t* The accessibility attributes support the following values:\n\t*\n\t* - **role**: Defines the accessible ARIA landmark role of the area.\n\t* Accepts the following values: `none`, `complementary`, `contentinfo`, `main` or `region`.\n\t*\n\t* - **name**: Defines the accessible ARIA name of the area.\n\t* Accepts any string.\n\t*\n\t* @default {}\n\t* @public\n\t* @since 2.0.0\n\t*/\n\t@property({ type: Object })\n\taccessibilityAttributes: FCLAccessibilityAttributes = {};\n\n\t/**\n\t* Defines the component width in px.\n\t* @default 0\n\t* @private\n\t*/\n\t@property({ type: Number })\n\t_width = 0;\n\n\t/**\n\t* Defines the effective columns layout,\n\t* based on both the `layout` property and the screen size.\n\t* Example: [67%, 33%, 0], [25%, 50%, 25%], etc.\n\t* @default undefined\n\t* @private\n\t*/\n\t@property({ type: Array })\n\t_columnLayout?: FlexibleColumnLayoutColumnLayout;\n\n\t/**\n\t* Defines the visible columns count - 1, 2 or 3.\n\t* @default 1\n\t* @private\n\t*/\n\t@property({ type: Number })\n\t_visibleColumns = 1;\n\n\t/**\n\t* Allows the user to replace the whole layouts configuration\n\t* @private\n\t*/\n\t@property({ type: Object })\n\t_layoutsConfiguration?: LayoutConfiguration;\n\n\t/**\n\t* Defines the content in the start column.\n\t* @public\n\t*/\n\t@slot()\n\tstartColumn!: Array<HTMLElement>;\n\n\t/**\n\t* Defines the content in the middle column.\n\t* @public\n\t*/\n\t@slot()\n\tmidColumn!: Array<HTMLElement>;\n\n\t/**\n\t* Defines the content in the end column.\n\t* @public\n\t*/\n\t@slot()\n\tendColumn!: Array<HTMLElement>;\n\n\tinitialRendering: boolean;\n\t_handleResize: () => void;\n\t_onSeparatorMove: (e: TouchEvent | MouseEvent) => void;\n\t_onSeparatorMoveEnd: (e: TouchEvent | MouseEvent) => void;\n\tstatic i18nBundle: I18nBundle;\n\t_prevLayout: `${FCLLayout}` | null;\n\t_userDefinedColumnLayouts: UserDefinedColumnLayouts = {\n\t\ttablet: {},\n\t\tdesktop: {},\n\t};\n\t_ontouchstart: PassiveEventListenerObject;\n\tseparatorMovementSession?: SeparatorMovementSession | null;\n\n\tconstructor() {\n\t\tsuper();\n\n\t\tthis._prevLayout = null;\n\t\tthis.initialRendering = true;\n\t\tthis._handleResize = this.handleResize.bind(this);\n\t\tthis._onSeparatorMove = this.onSeparatorMove.bind(this);\n\t\tthis._onSeparatorMoveEnd = this.onSeparatorMoveEnd.bind(this);\n\n\t\tconst handleTouchStartEvent = (e: TouchEvent) => {\n\t\t\tthis.onSeparatorPress(e);\n\t\t};\n\n\t\tthis._ontouchstart = {\n\t\t\thandleEvent: handleTouchStartEvent,\n\t\t\tpassive: true,\n\t\t};\n\t}\n\n\tstatic async onDefine() {\n\t\tFlexibleColumnLayout.i18nBundle = await getI18nBundle(\"@ui5/webcomponents-fiori\");\n\t}\n\n\tstatic get ANIMATION_DURATION() {\n\t\treturn getAnimationMode() !== AnimationMode.None ? 560 : 0;\n\t}\n\n\tonEnterDOM() {\n\t\tResizeHandler.register(this, this._handleResize.bind(this));\n\t}\n\n\tonExitDOM() {\n\t\tResizeHandler.deregister(this, this._handleResize);\n\t}\n\n\tonAfterRendering() {\n\t\tif (this.initialRendering) {\n\t\t\tthis.handleInitialRendering();\n\t\t\treturn;\n\t\t}\n\n\t\tthis.syncLayout();\n\t}\n\n\thandleInitialRendering() {\n\t\tthis._prevLayout = this.layout;\n\t\tthis.updateLayout();\n\t\tthis.initialRendering = false;\n\t}\n\n\thandleResize() {\n\t\tif (this.initialRendering) {\n\t\t\treturn;\n\t\t}\n\n\t\t// store the previous layout\n\t\tconst prevLayoutHash = this.columnLayout!.join();\n\n\t\t// update the column layout, based on the current width\n\t\tthis.updateLayout();\n\n\t\t// fire layout-change if the column layout changed\n\t\tif (prevLayoutHash !== this.columnLayout!.join()) {\n\t\t\tthis.fireLayoutChange(false, true);\n\t\t}\n\t}\n\n\tupdateLayout() {\n\t\tthis._width = this.widthDOM;\n\t\tthis._columnLayout = this.nextColumnLayout(this.effectiveLayout);\n\t\tthis._visibleColumns = this.calcVisibleColumns(this._columnLayout);\n\t\tthis.toggleColumns();\n\t}\n\n\tsyncLayout() {\n\t\tif (this._prevLayout !== this.layout) {\n\t\t\tthis.updateLayout();\n\t\t\tthis._prevLayout = this.layout;\n\t\t}\n\t}\n\n\ttoggleColumns() {\n\t\tthis.toggleColumn(\"start\");\n\t\tthis.toggleColumn(\"mid\");\n\t\tthis.toggleColumn(\"end\");\n\t}\n\n\ttoggleColumn(column: string) {\n\t\tlet columnWidth;\n\t\tlet columnDOM;\n\n\t\tif (column === \"start\") {\n\t\t\tcolumnWidth = this.startColumnWidth;\n\t\t\tcolumnDOM = this.startColumnDOM;\n\t\t} else if (column === \"mid\") {\n\t\t\tcolumnWidth = this.midColumnWidth;\n\t\t\tcolumnDOM = this.midColumnDOM;\n\t\t} else {\n\t\t\tcolumnWidth = this.endColumnWidth;\n\t\t\tcolumnDOM = this.endColumnDOM;\n\t\t}\n\n\t\tconst currentlyHidden = this._isColumnHidden(columnWidth);\n\t\tconst previouslyHidden = this._isColumnHidden(columnDOM.style.width);\n\n\t\t// no change\n\t\tif (currentlyHidden && previouslyHidden) {\n\t\t\treturn;\n\t\t}\n\n\t\t// column resizing: from 33% to 67%, from 25% to 50%, etc.\n\t\tif (!currentlyHidden && !previouslyHidden) {\n\t\t\tcolumnDOM.style.width = typeof columnWidth === \"number\" ? `${columnWidth}px` : columnWidth;\n\t\t\treturn;\n\t\t}\n\n\t\t// hide column: 33% to 0, 25% to 0, etc .\n\t\tif (currentlyHidden) {\n\t\t\t// animate the width\n\t\t\tcolumnDOM.style.width = typeof columnWidth === \"number\" ? `${columnWidth}px` : columnWidth;\n\n\t\t\t// hide column with delay to allow the animation runs entirely\n\t\t\tcolumnDOM.addEventListener(\"transitionend\", this.columnResizeHandler);\n\n\t\t\treturn;\n\t\t}\n\n\t\t// show column: from 0 to 33%, from 0 to 25%, etc.\n\t\tif (previouslyHidden) {\n\t\t\tcolumnDOM.removeEventListener(\"transitionend\", this.columnResizeHandler);\n\t\t\tcolumnDOM.classList.remove(\"ui5-fcl-column--hidden\");\n\t\t\tcolumnDOM.style.width = typeof columnWidth === \"number\" ? `${columnWidth}px` : columnWidth;\n\t\t}\n\t}\n\n\tcolumnResizeHandler = (e: Event) => {\n\t\t(e.target as HTMLElement).classList.add(\"ui5-fcl-column--hidden\");\n\t}\n\n\tnextColumnLayout(layout: `${FCLLayout}`) {\n\t\tlet userDefinedLayout;\n\t\tif (this.media !== MEDIA.PHONE) {\n\t\t\tuserDefinedLayout = this._userDefinedColumnLayouts[this.media][layout];\n\t\t}\n\t\treturn userDefinedLayout || this._effectiveLayoutsByMedia[this.media][layout].layout;\n\t}\n\n\tcalcVisibleColumns(colLayout: FlexibleColumnLayoutColumnLayout) {\n\t\treturn colLayout.filter(colWidth => !this._isColumnHidden(colWidth)).length;\n\t}\n\n\tfireLayoutChange(separatorUsed: boolean, resized: boolean) {\n\t\tthis.fireEvent<FlexibleColumnLayoutLayoutChangeEventDetail>(\"layout-change\", {\n\t\t\tlayout: this.layout,\n\t\t\tcolumnLayout: this._columnLayout!,\n\t\t\tstartColumnVisible: this.startColumnVisible,\n\t\t\tmidColumnVisible: this.midColumnVisible,\n\t\t\tendColumnVisible: this.endColumnVisible,\n\t\t\tseparatorsUsed: separatorUsed,\n\t\t\tresized,\n\t\t});\n\t}\n\n\tonSeparatorPress(e: TouchEvent | MouseEvent) {\n\t\tconst pressedSeparator = (e.target as HTMLElement).closest(\".ui5-fcl-separator\") as HTMLElement;\n\t\tif (pressedSeparator.classList.contains(\"ui5-fcl-separator-start\") && !this.showStartSeparatorGrip) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst isTouch = e instanceof TouchEvent,\n\t\t\tcursorPositionX = this.getPageXValueFromEvent(e);\n\n\t\tthis.separatorMovementSession = this.initSeparatorMovementSession(pressedSeparator, cursorPositionX, isTouch);\n\t}\n\n\tonSeparatorMove(e: TouchEvent | MouseEvent) {\n\t\te.preventDefault(); // prevent text selection etc. while dragging\n\n\t\tif (!this.separatorMovementSession) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst latestCursorX = this.getPageXValueFromEvent(e),\n\t\t\tmovementDelta = latestCursorX - this.separatorMovementSession.cursorPositionX;\n\n\t\tif (!movementDelta) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst movedSeparator = this.separatorMovementSession.separator,\n\t\t\tlatestSeparatorX = movedSeparator.getBoundingClientRect().x,\n\t\t\tisForwardMove = movementDelta > 0; // is start-to-end direction\n\n\t\t// if the dragged separator was re-rendered away from the cursor\n\t\t// due to change of layout during drag\n\t\t// => check if the cursor lags-behind the separator\n\t\t// and skip resizing untill the cursor catches-up with the separator\n\t\tif (this.isSeparatorAheadOfCursor(latestCursorX, latestSeparatorX, isForwardMove)) {\n\t\t\tthis.separatorMovementSession.cursorPositionX = latestCursorX;\n\t\t\treturn;\n\t\t}\n\n\t\tconst layoutBeforeMove = this.separatorMovementSession.tmpFCLLayout;\n\t\t// synchronously move the separator in DOM => resizes the columns accordingly\n\t\tconst layoutAfterMove = this.moveSeparator(movedSeparator, movementDelta, layoutBeforeMove);\n\n\t\tthis.separatorMovementSession.cursorPositionX = latestCursorX;\n\t\tthis.separatorMovementSession.tmpFCLLayout = layoutAfterMove;\n\t}\n\n\tprivate onSeparatorMoveEnd() {\n\t\tif (!this.separatorMovementSession) {\n\t\t\treturn;\n\t\t}\n\t\tconst newLayout = this.separatorMovementSession.tmpFCLLayout;\n\t\tconst newColumnLayout = this._columnLayout!;\n\n\t\tthis.saveUserDefinedColumnLayout(newLayout, newColumnLayout);\n\t\tthis.exitSeparatorMovementSession();\n\t}\n\n\tinitSeparatorMovementSession(separator: HTMLElement, cursorPositionX: number, isTouch: boolean) {\n\t\tthis.attachMoveListeners(isTouch);\n\t\tthis.toggleSideAnimations(separator, false); // toggle animations for side colmns\n\n\t\treturn {\n\t\t\tseparator,\n\t\t\tcursorPositionX,\n\t\t\ttmpFCLLayout: this.layout as FCLLayout,\n\t\t};\n\t}\n\n\texitSeparatorMovementSession() {\n\t\tconst movedSeparator = this.separatorMovementSession!.separator;\n\t\tconst hasAnimation = getAnimationMode() !== AnimationMode.None;\n\n\t\tthis.detachMoveListeners();\n\t\tthis.toggleSideAnimations(movedSeparator, hasAnimation); // restore animations for side columns\n\n\t\tmovedSeparator.focus();\n\t\tthis.separatorMovementSession = null;\n\t}\n\n\tsaveUserDefinedColumnLayout(newLayout: FCLLayout, newColumnLayout: FlexibleColumnLayoutColumnLayout) {\n\t\tconst media = this.media as MEDIA.TABLET | MEDIA.DESKTOP;\n\n\t\tthis._userDefinedColumnLayouts[media][newLayout] = newColumnLayout;\n\t\tif (this.layout !== newLayout) {\n\t\t\tthis.layout = newLayout;\n\t\t\tthis.fireLayoutChange(true, false);\n\t\t}\n\t}\n\n\tprivate isSeparatorAheadOfCursor(cursorX: number, separatorX: number, isForwardMove: boolean) {\n\t\tif (isForwardMove) {\n\t\t\treturn separatorX > cursorX;\n\t\t}\n\t\treturn separatorX < cursorX;\n\t}\n\n\tcalculateNewColumnWidth(columnToResize: typeof COLUMN.START | typeof COLUMN.END, widthDelta: number) {\n\t\tconst columnWidths: Array<number> = this._columnLayout!.map(x => this.convertColumnWidthToPixels(x)),\n\t\t\tadjacentColumnToResize = COLUMN.MID, // column to compensate the resize of the given column\n\t\t\tcolumnNewWidth = columnWidths[columnToResize] + widthDelta,\n\t\t\tadjacentColumnNewWidth = columnWidths[adjacentColumnToResize] - widthDelta;\n\n\t\tif (columnNewWidth < COLUMN_MIN_WIDTH) {\n\t\t\t// user is trying to shrink a column below its min-width\n\t\t\t// or to reveal a hidden column\n\t\t\treturn COLUMN_MIN_WIDTH;\n\t\t}\n\n\t\tif (adjacentColumnNewWidth < COLUMN_MIN_WIDTH) {\n\t\t\tconst correction = COLUMN_MIN_WIDTH - adjacentColumnNewWidth;\n\t\t\t// constrain the new width to preserve the min-width of the adjacent column\n\t\t\treturn columnNewWidth - correction;\n\t\t}\n\n\t\treturn columnNewWidth;\n\t}\n\n\tmoveSeparator(separator: HTMLElement, offsetX: number, fclLayoutBeforeMove: FCLLayout) {\n\t\tconst isStartSeparator = separator === this.startSeparatorDOM,\n\t\t\tisRTL = this.effectiveDir === \"rtl\";\n\t\tlet selectedColumnToResize,\n\t\t\tcolumnWidthDelta;\n\n\t\tif (isRTL) {\n\t\t\toffsetX = -offsetX;\n\t\t}\n\n\t\tif (isStartSeparator) {\n\t\t\tselectedColumnToResize = COLUMN.START;\n\t\t\t// move in direction start-to-end expands start column\n\t\t\tcolumnWidthDelta = offsetX;\n\t\t} else {\n\t\t\tselectedColumnToResize = COLUMN.END;\n\t\t\t// move in direction start-to-end shrinks end column\n\t\t\tcolumnWidthDelta = -offsetX;\n\t\t}\n\n\t\tconst isStartToEndDirection = offsetX > 0,\n\t\t\tnewColumnWidth = this.calculateNewColumnWidth(selectedColumnToResize, columnWidthDelta),\n\t\t\tnewColumnLayout = this.adjustColumnLayout(selectedColumnToResize, newColumnWidth, true)!,\n\t\t\tnewFCLLayout = this.getNextLayoutOnSeparatorMovement(separator, isStartToEndDirection, fclLayoutBeforeMove, newColumnLayout) as FCLLayout;\n\n\t\tif (fclLayoutBeforeMove !== newFCLLayout) {\n\t\t\tthis._columnLayout = this.nextColumnLayout(newFCLLayout);\n\t\t\tthis._visibleColumns = this.calcVisibleColumns(this._columnLayout);\n\t\t}\n\n\t\t// apply the requested resize on <code>this._columnLayout</code>\n\t\tthis.adjustColumnLayout(selectedColumnToResize, newColumnWidth);\n\n\t\tthis.toggleColumns();\n\n\t\treturn newFCLLayout;\n\t}\n\n\tadjustColumnLayout(columnToResize: typeof COLUMN.START | typeof COLUMN.END, newSize: number, createNewArray = false) {\n\t\tif (!this._columnLayout) {\n\t\t\treturn;\n\t\t}\n\t\tconst columnLayoutInPx = this._columnLayout.map(x => this.convertColumnWidthToPixels(x));\n\n\t\t// apply the new size\n\t\tcolumnLayoutInPx[columnToResize] = newSize;\n\t\tcolumnLayoutInPx[COLUMN.MID] = this._availableWidthForColumns\n\t\t\t- columnLayoutInPx[COLUMN.START]\n\t\t\t- columnLayoutInPx[COLUMN.END];\n\n\t\tconst columnLayoutToAdjust = createNewArray ? [] : this._columnLayout;\n\n\t\tcolumnLayoutInPx.forEach((x, i) => {\n\t\t\tcolumnLayoutToAdjust[i] = this.convertToRelativeColumnWidth(columnLayoutInPx[i]);\n\t\t});\n\n\t\treturn columnLayoutToAdjust;\n\t}\n\n\tasync _onkeydown(e: KeyboardEvent) {\n\t\tconst stepSize = 2,\n\t\t\tbigStepSize = this._width,\n\t\t\tisRTL = this.effectiveDir === \"rtl\";\n\t\tlet step = 0;\n\t\tif (isLeft(e)) {\n\t\t\tstep = -stepSize * 10;\n\t\t} else if (isRight(e)) {\n\t\t\tstep = stepSize * 10;\n\t\t} else if (isLeftShift(e)) {\n\t\t\tstep = -stepSize;\n\t\t} else if (isRightShift(e)) {\n\t\t\tstep = stepSize;\n\t\t} else if (isHome(e)) {\n\t\t\te.preventDefault();\n\t\t\tstep = isRTL ? bigStepSize : -bigStepSize;\n\t\t} else if (isEnd(e)) {\n\t\t\te.preventDefault();\n\t\t\tstep = isRTL ? -bigStepSize : bigStepSize;\n\t\t}\n\n\t\tif (!step) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst separator = e.target as HTMLElement;\n\t\tif (!this.separatorMovementSession) {\n\t\t\tthis.separatorMovementSession = this.initSeparatorMovementSession(separator, 0, false);\n\t\t}\n\n\t\tconst layoutBeforeMove = this.separatorMovementSession.tmpFCLLayout;\n\t\tconst layoutAfterMove = this.moveSeparator(separator, step, layoutBeforeMove);\n\n\t\tthis.separatorMovementSession.tmpFCLLayout = layoutAfterMove;\n\n\t\tawait renderFinished();\n\t\tseparator.focus();\n\t}\n\n\t_onkeyup() {\n\t\tif (this.separatorMovementSession) {\n\t\t\tthis.onSeparatorMoveEnd();\n\t\t}\n\t}\n\n\tprivate attachMoveListeners(isTouch: boolean) {\n\t\tconst domRef = this.getDomRef();\n\t\tif (!domRef) {\n\t\t\treturn;\n\t\t}\n\t\tif (isTouch && supportsTouch()) {\n\t\t\tdomRef.addEventListener(\"touchmove\", this._onSeparatorMove);\n\t\t\tdomRef.addEventListener(\"touchend\", this._onSeparatorMoveEnd);\n\t\t} else {\n\t\t\tdomRef.addEventListener(\"mousemove\", this._onSeparatorMove);\n\t\t\tdomRef.addEventListener(\"mouseup\", this._onSeparatorMoveEnd);\n\t\t}\n\t}\n\n\tprivate detachMoveListeners() {\n\t\tconst domRef = this.getDomRef();\n\t\tif (!domRef) {\n\t\t\treturn;\n\t\t}\n\t\tdomRef.removeEventListener(\"mouseup\", this._onSeparatorMoveEnd);\n\t\tdomRef.removeEventListener(\"touchend\", this._onSeparatorMoveEnd);\n\t\t// Only one of the following was attached, but it's ok to remove both as there is no error\n\t\tdomRef.removeEventListener(\"mousemove\", this._onSeparatorMove);\n\t\tdomRef.removeEventListener(\"touchmove\", this._onSeparatorMove);\n\t}\n\n\tprivate toggleSideAnimations(separator: HTMLElement, shouldAnimate: boolean) {\n\t\tconst adjacentColumns = [\n\t\t\tseparator.previousElementSibling,\n\t\t\tseparator.nextElementSibling,\n\t\t];\n\n\t\tadjacentColumns.forEach(column => column!.classList.toggle(\"ui5-fcl-column-animation\", shouldAnimate));\n\t}\n\n\tprivate getPageXValueFromEvent(e: TouchEvent | MouseEvent): number {\n\t\tif (supportsTouch() && e instanceof TouchEvent) {\n\t\t\tif (e.changedTouches && e.changedTouches.length > 0) {\n\t\t\t\treturn e.changedTouches[0].pageX;\n\t\t\t}\n\t\t\treturn 0;\n\t\t}\n\n\t\treturn (e as MouseEvent).pageX; // MouseEvent\n\t}\n\n\tconvertColumnWidthToPixels(width: string | number) {\n\t\tif (typeof width === \"number\") {\n\t\t\treturn width;\n\t\t}\n\t\tconst parsedValue = parseFloat(width),\n\t\t\ttotalWidth = this._availableWidthForColumns;\n\n\t\tif (width.endsWith(\"%\")) {\n\t\t\treturn (totalWidth / 100) * parsedValue;\n\t\t}\n\t\treturn parsedValue;\n\t}\n\n\tconvertToRelativeColumnWidth(pxWidth: string | number) {\n\t\tif (typeof pxWidth === \"string\") {\n\t\t\treturn pxWidth;\n\t\t}\n\t\tif (pxWidth === 0) {\n\t\t\treturn \"0px\";\n\t\t}\n\t\treturn `${(pxWidth / this._availableWidthForColumns) * 100}%`;\n\t}\n\n\tgetNextLayoutOnSeparatorMovement(separator: HTMLElement, isStartToEndDirection: boolean, fclLayoutBeforeMove: FCLLayout, columnLayoutAfterMove: FlexibleColumnLayoutColumnLayout) {\n\t\tconst isStartSeparator = separator === this.startSeparatorDOM,\n\t\t\tseparatorName = isStartSeparator ? \"start\" : \"end\",\n\t\t\tmoved = (options: {separator: \"start\" | \"end\", from: FCLLayout, forward: boolean}) => {\n\t\t\t\treturn options.from === fclLayoutBeforeMove\n\t\t\t\t&& options.separator === separatorName\n\t\t\t\t&& options.forward === isStartToEndDirection;\n\t\t\t},\n\t\t\tnewColumnLayout = columnLayoutAfterMove.map(x => this.convertColumnWidthToPixels(x)),\n\t\t\tnewColumnWidths = {\n\t\t\t\tstart: newColumnLayout[0],\n\t\t\t\tmid: newColumnLayout[1],\n\t\t\t\tend: newColumnLayout[2],\n\t\t\t},\n\t\t\tstartColumnPxWidth = newColumnWidths.start,\n\t\t\tstartColumnPercentWidth = (startColumnPxWidth / this.widthDOM) * 100,\n\t\t\tisTablet = this.media === MEDIA.TABLET;\n\n\t\tif (moved({\n\t\t\tseparator: \"start\",\n\t\t\tfrom: FCLLayout.TwoColumnsMidExpanded,\n\t\t\tforward: true,\n\t\t}) && (newColumnWidths.start >= newColumnWidths.mid)) {\n\t\t\treturn FCLLayout.TwoColumnsStartExpanded;\n\t\t}\n\n\t\tif (moved({\n\t\t\tseparator: \"start\",\n\t\t\tfrom: FCLLayout.TwoColumnsStartExpanded,\n\t\t\tforward: false,\n\t\t}) && (newColumnWidths.start < newColumnWidths.mid)) {\n\t\t\treturn FCLLayout.TwoColumnsMidExpanded;\n\t\t}\n\n\t\tif (moved({\n\t\t\tseparator: \"start\",\n\t\t\tfrom: FCLLayout.ThreeColumnsMidExpanded,\n\t\t\tforward: true,\n\t\t}) && startColumnPercentWidth >= 33) {\n\t\t\treturn FCLLayout.ThreeColumnsMidExpandedEndHidden;\n\t\t}\n\n\t\tif (moved({\n\t\t\tseparator: \"start\",\n\t\t\tfrom: FCLLayout.ThreeColumnsMidExpandedEndHidden,\n\t\t\tforward: false,\n\t\t}) && !isTablet && startColumnPercentWidth < 33) {\n\t\t\treturn FCLLayout.ThreeColumnsMidExpanded;\n\t\t}\n\n\t\tif (moved({\n\t\t\tseparator: \"end\",\n\t\t\tfrom: FCLLayout.ThreeColumnsMidExpandedEndHidden,\n\t\t\tforward: false,\n\t\t\t// ceil before comparing to avoid floating point precision issues\n\t\t}) && ((Math.ceil(newColumnWidths.end) >= COLUMN_MIN_WIDTH))) {\n\t\t\treturn FCLLayout.ThreeColumnsMidExpanded;\n\t\t}\n\n\t\tif (moved({\n\t\t\tseparator: \"end\",\n\t\t\tfrom: FCLLayout.ThreeColumnsMidExpanded,\n\t\t\tforward: false,\n\t\t}) && newColumnWidths.mid < newColumnWidths.end) {\n\t\t\treturn FCLLayout.ThreeColumnsEndExpanded;\n\t\t}\n\n\t\tif (moved({\n\t\t\tseparator: \"end\",\n\t\t\tfrom: FCLLayout.ThreeColumnsEndExpanded,\n\t\t\tforward: true,\n\t\t}) && newColumnWidths.mid >= newColumnWidths.end) {\n\t\t\treturn FCLLayout.ThreeColumnsMidExpanded;\n\t\t}\n\n\t\tif (moved({\n\t\t\tseparator: \"start\",\n\t\t\tfrom: FCLLayout.ThreeColumnsMidExpandedEndHidden,\n\t\t\tforward: true,\n\t\t}) && newColumnWidths.start >= newColumnWidths.mid) {\n\t\t\treturn FCLLayout.ThreeColumnsStartExpandedEndHidden;\n\t\t}\n\n\t\tif (moved({\n\t\t\tseparator: \"start\",\n\t\t\tfrom: FCLLayout.ThreeColumnsStartExpandedEndHidden,\n\t\t\tforward: false,\n\t\t}) && newColumnWidths.start < newColumnWidths.mid) {\n\t\t\treturn FCLLayout.ThreeColumnsMidExpandedEndHidden;\n\t\t}\n\n\t\tif (moved({\n\t\t\tseparator: \"start\",\n\t\t\tfrom: FCLLayout.ThreeColumnsMidExpanded,\n\t\t\tforward: true,\n\t\t\t// ceil before comparing to avoid floating point precision issues\n\t\t}) && isTablet && (Math.ceil(startColumnPxWidth) >= COLUMN_MIN_WIDTH)) {\n\t\t\treturn FCLLayout.ThreeColumnsMidExpandedEndHidden;\n\t\t}\n\n\t\tif (moved({\n\t\t\tseparator: \"end\",\n\t\t\tfrom: FCLLayout.ThreeColumnsMidExpandedEndHidden,\n\t\t\tforward: false,\n\t\t\t// ceil before comparing to avoid floating point precision issues\n\t\t}) && isTablet && (Math.ceil(newColumnWidths.end) >= COLUMN_MIN_WIDTH)) {\n\t\t\treturn FCLLayout.ThreeColumnsMidExpanded;\n\t\t}\n\n\t\treturn fclLayoutBeforeMove; // no layout change\n\t}\n\n\tget _availableWidthForColumns() {\n\t\tlet width = this._width;\n\t\tif (this.showStartSeparator) {\n\t\t\twidth -= this.startSeparatorDOM.offsetWidth;\n\t\t}\n\t\tif (this.showEndSeparator) {\n\t\t\twidth -= this.endSeparatorDOM.offsetWidth;\n\t\t}\n\t\treturn width;\n\t}\n\n\t/**\n\t * Checks if a column is hidden based on its width.\n\t */\n\tprivate _isColumnHidden(columnWidth: number | string): boolean {\n\t\treturn columnWidth === 0 || columnWidth === \"0px\";\n\t}\n\n\t/**\n\t* Returns the current column layout, based on both the `layout` property and the screen size.\n\t*\n\t* **For example:** [\"67%\", \"33%\", 0], [\"100%\", 0, 0], [\"25%\", \"50%\", \"25%\"], etc,\n\t* where the numbers represents the width of the start, middle and end columns.\n\t* @default undefined\n\t* @public\n\t*/\n\tget columnLayout(): FlexibleColumnLayoutColumnLayout | undefined {\n\t\treturn this._columnLayout;\n\t}\n\n\t/**\n\t* Returns if the `start` column is visible.\n\t* @default true\n\t* @public\n\t*/\n\tget startColumnVisible(): boolean {\n\t\tif (this._columnLayout) {\n\t\t\treturn !this._isColumnHidden(this._columnLayout[0]);\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t/**\n\t* Returns if the `middle` column is visible.\n\t* @default false\n\t* @public\n\t*/\n\tget midColumnVisible(): boolean {\n\t\tif (this._columnLayout) {\n\t\t\treturn !this._isColumnHidden(this._columnLayout[1]);\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t/**\n\t* Returns if the `end` column is visible.\n\t* @default false\n\t* @public\n\t*/\n\tget endColumnVisible(): boolean {\n\t\tif (this._columnLayout) {\n\t\t\treturn !this._isColumnHidden(this._columnLayout[2]);\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t/**\n\t* Returns the number of currently visible columns.\n\t* @default 1\n\t* @public\n\t*/\n\tget visibleColumns(): number {\n\t\treturn this._visibleColumns;\n\t}\n\n\tget classes() {\n\t\tconst hasAnimation = getAnimationMode() !== AnimationMode.None;\n\n\t\treturn {\n\t\t\troot: {\n\t\t\t\t\"ui5-fcl-root\": true,\n\t\t\t},\n\t\t\tcolumns: {\n\t\t\t\tstart: {\n\t\t\t\t\t\"ui5-fcl-column\": true,\n\t\t\t\t\t\"ui5-fcl-column-animation\": hasAnimation,\n\t\t\t\t\t\"ui5-fcl-column--start\": true,\n\t\t\t\t},\n\t\t\t\tmiddle: {\n\t\t\t\t\t\"ui5-fcl-column\": true,\n\t\t\t\t\t\"ui5-fcl-column-animation\": hasAnimation,\n\t\t\t\t\t\"ui5-fcl-column--middle\": true,\n\t\t\t\t},\n\t\t\t\tend: {\n\t\t\t\t\t\"ui5-fcl-column\": true,\n\t\t\t\t\t\"ui5-fcl-column-animation\": hasAnimation,\n\t\t\t\t\t\"ui5-fcl-column--end\": true,\n\t\t\t\t},\n\t\t\t},\n\t\t};\n\t}\n\n\tget styles() {\n\t\treturn {\n\t\t\tseparator: {\n\t\t\t\tstart: {\n\t\t\t\t\tdisplay: this.showStartSeparator ? \"flex\" : \"none\",\n\t\t\t\t},\n\t\t\t\tend: {\n\t\t\t\t\tdisplay: this.showEndSeparator ? \"flex\" : \"none\",\n\t\t\t\t},\n\t\t\t},\n\t\t\tgrip: {\n\t\t\t\tstart: {\n\t\t\t\t\tdisplay: this.showStartSeparatorGrip ? \"inline-block\" : \"none\",\n\t\t\t\t},\n\t\t\t\tend: {\n\t\t\t\t\tdisplay: this.showEndSeparatorGrip ? \"inline-block\" : \"none\",\n\t\t\t\t},\n\t\t\t},\n\t\t};\n\t}\n\n\tget startColumnWidth() {\n\t\treturn this._columnLayout ? this._columnLayout[0] : \"100%\";\n\t}\n\n\tget midColumnWidth() {\n\t\treturn this._columnLayout ? this._columnLayout[1] : \"0px\";\n\t}\n\n\tget endColumnWidth() {\n\t\treturn this._columnLayout ? this._columnLayout[2] : \"0px\";\n\t}\n\n\tget showStartSeparator() {\n\t\treturn this.effectiveSeparatorsInfo[0].visible;\n\t}\n\n\tget showEndSeparator() {\n\t\treturn this.effectiveSeparatorsInfo[1].visible;\n\t}\n\n\tget showStartSeparatorGrip() {\n\t\treturn this.disableResizing ? false : this.startSeparatorGripVisibility;\n\t}\n\n\tget showEndSeparatorGrip() {\n\t\treturn this.disableResizing ? false : this.endSeparatorGripVisibility;\n\t}\n\n\tget startSeparatorGripVisibility() {\n\t\treturn this.effectiveSeparatorsInfo[0].gripVisible;\n\t}\n\n\tget endSeparatorGripVisibility() {\n\t\treturn this.effectiveSeparatorsInfo[1].gripVisible;\n\t}\n\n\tget effectiveSeparatorsInfo() {\n\t\treturn this._effectiveLayoutsByMedia[this.media][this.effectiveLayout].separators;\n\t}\n\n\tget effectiveLayout() {\n\t\treturn this.separatorMovementSession?.tmpFCLLayout || this.layout;\n\t}\n\n\tget startSeparatorDOM() {\n\t\treturn this.shadowRoot!.querySelector<HTMLElement>(\".ui5-fcl-separator-start\")!;\n\t}\n\n\tget endSeparatorDOM() {\n\t\treturn this.shadowRoot!.querySelector<HTMLElement>(\".ui5-fcl-separator-end\")!;\n\t}\n\n\tget startSeparatorTabIndex() {\n\t\tif (this.showStartSeparatorGrip) {\n\t\t\treturn 0;\n\t\t}\n\t}\n\n\tget endSeparatorTabIndex() {\n\t\tif (this.showEndSeparatorGrip) {\n\t\t\treturn 0;\n\t\t}\n\t\treturn -1;\n\t}\n\n\tget media() {\n\t\tif (this._width <= BREAKPOINTS.PHONE) {\n\t\t\treturn MEDIA.PHONE;\n\t\t}\n\n\t\tif (this._width <= BREAKPOINTS.TABLET) {\n\t\t\treturn MEDIA.TABLET;\n\t\t}\n\n\t\treturn MEDIA.DESKTOP;\n\t}\n\n\tget widthDOM() {\n\t\treturn this.getBoundingClientRect().width;\n\t}\n\n\tget startColumnDOM() {\n\t\treturn this.shadowRoot!.querySelector<HTMLElement>(\".ui5-fcl-column--start\")!;\n\t}\n\n\tget midColumnDOM() {\n\t\treturn this.shadowRoot!.querySelector<HTMLElement>(\".ui5-fcl-column--middle\")!;\n\t}\n\n\tget endColumnDOM() {\n\t\treturn this.shadowRoot!.querySelector<HTMLElement>(\".ui5-fcl-column--end\")!;\n\t}\n\n\tget accStartColumnText() {\n\t\treturn this.accessibilityAttributes.startColumn?.name || FlexibleColumnLayout.i18nBundle.getText(FCL_START_COLUMN_TXT);\n\t}\n\n\tget accMiddleColumnText() {\n\t\treturn this.accessibilityAttributes.midColumn?.name || FlexibleColumnLayout.i18nBundle.getText(FCL_MIDDLE_COLUMN_TXT);\n\t}\n\n\tget accEndColumnText() {\n\t\treturn this.accessibilityAttributes.endColumn?.name || FlexibleColumnLayout.i18nBundle.getText(FCL_END_COLUMN_TXT);\n\t}\n\n\tget accStartSeparatorText() {\n\t\tlet name = this.accessibilityAttributes.startSeparator?.name;\n\t\tif (!name && this.showStartSeparatorGrip) {\n\t\t\tname = FlexibleColumnLayout.i18nBundle.getText(FCL_START_SEPARATOR_TOOLTIP);\n\t\t}\n\t\treturn name;\n\t}\n\n\tget accEndSeparatorText() {\n\t\treturn this.accessibilityAttributes.endSeparator?.name || FlexibleColumnLayout.i18nBundle.getText(FCL_END_SEPARATOR_TOOLTIP);\n\t}\n\n\tget accStartColumnRole() {\n\t\tif (this.startColumnVisible) {\n\t\t\treturn this.accessibilityAttributes.startColumn?.role || \"region\";\n\t\t}\n\t\treturn undefined;\n\t}\n\n\tget accMiddleColumnRole() {\n\t\tif (this.midColumnVisible) {\n\t\t\treturn this.accessibilityAttributes.midColumn?.role || \"region\";\n\t\t}\n\t\treturn undefined;\n\t}\n\n\tget accEndColumnRole() {\n\t\tif (this.endColumnVisible) {\n\t\t\treturn this.accessibilityAttributes.endColumn?.role || \"region\";\n\t\t}\n\t\treturn undefined;\n\t}\n\n\tget accStartSeparatorRole() {\n\t\treturn this.accessibilityAttributes.startSeparator?.role || \"separator\";\n\t}\n\n\tget accEndSeparatorRole() {\n\t\treturn this.accessibilityAttributes.endSeparator?.role || \"separator\";\n\t}\n\n\tget _effectiveLayoutsByMedia() {\n\t\treturn this._layoutsConfiguration || getLayoutsByMedia();\n\t}\n\n\tget _accAttributes() {\n\t\treturn {\n\t\t\tcolumns: {\n\t\t\t\tstart: {\n\t\t\t\t\trole: this.accStartColumnRole,\n\t\t\t\t\tariaHidden: !this.startColumnVisible || undefined,\n\t\t\t\t},\n\t\t\t\tmiddle: {\n\t\t\t\t\trole: this.accMiddleColumnRole,\n\t\t\t\t\tariaHidden: !this.midColumnVisible || undefined,\n\t\t\t\t},\n\t\t\t\tend: {\n\t\t\t\t\trole: this.accEndColumnRole,\n\t\t\t\t\tariaHidden: !this.endColumnVisible || undefined,\n\t\t\t\t},\n\t\t\t},\n\t\t};\n\t}\n}\n\nFlexibleColumnLayout.define();\n\nexport default FlexibleColumnLayout;\n\nexport type {\n\tMEDIA,\n\tFlexibleColumnLayoutLayoutChangeEventDetail,\n\tFCLAccessibilityAttributes,\n\tFlexibleColumnLayoutColumnLayout,\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}