{"ast":null,"code":"import CalendarDate from \"./CalendarDate.js\";\n/**\n * Adds or subtracts a given amount of days/months/years from a date.\n * If minDate or maxDate are given, the result will be enforced within these limits\n *\n * @param date CalendarDate instance\n * @param amount how many days/months/years to add (can be a negative number)\n * @param unit what to modify: \"day\", \"month\" or \"year\"\n * @param preserveDate whether to preserve the day of the month (f.e. 15th of March + 1 month = 15th of April)\n * @param minDate minimum date to enforce\n * @param maxDate maximum date to enforce\n */\nconst modifyDateBy = function (date, amount, unit) {\n  let preserveDate = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : true;\n  let minDate = arguments.length > 4 ? arguments[4] : undefined;\n  let maxDate = arguments.length > 5 ? arguments[5] : undefined;\n  const newDate = new CalendarDate(date);\n  switch (unit) {\n    case \"day\":\n      newDate.setDate(date.getDate() + amount);\n      break;\n    case \"month\":\n      if (preserveDate) {\n        newDate.setMonth(date.getMonth() + amount);\n        const stillSameMonth = amount === -1 && newDate.getMonth() === date.getMonth(); // f.e. PageUp remained in the same month\n        const monthSkipped = amount === 1 && newDate.getMonth() - date.getMonth() > 1; // f.e. PageDown skipped a whole month\n        if (stillSameMonth || monthSkipped) {\n          // Select the last day of the month in any of these 2 scenarios\n          newDate.setDate(0);\n        }\n      } else {\n        if (amount === 1) {\n          newDate.setMonth(newDate.getMonth() + 1, 1);\n        }\n        if (amount === -1) {\n          newDate.setDate(0);\n        }\n      }\n      break;\n    case \"year\":\n      newDate.setYear(date.getYear() + amount);\n      if (newDate.getMonth() !== date.getMonth()) {\n        // f.e. 29th Feb to next/prev year\n        newDate.setDate(0); // Select the last day of the month\n      }\n      break;\n    default:\n      break;\n  }\n  if (minDate && newDate.isBefore(minDate)) {\n    return new CalendarDate(minDate);\n  }\n  if (maxDate && newDate.isAfter(maxDate)) {\n    return new CalendarDate(maxDate);\n  }\n  return newDate;\n};\nexport default modifyDateBy;","map":{"version":3,"names":["CalendarDate","modifyDateBy","date","amount","unit","preserveDate","arguments","length","undefined","minDate","maxDate","newDate","setDate","getDate","setMonth","getMonth","stillSameMonth","monthSkipped","setYear","getYear","isBefore","isAfter"],"sources":["/home/user/projects/reactproj/node_modules/@ui5/webcomponents-localization/src/dates/modifyDateBy.ts"],"sourcesContent":["import CalendarDate from \"./CalendarDate.js\";\n\n/**\n * Adds or subtracts a given amount of days/months/years from a date.\n * If minDate or maxDate are given, the result will be enforced within these limits\n *\n * @param date CalendarDate instance\n * @param amount how many days/months/years to add (can be a negative number)\n * @param unit what to modify: \"day\", \"month\" or \"year\"\n * @param preserveDate whether to preserve the day of the month (f.e. 15th of March + 1 month = 15th of April)\n * @param minDate minimum date to enforce\n * @param maxDate maximum date to enforce\n */\nconst modifyDateBy = (date: CalendarDate, amount: number, unit: string, preserveDate = true, minDate?: CalendarDate, maxDate?: CalendarDate) => {\n\tconst newDate = new CalendarDate(date);\n\n\tswitch (unit) {\n\tcase \"day\":\n\t\tnewDate.setDate(date.getDate() + amount);\n\t\tbreak;\n\tcase \"month\":\n\t\tif (preserveDate) {\n\t\t\tnewDate.setMonth(date.getMonth() + amount);\n\t\t\tconst stillSameMonth = amount === -1 && newDate.getMonth() === date.getMonth(); // f.e. PageUp remained in the same month\n\t\t\tconst monthSkipped = amount === 1 && newDate.getMonth() - date.getMonth() > 1; // f.e. PageDown skipped a whole month\n\t\t\tif (stillSameMonth || monthSkipped) { // Select the last day of the month in any of these 2 scenarios\n\t\t\t\tnewDate.setDate(0);\n\t\t\t}\n\t\t} else {\n\t\t\tif (amount === 1) {\n\t\t\t\tnewDate.setMonth(newDate.getMonth() + 1, 1);\n\t\t\t}\n\t\t\tif (amount === -1) {\n\t\t\t\tnewDate.setDate(0);\n\t\t\t}\n\t\t}\n\t\tbreak;\n\tcase \"year\":\n\t\tnewDate.setYear(date.getYear() + amount);\n\t\tif (newDate.getMonth() !== date.getMonth()) { // f.e. 29th Feb to next/prev year\n\t\t\tnewDate.setDate(0); // Select the last day of the month\n\t\t}\n\t\tbreak;\n\tdefault:\n\t\tbreak;\n\t}\n\n\tif (minDate && newDate.isBefore(minDate)) {\n\t\treturn new CalendarDate(minDate);\n\t}\n\n\tif (maxDate && newDate.isAfter(maxDate)) {\n\t\treturn new CalendarDate(maxDate);\n\t}\n\n\treturn newDate;\n};\n\nexport default modifyDateBy;\n"],"mappings":"AAAA,OAAOA,YAAY,MAAM,mBAAmB;AAE5C;;;;;;;;;;;AAWA,MAAMC,YAAY,GAAG,SAAAA,CAACC,IAAkB,EAAEC,MAAc,EAAEC,IAAY,EAAyE;EAAA,IAAvEC,YAAY,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,IAAI;EAAA,IAAEG,OAAsB,GAAAH,SAAA,CAAAC,MAAA,OAAAD,SAAA,MAAAE,SAAA;EAAA,IAAEE,OAAsB,GAAAJ,SAAA,CAAAC,MAAA,OAAAD,SAAA,MAAAE,SAAA;EAC1I,MAAMG,OAAO,GAAG,IAAIX,YAAY,CAACE,IAAI,CAAC;EAEtC,QAAQE,IAAI;IACZ,KAAK,KAAK;MACTO,OAAO,CAACC,OAAO,CAACV,IAAI,CAACW,OAAO,EAAE,GAAGV,MAAM,CAAC;MACxC;IACD,KAAK,OAAO;MACX,IAAIE,YAAY,EAAE;QACjBM,OAAO,CAACG,QAAQ,CAACZ,IAAI,CAACa,QAAQ,EAAE,GAAGZ,MAAM,CAAC;QAC1C,MAAMa,cAAc,GAAGb,MAAM,KAAK,CAAC,CAAC,IAAIQ,OAAO,CAACI,QAAQ,EAAE,KAAKb,IAAI,CAACa,QAAQ,EAAE,CAAC,CAAC;QAChF,MAAME,YAAY,GAAGd,MAAM,KAAK,CAAC,IAAIQ,OAAO,CAACI,QAAQ,EAAE,GAAGb,IAAI,CAACa,QAAQ,EAAE,GAAG,CAAC,CAAC,CAAC;QAC/E,IAAIC,cAAc,IAAIC,YAAY,EAAE;UAAE;UACrCN,OAAO,CAACC,OAAO,CAAC,CAAC,CAAC;;OAEnB,MAAM;QACN,IAAIT,MAAM,KAAK,CAAC,EAAE;UACjBQ,OAAO,CAACG,QAAQ,CAACH,OAAO,CAACI,QAAQ,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC;;QAE5C,IAAIZ,MAAM,KAAK,CAAC,CAAC,EAAE;UAClBQ,OAAO,CAACC,OAAO,CAAC,CAAC,CAAC;;;MAGpB;IACD,KAAK,MAAM;MACVD,OAAO,CAACO,OAAO,CAAChB,IAAI,CAACiB,OAAO,EAAE,GAAGhB,MAAM,CAAC;MACxC,IAAIQ,OAAO,CAACI,QAAQ,EAAE,KAAKb,IAAI,CAACa,QAAQ,EAAE,EAAE;QAAE;QAC7CJ,OAAO,CAACC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;;MAErB;IACD;MACC;;EAGD,IAAIH,OAAO,IAAIE,OAAO,CAACS,QAAQ,CAACX,OAAO,CAAC,EAAE;IACzC,OAAO,IAAIT,YAAY,CAACS,OAAO,CAAC;;EAGjC,IAAIC,OAAO,IAAIC,OAAO,CAACU,OAAO,CAACX,OAAO,CAAC,EAAE;IACxC,OAAO,IAAIV,YAAY,CAACU,OAAO,CAAC;;EAGjC,OAAOC,OAAO;AACf,CAAC;AAED,eAAeV,YAAY","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}