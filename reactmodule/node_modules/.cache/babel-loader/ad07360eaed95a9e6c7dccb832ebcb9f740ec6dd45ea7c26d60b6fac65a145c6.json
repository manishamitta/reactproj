{"ast":null,"code":"var __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n    r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n    d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar StepInput_1;\nimport UI5Element from \"@ui5/webcomponents-base/dist/UI5Element.js\";\nimport customElement from \"@ui5/webcomponents-base/dist/decorators/customElement.js\";\nimport property from \"@ui5/webcomponents-base/dist/decorators/property.js\";\nimport slot from \"@ui5/webcomponents-base/dist/decorators/slot.js\";\nimport event from \"@ui5/webcomponents-base/dist/decorators/event.js\";\nimport { isUp, isDown, isUpCtrl, isDownCtrl, isUpShift, isDownShift, isUpShiftCtrl, isDownShiftCtrl, isPageUpShift, isPageDownShift, isEscape, isEnter } from \"@ui5/webcomponents-base/dist/Keys.js\";\nimport { getI18nBundle } from \"@ui5/webcomponents-base/dist/i18nBundle.js\";\nimport ValueState from \"@ui5/webcomponents-base/dist/types/ValueState.js\";\nimport { getEffectiveAriaLabelText } from \"@ui5/webcomponents-base/dist/util/AriaLabelHelper.js\";\nimport litRender from \"@ui5/webcomponents-base/dist/renderer/LitRenderer.js\";\nimport StepInputTemplate from \"./generated/templates/StepInputTemplate.lit.js\";\nimport { STEPINPUT_DEC_ICON_TITLE, STEPINPUT_INC_ICON_TITLE } from \"./generated/i18n/i18n-defaults.js\";\nimport \"@ui5/webcomponents-icons/dist/less.js\";\nimport \"@ui5/webcomponents-icons/dist/add.js\";\nimport Icon from \"./Icon.js\";\nimport Input from \"./Input.js\";\nimport InputType from \"./types/InputType.js\";\n// Styles\nimport StepInputCss from \"./generated/themes/StepInput.css.js\";\n// Spin variables\nconst INITIAL_WAIT_TIMEOUT = 500; // milliseconds\nconst ACCELERATION = 0.8;\nconst MIN_WAIT_TIMEOUT = 50; // milliseconds\nconst INITIAL_SPEED = 120; // milliseconds\n/**\n * @class\n *\n * ### Overview\n *\n * The `ui5-step-input` consists of an input field and buttons with icons to increase/decrease the value\n * with the predefined step.\n *\n * The user can change the value of the component by pressing the increase/decrease buttons,\n * by typing a number directly, by using the keyboard up/down and page up/down,\n * or by using the mouse scroll wheel. Decimal values are supported.\n *\n * ### Usage\n *\n * The default step is 1 but the app developer can set a different one.\n *\n * App developers can set a maximum and minimum value for the `StepInput`.\n * The increase/decrease button and the up/down keyboard navigation become disabled when\n * the value reaches the max/min or a new value is entered from the input which is greater/less than the max/min.\n *\n * #### When to use:\n *\n * - To adjust amounts, quantities, or other values quickly.\n * - To adjust values for a specific step.\n *\n * #### When not to use:\n *\n * - To enter a static number (for example, postal code, phone number, or ID). In this case,\n * use the regular `ui5-input` instead.\n * - To display a value that rarely needs to be adjusted and does not pertain to a particular step.\n * In this case, use the regular `ui5-input` instead.\n * - To enter dates and times. In this case, use date/time related components instead.\n *\n * ### ES6 Module Import\n *\n * `import \"@ui5/webcomponents/dist/StepInput.js\";`\n * @constructor\n * @extends UI5Element\n * @since 1.0.0-rc.13\n * @public\n */\nlet StepInput = StepInput_1 = class StepInput extends UI5Element {\n  constructor() {\n    super(...arguments);\n    /**\n     * Defines a value of the component.\n     * @default 0\n     * @public\n     */\n    this.value = 0;\n    /**\n     * Defines a step of increasing/decreasing the value of the component.\n     * @default 1\n     * @public\n     */\n    this.step = 1;\n    /**\n     * Defines the value state of the component.\n     * @default \"None\"\n     * @public\n     */\n    this.valueState = \"None\";\n    /**\n     * Defines whether the component is required.\n     * @default false\n     * @public\n     */\n    this.required = false;\n    /**\n     * Determines whether the component is displayed as disabled.\n     * @default false\n     * @public\n     */\n    this.disabled = false;\n    /**\n     * Determines whether the component is displayed as read-only.\n     * @default false\n     * @public\n     */\n    this.readonly = false;\n    /**\n     * Determines the number of digits after the decimal point of the component.\n     * @default 0\n     * @public\n     */\n    this.valuePrecision = 0;\n    this._decIconDisabled = false;\n    this._incIconDisabled = false;\n    this.focused = false;\n    this._inputFocused = false;\n    this._previousValue = this.value;\n    this._waitTimeout = INITIAL_WAIT_TIMEOUT;\n    this._speed = INITIAL_SPEED;\n    this._spinStarted = false;\n  }\n  async formElementAnchor() {\n    return (await this.getFocusDomRefAsync())?.getFocusDomRefAsync();\n  }\n  get formFormattedValue() {\n    return this.value.toString();\n  }\n  static async onDefine() {\n    StepInput_1.i18nBundle = await getI18nBundle(\"@ui5/webcomponents\");\n  }\n  get type() {\n    return InputType.Number;\n  }\n  // icons-related\n  get decIconTitle() {\n    return StepInput_1.i18nBundle.getText(STEPINPUT_DEC_ICON_TITLE);\n  }\n  get decIconName() {\n    return \"less\";\n  }\n  get incIconTitle() {\n    return StepInput_1.i18nBundle.getText(STEPINPUT_INC_ICON_TITLE);\n  }\n  get incIconName() {\n    return \"add\";\n  }\n  get _decIconClickable() {\n    return !this._decIconDisabled && !this.readonly && !this.disabled;\n  }\n  get _incIconClickable() {\n    return !this._incIconDisabled && !this.readonly && !this.disabled;\n  }\n  get _isFocused() {\n    return this.focused;\n  }\n  get _displayValue() {\n    if (this.value === 0 || Number.isInteger(this.value)) {\n      return this.value.toFixed(this.valuePrecision);\n    }\n    if (this.input && this.value === Number(this.input.value)) {\n      // For the cases where the number is fractional and is ending with 0s.\n      return this.input.value;\n    }\n    return this.value.toString();\n  }\n  get accInfo() {\n    return {\n      \"ariaRequired\": this.required,\n      \"ariaLabel\": getEffectiveAriaLabelText(this)\n    };\n  }\n  get inputAttributes() {\n    return {\n      min: this.min === undefined ? undefined : this.min,\n      max: this.max === undefined ? undefined : this.max,\n      step: this.step\n    };\n  }\n  onBeforeRendering() {\n    this._setButtonState();\n    if (this._previousValue === undefined) {\n      this._previousValue = this.value;\n    }\n  }\n  get input() {\n    return this.shadowRoot.querySelector(\"[ui5-input]\");\n  }\n  get innerInput() {\n    return this.input.shadowRoot.querySelector(\"input\");\n  }\n  get inputOuter() {\n    return this.shadowRoot.querySelector(\".ui5-step-input-input\");\n  }\n  _onButtonFocusOut() {\n    setTimeout(() => {\n      if (!this._inputFocused) {\n        this.inputOuter.removeAttribute(\"focused\");\n      }\n    }, 0);\n  }\n  _onInputFocusIn() {\n    this._inputFocused = true;\n    if (this.value !== this._previousValue) {\n      this._previousValue = this.value;\n    }\n  }\n  _onInputFocusOut() {\n    this._inputFocused = false;\n    this._onInputChange();\n  }\n  _setButtonState() {\n    this._decIconDisabled = this.min !== undefined && this.value <= this.min;\n    this._incIconDisabled = this.max !== undefined && this.value >= this.max;\n  }\n  _validate() {\n    if (this._initialValueState === undefined) {\n      this._initialValueState = this.valueState;\n    }\n    this._updateValueState();\n  }\n  _updateValueState() {\n    const isWithinRange = (this.min === undefined || Number(this.input.value) >= this.min) && (this.max === undefined || Number(this.input.value) <= this.max);\n    const isValueWithCorrectPrecision = this._isValueWithCorrectPrecision;\n    const previousValueState = this.valueState;\n    const isValid = isWithinRange && isValueWithCorrectPrecision;\n    this.valueState = isValid ? ValueState.None : ValueState.Negative;\n    const eventPrevented = !this.fireEvent(\"value-state-change\", {\n      valueState: this.valueState,\n      valid: isValid\n    }, true);\n    if (eventPrevented) {\n      this.valueState = previousValueState;\n    }\n  }\n  _preciseValue(value) {\n    const pow = 10 ** this.valuePrecision;\n    return Math.round(value * pow) / pow;\n  }\n  _fireChangeEvent() {\n    if (this._previousValue !== this.value) {\n      this._previousValue = this.value;\n      this.fireEvent(\"change\", {\n        value: this.value\n      });\n    }\n  }\n  /**\n   * Value modifier - modifies the value of the component, validates the new value and enables/disables increment and\n   * decrement buttons according to the value and min/max values (if set). Fires `change` event when requested\n   * @private\n   * @param modifier modifies the value of the component with the given modifier (positive or negative)\n   * @param fireChangeEvent if `true`, fires `change` event when the value is changed\n   */\n  _modifyValue(modifier) {\n    let fireChangeEvent = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n    let value;\n    value = this.value + modifier;\n    if (this.min !== undefined && value < this.min) {\n      value = this.min;\n    }\n    if (this.max !== undefined && value > this.max) {\n      value = this.max;\n    }\n    value = this._preciseValue(value);\n    if (value !== this.value) {\n      this.value = value;\n      this.input.value = value.toFixed(this.valuePrecision);\n      this._validate();\n      this._setButtonState();\n      this.focused = true;\n      this.inputOuter.setAttribute(\"focused\", \"\");\n      if (fireChangeEvent) {\n        this._fireChangeEvent();\n      } else {\n        this.input.focus();\n      }\n    }\n  }\n  _incValue(e) {\n    if (this._incIconClickable && e.isTrusted && !this.disabled && !this.readonly) {\n      this._modifyValue(this.step, true);\n      this._previousValue = this.value;\n    }\n  }\n  _decValue(e) {\n    if (this._decIconClickable && e.isTrusted && !this.disabled && !this.readonly) {\n      this._modifyValue(-this.step, true);\n      this._previousValue = this.value;\n    }\n  }\n  get _isValueWithCorrectPrecision() {\n    // gets either \".\" or \",\" as delimiter which is based on locale, and splits the number by it\n    const delimiter = this.input.value.includes(\".\") ? \".\" : \",\";\n    const numberParts = this.input.value.split(delimiter);\n    const decimalPartLength = numberParts.length > 1 ? numberParts[1].length : 0;\n    return decimalPartLength === this.valuePrecision;\n  }\n  _onInputChange() {\n    this._setDefaultInputValueIfNeeded();\n    const inputValue = Number(this.input.value);\n    if (this._isValueChanged(inputValue)) {\n      this._updateValueAndValidate(inputValue);\n    }\n  }\n  _setDefaultInputValueIfNeeded() {\n    if (this.input.value === \"\") {\n      const defaultValue = (this.min || 0).toFixed(this.valuePrecision);\n      this.input.value = defaultValue;\n      this.innerInput.value = defaultValue; // we need to update inner input value as well, to avoid empty input scenario\n    }\n  }\n  _isValueChanged(inputValue) {\n    const isValueWithCorrectPrecision = this._isValueWithCorrectPrecision;\n    // Treat values as distinct when modified to match a specific precision (e.g., from 3.4000 to 3.40),\n    // even if JavaScript sees them as equal, to correctly update valueState based on expected valuePrecision.\n    const isPrecisionCorrectButValueStateError = isValueWithCorrectPrecision && this.valueState === ValueState.Negative;\n    return this.value !== this._previousValue || this.value !== inputValue || inputValue === 0 || !isValueWithCorrectPrecision || isPrecisionCorrectButValueStateError;\n  }\n  _updateValueAndValidate(inputValue) {\n    this.value = inputValue;\n    this._validate();\n    this._setButtonState();\n    this._fireChangeEvent();\n  }\n  _onfocusin() {\n    this.focused = true;\n  }\n  _onfocusout() {\n    this.focused = false;\n  }\n  _onkeydown(e) {\n    let preventDefault = true;\n    if (this.disabled || this.readonly) {\n      return;\n    }\n    if (isEnter(e)) {\n      this._onInputChange();\n      return;\n    }\n    if (isUp(e)) {\n      // step up\n      this._modifyValue(this.step);\n    } else if (isDown(e)) {\n      // step down\n      this._modifyValue(-this.step);\n    } else if (isEscape(e)) {\n      // return previous value\n      this.value = this._previousValue;\n      this.input.value = this.value.toFixed(this.valuePrecision);\n    } else if (this.max !== undefined && (isPageUpShift(e) || isUpShiftCtrl(e))) {\n      // step to max\n      this._modifyValue(this.max - this.value);\n    } else if (this.min !== undefined && (isPageDownShift(e) || isDownShiftCtrl(e))) {\n      // step to min\n      this._modifyValue(this.min - this.value);\n    } else if (!isUpCtrl(e) && !isDownCtrl(e) && !isUpShift(e) && !isDownShift(e)) {\n      preventDefault = false;\n    }\n    if (preventDefault) {\n      e.preventDefault();\n    }\n  }\n  _decSpin() {\n    if (!this._decIconDisabled) {\n      this._spinValue(false, true);\n    }\n  }\n  _incSpin() {\n    if (!this._incIconDisabled) {\n      this._spinValue(true, true);\n    }\n  }\n  /**\n   * Calculates the time which should be waited until _spinValue function is called.\n   */\n  _calcWaitTimeout() {\n    this._speed *= ACCELERATION;\n    this._waitTimeout = this._waitTimeout - this._speed < MIN_WAIT_TIMEOUT ? MIN_WAIT_TIMEOUT : this._waitTimeout - this._speed;\n    return this._waitTimeout;\n  }\n  /**\n   * Called when the increment or decrement button is pressed and held to set new value.\n   * @private\n   * @param increment - is this the increment button or not so the values should be spin accordingly up or down\n   * @param resetVariables - whether to reset the spin-related variables or not\n   */\n  _spinValue(increment) {\n    let resetVariables = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n    if (resetVariables) {\n      this._waitTimeout = INITIAL_WAIT_TIMEOUT;\n      this._speed = INITIAL_SPEED;\n      this._btnDown = true;\n    }\n    this._spinTimeoutId = setTimeout(() => {\n      if (this._btnDown) {\n        this._spinStarted = true;\n        this._modifyValue(increment ? this.step : -this.step);\n        this._setButtonState();\n        if (!this._incIconDisabled && increment || !this._decIconDisabled && !increment) {\n          this._spinValue(increment);\n        } else {\n          this._resetSpin();\n          this._fireChangeEvent();\n        }\n      }\n    }, this._calcWaitTimeout());\n  }\n  /**\n  * Resets spin process\n  */\n  _resetSpin() {\n    clearTimeout(this._spinTimeoutId);\n    this._btnDown = false;\n    this._spinStarted = false;\n  }\n  /**\n  * Resets spin process when mouse outs + or - buttons\n  */\n  _resetSpinOut() {\n    if (this._btnDown) {\n      this._resetSpin();\n      this._fireChangeEvent();\n    }\n  }\n};\n__decorate([property({\n  type: Number\n})], StepInput.prototype, \"value\", void 0);\n__decorate([property({\n  type: Number\n})], StepInput.prototype, \"min\", void 0);\n__decorate([property({\n  type: Number\n})], StepInput.prototype, \"max\", void 0);\n__decorate([property({\n  type: Number\n})], StepInput.prototype, \"step\", void 0);\n__decorate([property()], StepInput.prototype, \"valueState\", void 0);\n__decorate([property({\n  type: Boolean\n})], StepInput.prototype, \"required\", void 0);\n__decorate([property({\n  type: Boolean\n})], StepInput.prototype, \"disabled\", void 0);\n__decorate([property({\n  type: Boolean\n})], StepInput.prototype, \"readonly\", void 0);\n__decorate([property()], StepInput.prototype, \"placeholder\", void 0);\n__decorate([property()], StepInput.prototype, \"name\", void 0);\n__decorate([property({\n  type: Number\n})], StepInput.prototype, \"valuePrecision\", void 0);\n__decorate([property()], StepInput.prototype, \"accessibleName\", void 0);\n__decorate([property()], StepInput.prototype, \"accessibleNameRef\", void 0);\n__decorate([property({\n  noAttribute: true\n})], StepInput.prototype, \"_decIconDisabled\", void 0);\n__decorate([property({\n  noAttribute: true\n})], StepInput.prototype, \"_incIconDisabled\", void 0);\n__decorate([property({\n  type: Boolean\n})], StepInput.prototype, \"focused\", void 0);\n__decorate([property({\n  noAttribute: true\n})], StepInput.prototype, \"_inputFocused\", void 0);\n__decorate([property({\n  noAttribute: true\n})], StepInput.prototype, \"_previousValue\", void 0);\n__decorate([property({\n  noAttribute: true\n})], StepInput.prototype, \"_waitTimeout\", void 0);\n__decorate([property({\n  noAttribute: true\n})], StepInput.prototype, \"_speed\", void 0);\n__decorate([property({\n  noAttribute: true\n})], StepInput.prototype, \"_btnDown\", void 0);\n__decorate([property({\n  noAttribute: true\n})], StepInput.prototype, \"_spinTimeoutId\", void 0);\n__decorate([property({\n  noAttribute: true\n})], StepInput.prototype, \"_spinStarted\", void 0);\n__decorate([slot()], StepInput.prototype, \"valueStateMessage\", void 0);\nStepInput = StepInput_1 = __decorate([customElement({\n  tag: \"ui5-step-input\",\n  formAssociated: true,\n  renderer: litRender,\n  styles: StepInputCss,\n  template: StepInputTemplate,\n  dependencies: [Icon, Input]\n})\n/**\n * Fired when the input operation has finished by pressing Enter or on focusout.\n * @public\n */, event(\"change\")\n/**\n * Fired before the value state of the component is updated internally.\n * The event is preventable, meaning that if it's default action is\n * prevented, the component will not update the value state.\n * @allowPreventDefault\n * @since 1.23.0\n * @public\n * @param {string} valueState The new `valueState` that will be set.\n * @param {boolean} valid Indicator if the value is in between the min and max value.\n */, event(\"value-state-change\", {\n  detail: {\n    /**\n     * @public\n     */\n    valueState: {\n      type: String\n    },\n    /**\n     * @public\n     */\n    valid: {\n      type: Boolean\n    }\n  }\n})], StepInput);\nStepInput.define();\nexport default StepInput;","map":{"version":3,"names":["UI5Element","customElement","property","slot","event","isUp","isDown","isUpCtrl","isDownCtrl","isUpShift","isDownShift","isUpShiftCtrl","isDownShiftCtrl","isPageUpShift","isPageDownShift","isEscape","isEnter","getI18nBundle","ValueState","getEffectiveAriaLabelText","litRender","StepInputTemplate","STEPINPUT_DEC_ICON_TITLE","STEPINPUT_INC_ICON_TITLE","Icon","Input","InputType","StepInputCss","INITIAL_WAIT_TIMEOUT","ACCELERATION","MIN_WAIT_TIMEOUT","INITIAL_SPEED","StepInput","StepInput_1","constructor","value","step","valueState","required","disabled","readonly","valuePrecision","_decIconDisabled","_incIconDisabled","focused","_inputFocused","_previousValue","_waitTimeout","_speed","_spinStarted","formElementAnchor","getFocusDomRefAsync","formFormattedValue","toString","onDefine","i18nBundle","type","Number","decIconTitle","getText","decIconName","incIconTitle","incIconName","_decIconClickable","_incIconClickable","_isFocused","_displayValue","isInteger","toFixed","input","accInfo","inputAttributes","min","undefined","max","onBeforeRendering","_setButtonState","shadowRoot","querySelector","innerInput","inputOuter","_onButtonFocusOut","setTimeout","removeAttribute","_onInputFocusIn","_onInputFocusOut","_onInputChange","_validate","_initialValueState","_updateValueState","isWithinRange","isValueWithCorrectPrecision","_isValueWithCorrectPrecision","previousValueState","isValid","None","Negative","eventPrevented","fireEvent","valid","_preciseValue","pow","Math","round","_fireChangeEvent","_modifyValue","modifier","fireChangeEvent","arguments","length","setAttribute","focus","_incValue","e","isTrusted","_decValue","delimiter","includes","numberParts","split","decimalPartLength","_setDefaultInputValueIfNeeded","inputValue","_isValueChanged","_updateValueAndValidate","defaultValue","isPrecisionCorrectButValueStateError","_onfocusin","_onfocusout","_onkeydown","preventDefault","_decSpin","_spinValue","_incSpin","_calcWaitTimeout","increment","resetVariables","_btnDown","_spinTimeoutId","_resetSpin","clearTimeout","_resetSpinOut","__decorate","Boolean","noAttribute","tag","formAssociated","renderer","styles","template","dependencies","detail","String","define"],"sources":["/home/user/projects/reactproj/node_modules/@ui5/webcomponents/src/StepInput.ts"],"sourcesContent":["import UI5Element from \"@ui5/webcomponents-base/dist/UI5Element.js\";\nimport customElement from \"@ui5/webcomponents-base/dist/decorators/customElement.js\";\nimport property from \"@ui5/webcomponents-base/dist/decorators/property.js\";\nimport slot from \"@ui5/webcomponents-base/dist/decorators/slot.js\";\nimport event from \"@ui5/webcomponents-base/dist/decorators/event.js\";\nimport {\n\tisUp,\n\tisDown,\n\tisUpCtrl,\n\tisDownCtrl,\n\tisUpShift,\n\tisDownShift,\n\tisUpShiftCtrl,\n\tisDownShiftCtrl,\n\tisPageUpShift,\n\tisPageDownShift,\n\tisEscape,\n\tisEnter,\n} from \"@ui5/webcomponents-base/dist/Keys.js\";\nimport { getI18nBundle } from \"@ui5/webcomponents-base/dist/i18nBundle.js\";\nimport type I18nBundle from \"@ui5/webcomponents-base/dist/i18nBundle.js\";\nimport ValueState from \"@ui5/webcomponents-base/dist/types/ValueState.js\";\nimport { getEffectiveAriaLabelText } from \"@ui5/webcomponents-base/dist/util/AriaLabelHelper.js\";\nimport litRender from \"@ui5/webcomponents-base/dist/renderer/LitRenderer.js\";\nimport type { Timeout } from \"@ui5/webcomponents-base/dist/types.js\";\nimport type { IFormInputElement } from \"@ui5/webcomponents-base/dist/features/InputElementsFormSupport.js\";\nimport StepInputTemplate from \"./generated/templates/StepInputTemplate.lit.js\";\nimport { STEPINPUT_DEC_ICON_TITLE, STEPINPUT_INC_ICON_TITLE } from \"./generated/i18n/i18n-defaults.js\";\nimport \"@ui5/webcomponents-icons/dist/less.js\";\nimport \"@ui5/webcomponents-icons/dist/add.js\";\n\nimport Icon from \"./Icon.js\";\nimport Input from \"./Input.js\";\nimport InputType from \"./types/InputType.js\";\n\n// Styles\nimport StepInputCss from \"./generated/themes/StepInput.css.js\";\n\n// Spin variables\nconst INITIAL_WAIT_TIMEOUT = 500; // milliseconds\nconst ACCELERATION = 0.8;\nconst MIN_WAIT_TIMEOUT = 50; // milliseconds\nconst INITIAL_SPEED = 120; // milliseconds\n\ntype StepInputValueStateChangeEventDetail = {\n\tvalueState: `${ValueState}`,\n\tvalid: boolean,\n}\n\n/**\n * @class\n *\n * ### Overview\n *\n * The `ui5-step-input` consists of an input field and buttons with icons to increase/decrease the value\n * with the predefined step.\n *\n * The user can change the value of the component by pressing the increase/decrease buttons,\n * by typing a number directly, by using the keyboard up/down and page up/down,\n * or by using the mouse scroll wheel. Decimal values are supported.\n *\n * ### Usage\n *\n * The default step is 1 but the app developer can set a different one.\n *\n * App developers can set a maximum and minimum value for the `StepInput`.\n * The increase/decrease button and the up/down keyboard navigation become disabled when\n * the value reaches the max/min or a new value is entered from the input which is greater/less than the max/min.\n *\n * #### When to use:\n *\n * - To adjust amounts, quantities, or other values quickly.\n * - To adjust values for a specific step.\n *\n * #### When not to use:\n *\n * - To enter a static number (for example, postal code, phone number, or ID). In this case,\n * use the regular `ui5-input` instead.\n * - To display a value that rarely needs to be adjusted and does not pertain to a particular step.\n * In this case, use the regular `ui5-input` instead.\n * - To enter dates and times. In this case, use date/time related components instead.\n *\n * ### ES6 Module Import\n *\n * `import \"@ui5/webcomponents/dist/StepInput.js\";`\n * @constructor\n * @extends UI5Element\n * @since 1.0.0-rc.13\n * @public\n */\n@customElement({\n\ttag: \"ui5-step-input\",\n\tformAssociated: true,\n\trenderer: litRender,\n\tstyles: StepInputCss,\n\ttemplate: StepInputTemplate,\n\tdependencies: [\n\t\tIcon,\n\t\tInput,\n\t],\n})\n/**\n * Fired when the input operation has finished by pressing Enter or on focusout.\n * @public\n */\n@event(\"change\")\n/**\n * Fired before the value state of the component is updated internally.\n * The event is preventable, meaning that if it's default action is\n * prevented, the component will not update the value state.\n * @allowPreventDefault\n * @since 1.23.0\n * @public\n * @param {string} valueState The new `valueState` that will be set.\n * @param {boolean} valid Indicator if the value is in between the min and max value.\n */\n@event<StepInputValueStateChangeEventDetail>(\"value-state-change\", {\n\tdetail: {\n\t\t/**\n\t\t * @public\n\t\t */\n\t\tvalueState: {\n\t\t\ttype: String,\n\t\t},\n\t\t/**\n\t\t * @public\n\t\t */\n\t\tvalid: {\n\t\t\ttype: Boolean,\n\t\t},\n\t},\n})\nclass StepInput extends UI5Element implements IFormInputElement {\n\t/**\n\t * Defines a value of the component.\n\t * @default 0\n\t * @public\n\t */\n\t@property({ type: Number })\n\tvalue = 0;\n\n\t/**\n\t * Defines a minimum value of the component.\n\t * @default undefined\n\t * @public\n\t */\n\t@property({ type: Number })\n\tmin?: number;\n\n\t/**\n\t * Defines a maximum value of the component.\n\t * @default undefined\n\t * @public\n\t */\n\t@property({ type: Number })\n\tmax?: number;\n\n\t/**\n\t * Defines a step of increasing/decreasing the value of the component.\n\t * @default 1\n\t * @public\n\t */\n\t@property({ type: Number })\n\tstep: number = 1;\n\n\t/**\n\t * Defines the value state of the component.\n\t * @default \"None\"\n\t * @public\n\t */\n\t@property()\n\tvalueState: `${ValueState}` = \"None\";\n\n\t/**\n\t * Defines whether the component is required.\n\t * @default false\n\t * @public\n\t */\n\t@property({ type: Boolean })\n\trequired = false;\n\n\t/**\n\t * Determines whether the component is displayed as disabled.\n\t * @default false\n\t * @public\n\t */\n\t@property({ type: Boolean })\n\tdisabled = false;\n\n\t/**\n\t * Determines whether the component is displayed as read-only.\n\t * @default false\n\t * @public\n\t */\n\t@property({ type: Boolean })\n\treadonly = false;\n\n\t/**\n\t * Defines a short hint, intended to aid the user with data entry when the\n\t * component has no value.\n\t *\n\t * **Note:** When no placeholder is set, the format pattern is displayed as a placeholder.\n\t * Passing an empty string as the value of this property will make the component appear empty - without placeholder or format pattern.\n\t * @default undefined\n\t * @public\n\t */\n\t@property()\n\tplaceholder?: string;\n\n\t/**\n\t * Determines the name by which the component will be identified upon submission in an HTML form.\n\t *\n\t * **Note:** This property is only applicable within the context of an HTML Form element.\n\t * @default undefined\n\t * @public\n\t */\n\t@property()\n\tname?: string;\n\n\t/**\n\t * Determines the number of digits after the decimal point of the component.\n\t * @default 0\n\t * @public\n\t */\n\t@property({ type: Number })\n\tvaluePrecision = 0;\n\n\t/**\n\t * Defines the accessible ARIA name of the component.\n\t * @default undefined\n\t * @public\n\t * @since 1.0.0-rc.15\n\t */\n\t@property()\n\taccessibleName?: string;\n\n\t/**\n\t * Receives id(or many ids) of the elements that label the component.\n\t * @default undefined\n\t * @public\n\t * @since 1.0.0-rc.15\n\t */\n\t@property()\n\taccessibleNameRef?: string;\n\n\t@property({ noAttribute: true })\n\t_decIconDisabled = false;\n\n\t@property({ noAttribute: true })\n\t_incIconDisabled = false;\n\n\t@property({ type: Boolean })\n\tfocused = false;\n\n\t@property({ noAttribute: true })\n\t_inputFocused = false;\n\n\t@property({ noAttribute: true })\n\t_previousValue: number = this.value;\n\n\t@property({ noAttribute: true })\n\t_waitTimeout: number = INITIAL_WAIT_TIMEOUT;\n\n\t@property({ noAttribute: true })\n\t_speed: number = INITIAL_SPEED;\n\n\t@property({ noAttribute: true })\n\t_btnDown?: boolean;\n\n\t@property({ noAttribute: true })\n\t_spinTimeoutId?: Timeout;\n\n\t@property({ noAttribute: true })\n\t_spinStarted = false;\n\n\t/**\n\t * Defines the value state message that will be displayed as pop up under the component.\n\t *\n\t * **Note:** If not specified, a default text (in the respective language) will be displayed.\n\t *\n\t * **Note:** The `valueStateMessage` would be displayed,\n\t * when the component is in `Information`, `Critical` or `Negative` value state.\n\t * @public\n\t */\n\t@slot()\n\tvalueStateMessage!: Array<HTMLElement>;\n\n\t_initialValueState?: `${ValueState}`;\n\n\tstatic i18nBundle: I18nBundle;\n\n\tasync formElementAnchor() {\n\t\treturn (await this.getFocusDomRefAsync() as UI5Element)?.getFocusDomRefAsync();\n\t}\n\n\tget formFormattedValue(): FormData | string | null {\n\t\treturn this.value.toString();\n\t}\n\n\tstatic async onDefine() {\n\t\tStepInput.i18nBundle = await getI18nBundle(\"@ui5/webcomponents\");\n\t}\n\n\tget type() {\n\t\treturn InputType.Number;\n\t}\n\n\t// icons-related\n\n\tget decIconTitle() {\n\t\treturn StepInput.i18nBundle.getText(STEPINPUT_DEC_ICON_TITLE);\n\t}\n\n\tget decIconName() {\n\t\treturn \"less\";\n\t}\n\n\tget incIconTitle() {\n\t\treturn StepInput.i18nBundle.getText(STEPINPUT_INC_ICON_TITLE);\n\t}\n\n\tget incIconName() {\n\t\treturn \"add\";\n\t}\n\n\tget _decIconClickable() {\n\t\treturn !this._decIconDisabled && !this.readonly && !this.disabled;\n\t}\n\n\tget _incIconClickable() {\n\t\treturn !this._incIconDisabled && !this.readonly && !this.disabled;\n\t}\n\n\tget _isFocused() {\n\t\treturn this.focused;\n\t}\n\n\tget _displayValue() {\n\t\tif ((this.value === 0) || (Number.isInteger(this.value))) {\n\t\t\treturn this.value.toFixed(this.valuePrecision);\n\t\t}\n\n\t\tif (this.input && this.value === Number(this.input.value)) { // For the cases where the number is fractional and is ending with 0s.\n\t\t\treturn this.input.value;\n\t\t}\n\n\t\treturn this.value.toString();\n\t}\n\n\tget accInfo() {\n\t\treturn {\n\t\t\t\"ariaRequired\": this.required,\n\t\t\t\"ariaLabel\": getEffectiveAriaLabelText(this),\n\t\t};\n\t}\n\n\tget inputAttributes() {\n\t\treturn {\n\t\t\tmin: this.min === undefined ? undefined : this.min,\n\t\t\tmax: this.max === undefined ? undefined : this.max,\n\t\t\tstep: this.step,\n\t\t};\n\t}\n\n\tonBeforeRendering() {\n\t\tthis._setButtonState();\n\t\tif (this._previousValue === undefined) {\n\t\t\tthis._previousValue = this.value;\n\t\t}\n\t}\n\n\tget input(): Input {\n\t\treturn this.shadowRoot!.querySelector<Input>(\"[ui5-input]\")!;\n\t}\n\n\tget innerInput(): HTMLInputElement {\n\t\treturn this.input.shadowRoot!.querySelector<HTMLInputElement>(\"input\")!;\n\t}\n\n\tget inputOuter() {\n\t\treturn this.shadowRoot!.querySelector(\".ui5-step-input-input\")!;\n\t}\n\n\t_onButtonFocusOut() {\n\t\tsetTimeout(() => {\n\t\t\tif (!this._inputFocused) {\n\t\t\t\tthis.inputOuter.removeAttribute(\"focused\");\n\t\t\t}\n\t\t}, 0);\n\t}\n\n\t_onInputFocusIn() {\n\t\tthis._inputFocused = true;\n\t\tif (this.value !== this._previousValue) {\n\t\t\tthis._previousValue = this.value;\n\t\t}\n\t}\n\n\t_onInputFocusOut() {\n\t\tthis._inputFocused = false;\n\t\tthis._onInputChange();\n\t}\n\n\t_setButtonState() {\n\t\tthis._decIconDisabled = this.min !== undefined && this.value <= this.min;\n\t\tthis._incIconDisabled = this.max !== undefined && this.value >= this.max;\n\t}\n\n\t_validate() {\n\t\tif (this._initialValueState === undefined) {\n\t\t\tthis._initialValueState = this.valueState;\n\t\t}\n\n\t\tthis._updateValueState();\n\t}\n\n\t_updateValueState() {\n\t\tconst isWithinRange = (this.min === undefined || Number(this.input.value) >= this.min)\n\t\t\t\t\t\t\t  && (this.max === undefined || Number(this.input.value) <= this.max);\n\t\tconst isValueWithCorrectPrecision = this._isValueWithCorrectPrecision;\n\t\tconst previousValueState = this.valueState;\n\t\tconst isValid = isWithinRange && isValueWithCorrectPrecision;\n\n\t\tthis.valueState = isValid ? ValueState.None : ValueState.Negative;\n\n\t\tconst eventPrevented = !this.fireEvent<StepInputValueStateChangeEventDetail>(\"value-state-change\", {\n\t\t\tvalueState: this.valueState,\n\t\t\tvalid: isValid,\n\t\t}, true);\n\n\t\tif (eventPrevented) {\n\t\t\tthis.valueState = previousValueState;\n\t\t}\n\t}\n\n\t_preciseValue(value: number) {\n\t\tconst pow = 10 ** this.valuePrecision;\n\t\treturn Math.round(value * pow) / pow;\n\t}\n\n\t_fireChangeEvent() {\n\t\tif (this._previousValue !== this.value) {\n\t\t\tthis._previousValue = this.value;\n\t\t\tthis.fireEvent(\"change\", { value: this.value });\n\t\t}\n\t}\n\n\t/**\n\t * Value modifier - modifies the value of the component, validates the new value and enables/disables increment and\n\t * decrement buttons according to the value and min/max values (if set). Fires `change` event when requested\n\t * @private\n\t * @param modifier modifies the value of the component with the given modifier (positive or negative)\n\t * @param fireChangeEvent if `true`, fires `change` event when the value is changed\n\t */\n\t_modifyValue(modifier: number, fireChangeEvent = false) {\n\t\tlet value;\n\t\tvalue = this.value + modifier;\n\t\tif (this.min !== undefined && value < this.min) {\n\t\t\tvalue = this.min;\n\t\t}\n\t\tif (this.max !== undefined && value > this.max) {\n\t\t\tvalue = this.max;\n\t\t}\n\t\tvalue = this._preciseValue(value);\n\t\tif (value !== this.value) {\n\t\t\tthis.value = value;\n\t\t\tthis.input.value = value.toFixed(this.valuePrecision);\n\t\t\tthis._validate();\n\t\t\tthis._setButtonState();\n\t\t\tthis.focused = true;\n\t\t\tthis.inputOuter.setAttribute(\"focused\", \"\");\n\t\t\tif (fireChangeEvent) {\n\t\t\t\tthis._fireChangeEvent();\n\t\t\t} else {\n\t\t\t\tthis.input.focus();\n\t\t\t}\n\t\t}\n\t}\n\n\t_incValue(e: CustomEvent) {\n\t\tif (this._incIconClickable && e.isTrusted && !this.disabled && !this.readonly) {\n\t\t\tthis._modifyValue(this.step, true);\n\t\t\tthis._previousValue = this.value;\n\t\t}\n\t}\n\n\t_decValue(e: CustomEvent) {\n\t\tif (this._decIconClickable && e.isTrusted && !this.disabled && !this.readonly) {\n\t\t\tthis._modifyValue(-this.step, true);\n\t\t\tthis._previousValue = this.value;\n\t\t}\n\t}\n\n\tget _isValueWithCorrectPrecision() {\n\t\t// gets either \".\" or \",\" as delimiter which is based on locale, and splits the number by it\n\t\tconst delimiter = this.input.value.includes(\".\") ? \".\" : \",\";\n\t\tconst numberParts = this.input.value.split(delimiter);\n\t\tconst decimalPartLength = numberParts.length > 1 ? numberParts[1].length : 0;\n\n\t\treturn decimalPartLength === this.valuePrecision;\n\t}\n\n\t_onInputChange() {\n\t\tthis._setDefaultInputValueIfNeeded();\n\n\t\tconst inputValue = Number(this.input.value);\n\t\tif (this._isValueChanged(inputValue)) {\n\t\t\tthis._updateValueAndValidate(inputValue);\n\t\t}\n\t}\n\n\t_setDefaultInputValueIfNeeded() {\n\t\tif (this.input.value === \"\") {\n\t\t\tconst defaultValue = (this.min || 0).toFixed(this.valuePrecision);\n\t\t\tthis.input.value = defaultValue;\n\t\t\tthis.innerInput.value = defaultValue; // we need to update inner input value as well, to avoid empty input scenario\n\t\t}\n\t}\n\n\t_isValueChanged(inputValue: number) {\n\t\tconst isValueWithCorrectPrecision = this._isValueWithCorrectPrecision;\n\t\t// Treat values as distinct when modified to match a specific precision (e.g., from 3.4000 to 3.40),\n\t\t// even if JavaScript sees them as equal, to correctly update valueState based on expected valuePrecision.\n\t\tconst isPrecisionCorrectButValueStateError = isValueWithCorrectPrecision && this.valueState === ValueState.Negative;\n\n\t\treturn this.value !== this._previousValue\n\t\t\t|| this.value !== inputValue\n\t\t\t|| inputValue === 0\n\t\t\t|| !isValueWithCorrectPrecision\n\t\t\t|| isPrecisionCorrectButValueStateError;\n\t}\n\n\t_updateValueAndValidate(inputValue: number) {\n\t\tthis.value = inputValue;\n\t\tthis._validate();\n\t\tthis._setButtonState();\n\t\tthis._fireChangeEvent();\n\t}\n\n\t_onfocusin() {\n\t\tthis.focused = true;\n\t}\n\n\t_onfocusout() {\n\t\tthis.focused = false;\n\t}\n\n\t_onkeydown(e: KeyboardEvent) {\n\t\tlet preventDefault = true;\n\t\tif (this.disabled || this.readonly) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (isEnter(e)) {\n\t\t\tthis._onInputChange();\n\t\t\treturn;\n\t\t}\n\n\t\tif (isUp(e)) {\n\t\t\t// step up\n\t\t\tthis._modifyValue(this.step);\n\t\t} else if (isDown(e)) {\n\t\t\t// step down\n\t\t\tthis._modifyValue(-this.step);\n\t\t} else if (isEscape(e)) {\n\t\t\t// return previous value\n\t\t\tthis.value = this._previousValue;\n\t\t\tthis.input.value = this.value.toFixed(this.valuePrecision);\n\t\t} else if (this.max !== undefined && (isPageUpShift(e) || isUpShiftCtrl(e))) {\n\t\t\t// step to max\n\t\t\tthis._modifyValue(this.max - this.value);\n\t\t} else if (this.min !== undefined && (isPageDownShift(e) || isDownShiftCtrl(e))) {\n\t\t\t// step to min\n\t\t\tthis._modifyValue(this.min - this.value);\n\t\t} else if (!isUpCtrl(e) && !isDownCtrl(e) && !isUpShift(e) && !isDownShift(e)) {\n\t\t\tpreventDefault = false;\n\t\t}\n\t\tif (preventDefault) {\n\t\t\te.preventDefault();\n\t\t}\n\t}\n\n\t_decSpin() {\n\t\tif (!this._decIconDisabled) {\n\t\t\tthis._spinValue(false, true);\n\t\t}\n\t}\n\n\t_incSpin() {\n\t\tif (!this._incIconDisabled) {\n\t\t\tthis._spinValue(true, true);\n\t\t}\n\t}\n\n\t/**\n\t * Calculates the time which should be waited until _spinValue function is called.\n\t */\n\t_calcWaitTimeout() {\n\t\tthis._speed *= ACCELERATION;\n\t\tthis._waitTimeout = ((this._waitTimeout - this._speed) < MIN_WAIT_TIMEOUT ? MIN_WAIT_TIMEOUT : (this._waitTimeout - this._speed));\n\t\treturn this._waitTimeout;\n\t}\n\n\t/**\n\t * Called when the increment or decrement button is pressed and held to set new value.\n\t * @private\n\t * @param increment - is this the increment button or not so the values should be spin accordingly up or down\n\t * @param resetVariables - whether to reset the spin-related variables or not\n\t */\n\t_spinValue(increment: boolean, resetVariables = false) {\n\t\tif (resetVariables) {\n\t\t\tthis._waitTimeout = INITIAL_WAIT_TIMEOUT;\n\t\t\tthis._speed = INITIAL_SPEED;\n\t\t\tthis._btnDown = true;\n\t\t}\n\t\tthis._spinTimeoutId = setTimeout(() => {\n\t\t\tif (this._btnDown) {\n\t\t\t\tthis._spinStarted = true;\n\t\t\t\tthis._modifyValue(increment ? this.step : -this.step);\n\t\t\t\tthis._setButtonState();\n\t\t\t\tif ((!this._incIconDisabled && increment) || (!this._decIconDisabled && !increment)) {\n\t\t\t\t\tthis._spinValue(increment);\n\t\t\t\t} else {\n\t\t\t\t\tthis._resetSpin();\n\t\t\t\t\tthis._fireChangeEvent();\n\t\t\t\t}\n\t\t\t}\n\t\t}, this._calcWaitTimeout());\n\t}\n\n\t/**\n\t* Resets spin process\n\t*/\n\t_resetSpin() {\n\t\tclearTimeout(this._spinTimeoutId);\n\t\tthis._btnDown = false;\n\t\tthis._spinStarted = false;\n\t}\n\n\t/**\n\t* Resets spin process when mouse outs + or - buttons\n\t*/\n\t_resetSpinOut() {\n\t\tif (this._btnDown) {\n\t\t\tthis._resetSpin();\n\t\t\tthis._fireChangeEvent();\n\t\t}\n\t}\n}\nStepInput.define();\n\nexport default StepInput;\nexport type {\n\tStepInputValueStateChangeEventDetail,\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}