{"ast":null,"code":"'use client';\n\nimport ButtonDesign from '@ui5/webcomponents/dist/types/ButtonDesign.js';\nimport IconMode from '@ui5/webcomponents/dist/types/IconMode.js';\nimport PopupAccessibleRole from '@ui5/webcomponents/dist/types/PopupAccessibleRole.js';\nimport TitleLevel from '@ui5/webcomponents/dist/types/TitleLevel.js';\nimport ValueState from '@ui5/webcomponents-base/dist/types/ValueState.js';\nimport iconSysHelp from '@ui5/webcomponents-icons/dist/sys-help-2.js';\nimport { useI18nBundle, useStylesheet } from '@ui5/webcomponents-react-base';\nimport { clsx } from 'clsx';\nimport { cloneElement, forwardRef, isValidElement, useId } from 'react';\nimport { MessageBoxAction, MessageBoxType } from '../../enums/index.js';\nimport { ABORT, CANCEL, CLOSE, CONFIRMATION, DELETE, ERROR, IGNORE, INFORMATION, NO, OK, RETRY, SUCCESS, WARNING, YES } from '../../i18n/i18n-defaults.js';\nimport { Button, Dialog, Icon, Text, Title } from '../../webComponents/index.js';\nimport { classNames, styleData } from './MessageBox.module.css.js';\n\n// eslint-disable-next-line @typescript-eslint/no-redundant-type-constituents\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst getIcon = (icon, type, classes) => {\n  if (/*#__PURE__*/isValidElement(icon)) return icon;\n  switch (type) {\n    case MessageBoxType.Confirm:\n      return /*#__PURE__*/_jsx(Icon, {\n        name: iconSysHelp,\n        mode: IconMode.Decorative,\n        className: classes.confirmIcon\n      });\n    default:\n      return null;\n  }\n};\nconst convertMessageBoxTypeToState = type => {\n  switch (type) {\n    case MessageBoxType.Information:\n      return ValueState.Information;\n    case MessageBoxType.Success:\n      return ValueState.Positive;\n    case MessageBoxType.Warning:\n      return ValueState.Critical;\n    case MessageBoxType.Error:\n      return ValueState.Negative;\n    default:\n      return ValueState.None;\n  }\n};\nconst getActions = (actions, type) => {\n  if (actions && actions.length > 0) {\n    return actions;\n  }\n  if (type === MessageBoxType.Confirm) {\n    return [MessageBoxAction.OK, MessageBoxAction.Cancel];\n  }\n  if (type === MessageBoxType.Error) {\n    return [MessageBoxAction.Close];\n  }\n  return [MessageBoxAction.OK];\n};\n\n/**\n * The `MessageBox` component provides easier methods to create a `Dialog`, such as standard alerts, confirmation dialogs, or arbitrary message dialogs.\n */\nconst MessageBox = /*#__PURE__*/forwardRef((props, ref) => {\n  const {\n    open,\n    type = MessageBoxType.Confirm,\n    children,\n    className,\n    titleText,\n    icon,\n    actions = [],\n    emphasizedAction = MessageBoxAction.OK,\n    onClose,\n    initialFocus,\n    ...rest\n  } = props;\n  useStylesheet(styleData, MessageBox.displayName);\n  const i18nBundle = useI18nBundle('@ui5/webcomponents-react');\n  const actionTranslations = {\n    [MessageBoxAction.Abort]: i18nBundle.getText(ABORT),\n    [MessageBoxAction.Cancel]: i18nBundle.getText(CANCEL),\n    [MessageBoxAction.Close]: i18nBundle.getText(CLOSE),\n    [MessageBoxAction.Delete]: i18nBundle.getText(DELETE),\n    [MessageBoxAction.Ignore]: i18nBundle.getText(IGNORE),\n    [MessageBoxAction.No]: i18nBundle.getText(NO),\n    [MessageBoxAction.OK]: i18nBundle.getText(OK),\n    [MessageBoxAction.Retry]: i18nBundle.getText(RETRY),\n    [MessageBoxAction.Yes]: i18nBundle.getText(YES)\n  };\n  const titleToRender = () => {\n    if (titleText) {\n      return titleText;\n    }\n    switch (type) {\n      case MessageBoxType.Confirm:\n        return i18nBundle.getText(CONFIRMATION);\n      case MessageBoxType.Error:\n        return i18nBundle.getText(ERROR);\n      case MessageBoxType.Information:\n        return i18nBundle.getText(INFORMATION);\n      case MessageBoxType.Success:\n        return i18nBundle.getText(SUCCESS);\n      case MessageBoxType.Warning:\n        return i18nBundle.getText(WARNING);\n      default:\n        return null;\n    }\n  };\n  const handleDialogClose = e => {\n    if (typeof props.onBeforeClose === 'function') {\n      props.onBeforeClose(e);\n    }\n    if (e.detail.escPressed && typeof onClose === 'function') {\n      onClose(undefined, e.detail.escPressed);\n    }\n  };\n  const handleOnClose = e => {\n    const {\n      action\n    } = e.currentTarget.dataset;\n    if (typeof onClose === 'function') {\n      onClose(action);\n    }\n  };\n  const messageBoxId = useId();\n  const internalActions = getActions(actions, type);\n  const getInitialFocus = () => {\n    const actionToFocus = internalActions.find(action => action === initialFocus);\n    if (typeof actionToFocus === 'string') {\n      return `${messageBoxId}-action-${actionToFocus}`;\n    }\n    return initialFocus;\n  };\n\n  // @ts-expect-error: footer, headerText and onClose are already omitted via prop types\n  const {\n    footer: _0,\n    headerText: _1,\n    onClose: _2,\n    onBeforeClose: _3,\n    ...restWithoutOmitted\n  } = rest;\n  const iconToRender = getIcon(icon, type, classNames);\n  const needsCustomHeader = !props.header && !!iconToRender;\n  return /*#__PURE__*/_jsxs(Dialog, {\n    open: open,\n    ref: ref,\n    className: clsx(classNames.messageBox, className),\n    onBeforeClose: handleDialogClose,\n    accessibleNameRef: needsCustomHeader ? `${messageBoxId}-title ${messageBoxId}-text` : undefined,\n    accessibleRole: PopupAccessibleRole.AlertDialog,\n    ...restWithoutOmitted,\n    headerText: titleToRender(),\n    state: convertMessageBoxTypeToState(type),\n    initialFocus: getInitialFocus(),\n    \"data-type\": type,\n    children: [needsCustomHeader && /*#__PURE__*/_jsxs(\"div\", {\n      slot: \"header\",\n      className: classNames.header,\n      children: [iconToRender, iconToRender && /*#__PURE__*/_jsx(\"span\", {\n        className: classNames.spacer\n      }), /*#__PURE__*/_jsx(Title, {\n        id: `${messageBoxId}-title`,\n        level: TitleLevel.H1,\n        children: titleToRender()\n      })]\n    }), /*#__PURE__*/_jsx(Text, {\n      id: `${messageBoxId}-text`,\n      children: children\n    }), /*#__PURE__*/_jsx(\"div\", {\n      slot: \"footer\",\n      className: classNames.footer,\n      children: internalActions.map((action, index) => {\n        if (typeof action !== 'string' && /*#__PURE__*/isValidElement(action)) {\n          return /*#__PURE__*/cloneElement(action, {\n            onClick: action?.props?.onClick ? e => {\n              action?.props?.onClick(e);\n              handleOnClose(e);\n            } : handleOnClose,\n            'data-action': action?.props?.['data-action'] ?? `${index}: custom action`\n          });\n        }\n        if (typeof action === 'string') {\n          return /*#__PURE__*/_jsx(Button, {\n            id: `${messageBoxId}-action-${action}`,\n            design: emphasizedAction === action ? ButtonDesign.Emphasized : ButtonDesign.Transparent,\n            onClick: handleOnClose,\n            \"data-action\": action,\n            children: actionTranslations[action] ?? action\n          }, `${action}-${index}`);\n        }\n        return null;\n      })\n    })]\n  });\n});\nMessageBox.displayName = 'MessageBox';\nexport { MessageBox };","map":{"version":3,"names":["ButtonDesign","IconMode","PopupAccessibleRole","TitleLevel","ValueState","iconSysHelp","useI18nBundle","useStylesheet","clsx","cloneElement","forwardRef","isValidElement","useId","MessageBoxAction","MessageBoxType","ABORT","CANCEL","CLOSE","CONFIRMATION","DELETE","ERROR","IGNORE","INFORMATION","NO","OK","RETRY","SUCCESS","WARNING","YES","Button","Dialog","Icon","Text","Title","classNames","styleData","jsx","_jsx","jsxs","_jsxs","getIcon","icon","type","classes","Confirm","name","mode","Decorative","className","confirmIcon","convertMessageBoxTypeToState","Information","Success","Positive","Warning","Critical","Error","Negative","None","getActions","actions","length","Cancel","Close","MessageBox","props","ref","open","children","titleText","emphasizedAction","onClose","initialFocus","rest","displayName","i18nBundle","actionTranslations","Abort","getText","Delete","Ignore","No","Retry","Yes","titleToRender","handleDialogClose","e","onBeforeClose","detail","escPressed","undefined","handleOnClose","action","currentTarget","dataset","messageBoxId","internalActions","getInitialFocus","actionToFocus","find","footer","_0","headerText","_1","_2","_3","restWithoutOmitted","iconToRender","needsCustomHeader","header","messageBox","accessibleNameRef","accessibleRole","AlertDialog","state","slot","spacer","id","level","H1","map","index","onClick","design","Emphasized","Transparent"],"sources":["/home/user/projects/reactproj/node_modules/@ui5/webcomponents-react/dist/components/MessageBox/index.js"],"sourcesContent":["'use client';\n\nimport ButtonDesign from '@ui5/webcomponents/dist/types/ButtonDesign.js';\nimport IconMode from '@ui5/webcomponents/dist/types/IconMode.js';\nimport PopupAccessibleRole from '@ui5/webcomponents/dist/types/PopupAccessibleRole.js';\nimport TitleLevel from '@ui5/webcomponents/dist/types/TitleLevel.js';\nimport ValueState from '@ui5/webcomponents-base/dist/types/ValueState.js';\nimport iconSysHelp from '@ui5/webcomponents-icons/dist/sys-help-2.js';\nimport { useI18nBundle, useStylesheet } from '@ui5/webcomponents-react-base';\nimport { clsx } from 'clsx';\nimport { cloneElement, forwardRef, isValidElement, useId } from 'react';\nimport { MessageBoxAction, MessageBoxType } from '../../enums/index.js';\nimport { ABORT, CANCEL, CLOSE, CONFIRMATION, DELETE, ERROR, IGNORE, INFORMATION, NO, OK, RETRY, SUCCESS, WARNING, YES } from '../../i18n/i18n-defaults.js';\nimport { Button, Dialog, Icon, Text, Title } from '../../webComponents/index.js';\nimport { classNames, styleData } from './MessageBox.module.css.js';\n\n// eslint-disable-next-line @typescript-eslint/no-redundant-type-constituents\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst getIcon = (icon, type, classes) => {\n  if ( /*#__PURE__*/isValidElement(icon)) return icon;\n  switch (type) {\n    case MessageBoxType.Confirm:\n      return /*#__PURE__*/_jsx(Icon, {\n        name: iconSysHelp,\n        mode: IconMode.Decorative,\n        className: classes.confirmIcon\n      });\n    default:\n      return null;\n  }\n};\nconst convertMessageBoxTypeToState = type => {\n  switch (type) {\n    case MessageBoxType.Information:\n      return ValueState.Information;\n    case MessageBoxType.Success:\n      return ValueState.Positive;\n    case MessageBoxType.Warning:\n      return ValueState.Critical;\n    case MessageBoxType.Error:\n      return ValueState.Negative;\n    default:\n      return ValueState.None;\n  }\n};\nconst getActions = (actions, type) => {\n  if (actions && actions.length > 0) {\n    return actions;\n  }\n  if (type === MessageBoxType.Confirm) {\n    return [MessageBoxAction.OK, MessageBoxAction.Cancel];\n  }\n  if (type === MessageBoxType.Error) {\n    return [MessageBoxAction.Close];\n  }\n  return [MessageBoxAction.OK];\n};\n\n/**\n * The `MessageBox` component provides easier methods to create a `Dialog`, such as standard alerts, confirmation dialogs, or arbitrary message dialogs.\n */\nconst MessageBox = /*#__PURE__*/forwardRef((props, ref) => {\n  const {\n    open,\n    type = MessageBoxType.Confirm,\n    children,\n    className,\n    titleText,\n    icon,\n    actions = [],\n    emphasizedAction = MessageBoxAction.OK,\n    onClose,\n    initialFocus,\n    ...rest\n  } = props;\n  useStylesheet(styleData, MessageBox.displayName);\n  const i18nBundle = useI18nBundle('@ui5/webcomponents-react');\n  const actionTranslations = {\n    [MessageBoxAction.Abort]: i18nBundle.getText(ABORT),\n    [MessageBoxAction.Cancel]: i18nBundle.getText(CANCEL),\n    [MessageBoxAction.Close]: i18nBundle.getText(CLOSE),\n    [MessageBoxAction.Delete]: i18nBundle.getText(DELETE),\n    [MessageBoxAction.Ignore]: i18nBundle.getText(IGNORE),\n    [MessageBoxAction.No]: i18nBundle.getText(NO),\n    [MessageBoxAction.OK]: i18nBundle.getText(OK),\n    [MessageBoxAction.Retry]: i18nBundle.getText(RETRY),\n    [MessageBoxAction.Yes]: i18nBundle.getText(YES)\n  };\n  const titleToRender = () => {\n    if (titleText) {\n      return titleText;\n    }\n    switch (type) {\n      case MessageBoxType.Confirm:\n        return i18nBundle.getText(CONFIRMATION);\n      case MessageBoxType.Error:\n        return i18nBundle.getText(ERROR);\n      case MessageBoxType.Information:\n        return i18nBundle.getText(INFORMATION);\n      case MessageBoxType.Success:\n        return i18nBundle.getText(SUCCESS);\n      case MessageBoxType.Warning:\n        return i18nBundle.getText(WARNING);\n      default:\n        return null;\n    }\n  };\n  const handleDialogClose = e => {\n    if (typeof props.onBeforeClose === 'function') {\n      props.onBeforeClose(e);\n    }\n    if (e.detail.escPressed && typeof onClose === 'function') {\n      onClose(undefined, e.detail.escPressed);\n    }\n  };\n  const handleOnClose = e => {\n    const {\n      action\n    } = e.currentTarget.dataset;\n    if (typeof onClose === 'function') {\n      onClose(action);\n    }\n  };\n  const messageBoxId = useId();\n  const internalActions = getActions(actions, type);\n  const getInitialFocus = () => {\n    const actionToFocus = internalActions.find(action => action === initialFocus);\n    if (typeof actionToFocus === 'string') {\n      return `${messageBoxId}-action-${actionToFocus}`;\n    }\n    return initialFocus;\n  };\n\n  // @ts-expect-error: footer, headerText and onClose are already omitted via prop types\n  const {\n    footer: _0,\n    headerText: _1,\n    onClose: _2,\n    onBeforeClose: _3,\n    ...restWithoutOmitted\n  } = rest;\n  const iconToRender = getIcon(icon, type, classNames);\n  const needsCustomHeader = !props.header && !!iconToRender;\n  return /*#__PURE__*/_jsxs(Dialog, {\n    open: open,\n    ref: ref,\n    className: clsx(classNames.messageBox, className),\n    onBeforeClose: handleDialogClose,\n    accessibleNameRef: needsCustomHeader ? `${messageBoxId}-title ${messageBoxId}-text` : undefined,\n    accessibleRole: PopupAccessibleRole.AlertDialog,\n    ...restWithoutOmitted,\n    headerText: titleToRender(),\n    state: convertMessageBoxTypeToState(type),\n    initialFocus: getInitialFocus(),\n    \"data-type\": type,\n    children: [needsCustomHeader && /*#__PURE__*/_jsxs(\"div\", {\n      slot: \"header\",\n      className: classNames.header,\n      children: [iconToRender, iconToRender && /*#__PURE__*/_jsx(\"span\", {\n        className: classNames.spacer\n      }), /*#__PURE__*/_jsx(Title, {\n        id: `${messageBoxId}-title`,\n        level: TitleLevel.H1,\n        children: titleToRender()\n      })]\n    }), /*#__PURE__*/_jsx(Text, {\n      id: `${messageBoxId}-text`,\n      children: children\n    }), /*#__PURE__*/_jsx(\"div\", {\n      slot: \"footer\",\n      className: classNames.footer,\n      children: internalActions.map((action, index) => {\n        if (typeof action !== 'string' && /*#__PURE__*/isValidElement(action)) {\n          return /*#__PURE__*/cloneElement(action, {\n            onClick: action?.props?.onClick ? e => {\n              action?.props?.onClick(e);\n              handleOnClose(e);\n            } : handleOnClose,\n            'data-action': action?.props?.['data-action'] ?? `${index}: custom action`\n          });\n        }\n        if (typeof action === 'string') {\n          return /*#__PURE__*/_jsx(Button, {\n            id: `${messageBoxId}-action-${action}`,\n            design: emphasizedAction === action ? ButtonDesign.Emphasized : ButtonDesign.Transparent,\n            onClick: handleOnClose,\n            \"data-action\": action,\n            children: actionTranslations[action] ?? action\n          }, `${action}-${index}`);\n        }\n        return null;\n      })\n    })]\n  });\n});\nMessageBox.displayName = 'MessageBox';\nexport { MessageBox };"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}