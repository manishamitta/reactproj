{"ast":null,"code":"var __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n    r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n    d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar TimePickerInternals_1;\nimport UI5Element from \"@ui5/webcomponents-base/dist/UI5Element.js\";\nimport litRender from \"@ui5/webcomponents-base/dist/renderer/LitRenderer.js\";\nimport customElement from \"@ui5/webcomponents-base/dist/decorators/customElement.js\";\nimport property from \"@ui5/webcomponents-base/dist/decorators/property.js\";\nimport event from \"@ui5/webcomponents-base/dist/decorators/event.js\";\nimport { getI18nBundle } from \"@ui5/webcomponents-base/dist/i18nBundle.js\";\nimport getLocale from \"@ui5/webcomponents-base/dist/locale/getLocale.js\";\nimport DateFormat from \"@ui5/webcomponents-localization/dist/DateFormat.js\";\nimport getCachedLocaleDataInstance from \"@ui5/webcomponents-localization/dist/getCachedLocaleDataInstance.js\";\nimport \"@ui5/webcomponents-localization/dist/features/calendar/Gregorian.js\"; // default calendar for bundling\nimport { fetchCldr } from \"@ui5/webcomponents-base/dist/asset-registries/LocaleData.js\";\nimport UI5Date from \"@ui5/webcomponents-localization/dist/dates/UI5Date.js\";\nimport { getHoursConfigByFormat, getTimeControlsByFormat } from \"./timepicker-utils/TimeSlider.js\";\nimport { TIMEPICKER_HOURS_LABEL, TIMEPICKER_MINUTES_LABEL, TIMEPICKER_SECONDS_LABEL, TIMEPICKER_CLOCK_DIAL_LABEL } from \"./generated/i18n/i18n-defaults.js\";\nconst TYPE_COOLDOWN_DELAY = 1000; // Cooldown delay; 0 = disabled cooldown\n/**\n * @class\n *\n * ### Overview\n *\n * `ui5-time-picker-internals` is helper component that contains shared methods used in `ui5-time-selection-clocks`\n * and `<ui5-time-selection-inputs>` components and should not be used separately.\n * @constructor\n * @extends UI5Element\n * @abstract\n * @since 1.15.0\n * @private\n */\nlet TimePickerInternals = TimePickerInternals_1 = class TimePickerInternals extends UI5Element {\n  constructor() {\n    super(...arguments);\n    /**\n     * The index of the active Clock/TogleSpinButton.\n     * @default 0\n     * @private\n     */\n    this._activeIndex = 0;\n    /**\n     * Contains currently available Time Picker components depending on time format.\n     * @private\n     */\n    this._entities = [];\n    /**\n     * Contains currently available Button components depending on time format.\n     * @private\n     */\n    this._periods = [];\n    /**\n     * Buffer for entered by keyboard numbers\n     * @private\n     */\n    this._keyboardBuffer = \"\";\n  }\n  static async onDefine() {\n    [TimePickerInternals_1.i18nBundle] = await Promise.all([getI18nBundle(\"@ui5/webcomponents\"), fetchCldr(getLocale().getLanguage(), getLocale().getRegion(), getLocale().getScript())]);\n  }\n  get _hoursConfiguration() {\n    // @ts-ignore aFormatArray is a private API of DateFormat\n    const formatArray = this.getFormat().aFormatArray;\n    const hourFormat = formatArray.find(item => item.type.startsWith(\"hour\")); // try to find an entry for the hours\n    return getHoursConfigByFormat(hourFormat ? hourFormat.type : \"hour0_23\");\n  }\n  get _zeroPaddedHours() {\n    // @ts-ignore aFormatArray is a private API of DateFormat\n    const formatArray = this.getFormat().aFormatArray;\n    const hourFormat = formatArray.find(item => item.type.startsWith(\"hour\")); // try to find an entry for the hours\n    // @ts-ignore digits is a private API of aFormatArray\n    return !(hourFormat.digits && hourFormat.digits === 1);\n  }\n  get _neededComponents() {\n    // @ts-ignore aFormatArray is a private API of DateFormat\n    const formatArray = this.getFormat().aFormatArray;\n    return getTimeControlsByFormat(formatArray, this._hoursConfiguration);\n  }\n  get _hasHoursComponent() {\n    return this._neededComponents[0];\n  }\n  get _hasMinutesComponent() {\n    return this._neededComponents[1];\n  }\n  get _hasSecondsComponent() {\n    return this._neededComponents[2];\n  }\n  get _hasPeriodsComponent() {\n    return this._neededComponents[3];\n  }\n  get dateValue() {\n    return this.value ? this.getFormat().parse(this.value, undefined, undefined) : UI5Date.getInstance();\n  }\n  get validDateValue() {\n    return this.value !== undefined && this.isValid(this.value) ? this.dateValue : UI5Date.getInstance();\n  }\n  get periodsArray() {\n    // @ts-ignore aDayPeriodsAbbrev is a private API of DateFormat\n    const dayPeriodsAbbrev = this.getFormat().aDayPeriodsAbbrev;\n    return dayPeriodsAbbrev.map(x => x.toUpperCase());\n  }\n  get _hours() {\n    let hours;\n    const dateValue = this.validDateValue;\n    if (this._hoursConfiguration.isTwelveHoursFormat && dateValue.getHours() > this._hoursConfiguration.maxHour) {\n      hours = dateValue.getHours() - 12;\n    } else if (this._hoursConfiguration.isTwelveHoursFormat && dateValue.getHours() < this._hoursConfiguration.minHour) {\n      hours = dateValue.getHours() + 12;\n    } else {\n      hours = dateValue.getHours();\n    }\n    if (hours.toString().length === 1 && this._zeroPaddedHours) {\n      hours = `0${hours}`;\n    }\n    return hours.toString();\n  }\n  get _minutes() {\n    const minutes = this.validDateValue.getMinutes().toString();\n    return minutes.length === 1 ? `0${minutes}` : minutes;\n  }\n  get _seconds() {\n    const seconds = this.validDateValue.getSeconds().toString();\n    return seconds.length === 1 ? `0${seconds}` : seconds;\n  }\n  get _period() {\n    let period;\n    const dateValue = this.validDateValue;\n    if (!this._hoursConfiguration.isTwelveHoursFormat) {\n      return undefined;\n    }\n    if (this._hoursConfiguration.minHour === 1) {\n      period = dateValue.getHours() >= this._hoursConfiguration.maxHour ? this.periodsArray[1] : this.periodsArray[0];\n    } else {\n      period = dateValue.getHours() > this._hoursConfiguration.maxHour || dateValue.getHours() === this._hoursConfiguration.minHour ? this.periodsArray[1] : this.periodsArray[0];\n    }\n    return period;\n  }\n  get _formatPattern() {\n    const pattern = this.formatPattern;\n    const hasHours = !!pattern?.match(/H/i);\n    const fallback = !pattern || !hasHours;\n    const localeData = getCachedLocaleDataInstance(getLocale());\n    return fallback ? localeData.getCombinedDateTimePattern(\"medium\", \"medium\", undefined) : pattern;\n  }\n  get _isPattern() {\n    return this._formatPattern !== \"medium\" && this._formatPattern !== \"short\" && this._formatPattern !== \"long\";\n  }\n  get hoursLabel() {\n    return TimePickerInternals_1.i18nBundle.getText(TIMEPICKER_HOURS_LABEL);\n  }\n  get minutesLabel() {\n    return TimePickerInternals_1.i18nBundle.getText(TIMEPICKER_MINUTES_LABEL);\n  }\n  get secondsLabel() {\n    return TimePickerInternals_1.i18nBundle.getText(TIMEPICKER_SECONDS_LABEL);\n  }\n  get clockDialAriaLabel() {\n    return TimePickerInternals_1.i18nBundle.getText(TIMEPICKER_CLOCK_DIAL_LABEL);\n  }\n  setValue(date) {\n    const value = this.formatValue(date);\n    if (this.isValid(value)) {\n      this.value = this.normalizeValue(value);\n      this.fireEvent(\"change\", {\n        value: this.value,\n        valid: true\n      });\n    }\n  }\n  isValid(value) {\n    return value === \"\" || this.getFormat().parse(value, undefined, undefined);\n  }\n  normalizeValue(value) {\n    if (value === \"\") {\n      return value;\n    }\n    return this.getFormat().format(this.getFormat().parse(value, undefined, undefined));\n  }\n  getFormat() {\n    let dateFormat;\n    if (this._isPattern) {\n      dateFormat = DateFormat.getDateInstance({\n        calendarType: this._calendarType,\n        pattern: this._formatPattern\n      });\n    } else {\n      dateFormat = DateFormat.getDateInstance({\n        calendarType: this._calendarType,\n        style: this._formatPattern\n      });\n    }\n    return dateFormat;\n  }\n  formatValue(date) {\n    return this.getFormat().format(date);\n  }\n  _componentKey(name) {\n    return name;\n  }\n  _indexFromName(name) {\n    return this._componentMap[this._componentKey(name)];\n  }\n  /**\n   * Returns name of the clock or button from the id of the event target.\n   * @returns name of the clock/button\n   */\n  _getNameFromId(id) {\n    const parts = id.split(\"_\");\n    return parts.length ? parts[parts.length - 1] : undefined;\n  }\n  /**\n   * Returns index of the clock or button from the id of the event target.\n   * @returns index of the clock/button\n   */\n  _getIndexFromId(id) {\n    const name = this._getNameFromId(id);\n    return name ? this._indexFromName(name) : 0;\n  }\n  /**\n   * Changes hours value.\n   * @param hours new hours value\n   */\n  _hoursChange(hours) {\n    if (this._hoursConfiguration.isTwelveHoursFormat) {\n      hours = this._shiftHours(hours);\n    }\n    const date = this.validDateValue;\n    date.setHours(hours);\n    this.setValue(date);\n  }\n  /**\n   * Changes minutes value.\n   * @param minutes new minutes value\n   */\n  _minutesChange(minutes) {\n    const date = this.validDateValue;\n    date.setMinutes(minutes);\n    this.setValue(date);\n  }\n  /**\n   * Changes seconds value.\n   * @param seconds new seconds value\n   */\n  _secondsChange(seconds) {\n    const date = this.validDateValue;\n    date.setSeconds(seconds);\n    this.setValue(date);\n  }\n  _buttonAmPm() {\n    return this._hasPeriodsComponent ? this.shadowRoot?.querySelector(`#${this._id}_AmPm`) : undefined;\n  }\n  _createPeriodComponent() {\n    if (this._hasPeriodsComponent) {\n      // add period item\n      this.periodsArray.forEach(item => {\n        this._periods.push({\n          \"label\": item,\n          \"selected\": this._period === item\n        });\n      });\n    }\n  }\n  _periodChange(evt) {\n    const periodItem = evt.target;\n    if (periodItem) {\n      const period = periodItem.textContent;\n      this._calculatePeriodChange(period);\n    }\n  }\n  _calculatePeriodChange(period) {\n    const date = this.validDateValue;\n    if (period === this._periods[0].label && date.getHours() >= 12) {\n      date.setHours(date.getHours() - 12);\n    }\n    if (period === this._periods[1].label && date.getHours() < 12) {\n      date.setHours(date.getHours() + 12);\n    }\n    this.setValue(date);\n  }\n  /**\n   * Shifts hours value with +/- 12 depending on hour value and day period.\n   * @param hours current hours\n   * @returns shifted hours\n   */\n  _shiftHours(hours) {\n    if (this._period === this.periodsArray[0]) {\n      // AM\n      hours = hours === 12 ? 0 : hours;\n    } else if (this._period === this.periodsArray[1]) {\n      // PM\n      hours = hours === 12 ? hours : hours + 12;\n    }\n    return hours;\n  }\n  /**\n   * Clears the currently existing cooldown period and starts new one if requested.\n   * @param startNewCooldown whether to start new cooldown period after clearing previous one\n   */\n  _resetCooldown(startNewCooldown) {\n    if (!TYPE_COOLDOWN_DELAY) {\n      return; // if delay is 0, cooldown is disabled\n    }\n    if (this._typeCooldownId) {\n      clearTimeout(this._typeCooldownId);\n    }\n    if (startNewCooldown) {\n      this._startCooldown();\n    }\n  }\n  /**\n   * Starts new cooldown period.\n   */\n  _startCooldown() {\n    if (!TYPE_COOLDOWN_DELAY) {\n      return; // if delay is 0, cooldown is disabled\n    }\n    this._typeCooldownId = setTimeout(() => {\n      this._keyboardBuffer = \"\";\n      this._typeCooldownId = undefined;\n      if (this._exactMatch) {\n        this._setExactMatch();\n        this._exactMatch = undefined;\n      }\n    }, TYPE_COOLDOWN_DELAY);\n  }\n  /**\n   * Sets the exact match value. Override if necessary.\n   */\n  _setExactMatch() {}\n};\n__decorate([property()], TimePickerInternals.prototype, \"value\", void 0);\n__decorate([property()], TimePickerInternals.prototype, \"formatPattern\", void 0);\n__decorate([property({\n  type: Number,\n  noAttribute: true\n})], TimePickerInternals.prototype, \"_activeIndex\", void 0);\n__decorate([property()], TimePickerInternals.prototype, \"_calendarType\", void 0);\n__decorate([property({\n  type: Array\n})], TimePickerInternals.prototype, \"_entities\", void 0);\n__decorate([property({\n  type: Object\n})], TimePickerInternals.prototype, \"_componentMap\", void 0);\n__decorate([property({\n  type: Array\n})], TimePickerInternals.prototype, \"_periods\", void 0);\n__decorate([property({\n  type: Number,\n  noAttribute: true\n})], TimePickerInternals.prototype, \"_typeCooldownId\", void 0);\n__decorate([property({\n  type: Number,\n  noAttribute: true\n})], TimePickerInternals.prototype, \"_exactMatch\", void 0);\n__decorate([property({\n  noAttribute: true\n})], TimePickerInternals.prototype, \"_keyboardBuffer\", void 0);\nTimePickerInternals = TimePickerInternals_1 = __decorate([customElement({\n  renderer: litRender\n})\n/**\n * Fired when the value changes due to user interaction with the sliders.\n */, event(\"change\", {\n  detail: {\n    value: {\n      type: String\n    },\n    valid: {\n      type: Boolean\n    }\n  }\n})], TimePickerInternals);\nexport default TimePickerInternals;","map":{"version":3,"names":["UI5Element","litRender","customElement","property","event","getI18nBundle","getLocale","DateFormat","getCachedLocaleDataInstance","fetchCldr","UI5Date","getHoursConfigByFormat","getTimeControlsByFormat","TIMEPICKER_HOURS_LABEL","TIMEPICKER_MINUTES_LABEL","TIMEPICKER_SECONDS_LABEL","TIMEPICKER_CLOCK_DIAL_LABEL","TYPE_COOLDOWN_DELAY","TimePickerInternals","TimePickerInternals_1","constructor","_activeIndex","_entities","_periods","_keyboardBuffer","onDefine","i18nBundle","Promise","all","getLanguage","getRegion","getScript","_hoursConfiguration","formatArray","getFormat","aFormatArray","hourFormat","find","item","type","startsWith","_zeroPaddedHours","digits","_neededComponents","_hasHoursComponent","_hasMinutesComponent","_hasSecondsComponent","_hasPeriodsComponent","dateValue","value","parse","undefined","getInstance","validDateValue","isValid","periodsArray","dayPeriodsAbbrev","aDayPeriodsAbbrev","map","x","toUpperCase","_hours","hours","isTwelveHoursFormat","getHours","maxHour","minHour","toString","length","_minutes","minutes","getMinutes","_seconds","seconds","getSeconds","_period","period","_formatPattern","pattern","formatPattern","hasHours","match","fallback","localeData","getCombinedDateTimePattern","_isPattern","hoursLabel","getText","minutesLabel","secondsLabel","clockDialAriaLabel","setValue","date","formatValue","normalizeValue","fireEvent","valid","format","dateFormat","getDateInstance","calendarType","_calendarType","style","_componentKey","name","_indexFromName","_componentMap","_getNameFromId","id","parts","split","_getIndexFromId","_hoursChange","_shiftHours","setHours","_minutesChange","setMinutes","_secondsChange","setSeconds","_buttonAmPm","shadowRoot","querySelector","_id","_createPeriodComponent","forEach","push","_periodChange","evt","periodItem","target","textContent","_calculatePeriodChange","label","_resetCooldown","startNewCooldown","_typeCooldownId","clearTimeout","_startCooldown","setTimeout","_exactMatch","_setExactMatch","__decorate","Number","noAttribute","Array","Object","renderer","detail","String","Boolean"],"sources":["/home/user/projects/reactproj/node_modules/@ui5/webcomponents/src/TimePickerInternals.ts"],"sourcesContent":["import UI5Element from \"@ui5/webcomponents-base/dist/UI5Element.js\";\nimport litRender from \"@ui5/webcomponents-base/dist/renderer/LitRenderer.js\";\nimport customElement from \"@ui5/webcomponents-base/dist/decorators/customElement.js\";\nimport property from \"@ui5/webcomponents-base/dist/decorators/property.js\";\nimport event from \"@ui5/webcomponents-base/dist/decorators/event.js\";\nimport { getI18nBundle } from \"@ui5/webcomponents-base/dist/i18nBundle.js\";\nimport type I18nBundle from \"@ui5/webcomponents-base/dist/i18nBundle.js\";\nimport getLocale from \"@ui5/webcomponents-base/dist/locale/getLocale.js\";\nimport DateFormat from \"@ui5/webcomponents-localization/dist/DateFormat.js\";\nimport getCachedLocaleDataInstance from \"@ui5/webcomponents-localization/dist/getCachedLocaleDataInstance.js\";\nimport \"@ui5/webcomponents-localization/dist/features/calendar/Gregorian.js\"; // default calendar for bundling\nimport type CalendarType from \"@ui5/webcomponents-base/dist/types/CalendarType.js\";\nimport { fetchCldr } from \"@ui5/webcomponents-base/dist/asset-registries/LocaleData.js\";\nimport UI5Date from \"@ui5/webcomponents-localization/dist/dates/UI5Date.js\";\nimport type SegmentedButton from \"./SegmentedButton.js\";\nimport { getHoursConfigByFormat, getTimeControlsByFormat } from \"./timepicker-utils/TimeSlider.js\";\nimport type { HourType } from \"./timepicker-utils/TimeSlider.js\";\nimport {\n\tTIMEPICKER_HOURS_LABEL,\n\tTIMEPICKER_MINUTES_LABEL,\n\tTIMEPICKER_SECONDS_LABEL,\n\tTIMEPICKER_CLOCK_DIAL_LABEL,\n} from \"./generated/i18n/i18n-defaults.js\";\n\ntype TimePickerComponentIndexMap = {\n\thours: number,\n\tminutes: number,\n\tseconds: number,\n}\n\ntype TimeSelectionPeriodProperties = {\n\tlabel: string,\n\tselected: boolean,\n}\n\ntype TimeSelectionChangeEventDetail = {\n\tvalue: string | undefined,\n\tvalid: boolean,\n}\n\ntype TimePickerEntityAttributes = {\n\tmin: number,\n\tmax: number,\n\tstep: number,\n}\n\ntype TimePickerEntityProperties = {\n\tlabel: string,\n\tentity?: string,\n\titemMin?: number,\n\titemMax?: number,\n\tvalue: number,\n\tstringValue?: string,\n\ttextValue?: string,\n\tdisplayStep?: number,\n\tlastItemReplacement?: number,\n\tshowInnerCircle?: boolean,\n\tprependZero: boolean,\n\tactive?: boolean,\n\tfocused?: boolean,\n\thasSeparator?: boolean,\n\tattributes?: TimePickerEntityAttributes,\n}\n\nconst TYPE_COOLDOWN_DELAY = 1000; // Cooldown delay; 0 = disabled cooldown\n\n/**\n * @class\n *\n * ### Overview\n *\n * `ui5-time-picker-internals` is helper component that contains shared methods used in `ui5-time-selection-clocks`\n * and `<ui5-time-selection-inputs>` components and should not be used separately.\n * @constructor\n * @extends UI5Element\n * @abstract\n * @since 1.15.0\n * @private\n */\n@customElement({\n\trenderer: litRender,\n})\n\n/**\n * Fired when the value changes due to user interaction with the sliders.\n */\n@event<TimeSelectionChangeEventDetail>(\"change\", {\n\tdetail: {\n\t\tvalue: { type: String },\n\t\tvalid: { type: Boolean },\n\t},\n})\n\nclass TimePickerInternals extends UI5Element {\n\t/**\n\t * Defines a formatted time value.\n\t * @default undefined\n\t * @public\n\t */\n\t@property()\n\tvalue?: string;\n\n\t/**\n\t * Determines the format, displayed in the input field.\n\t *\n\t * Example:\n\t * HH:mm:ss -> 11:42:35\n\t * hh:mm:ss a -> 2:23:15 PM\n\t * mm:ss -> 12:04 (only minutes and seconds)\n\n\t * @default undefined\n\t * @public\n\t */\n\t@property()\n\tformatPattern?: string;\n\n\t/**\n\t * The index of the active Clock/TogleSpinButton.\n\t * @default 0\n\t * @private\n\t */\n\t@property({ type: Number, noAttribute: true })\n\t_activeIndex = 0\n\n\t/**\n\t * Contains calendar type.\n\t * @private\n\t */\n\t@property()\n\t_calendarType?: CalendarType;\n\n\t/**\n\t * Contains currently available Time Picker components depending on time format.\n\t * @private\n\t */\n\t@property({ type: Array })\n\t_entities: Array<TimePickerEntityProperties> = [];\n\n\t/**\n\t * Contains component-to-index map.\n\t * @private\n\t */\n\t@property({ type: Object })\n\t_componentMap!: TimePickerComponentIndexMap;\n\n\t/**\n\t * Contains currently available Button components depending on time format.\n\t * @private\n\t */\n\t@property({ type: Array })\n\t_periods: Array<TimeSelectionPeriodProperties> = [];\n\n\t/**\n\t * Id of the cooldown interval\n\t * @private\n\t */\n\t@property({ type: Number, noAttribute: true })\n\t_typeCooldownId?: ReturnType<typeof setTimeout>;\n\n\t/**\n\t * Exact match number buffer\n\t * @private\n\t */\n\t@property({ type: Number, noAttribute: true })\n\t_exactMatch?: number;\n\n\t/**\n\t * Buffer for entered by keyboard numbers\n\t * @private\n\t */\n\t@property({ noAttribute: true })\n\t_keyboardBuffer = \"\";\n\n\tstatic i18nBundle: I18nBundle;\n\n\tstatic async onDefine() {\n\t\t[TimePickerInternals.i18nBundle] = await Promise.all([\n\t\t\tgetI18nBundle(\"@ui5/webcomponents\"),\n\t\t\tfetchCldr(getLocale().getLanguage(), getLocale().getRegion(), getLocale().getScript()),\n\t\t]);\n\t}\n\n\tget _hoursConfiguration() {\n\t\t// @ts-ignore aFormatArray is a private API of DateFormat\n\t\tconst formatArray = this.getFormat().aFormatArray as Array<{ type: HourType }>;\n\t\tconst hourFormat = formatArray.find(item => item.type.startsWith(\"hour\")); // try to find an entry for the hours\n\t\treturn getHoursConfigByFormat(hourFormat ? hourFormat.type : \"hour0_23\");\n\t}\n\n\tget _zeroPaddedHours() {\n\t\t// @ts-ignore aFormatArray is a private API of DateFormat\n\t\tconst formatArray = this.getFormat().aFormatArray as Array<{ type: HourType }>;\n\t\tconst hourFormat = formatArray.find(item => item.type.startsWith(\"hour\")); // try to find an entry for the hours\n\t\t// @ts-ignore digits is a private API of aFormatArray\n\t\treturn !(hourFormat.digits && (hourFormat.digits as Integer) === 1);\n\t}\n\n\tget _neededComponents() {\n\t\t// @ts-ignore aFormatArray is a private API of DateFormat\n\t\tconst formatArray = this.getFormat().aFormatArray as Array<{ type: HourType }>;\n\t\treturn getTimeControlsByFormat(formatArray, this._hoursConfiguration);\n\t}\n\n\tget _hasHoursComponent() {\n\t\treturn this._neededComponents[0];\n\t}\n\n\tget _hasMinutesComponent() {\n\t\treturn this._neededComponents[1];\n\t}\n\n\tget _hasSecondsComponent() {\n\t\treturn this._neededComponents[2];\n\t}\n\n\tget _hasPeriodsComponent() {\n\t\treturn this._neededComponents[3];\n\t}\n\n\tget dateValue() {\n\t\treturn this.value ? this.getFormat().parse(this.value, undefined as unknown as boolean, undefined as unknown as boolean) as Date : UI5Date.getInstance();\n\t}\n\n\tget validDateValue() {\n\t\treturn this.value !== undefined && this.isValid(this.value) ? this.dateValue : UI5Date.getInstance();\n\t}\n\n\tget periodsArray() {\n\t\t// @ts-ignore aDayPeriodsAbbrev is a private API of DateFormat\n\t\tconst dayPeriodsAbbrev = this.getFormat().aDayPeriodsAbbrev as Array<string>;\n\t\treturn dayPeriodsAbbrev.map((x: string) => x.toUpperCase());\n\t}\n\n\tget _hours() {\n\t\tlet hours;\n\t\tconst dateValue = this.validDateValue;\n\t\tif (this._hoursConfiguration.isTwelveHoursFormat && dateValue.getHours() > this._hoursConfiguration.maxHour) {\n\t\t\thours = dateValue.getHours() - 12;\n\t\t} else if (this._hoursConfiguration.isTwelveHoursFormat && dateValue.getHours() < this._hoursConfiguration.minHour) {\n\t\t\thours = dateValue.getHours() + 12;\n\t\t} else {\n\t\t\thours = dateValue.getHours();\n\t\t}\n\t\tif (hours.toString().length === 1 && this._zeroPaddedHours) {\n\t\t\thours = `0${hours}`;\n\t\t}\n\t\treturn hours.toString();\n\t}\n\n\tget _minutes() {\n\t\tconst minutes = this.validDateValue.getMinutes().toString();\n\t\treturn minutes.length === 1 ? `0${minutes}` : minutes;\n\t}\n\n\tget _seconds() {\n\t\tconst seconds = this.validDateValue.getSeconds().toString();\n\t\treturn seconds.length === 1 ? `0${seconds}` : seconds;\n\t}\n\n\tget _period() {\n\t\tlet period;\n\t\tconst dateValue = this.validDateValue;\n\n\t\tif (!this._hoursConfiguration.isTwelveHoursFormat) {\n\t\t\treturn undefined;\n\t\t}\n\t\tif (this._hoursConfiguration.minHour === 1) {\n\t\t\tperiod = dateValue.getHours() >= this._hoursConfiguration.maxHour ? this.periodsArray[1] : this.periodsArray[0];\n\t\t} else {\n\t\t\tperiod = (dateValue.getHours() > this._hoursConfiguration.maxHour || dateValue.getHours() === this._hoursConfiguration.minHour) ? this.periodsArray[1] : this.periodsArray[0];\n\t\t}\n\t\treturn period;\n\t}\n\n\tget _formatPattern() {\n\t\tconst pattern = this.formatPattern;\n\t\tconst hasHours = !!pattern?.match(/H/i);\n\t\tconst fallback = !pattern || !hasHours;\n\t\tconst localeData = getCachedLocaleDataInstance(getLocale());\n\n\t\treturn fallback ? localeData.getCombinedDateTimePattern(\"medium\", \"medium\", undefined) : pattern;\n\t}\n\n\tget _isPattern() {\n\t\treturn this._formatPattern !== \"medium\" && this._formatPattern !== \"short\" && this._formatPattern !== \"long\";\n\t}\n\n\tget hoursLabel() {\n\t\treturn TimePickerInternals.i18nBundle.getText(TIMEPICKER_HOURS_LABEL);\n\t}\n\n\tget minutesLabel() {\n\t\treturn TimePickerInternals.i18nBundle.getText(TIMEPICKER_MINUTES_LABEL);\n\t}\n\n\tget secondsLabel() {\n\t\treturn TimePickerInternals.i18nBundle.getText(TIMEPICKER_SECONDS_LABEL);\n\t}\n\n\tget clockDialAriaLabel() {\n\t\treturn TimePickerInternals.i18nBundle.getText(TIMEPICKER_CLOCK_DIAL_LABEL);\n\t}\n\n\tsetValue(date: Date) {\n\t\tconst value = this.formatValue(date);\n\n\t\tif (this.isValid(value)) {\n\t\t\tthis.value = this.normalizeValue(value);\n\t\t\tthis.fireEvent<TimeSelectionChangeEventDetail>(\"change\", { value: this.value, valid: true });\n\t\t}\n\t}\n\n\tisValid(value: string) {\n\t\treturn value === \"\" || this.getFormat().parse(value, undefined as unknown as boolean, undefined as unknown as boolean);\n\t}\n\n\tnormalizeValue(value: string) {\n\t\tif (value === \"\") {\n\t\t\treturn value;\n\t\t}\n\t\treturn this.getFormat().format(this.getFormat().parse(value, undefined as unknown as boolean, undefined as unknown as boolean));\n\t}\n\n\tgetFormat() {\n\t\tlet dateFormat: DateFormat;\n\t\tif (this._isPattern) {\n\t\t\tdateFormat = DateFormat.getDateInstance({\n\t\t\t\tcalendarType: this._calendarType,\n\t\t\t\tpattern: this._formatPattern,\n\t\t\t});\n\t\t} else {\n\t\t\tdateFormat = DateFormat.getDateInstance({\n\t\t\t\tcalendarType: this._calendarType,\n\t\t\t\tstyle: this._formatPattern,\n\t\t\t});\n\t\t}\n\t\treturn dateFormat;\n\t}\n\n\tformatValue(date: Date) {\n\t\treturn this.getFormat().format(date);\n\t}\n\n\t_componentKey(name: string) {\n\t\ttype ComponentKey = keyof typeof this._componentMap;\n\t\treturn name as ComponentKey;\n\t}\n\n\t_indexFromName(name: string) {\n\t\treturn this._componentMap[this._componentKey(name)];\n\t}\n\n\t/**\n\t * Returns name of the clock or button from the id of the event target.\n\t * @returns name of the clock/button\n\t */\n\t_getNameFromId(id: string): string | undefined {\n\t\tconst parts = id.split(\"_\");\n\n\t\treturn parts.length ? parts[parts.length - 1] : undefined;\n\t}\n\n\t/**\n\t * Returns index of the clock or button from the id of the event target.\n\t * @returns index of the clock/button\n\t */\n\t_getIndexFromId(id: string): number {\n\t\tconst name = this._getNameFromId(id);\n\n\t\treturn name ? this._indexFromName(name) : 0;\n\t}\n\n\t/**\n\t * Changes hours value.\n\t * @param hours new hours value\n\t */\n\t_hoursChange(hours: number) {\n\t\tif (this._hoursConfiguration.isTwelveHoursFormat) {\n\t\t\thours = this._shiftHours(hours);\n\t\t}\n\n\t\tconst date = this.validDateValue;\n\n\t\tdate.setHours(hours);\n\t\tthis.setValue(date);\n\t}\n\n\t/**\n\t * Changes minutes value.\n\t * @param minutes new minutes value\n\t */\n\t_minutesChange(minutes: number) {\n\t\tconst date = this.validDateValue;\n\n\t\tdate.setMinutes(minutes);\n\t\tthis.setValue(date);\n\t}\n\n\t/**\n\t * Changes seconds value.\n\t * @param seconds new seconds value\n\t */\n\t_secondsChange(seconds: number) {\n\t\tconst date = this.validDateValue;\n\n\t\tdate.setSeconds(seconds);\n\t\tthis.setValue(date);\n\t}\n\n\t_buttonAmPm() {\n\t\treturn this._hasPeriodsComponent ? this.shadowRoot?.querySelector<SegmentedButton>(`#${this._id}_AmPm`) : undefined;\n\t}\n\n\t_createPeriodComponent() {\n\t\tif (this._hasPeriodsComponent) {\n\t\t\t// add period item\n\t\t\tthis.periodsArray.forEach(item => {\n\t\t\t\tthis._periods.push({\n\t\t\t\t\t\"label\": item,\n\t\t\t\t\t\"selected\": this._period === item,\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\t}\n\n\t_periodChange(evt: PointerEvent) {\n\t\tconst periodItem = evt.target;\n\n\t\tif (periodItem) {\n\t\t\tconst period = (periodItem as HTMLElement).textContent;\n\t\t\tthis._calculatePeriodChange(period as string);\n\t\t}\n\t}\n\n\t_calculatePeriodChange(period: string) {\n\t\tconst date = this.validDateValue;\n\n\t\tif (period === this._periods[0].label && date.getHours() >= 12) {\n\t\t\tdate.setHours(date.getHours() - 12);\n\t\t} if (period === this._periods[1].label && date.getHours() < 12) {\n\t\t\tdate.setHours(date.getHours() + 12);\n\t\t}\n\t\tthis.setValue(date);\n\t}\n\n\t/**\n\t * Shifts hours value with +/- 12 depending on hour value and day period.\n\t * @param hours current hours\n\t * @returns shifted hours\n\t */\n\t_shiftHours(hours: number): number {\n\t\tif (this._period === this.periodsArray[0]) { // AM\n\t\t\thours = hours === 12 ? 0 : hours;\n\t\t} else if (this._period === this.periodsArray[1]) { // PM\n\t\t\thours = hours === 12 ? hours : hours + 12;\n\t\t}\n\t\treturn hours;\n\t}\n\n\t/**\n\t * Clears the currently existing cooldown period and starts new one if requested.\n\t * @param startNewCooldown whether to start new cooldown period after clearing previous one\n\t */\n\t_resetCooldown(startNewCooldown: boolean) {\n\t\tif (!TYPE_COOLDOWN_DELAY) {\n\t\t\treturn; // if delay is 0, cooldown is disabled\n\t\t}\n\t\tif (this._typeCooldownId) {\n\t\t\tclearTimeout(this._typeCooldownId);\n\t\t}\n\t\tif (startNewCooldown) {\n\t\t\tthis._startCooldown();\n\t\t}\n\t}\n\n\t/**\n\t * Starts new cooldown period.\n\t */\n\t_startCooldown() {\n\t\tif (!TYPE_COOLDOWN_DELAY) {\n\t\t\treturn; // if delay is 0, cooldown is disabled\n\t\t}\n\t\tthis._typeCooldownId = setTimeout(() => {\n\t\t\tthis._keyboardBuffer = \"\";\n\t\t\tthis._typeCooldownId = undefined;\n\t\t\tif (this._exactMatch) {\n\t\t\t\tthis._setExactMatch();\n\t\t\t\tthis._exactMatch = undefined;\n\t\t\t}\n\t\t}, TYPE_COOLDOWN_DELAY);\n\t}\n\n\t/**\n\t * Sets the exact match value. Override if necessary.\n\t */\n\t_setExactMatch() {}\n}\n\nexport default TimePickerInternals;\nexport type {\n\tTimePickerComponentIndexMap,\n\tTimeSelectionChangeEventDetail,\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}