{"ast":null,"code":"\"use strict\";\n\nimport { getTimezone as i } from \"../InitialConfiguration.js\";\nimport { attachConfigurationReset as t } from \"./ConfigurationReset.js\";\nlet e;\nt(() => {\n  e = void 0;\n});\nconst r = () => (e === void 0 && (e = i()), e),\n  o = n => {\n    e !== n && (e = n);\n  };\nexport { r as getTimezone, o as setTimezone };","map":{"version":3,"names":["getTimezone","i","attachConfigurationReset","t","e","r","o","n","setTimezone"],"sources":["/home/user/projects/reactproj/node_modules/@ui5/webcomponents-base/src/config/Timezone.ts"],"sourcesContent":["import { getTimezone as getConfiguredTimezone } from \"../InitialConfiguration.js\";\nimport { attachConfigurationReset } from \"./ConfigurationReset.js\";\n\nlet currTimezone: string | undefined;\n\nattachConfigurationReset(() => {\n\tcurrTimezone = undefined;\n});\n\n/**\n * Returns the configured IANA timezone ID.\n *\n * @private\n * @returns {string}\n */\nconst getTimezone = (): string | undefined => {\n\tif (currTimezone === undefined) {\n\t\tcurrTimezone = getConfiguredTimezone();\n\t}\n\treturn currTimezone;\n};\n\n/**\n * Sets the IANA timezone ID.\n * **For example:** \"America/New_York\", \"Europe/London\", \"Australia/Sydney\", \"Asia/Bishkek\", etc.\n *>\n * @param {string} timezone\n * @private\n * @returns { Promise<void> }\n */\nconst setTimezone = (timezone: string) => {\n\tif (currTimezone === timezone) {\n\t\treturn;\n\t}\n\n\tcurrTimezone = timezone;\n};\n\nexport {\n\tgetTimezone,\n\tsetTimezone,\n};\n"],"mappings":";;AAAA,SAASA,WAAA,IAAeC,CAAA,QAA6B;AACrD,SAASC,wBAAA,IAAAC,CAAA,QAAgC;AAEzC,IAAIC,CAAA;AAEJD,CAAA,CAAyB,MAAM;EAC9BC,CAAA,GAAe,MAChB;AAAA,CAAC;AAQD,MAAMC,CAAA,GAAcL,CAAA,MACfI,CAAA,KAAiB,WACpBA,CAAA,GAAeH,CAAA,CAAsB,IAE/BG,CAAA;EAWFE,CAAA,GAAeC,CAAA,IAAqB;IACrCH,CAAA,KAAiBG,CAAA,KAIrBH,CAAA,GAAeG,CAAA,CAChB;EAAA;AAEA,SACCF,CAAA,IAAAL,WAAA,EACAM,CAAA,IAAAE,WAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}