{"ast":null,"code":"'use client';\n\nimport { debounce } from '@ui5/webcomponents-react-base';\nimport { useEffect, useRef } from 'react';\n/**\n * Plugin Hook that adds a callback which is fired on column resize.\n *\n * @param {event} callback Fired when the column is resized by dragging the \"Resizer\".\n * @param {Object=} options Additional options.\n * @param {number=} options.wait If `liveUpdate` is `true`, the resize function will fire every time the width has changed depending on the `options.wait` delay.\n * @param {boolean=} options.liveUpdate The number of milliseconds for which the calls are to be delayed. Defaults to `100`.\n */\nexport const useOnColumnResize = (callback, options) => {\n  const debouncedEvent = debounce(callback, options?.wait ?? 100);\n  const useInstance = instance => {\n    const {\n      state,\n      columns\n    } = instance;\n    const {\n      columnResizing\n    } = state;\n    const {\n      isResizingColumn,\n      columnWidths\n    } = columnResizing;\n    const prevHeaderIsResizing = useRef(undefined);\n    useEffect(() => {\n      if (isResizingColumn && options?.liveUpdate) {\n        const currentHeader = columns.find(item => item.id === isResizingColumn);\n        debouncedEvent({\n          columnWidth: columnWidths[isResizingColumn],\n          header: currentHeader\n        });\n      }\n    }, [columnResizing, options?.liveUpdate, columns]);\n    useEffect(() => {\n      if (options?.liveUpdate) {\n        return () => debouncedEvent.cancel();\n      }\n    }, [options?.liveUpdate]);\n    useEffect(() => {\n      if (!options?.liveUpdate) {\n        const currentHeader = columns.find(item => item.id === prevHeaderIsResizing.current);\n        if (isResizingColumn) {\n          prevHeaderIsResizing.current = isResizingColumn;\n        }\n        if (!isResizingColumn && prevHeaderIsResizing.current) {\n          callback({\n            columnWidth: columnWidths[prevHeaderIsResizing.current],\n            header: currentHeader\n          });\n        }\n      }\n    }, [columnResizing, options?.liveUpdate, columns]);\n  };\n  const useOnColumnResizeHooks = hooks => {\n    hooks.useFinalInstance.push(useInstance);\n  };\n  useOnColumnResizeHooks.pluginName = 'useOnColumnResize';\n  return useOnColumnResizeHooks;\n};","map":{"version":3,"names":["debounce","useEffect","useRef","useOnColumnResize","callback","options","debouncedEvent","wait","useInstance","instance","state","columns","columnResizing","isResizingColumn","columnWidths","prevHeaderIsResizing","undefined","liveUpdate","currentHeader","find","item","id","columnWidth","header","cancel","current","useOnColumnResizeHooks","hooks","useFinalInstance","push","pluginName"],"sources":["/home/user/projects/reactproj/node_modules/@ui5/webcomponents-react/dist/components/AnalyticalTable/pluginHooks/useOnColumnResize.js"],"sourcesContent":["'use client';\n\nimport { debounce } from '@ui5/webcomponents-react-base';\nimport { useEffect, useRef } from 'react';\n/**\n * Plugin Hook that adds a callback which is fired on column resize.\n *\n * @param {event} callback Fired when the column is resized by dragging the \"Resizer\".\n * @param {Object=} options Additional options.\n * @param {number=} options.wait If `liveUpdate` is `true`, the resize function will fire every time the width has changed depending on the `options.wait` delay.\n * @param {boolean=} options.liveUpdate The number of milliseconds for which the calls are to be delayed. Defaults to `100`.\n */\nexport const useOnColumnResize = (callback, options) => {\n  const debouncedEvent = debounce(callback, options?.wait ?? 100);\n  const useInstance = instance => {\n    const {\n      state,\n      columns\n    } = instance;\n    const {\n      columnResizing\n    } = state;\n    const {\n      isResizingColumn,\n      columnWidths\n    } = columnResizing;\n    const prevHeaderIsResizing = useRef(undefined);\n    useEffect(() => {\n      if (isResizingColumn && options?.liveUpdate) {\n        const currentHeader = columns.find(item => item.id === isResizingColumn);\n        debouncedEvent({\n          columnWidth: columnWidths[isResizingColumn],\n          header: currentHeader\n        });\n      }\n    }, [columnResizing, options?.liveUpdate, columns]);\n    useEffect(() => {\n      if (options?.liveUpdate) {\n        return () => debouncedEvent.cancel();\n      }\n    }, [options?.liveUpdate]);\n    useEffect(() => {\n      if (!options?.liveUpdate) {\n        const currentHeader = columns.find(item => item.id === prevHeaderIsResizing.current);\n        if (isResizingColumn) {\n          prevHeaderIsResizing.current = isResizingColumn;\n        }\n        if (!isResizingColumn && prevHeaderIsResizing.current) {\n          callback({\n            columnWidth: columnWidths[prevHeaderIsResizing.current],\n            header: currentHeader\n          });\n        }\n      }\n    }, [columnResizing, options?.liveUpdate, columns]);\n  };\n  const useOnColumnResizeHooks = hooks => {\n    hooks.useFinalInstance.push(useInstance);\n  };\n  useOnColumnResizeHooks.pluginName = 'useOnColumnResize';\n  return useOnColumnResizeHooks;\n};"],"mappings":"AAAA,YAAY;;AAEZ,SAASA,QAAQ,QAAQ,+BAA+B;AACxD,SAASC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMC,iBAAiB,GAAGA,CAACC,QAAQ,EAAEC,OAAO,KAAK;EACtD,MAAMC,cAAc,GAAGN,QAAQ,CAACI,QAAQ,EAAEC,OAAO,EAAEE,IAAI,IAAI,GAAG,CAAC;EAC/D,MAAMC,WAAW,GAAGC,QAAQ,IAAI;IAC9B,MAAM;MACJC,KAAK;MACLC;IACF,CAAC,GAAGF,QAAQ;IACZ,MAAM;MACJG;IACF,CAAC,GAAGF,KAAK;IACT,MAAM;MACJG,gBAAgB;MAChBC;IACF,CAAC,GAAGF,cAAc;IAClB,MAAMG,oBAAoB,GAAGb,MAAM,CAACc,SAAS,CAAC;IAC9Cf,SAAS,CAAC,MAAM;MACd,IAAIY,gBAAgB,IAAIR,OAAO,EAAEY,UAAU,EAAE;QAC3C,MAAMC,aAAa,GAAGP,OAAO,CAACQ,IAAI,CAACC,IAAI,IAAIA,IAAI,CAACC,EAAE,KAAKR,gBAAgB,CAAC;QACxEP,cAAc,CAAC;UACbgB,WAAW,EAAER,YAAY,CAACD,gBAAgB,CAAC;UAC3CU,MAAM,EAAEL;QACV,CAAC,CAAC;MACJ;IACF,CAAC,EAAE,CAACN,cAAc,EAAEP,OAAO,EAAEY,UAAU,EAAEN,OAAO,CAAC,CAAC;IAClDV,SAAS,CAAC,MAAM;MACd,IAAII,OAAO,EAAEY,UAAU,EAAE;QACvB,OAAO,MAAMX,cAAc,CAACkB,MAAM,CAAC,CAAC;MACtC;IACF,CAAC,EAAE,CAACnB,OAAO,EAAEY,UAAU,CAAC,CAAC;IACzBhB,SAAS,CAAC,MAAM;MACd,IAAI,CAACI,OAAO,EAAEY,UAAU,EAAE;QACxB,MAAMC,aAAa,GAAGP,OAAO,CAACQ,IAAI,CAACC,IAAI,IAAIA,IAAI,CAACC,EAAE,KAAKN,oBAAoB,CAACU,OAAO,CAAC;QACpF,IAAIZ,gBAAgB,EAAE;UACpBE,oBAAoB,CAACU,OAAO,GAAGZ,gBAAgB;QACjD;QACA,IAAI,CAACA,gBAAgB,IAAIE,oBAAoB,CAACU,OAAO,EAAE;UACrDrB,QAAQ,CAAC;YACPkB,WAAW,EAAER,YAAY,CAACC,oBAAoB,CAACU,OAAO,CAAC;YACvDF,MAAM,EAAEL;UACV,CAAC,CAAC;QACJ;MACF;IACF,CAAC,EAAE,CAACN,cAAc,EAAEP,OAAO,EAAEY,UAAU,EAAEN,OAAO,CAAC,CAAC;EACpD,CAAC;EACD,MAAMe,sBAAsB,GAAGC,KAAK,IAAI;IACtCA,KAAK,CAACC,gBAAgB,CAACC,IAAI,CAACrB,WAAW,CAAC;EAC1C,CAAC;EACDkB,sBAAsB,CAACI,UAAU,GAAG,mBAAmB;EACvD,OAAOJ,sBAAsB;AAC/B,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}