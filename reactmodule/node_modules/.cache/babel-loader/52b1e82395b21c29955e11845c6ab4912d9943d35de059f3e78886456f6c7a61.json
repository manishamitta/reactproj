{"ast":null,"code":"'use client';\n\nimport { useStylesheet, useViewportRange } from '@ui5/webcomponents-react-base';\nimport { clsx } from 'clsx';\nimport { forwardRef, isValidElement } from 'react';\nimport { GridPosition } from '../../enums/index.js';\nimport { flattenFragments } from '../../internal/utils.js';\nimport { classNames, styleData } from './Grid.module.css.js';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst INDENT_PATTERN = /^([X][L](?<LargeDesktop>[0-9]|1[0-2]))? ?([L](?<Desktop>[0-9]|1[0-2]))? ?([M](?<Tablet>[0-9]|1[0-2]))? ?([S](?<Phone>[0-9]|1[0-2]))?$/i;\nconst SPAN_PATTERN = /^([X][L](?<LargeDesktop>[1-9]|1[0-2]))? ?([L](?<Desktop>[1-9]|1[0-2]))? ?([M](?<Tablet>[1-9]|1[0-2]))? ?([S](?<Phone>[1-9]|1[0-2]))?$/i;\nconst DefaultSpanMap = new Map();\nDefaultSpanMap.set('Phone', 1);\nDefaultSpanMap.set('Tablet', 2);\nDefaultSpanMap.set('Desktop', 4);\nDefaultSpanMap.set('LargeDesktop', 4);\nconst DefaultIndentMap = new Map();\nDefaultIndentMap.set('Phone', 0);\nDefaultIndentMap.set('Tablet', 0);\nDefaultIndentMap.set('Desktop', 0);\nDefaultIndentMap.set('LargeDesktop', 0);\nconst getSpanFromString = (span, currentRange) => {\n  const spanConfig = SPAN_PATTERN.exec(span);\n  return Number(spanConfig?.groups[currentRange] ?? DefaultSpanMap.get(currentRange));\n};\nconst getIndentFromString = (indent, currentRange) => {\n  const indentConfig = INDENT_PATTERN.exec(indent);\n  return Number(indentConfig?.groups[currentRange] ?? DefaultIndentMap.get(currentRange));\n};\n\n/**\n * A layout container component used for aligning items with various sizes in a simple grid.\n *\n * __Note:__ The `Grid` component is only applying grid styles only on the first level of its children. If you want to define a more complex grid, we recommend implementing a standard [CSS grid layout](https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_grid_layout).\n */\nconst Grid = /*#__PURE__*/forwardRef((props, ref) => {\n  const {\n    position,\n    children,\n    hSpacing = '1rem',\n    vSpacing = '1rem',\n    style,\n    className,\n    slot,\n    defaultIndent = 'XL0 L0 M0 S0',\n    defaultSpan = 'XL3 L3 M6 S12',\n    ...rest\n  } = props;\n  useStylesheet(styleData, Grid.displayName);\n  const currentRange = useViewportRange();\n  const gridClasses = clsx(classNames.grid, GridPosition.Center === position && classNames.positionCenter, GridPosition.Right === position && classNames.positionRight, className);\n  return /*#__PURE__*/_jsx(\"div\", {\n    ref: ref,\n    className: gridClasses,\n    style: {\n      rowGap: vSpacing,\n      columnGap: hSpacing,\n      ...style\n    },\n    slot: slot,\n    ...rest,\n    children: flattenFragments(children, Infinity).map(child => {\n      if (! /*#__PURE__*/isValidElement(child)) {\n        return null;\n      }\n      const childSpan = getSpanFromString(child.props['data-layout-span'] ?? defaultSpan, currentRange);\n      const childClass = classNames[`gridSpan${childSpan}`];\n      const childrenWithGridLayout = [/*#__PURE__*/_jsx(\"div\", {\n        className: childClass,\n        children: child\n      }, child.key)];\n      const indentSpan = getIndentFromString(child.props['data-layout-indent'] ?? defaultIndent, currentRange);\n      if (indentSpan && indentSpan > 0) {\n        childrenWithGridLayout.unshift(/*#__PURE__*/_jsx(\"span\", {\n          className: classNames[`gridSpan${indentSpan}`],\n          \"data-component-name\": \"GridIndentSpacer\",\n          \"aria-hidden\": \"true\"\n        }, `${child.key}-indent`));\n      }\n      return childrenWithGridLayout;\n    })\n  });\n});\nGrid.displayName = 'Grid';\nexport { Grid };","map":{"version":3,"names":["useStylesheet","useViewportRange","clsx","forwardRef","isValidElement","GridPosition","flattenFragments","classNames","styleData","jsx","_jsx","INDENT_PATTERN","SPAN_PATTERN","DefaultSpanMap","Map","set","DefaultIndentMap","getSpanFromString","span","currentRange","spanConfig","exec","Number","groups","get","getIndentFromString","indent","indentConfig","Grid","props","ref","position","children","hSpacing","vSpacing","style","className","slot","defaultIndent","defaultSpan","rest","displayName","gridClasses","grid","Center","positionCenter","Right","positionRight","rowGap","columnGap","Infinity","map","child","childSpan","childClass","childrenWithGridLayout","key","indentSpan","unshift"],"sources":["/home/user/projects/reactproj/node_modules/@ui5/webcomponents-react/dist/components/Grid/index.js"],"sourcesContent":["'use client';\n\nimport { useStylesheet, useViewportRange } from '@ui5/webcomponents-react-base';\nimport { clsx } from 'clsx';\nimport { forwardRef, isValidElement } from 'react';\nimport { GridPosition } from '../../enums/index.js';\nimport { flattenFragments } from '../../internal/utils.js';\nimport { classNames, styleData } from './Grid.module.css.js';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst INDENT_PATTERN = /^([X][L](?<LargeDesktop>[0-9]|1[0-2]))? ?([L](?<Desktop>[0-9]|1[0-2]))? ?([M](?<Tablet>[0-9]|1[0-2]))? ?([S](?<Phone>[0-9]|1[0-2]))?$/i;\nconst SPAN_PATTERN = /^([X][L](?<LargeDesktop>[1-9]|1[0-2]))? ?([L](?<Desktop>[1-9]|1[0-2]))? ?([M](?<Tablet>[1-9]|1[0-2]))? ?([S](?<Phone>[1-9]|1[0-2]))?$/i;\nconst DefaultSpanMap = new Map();\nDefaultSpanMap.set('Phone', 1);\nDefaultSpanMap.set('Tablet', 2);\nDefaultSpanMap.set('Desktop', 4);\nDefaultSpanMap.set('LargeDesktop', 4);\nconst DefaultIndentMap = new Map();\nDefaultIndentMap.set('Phone', 0);\nDefaultIndentMap.set('Tablet', 0);\nDefaultIndentMap.set('Desktop', 0);\nDefaultIndentMap.set('LargeDesktop', 0);\nconst getSpanFromString = (span, currentRange) => {\n  const spanConfig = SPAN_PATTERN.exec(span);\n  return Number(spanConfig?.groups[currentRange] ?? DefaultSpanMap.get(currentRange));\n};\nconst getIndentFromString = (indent, currentRange) => {\n  const indentConfig = INDENT_PATTERN.exec(indent);\n  return Number(indentConfig?.groups[currentRange] ?? DefaultIndentMap.get(currentRange));\n};\n\n/**\n * A layout container component used for aligning items with various sizes in a simple grid.\n *\n * __Note:__ The `Grid` component is only applying grid styles only on the first level of its children. If you want to define a more complex grid, we recommend implementing a standard [CSS grid layout](https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_grid_layout).\n */\nconst Grid = /*#__PURE__*/forwardRef((props, ref) => {\n  const {\n    position,\n    children,\n    hSpacing = '1rem',\n    vSpacing = '1rem',\n    style,\n    className,\n    slot,\n    defaultIndent = 'XL0 L0 M0 S0',\n    defaultSpan = 'XL3 L3 M6 S12',\n    ...rest\n  } = props;\n  useStylesheet(styleData, Grid.displayName);\n  const currentRange = useViewportRange();\n  const gridClasses = clsx(classNames.grid, GridPosition.Center === position && classNames.positionCenter, GridPosition.Right === position && classNames.positionRight, className);\n  return /*#__PURE__*/_jsx(\"div\", {\n    ref: ref,\n    className: gridClasses,\n    style: {\n      rowGap: vSpacing,\n      columnGap: hSpacing,\n      ...style\n    },\n    slot: slot,\n    ...rest,\n    children: flattenFragments(children, Infinity).map(child => {\n      if (! /*#__PURE__*/isValidElement(child)) {\n        return null;\n      }\n      const childSpan = getSpanFromString(child.props['data-layout-span'] ?? defaultSpan, currentRange);\n      const childClass = classNames[`gridSpan${childSpan}`];\n      const childrenWithGridLayout = [/*#__PURE__*/_jsx(\"div\", {\n        className: childClass,\n        children: child\n      }, child.key)];\n      const indentSpan = getIndentFromString(child.props['data-layout-indent'] ?? defaultIndent, currentRange);\n      if (indentSpan && indentSpan > 0) {\n        childrenWithGridLayout.unshift( /*#__PURE__*/_jsx(\"span\", {\n          className: classNames[`gridSpan${indentSpan}`],\n          \"data-component-name\": \"GridIndentSpacer\",\n          \"aria-hidden\": \"true\"\n        }, `${child.key}-indent`));\n      }\n      return childrenWithGridLayout;\n    })\n  });\n});\nGrid.displayName = 'Grid';\nexport { Grid };"],"mappings":"AAAA,YAAY;;AAEZ,SAASA,aAAa,EAAEC,gBAAgB,QAAQ,+BAA+B;AAC/E,SAASC,IAAI,QAAQ,MAAM;AAC3B,SAASC,UAAU,EAAEC,cAAc,QAAQ,OAAO;AAClD,SAASC,YAAY,QAAQ,sBAAsB;AACnD,SAASC,gBAAgB,QAAQ,yBAAyB;AAC1D,SAASC,UAAU,EAAEC,SAAS,QAAQ,sBAAsB;AAC5D,SAASC,GAAG,IAAIC,IAAI,QAAQ,mBAAmB;AAC/C,MAAMC,cAAc,GAAG,wIAAwI;AAC/J,MAAMC,YAAY,GAAG,wIAAwI;AAC7J,MAAMC,cAAc,GAAG,IAAIC,GAAG,CAAC,CAAC;AAChCD,cAAc,CAACE,GAAG,CAAC,OAAO,EAAE,CAAC,CAAC;AAC9BF,cAAc,CAACE,GAAG,CAAC,QAAQ,EAAE,CAAC,CAAC;AAC/BF,cAAc,CAACE,GAAG,CAAC,SAAS,EAAE,CAAC,CAAC;AAChCF,cAAc,CAACE,GAAG,CAAC,cAAc,EAAE,CAAC,CAAC;AACrC,MAAMC,gBAAgB,GAAG,IAAIF,GAAG,CAAC,CAAC;AAClCE,gBAAgB,CAACD,GAAG,CAAC,OAAO,EAAE,CAAC,CAAC;AAChCC,gBAAgB,CAACD,GAAG,CAAC,QAAQ,EAAE,CAAC,CAAC;AACjCC,gBAAgB,CAACD,GAAG,CAAC,SAAS,EAAE,CAAC,CAAC;AAClCC,gBAAgB,CAACD,GAAG,CAAC,cAAc,EAAE,CAAC,CAAC;AACvC,MAAME,iBAAiB,GAAGA,CAACC,IAAI,EAAEC,YAAY,KAAK;EAChD,MAAMC,UAAU,GAAGR,YAAY,CAACS,IAAI,CAACH,IAAI,CAAC;EAC1C,OAAOI,MAAM,CAACF,UAAU,EAAEG,MAAM,CAACJ,YAAY,CAAC,IAAIN,cAAc,CAACW,GAAG,CAACL,YAAY,CAAC,CAAC;AACrF,CAAC;AACD,MAAMM,mBAAmB,GAAGA,CAACC,MAAM,EAAEP,YAAY,KAAK;EACpD,MAAMQ,YAAY,GAAGhB,cAAc,CAACU,IAAI,CAACK,MAAM,CAAC;EAChD,OAAOJ,MAAM,CAACK,YAAY,EAAEJ,MAAM,CAACJ,YAAY,CAAC,IAAIH,gBAAgB,CAACQ,GAAG,CAACL,YAAY,CAAC,CAAC;AACzF,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA,MAAMS,IAAI,GAAG,aAAazB,UAAU,CAAC,CAAC0B,KAAK,EAAEC,GAAG,KAAK;EACnD,MAAM;IACJC,QAAQ;IACRC,QAAQ;IACRC,QAAQ,GAAG,MAAM;IACjBC,QAAQ,GAAG,MAAM;IACjBC,KAAK;IACLC,SAAS;IACTC,IAAI;IACJC,aAAa,GAAG,cAAc;IAC9BC,WAAW,GAAG,eAAe;IAC7B,GAAGC;EACL,CAAC,GAAGX,KAAK;EACT7B,aAAa,CAACQ,SAAS,EAAEoB,IAAI,CAACa,WAAW,CAAC;EAC1C,MAAMtB,YAAY,GAAGlB,gBAAgB,CAAC,CAAC;EACvC,MAAMyC,WAAW,GAAGxC,IAAI,CAACK,UAAU,CAACoC,IAAI,EAAEtC,YAAY,CAACuC,MAAM,KAAKb,QAAQ,IAAIxB,UAAU,CAACsC,cAAc,EAAExC,YAAY,CAACyC,KAAK,KAAKf,QAAQ,IAAIxB,UAAU,CAACwC,aAAa,EAAEX,SAAS,CAAC;EAChL,OAAO,aAAa1B,IAAI,CAAC,KAAK,EAAE;IAC9BoB,GAAG,EAAEA,GAAG;IACRM,SAAS,EAAEM,WAAW;IACtBP,KAAK,EAAE;MACLa,MAAM,EAAEd,QAAQ;MAChBe,SAAS,EAAEhB,QAAQ;MACnB,GAAGE;IACL,CAAC;IACDE,IAAI,EAAEA,IAAI;IACV,GAAGG,IAAI;IACPR,QAAQ,EAAE1B,gBAAgB,CAAC0B,QAAQ,EAAEkB,QAAQ,CAAC,CAACC,GAAG,CAACC,KAAK,IAAI;MAC1D,IAAI,EAAE,aAAahD,cAAc,CAACgD,KAAK,CAAC,EAAE;QACxC,OAAO,IAAI;MACb;MACA,MAAMC,SAAS,GAAGpC,iBAAiB,CAACmC,KAAK,CAACvB,KAAK,CAAC,kBAAkB,CAAC,IAAIU,WAAW,EAAEpB,YAAY,CAAC;MACjG,MAAMmC,UAAU,GAAG/C,UAAU,CAAC,WAAW8C,SAAS,EAAE,CAAC;MACrD,MAAME,sBAAsB,GAAG,CAAC,aAAa7C,IAAI,CAAC,KAAK,EAAE;QACvD0B,SAAS,EAAEkB,UAAU;QACrBtB,QAAQ,EAAEoB;MACZ,CAAC,EAAEA,KAAK,CAACI,GAAG,CAAC,CAAC;MACd,MAAMC,UAAU,GAAGhC,mBAAmB,CAAC2B,KAAK,CAACvB,KAAK,CAAC,oBAAoB,CAAC,IAAIS,aAAa,EAAEnB,YAAY,CAAC;MACxG,IAAIsC,UAAU,IAAIA,UAAU,GAAG,CAAC,EAAE;QAChCF,sBAAsB,CAACG,OAAO,CAAE,aAAahD,IAAI,CAAC,MAAM,EAAE;UACxD0B,SAAS,EAAE7B,UAAU,CAAC,WAAWkD,UAAU,EAAE,CAAC;UAC9C,qBAAqB,EAAE,kBAAkB;UACzC,aAAa,EAAE;QACjB,CAAC,EAAE,GAAGL,KAAK,CAACI,GAAG,SAAS,CAAC,CAAC;MAC5B;MACA,OAAOD,sBAAsB;IAC/B,CAAC;EACH,CAAC,CAAC;AACJ,CAAC,CAAC;AACF3B,IAAI,CAACa,WAAW,GAAG,MAAM;AACzB,SAASb,IAAI","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}