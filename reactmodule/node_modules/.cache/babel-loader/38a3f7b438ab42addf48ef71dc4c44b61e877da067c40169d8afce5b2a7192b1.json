{"ast":null,"code":"import { enrichEventWithDetails } from '@ui5/webcomponents-react-base';\nconst getToggleRowExpandedProps = (rowProps, _ref) => {\n  let {\n    row,\n    instance,\n    userProps\n  } = _ref;\n  const {\n    manualGroupBy\n  } = instance;\n  const {\n    onRowExpandChange,\n    isTreeTable,\n    renderRowSubComponent,\n    alwaysShowSubComponent\n  } = instance.webComponentsReactProperties;\n  const onClick = function (e) {\n    let noPropagation = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n    if (noPropagation) {\n      e.stopPropagation();\n    }\n    let column = null;\n    if (!isTreeTable && (!renderRowSubComponent || renderRowSubComponent && alwaysShowSubComponent)) {\n      if (!manualGroupBy) {\n        column = row.cells.find(cell => cell.column.id === row.groupByID)?.column;\n      } else {\n        column = userProps.column;\n      }\n    }\n    if (typeof onRowExpandChange === 'function') {\n      onRowExpandChange(enrichEventWithDetails(e, {\n        row,\n        column\n      }));\n    }\n    row.toggleRowExpanded();\n  };\n  const onKeyDown = e => {\n    if (e.code === 'F4') {\n      e.preventDefault();\n      onClick(e, false);\n    } else if (!e.shiftKey && e.code === 'Space' || e.key === 'Enter') {\n      // the `onClick` event of the `Icon` component already fires the event on ENTER/SPACE press\n      if (e.target.hasAttribute('ui5-icon') || e.target.hasAttribute('ui5-button')) {\n        return;\n      }\n      e.preventDefault();\n      onClick(e, false);\n    }\n  };\n  const {\n    title: _0,\n    ...toggleRowPropsWithoutTitle\n  } = rowProps;\n  return [toggleRowPropsWithoutTitle, {\n    onClick,\n    onKeyDown\n  }];\n};\nexport const useToggleRowExpand = hooks => {\n  hooks.getToggleRowExpandedProps.push(getToggleRowExpandedProps);\n};\nuseToggleRowExpand.pluginName = 'useToggleRowExpand';","map":{"version":3,"names":["enrichEventWithDetails","getToggleRowExpandedProps","rowProps","_ref","row","instance","userProps","manualGroupBy","onRowExpandChange","isTreeTable","renderRowSubComponent","alwaysShowSubComponent","webComponentsReactProperties","onClick","e","noPropagation","arguments","length","undefined","stopPropagation","column","cells","find","cell","id","groupByID","toggleRowExpanded","onKeyDown","code","preventDefault","shiftKey","key","target","hasAttribute","title","_0","toggleRowPropsWithoutTitle","useToggleRowExpand","hooks","push","pluginName"],"sources":["/home/user/projects/reactproj/node_modules/@ui5/webcomponents-react/dist/components/AnalyticalTable/hooks/useToggleRowExpand.js"],"sourcesContent":["import { enrichEventWithDetails } from '@ui5/webcomponents-react-base';\nconst getToggleRowExpandedProps = (rowProps, {\n  row,\n  instance,\n  userProps\n}) => {\n  const {\n    manualGroupBy\n  } = instance;\n  const {\n    onRowExpandChange,\n    isTreeTable,\n    renderRowSubComponent,\n    alwaysShowSubComponent\n  } = instance.webComponentsReactProperties;\n  const onClick = (e, noPropagation = true) => {\n    if (noPropagation) {\n      e.stopPropagation();\n    }\n    let column = null;\n    if (!isTreeTable && (!renderRowSubComponent || renderRowSubComponent && alwaysShowSubComponent)) {\n      if (!manualGroupBy) {\n        column = row.cells.find(cell => cell.column.id === row.groupByID)?.column;\n      } else {\n        column = userProps.column;\n      }\n    }\n    if (typeof onRowExpandChange === 'function') {\n      onRowExpandChange(enrichEventWithDetails(e, {\n        row,\n        column\n      }));\n    }\n    row.toggleRowExpanded();\n  };\n  const onKeyDown = e => {\n    if (e.code === 'F4') {\n      e.preventDefault();\n      onClick(e, false);\n    } else if (!e.shiftKey && e.code === 'Space' || e.key === 'Enter') {\n      // the `onClick` event of the `Icon` component already fires the event on ENTER/SPACE press\n      if (e.target.hasAttribute('ui5-icon') || e.target.hasAttribute('ui5-button')) {\n        return;\n      }\n      e.preventDefault();\n      onClick(e, false);\n    }\n  };\n  const {\n    title: _0,\n    ...toggleRowPropsWithoutTitle\n  } = rowProps;\n  return [toggleRowPropsWithoutTitle, {\n    onClick,\n    onKeyDown\n  }];\n};\nexport const useToggleRowExpand = hooks => {\n  hooks.getToggleRowExpandedProps.push(getToggleRowExpandedProps);\n};\nuseToggleRowExpand.pluginName = 'useToggleRowExpand';"],"mappings":"AAAA,SAASA,sBAAsB,QAAQ,+BAA+B;AACtE,MAAMC,yBAAyB,GAAGA,CAACC,QAAQ,EAAAC,IAAA,KAIrC;EAAA,IAJuC;IAC3CC,GAAG;IACHC,QAAQ;IACRC;EACF,CAAC,GAAAH,IAAA;EACC,MAAM;IACJI;EACF,CAAC,GAAGF,QAAQ;EACZ,MAAM;IACJG,iBAAiB;IACjBC,WAAW;IACXC,qBAAqB;IACrBC;EACF,CAAC,GAAGN,QAAQ,CAACO,4BAA4B;EACzC,MAAMC,OAAO,GAAG,SAAAA,CAACC,CAAC,EAA2B;IAAA,IAAzBC,aAAa,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,IAAI;IACtC,IAAID,aAAa,EAAE;MACjBD,CAAC,CAACK,eAAe,CAAC,CAAC;IACrB;IACA,IAAIC,MAAM,GAAG,IAAI;IACjB,IAAI,CAACX,WAAW,KAAK,CAACC,qBAAqB,IAAIA,qBAAqB,IAAIC,sBAAsB,CAAC,EAAE;MAC/F,IAAI,CAACJ,aAAa,EAAE;QAClBa,MAAM,GAAGhB,GAAG,CAACiB,KAAK,CAACC,IAAI,CAACC,IAAI,IAAIA,IAAI,CAACH,MAAM,CAACI,EAAE,KAAKpB,GAAG,CAACqB,SAAS,CAAC,EAAEL,MAAM;MAC3E,CAAC,MAAM;QACLA,MAAM,GAAGd,SAAS,CAACc,MAAM;MAC3B;IACF;IACA,IAAI,OAAOZ,iBAAiB,KAAK,UAAU,EAAE;MAC3CA,iBAAiB,CAACR,sBAAsB,CAACc,CAAC,EAAE;QAC1CV,GAAG;QACHgB;MACF,CAAC,CAAC,CAAC;IACL;IACAhB,GAAG,CAACsB,iBAAiB,CAAC,CAAC;EACzB,CAAC;EACD,MAAMC,SAAS,GAAGb,CAAC,IAAI;IACrB,IAAIA,CAAC,CAACc,IAAI,KAAK,IAAI,EAAE;MACnBd,CAAC,CAACe,cAAc,CAAC,CAAC;MAClBhB,OAAO,CAACC,CAAC,EAAE,KAAK,CAAC;IACnB,CAAC,MAAM,IAAI,CAACA,CAAC,CAACgB,QAAQ,IAAIhB,CAAC,CAACc,IAAI,KAAK,OAAO,IAAId,CAAC,CAACiB,GAAG,KAAK,OAAO,EAAE;MACjE;MACA,IAAIjB,CAAC,CAACkB,MAAM,CAACC,YAAY,CAAC,UAAU,CAAC,IAAInB,CAAC,CAACkB,MAAM,CAACC,YAAY,CAAC,YAAY,CAAC,EAAE;QAC5E;MACF;MACAnB,CAAC,CAACe,cAAc,CAAC,CAAC;MAClBhB,OAAO,CAACC,CAAC,EAAE,KAAK,CAAC;IACnB;EACF,CAAC;EACD,MAAM;IACJoB,KAAK,EAAEC,EAAE;IACT,GAAGC;EACL,CAAC,GAAGlC,QAAQ;EACZ,OAAO,CAACkC,0BAA0B,EAAE;IAClCvB,OAAO;IACPc;EACF,CAAC,CAAC;AACJ,CAAC;AACD,OAAO,MAAMU,kBAAkB,GAAGC,KAAK,IAAI;EACzCA,KAAK,CAACrC,yBAAyB,CAACsC,IAAI,CAACtC,yBAAyB,CAAC;AACjE,CAAC;AACDoC,kBAAkB,CAACG,UAAU,GAAG,oBAAoB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}