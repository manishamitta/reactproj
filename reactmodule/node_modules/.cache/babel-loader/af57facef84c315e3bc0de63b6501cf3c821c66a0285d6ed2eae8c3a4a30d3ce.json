{"ast":null,"code":"const popInVisibleColumnsDeps = (deps, _ref) => {\n  let {\n    instance: {\n      state\n    }\n  } = _ref;\n  return [...deps, state.tableClientWidth];\n};\nconst popInVisibleColumns = (cols, _ref2) => {\n  let {\n    instance\n  } = _ref2;\n  const {\n    state,\n    dispatch\n  } = instance;\n  const tableClientWidth = state.isScrollable ? state?.tableClientWidth + 13 /*scrollbar width*/ : state?.tableClientWidth;\n  const popInColumns = cols.filter(item => item.responsivePopIn && tableClientWidth < item.responsiveMinWidth).map(item => ({\n    id: item.id ?? item.accessor,\n    column: item\n  }));\n  dispatch({\n    type: 'SET_POPIN_COLUMNS',\n    payload: popInColumns\n  });\n  return cols.filter(col => !popInColumns.some(item => item.id === (col.id ?? col.accessor)) && (col.hasOwnProperty('responsiveMinWidth') ? !tableClientWidth || tableClientWidth >= col.responsiveMinWidth : true));\n};\nexport const usePopIn = hooks => {\n  hooks.visibleColumns.push(popInVisibleColumns);\n  hooks.visibleColumnsDeps.push(popInVisibleColumnsDeps);\n};","map":{"version":3,"names":["popInVisibleColumnsDeps","deps","_ref","instance","state","tableClientWidth","popInVisibleColumns","cols","_ref2","dispatch","isScrollable","popInColumns","filter","item","responsivePopIn","responsiveMinWidth","map","id","accessor","column","type","payload","col","some","hasOwnProperty","usePopIn","hooks","visibleColumns","push","visibleColumnsDeps"],"sources":["/home/user/projects/reactproj/node_modules/@ui5/webcomponents-react/dist/components/AnalyticalTable/hooks/usePopIn.js"],"sourcesContent":["const popInVisibleColumnsDeps = (deps, {\n  instance: {\n    state\n  }\n}) => [...deps, state.tableClientWidth];\nconst popInVisibleColumns = (cols, {\n  instance\n}) => {\n  const {\n    state,\n    dispatch\n  } = instance;\n  const tableClientWidth = state.isScrollable ? state?.tableClientWidth + 13 /*scrollbar width*/ : state?.tableClientWidth;\n  const popInColumns = cols.filter(item => item.responsivePopIn && tableClientWidth < item.responsiveMinWidth).map(item => ({\n    id: item.id ?? item.accessor,\n    column: item\n  }));\n  dispatch({\n    type: 'SET_POPIN_COLUMNS',\n    payload: popInColumns\n  });\n  return cols.filter(col => !popInColumns.some(item => item.id === (col.id ?? col.accessor)) && (col.hasOwnProperty('responsiveMinWidth') ? !tableClientWidth || tableClientWidth >= col.responsiveMinWidth : true));\n};\nexport const usePopIn = hooks => {\n  hooks.visibleColumns.push(popInVisibleColumns);\n  hooks.visibleColumnsDeps.push(popInVisibleColumnsDeps);\n};"],"mappings":"AAAA,MAAMA,uBAAuB,GAAGA,CAACC,IAAI,EAAAC,IAAA;EAAA,IAAE;IACrCC,QAAQ,EAAE;MACRC;IACF;EACF,CAAC,GAAAF,IAAA;EAAA,OAAK,CAAC,GAAGD,IAAI,EAAEG,KAAK,CAACC,gBAAgB,CAAC;AAAA;AACvC,MAAMC,mBAAmB,GAAGA,CAACC,IAAI,EAAAC,KAAA,KAE3B;EAAA,IAF6B;IACjCL;EACF,CAAC,GAAAK,KAAA;EACC,MAAM;IACJJ,KAAK;IACLK;EACF,CAAC,GAAGN,QAAQ;EACZ,MAAME,gBAAgB,GAAGD,KAAK,CAACM,YAAY,GAAGN,KAAK,EAAEC,gBAAgB,GAAG,EAAE,CAAC,sBAAsBD,KAAK,EAAEC,gBAAgB;EACxH,MAAMM,YAAY,GAAGJ,IAAI,CAACK,MAAM,CAACC,IAAI,IAAIA,IAAI,CAACC,eAAe,IAAIT,gBAAgB,GAAGQ,IAAI,CAACE,kBAAkB,CAAC,CAACC,GAAG,CAACH,IAAI,KAAK;IACxHI,EAAE,EAAEJ,IAAI,CAACI,EAAE,IAAIJ,IAAI,CAACK,QAAQ;IAC5BC,MAAM,EAAEN;EACV,CAAC,CAAC,CAAC;EACHJ,QAAQ,CAAC;IACPW,IAAI,EAAE,mBAAmB;IACzBC,OAAO,EAAEV;EACX,CAAC,CAAC;EACF,OAAOJ,IAAI,CAACK,MAAM,CAACU,GAAG,IAAI,CAACX,YAAY,CAACY,IAAI,CAACV,IAAI,IAAIA,IAAI,CAACI,EAAE,MAAMK,GAAG,CAACL,EAAE,IAAIK,GAAG,CAACJ,QAAQ,CAAC,CAAC,KAAKI,GAAG,CAACE,cAAc,CAAC,oBAAoB,CAAC,GAAG,CAACnB,gBAAgB,IAAIA,gBAAgB,IAAIiB,GAAG,CAACP,kBAAkB,GAAG,IAAI,CAAC,CAAC;AACpN,CAAC;AACD,OAAO,MAAMU,QAAQ,GAAGC,KAAK,IAAI;EAC/BA,KAAK,CAACC,cAAc,CAACC,IAAI,CAACtB,mBAAmB,CAAC;EAC9CoB,KAAK,CAACG,kBAAkB,CAACD,IAAI,CAAC5B,uBAAuB,CAAC;AACxD,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}