{"ast":null,"code":"var __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n    r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n    d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar Text_1;\nimport UI5Element from \"@ui5/webcomponents-base/dist/UI5Element.js\";\nimport customElement from \"@ui5/webcomponents-base/dist/decorators/customElement.js\";\nimport property from \"@ui5/webcomponents-base/dist/decorators/property.js\";\nimport slot from \"@ui5/webcomponents-base/dist/decorators/slot.js\";\nimport litRender from \"@ui5/webcomponents-base/dist/renderer/LitRenderer.js\";\nimport { getScopedVarName } from \"@ui5/webcomponents-base/dist/CustomElementsScope.js\";\nimport { getI18nBundle } from \"@ui5/webcomponents-base/dist/i18nBundle.js\";\nimport willShowContent from \"@ui5/webcomponents-base/dist/util/willShowContent.js\";\nimport EmptyIndicatorMode from \"./types/TextEmptyIndicatorMode.js\";\n// Template\nimport TextTemplate from \"./generated/templates/TextTemplate.lit.js\";\nimport { EMPTY_INDICATOR_SYMBOL, EMPTY_INDICATOR_ACCESSIBLE_TEXT } from \"./generated/i18n/i18n-defaults.js\";\n// Styles\nimport styles from \"./generated/themes/Text.css.js\";\n/**\n * @class\n *\n * <h3>Overview</h3>\n *\n * The `ui5-text` component displays text that can be used in any content area of an application.\n *\n * <h3>Usage</h3>\n *\n * - Use the `ui5-text` if you want to display text inside a form, table, or any other content area.\n * - Do not use the `ui5-text` if you need to reference input type of components (use ui5-label).\n *\n * <h3>Responsive behavior</h3>\n *\n * The `ui5-text` component is fully adaptive to all screen sizes.\n * By default, the text will wrap when the space is not enough.\n * In addition, the component supports truncation via the <code>max-lines</code> property,\n * by defining the number of lines the text should wrap before start truncating.\n *\n * <h3>ES6 Module Import</h3>\n *\n * <code>import \"@ui5/webcomponents/dist/Text\";</code>\n *\n * @constructor\n * @extends UI5Element\n * @public\n * @slot {Array<Node>} default - Defines the text of the component.\n * @since 2.0.0\n */\nlet Text = Text_1 = class Text extends UI5Element {\n  constructor() {\n    super(...arguments);\n    /**\n     * Defines the number of lines the text should wrap before it truncates.\n     * @default Infinity\n     * @public\n     */\n    this.maxLines = Infinity;\n    /**\n     * Specifies if an empty indicator should be displayed when there is no text.\n     * @default \"Off\"\n     * @since 2.2.0\n     * @public\n     */\n    this.emptyIndicatorMode = \"Off\";\n  }\n  static async onDefine() {\n    Text_1.i18nBundle = await getI18nBundle(\"@ui5/webcomponents\");\n  }\n  onBeforeRendering() {\n    this.style.setProperty(getScopedVarName(\"--_ui5_text_max_lines\"), `${this.maxLines}`);\n  }\n  get hasText() {\n    return willShowContent(this.text);\n  }\n  get _renderEmptyIndicator() {\n    return !this.hasText && this.emptyIndicatorMode === EmptyIndicatorMode.On;\n  }\n  get _emptyIndicatorAriaLabel() {\n    return Text_1.i18nBundle.getText(EMPTY_INDICATOR_ACCESSIBLE_TEXT);\n  }\n  get _emptyIndicatorSymbol() {\n    return Text_1.i18nBundle.getText(EMPTY_INDICATOR_SYMBOL);\n  }\n};\n__decorate([property({\n  type: Number\n})], Text.prototype, \"maxLines\", void 0);\n__decorate([property()], Text.prototype, \"emptyIndicatorMode\", void 0);\n__decorate([slot({\n  type: Node,\n  \"default\": true\n})], Text.prototype, \"text\", void 0);\nText = Text_1 = __decorate([customElement({\n  tag: \"ui5-text\",\n  renderer: litRender,\n  template: TextTemplate,\n  styles\n})], Text);\nText.define();\nexport default Text;","map":{"version":3,"names":["UI5Element","customElement","property","slot","litRender","getScopedVarName","getI18nBundle","willShowContent","EmptyIndicatorMode","TextTemplate","EMPTY_INDICATOR_SYMBOL","EMPTY_INDICATOR_ACCESSIBLE_TEXT","styles","Text","Text_1","constructor","maxLines","Infinity","emptyIndicatorMode","onDefine","i18nBundle","onBeforeRendering","style","setProperty","hasText","text","_renderEmptyIndicator","On","_emptyIndicatorAriaLabel","getText","_emptyIndicatorSymbol","__decorate","type","Number","Node","tag","renderer","template","define"],"sources":["/home/user/projects/reactproj/node_modules/@ui5/webcomponents/src/Text.ts"],"sourcesContent":["import UI5Element from \"@ui5/webcomponents-base/dist/UI5Element.js\";\nimport customElement from \"@ui5/webcomponents-base/dist/decorators/customElement.js\";\nimport property from \"@ui5/webcomponents-base/dist/decorators/property.js\";\nimport slot from \"@ui5/webcomponents-base/dist/decorators/slot.js\";\nimport litRender from \"@ui5/webcomponents-base/dist/renderer/LitRenderer.js\";\nimport { getScopedVarName } from \"@ui5/webcomponents-base/dist/CustomElementsScope.js\";\nimport { getI18nBundle } from \"@ui5/webcomponents-base/dist/i18nBundle.js\";\nimport type I18nBundle from \"@ui5/webcomponents-base/dist/i18nBundle.js\";\nimport willShowContent from \"@ui5/webcomponents-base/dist/util/willShowContent.js\";\nimport EmptyIndicatorMode from \"./types/TextEmptyIndicatorMode.js\";\n// Template\nimport TextTemplate from \"./generated/templates/TextTemplate.lit.js\";\n\nimport {\n\tEMPTY_INDICATOR_SYMBOL,\n\tEMPTY_INDICATOR_ACCESSIBLE_TEXT,\n} from \"./generated/i18n/i18n-defaults.js\";\n\n// Styles\nimport styles from \"./generated/themes/Text.css.js\";\n\n/**\n * @class\n *\n * <h3>Overview</h3>\n *\n * The `ui5-text` component displays text that can be used in any content area of an application.\n *\n * <h3>Usage</h3>\n *\n * - Use the `ui5-text` if you want to display text inside a form, table, or any other content area.\n * - Do not use the `ui5-text` if you need to reference input type of components (use ui5-label).\n *\n * <h3>Responsive behavior</h3>\n *\n * The `ui5-text` component is fully adaptive to all screen sizes.\n * By default, the text will wrap when the space is not enough.\n * In addition, the component supports truncation via the <code>max-lines</code> property,\n * by defining the number of lines the text should wrap before start truncating.\n *\n * <h3>ES6 Module Import</h3>\n *\n * <code>import \"@ui5/webcomponents/dist/Text\";</code>\n *\n * @constructor\n * @extends UI5Element\n * @public\n * @slot {Array<Node>} default - Defines the text of the component.\n * @since 2.0.0\n */\n@customElement({\n\ttag: \"ui5-text\",\n\trenderer: litRender,\n\ttemplate: TextTemplate,\n\tstyles,\n})\nclass Text extends UI5Element {\n\t/**\n\t * Defines the number of lines the text should wrap before it truncates.\n\t * @default Infinity\n\t * @public\n\t */\n\t@property({ type: Number })\n\tmaxLines: number = Infinity;\n\n\t/**\n\t * Specifies if an empty indicator should be displayed when there is no text.\n\t * @default \"Off\"\n\t * @since 2.2.0\n\t * @public\n\t */\n\t@property()\n\temptyIndicatorMode: `${EmptyIndicatorMode}` = \"Off\";\n\n\t/**\n\t * Defines the text of the component.\n\t * @public\n\t */\n\t@slot({ type: Node, \"default\": true })\n\ttext!: Array<Node>;\n\n\tstatic i18nBundle: I18nBundle;\n\n\tstatic async onDefine() {\n\t\tText.i18nBundle = await getI18nBundle(\"@ui5/webcomponents\");\n\t}\n\n\tonBeforeRendering() {\n\t\tthis.style.setProperty(getScopedVarName(\"--_ui5_text_max_lines\"), `${this.maxLines}`);\n\t}\n\n\tget hasText() {\n\t\treturn willShowContent(this.text);\n\t}\n\n\tget _renderEmptyIndicator() {\n\t\treturn !this.hasText && this.emptyIndicatorMode === EmptyIndicatorMode.On;\n\t}\n\n\tget _emptyIndicatorAriaLabel() {\n\t\treturn Text.i18nBundle.getText(EMPTY_INDICATOR_ACCESSIBLE_TEXT);\n\t}\n\n\tget _emptyIndicatorSymbol() {\n\t\treturn Text.i18nBundle.getText(EMPTY_INDICATOR_SYMBOL);\n\t}\n}\n\nText.define();\n\nexport default Text;\n"],"mappings":";;;;;;;;AAAA,OAAOA,UAAU,MAAM,4CAA4C;AACnE,OAAOC,aAAa,MAAM,0DAA0D;AACpF,OAAOC,QAAQ,MAAM,qDAAqD;AAC1E,OAAOC,IAAI,MAAM,iDAAiD;AAClE,OAAOC,SAAS,MAAM,sDAAsD;AAC5E,SAASC,gBAAgB,QAAQ,qDAAqD;AACtF,SAASC,aAAa,QAAQ,4CAA4C;AAE1E,OAAOC,eAAe,MAAM,sDAAsD;AAClF,OAAOC,kBAAkB,MAAM,mCAAmC;AAClE;AACA,OAAOC,YAAY,MAAM,2CAA2C;AAEpE,SACCC,sBAAsB,EACtBC,+BAA+B,QACzB,mCAAmC;AAE1C;AACA,OAAOC,MAAM,MAAM,gCAAgC;AAEnD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmCA,IAAMC,IAAI,GAAAC,MAAA,GAAV,MAAMD,IAAK,SAAQb,UAAU;EAA7Be,YAAA;;IACC;;;;;IAMA,KAAAC,QAAQ,GAAWC,QAAQ;IAE3B;;;;;;IAOA,KAAAC,kBAAkB,GAA4B,KAAK;EAkCpD;EAvBC,aAAaC,QAAQA,CAAA;IACpBL,MAAI,CAACM,UAAU,GAAG,MAAMd,aAAa,CAAC,oBAAoB,CAAC;EAC5D;EAEAe,iBAAiBA,CAAA;IAChB,IAAI,CAACC,KAAK,CAACC,WAAW,CAAClB,gBAAgB,CAAC,uBAAuB,CAAC,EAAE,GAAG,IAAI,CAACW,QAAQ,EAAE,CAAC;EACtF;EAEA,IAAIQ,OAAOA,CAAA;IACV,OAAOjB,eAAe,CAAC,IAAI,CAACkB,IAAI,CAAC;EAClC;EAEA,IAAIC,qBAAqBA,CAAA;IACxB,OAAO,CAAC,IAAI,CAACF,OAAO,IAAI,IAAI,CAACN,kBAAkB,KAAKV,kBAAkB,CAACmB,EAAE;EAC1E;EAEA,IAAIC,wBAAwBA,CAAA;IAC3B,OAAOd,MAAI,CAACM,UAAU,CAACS,OAAO,CAAClB,+BAA+B,CAAC;EAChE;EAEA,IAAImB,qBAAqBA,CAAA;IACxB,OAAOhB,MAAI,CAACM,UAAU,CAACS,OAAO,CAACnB,sBAAsB,CAAC;EACvD;CACA;AA3CAqB,UAAA,EADC7B,QAAQ,CAAC;EAAE8B,IAAI,EAAEC;AAAM,CAAE,CAAC,C,qCACC;AAS5BF,UAAA,EADC7B,QAAQ,EAAE,C,+CACyC;AAOpD6B,UAAA,EADC5B,IAAI,CAAC;EAAE6B,IAAI,EAAEE,IAAI;EAAE,SAAS,EAAE;AAAI,CAAE,CAAC,C,iCACnB;AAvBdrB,IAAI,GAAAC,MAAA,GAAAiB,UAAA,EANT9B,aAAa,CAAC;EACdkC,GAAG,EAAE,UAAU;EACfC,QAAQ,EAAEhC,SAAS;EACnBiC,QAAQ,EAAE5B,YAAY;EACtBG;CACA,CAAC,C,EACIC,IAAI,CAkDT;AAEDA,IAAI,CAACyB,MAAM,EAAE;AAEb,eAAezB,IAAI","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}