{"ast":null,"code":"'use client';\n\nimport ButtonDesign from '@ui5/webcomponents/dist/types/ButtonDesign.js';\nimport ListSeparator from '@ui5/webcomponents/dist/types/ListSeparator.js';\nimport TitleLevel from '@ui5/webcomponents/dist/types/TitleLevel.js';\nimport WrappingType from '@ui5/webcomponents/dist/types/WrappingType.js';\nimport ValueState from '@ui5/webcomponents-base/dist/types/ValueState.js';\nimport iconSlimArrowLeft from '@ui5/webcomponents-icons/dist/slim-arrow-left.js';\nimport { useI18nBundle, useStylesheet, useSyncRef } from '@ui5/webcomponents-react-base';\nimport { clsx } from 'clsx';\nimport { Children, forwardRef, Fragment, isValidElement, useCallback, useEffect, useState } from 'react';\nimport { FlexBoxDirection } from '../../enums/index.js';\nimport { ALL, LIST_NO_DATA } from '../../i18n/i18n-defaults.js';\nimport { MessageViewContext } from '../../internal/MessageViewContext.js';\nimport { Bar } from '../../webComponents/Bar/index.js';\nimport { Button } from '../../webComponents/Button/index.js';\nimport { Icon } from '../../webComponents/Icon/index.js';\nimport { List } from '../../webComponents/List/index.js';\nimport { ListItemGroup } from '../../webComponents/ListItemGroup/index.js';\nimport { SegmentedButton } from '../../webComponents/SegmentedButton/index.js';\nimport { SegmentedButtonItem } from '../../webComponents/SegmentedButtonItem/index.js';\nimport { Title } from '../../webComponents/Title/index.js';\nimport { FlexBox } from '../FlexBox/index.js';\nimport { classNames, styleData } from './MessageView.module.css.js';\nimport { getIconNameForType } from './utils.js';\nimport { jsx as _jsx, jsxs as _jsxs, Fragment as _Fragment } from \"react/jsx-runtime\";\nexport const resolveMessageTypes = children => {\n  return (children ?? []).map(message => message?.props?.type).reduce((acc, type) => {\n    const finalType = type === ValueState.None ? ValueState.Information : type;\n    if (acc.hasOwnProperty(finalType)) {\n      acc[finalType]++;\n    }\n    return acc;\n  }, {\n    [ValueState.Negative]: 0,\n    [ValueState.Critical]: 0,\n    [ValueState.Positive]: 0,\n    [ValueState.Information]: 0\n  });\n};\nexport const resolveMessageGroups = children => {\n  const groups = (children ?? []).reduce((acc, val) => {\n    const groupName = val?.props?.groupName ?? '';\n    if (acc.hasOwnProperty(groupName)) {\n      acc[groupName].push(val);\n    } else {\n      acc[groupName] = [val];\n    }\n    return acc;\n  }, {});\n  return Object.entries(groups).sort((a, b) => {\n    return a[0].localeCompare(b[0]);\n  });\n};\n\n/**\n * The `MessageView` is used to display a summarized list of different types of messages (error, warning, success, and information messages).\n */\nconst MessageView = /*#__PURE__*/forwardRef((props, ref) => {\n  const {\n    children,\n    groupItems,\n    showDetailsPageHeader,\n    className,\n    onItemSelect,\n    ...rest\n  } = props;\n  useStylesheet(styleData, MessageView.displayName);\n  const [componentRef, internalRef] = useSyncRef(ref);\n  const i18nBundle = useI18nBundle('@ui5/webcomponents-react');\n  const [listFilter, setListFilter] = useState('All');\n  const [selectedMessage, setSelectedMessage] = useState(null);\n  const childrenArray = Children.toArray(children);\n  const messageTypes = resolveMessageTypes(childrenArray);\n  const filledTypes = Object.values(messageTypes).filter(count => count > 0).length;\n  const filteredChildren = listFilter === 'All' ? childrenArray : childrenArray.filter(message => {\n    if (! /*#__PURE__*/isValidElement(message)) {\n      return false;\n    }\n    const castMessage = message;\n    if (listFilter === ValueState.Information) {\n      return castMessage?.props?.type === ValueState.Information || castMessage?.props?.type === ValueState.None;\n    }\n    return castMessage?.props?.type === listFilter;\n  });\n  const groupedMessages = resolveMessageGroups(filteredChildren);\n  const navigateBack = useCallback(() => {\n    setSelectedMessage(null);\n  }, [setSelectedMessage]);\n  useEffect(() => {\n    if (internalRef.current) {\n      internalRef.current.navigateBack = navigateBack;\n    }\n  }, [internalRef.current, navigateBack]);\n  const handleListFilterChange = e => {\n    setListFilter(e.detail.selectedItems.at(0).dataset.key);\n  };\n  const outerClasses = clsx(classNames.container, className, selectedMessage && classNames.showDetails);\n  return /*#__PURE__*/_jsx(\"div\", {\n    ref: componentRef,\n    ...rest,\n    className: outerClasses,\n    children: /*#__PURE__*/_jsxs(MessageViewContext.Provider, {\n      value: {\n        selectMessage: setSelectedMessage\n      },\n      children: [/*#__PURE__*/_jsx(\"div\", {\n        style: {\n          visibility: selectedMessage ? 'hidden' : 'visible'\n        },\n        className: classNames.messagesContainer,\n        children: !selectedMessage && /*#__PURE__*/_jsxs(_Fragment, {\n          children: [filledTypes > 1 && /*#__PURE__*/_jsx(Bar, {\n            startContent: /*#__PURE__*/_jsxs(SegmentedButton, {\n              onSelectionChange: handleListFilterChange,\n              children: [/*#__PURE__*/_jsx(SegmentedButtonItem, {\n                \"data-key\": \"All\",\n                selected: listFilter === 'All',\n                children: i18nBundle.getText(ALL)\n              }), Object.entries(messageTypes).map(_ref => {\n                let [valueState, count] = _ref;\n                if (count === 0) {\n                  return null;\n                }\n                return /*#__PURE__*/_jsx(SegmentedButtonItem, {\n                  \"data-key\": valueState,\n                  selected: listFilter === valueState,\n                  icon: getIconNameForType(valueState),\n                  className: classNames.button,\n                  children: count\n                }, valueState);\n              })]\n            })\n          }), /*#__PURE__*/_jsx(List, {\n            onItemClick: onItemSelect,\n            noDataText: i18nBundle.getText(LIST_NO_DATA),\n            separators: ListSeparator.Inner,\n            children: groupItems ? groupedMessages.map(_ref2 => {\n              let [groupName, items] = _ref2;\n              if (!groupName) {\n                return items;\n              }\n              return /*#__PURE__*/_jsx(Fragment, {\n                children: groupName && /*#__PURE__*/_jsx(ListItemGroup, {\n                  headerText: groupName,\n                  children: items\n                })\n              }, groupName);\n            }) : filteredChildren\n          })]\n        })\n      }), /*#__PURE__*/_jsx(\"div\", {\n        className: classNames.detailsContainer,\n        children: childrenArray.length > 0 ? /*#__PURE__*/_jsxs(_Fragment, {\n          children: [showDetailsPageHeader && selectedMessage && /*#__PURE__*/_jsx(Bar, {\n            startContent: /*#__PURE__*/_jsx(Button, {\n              design: ButtonDesign.Transparent,\n              icon: iconSlimArrowLeft,\n              onClick: navigateBack\n            })\n          }), selectedMessage && /*#__PURE__*/_jsxs(FlexBox, {\n            className: classNames.details,\n            children: [/*#__PURE__*/_jsx(Icon, {\n              \"data-type\": selectedMessage.type ?? ValueState.Negative,\n              name: getIconNameForType(selectedMessage.type),\n              className: classNames.detailsIcon\n            }), /*#__PURE__*/_jsxs(FlexBox, {\n              direction: FlexBoxDirection.Column,\n              className: classNames.detailsTextContainer,\n              children: [/*#__PURE__*/_jsx(Title, {\n                level: TitleLevel.H5,\n                className: classNames.detailsTitle,\n                wrappingType: WrappingType.Normal,\n                children: selectedMessage.titleText\n              }), /*#__PURE__*/_jsx(\"div\", {\n                className: classNames.detailsText,\n                children: selectedMessage.children\n              })]\n            })]\n          })]\n        }) : null\n      })]\n    })\n  });\n});\nMessageView.displayName = 'MessageView';\nexport { MessageView };","map":{"version":3,"names":["ButtonDesign","ListSeparator","TitleLevel","WrappingType","ValueState","iconSlimArrowLeft","useI18nBundle","useStylesheet","useSyncRef","clsx","Children","forwardRef","Fragment","isValidElement","useCallback","useEffect","useState","FlexBoxDirection","ALL","LIST_NO_DATA","MessageViewContext","Bar","Button","Icon","List","ListItemGroup","SegmentedButton","SegmentedButtonItem","Title","FlexBox","classNames","styleData","getIconNameForType","jsx","_jsx","jsxs","_jsxs","_Fragment","resolveMessageTypes","children","map","message","props","type","reduce","acc","finalType","None","Information","hasOwnProperty","Negative","Critical","Positive","resolveMessageGroups","groups","val","groupName","push","Object","entries","sort","a","b","localeCompare","MessageView","ref","groupItems","showDetailsPageHeader","className","onItemSelect","rest","displayName","componentRef","internalRef","i18nBundle","listFilter","setListFilter","selectedMessage","setSelectedMessage","childrenArray","toArray","messageTypes","filledTypes","values","filter","count","length","filteredChildren","castMessage","groupedMessages","navigateBack","current","handleListFilterChange","e","detail","selectedItems","at","dataset","key","outerClasses","container","showDetails","Provider","value","selectMessage","style","visibility","messagesContainer","startContent","onSelectionChange","selected","getText","_ref","valueState","icon","button","onItemClick","noDataText","separators","Inner","_ref2","items","headerText","detailsContainer","design","Transparent","onClick","details","name","detailsIcon","direction","Column","detailsTextContainer","level","H5","detailsTitle","wrappingType","Normal","titleText","detailsText"],"sources":["/home/user/projects/reactproj/node_modules/@ui5/webcomponents-react/dist/components/MessageView/index.js"],"sourcesContent":["'use client';\n\nimport ButtonDesign from '@ui5/webcomponents/dist/types/ButtonDesign.js';\nimport ListSeparator from '@ui5/webcomponents/dist/types/ListSeparator.js';\nimport TitleLevel from '@ui5/webcomponents/dist/types/TitleLevel.js';\nimport WrappingType from '@ui5/webcomponents/dist/types/WrappingType.js';\nimport ValueState from '@ui5/webcomponents-base/dist/types/ValueState.js';\nimport iconSlimArrowLeft from '@ui5/webcomponents-icons/dist/slim-arrow-left.js';\nimport { useI18nBundle, useStylesheet, useSyncRef } from '@ui5/webcomponents-react-base';\nimport { clsx } from 'clsx';\nimport { Children, forwardRef, Fragment, isValidElement, useCallback, useEffect, useState } from 'react';\nimport { FlexBoxDirection } from '../../enums/index.js';\nimport { ALL, LIST_NO_DATA } from '../../i18n/i18n-defaults.js';\nimport { MessageViewContext } from '../../internal/MessageViewContext.js';\nimport { Bar } from '../../webComponents/Bar/index.js';\nimport { Button } from '../../webComponents/Button/index.js';\nimport { Icon } from '../../webComponents/Icon/index.js';\nimport { List } from '../../webComponents/List/index.js';\nimport { ListItemGroup } from '../../webComponents/ListItemGroup/index.js';\nimport { SegmentedButton } from '../../webComponents/SegmentedButton/index.js';\nimport { SegmentedButtonItem } from '../../webComponents/SegmentedButtonItem/index.js';\nimport { Title } from '../../webComponents/Title/index.js';\nimport { FlexBox } from '../FlexBox/index.js';\nimport { classNames, styleData } from './MessageView.module.css.js';\nimport { getIconNameForType } from './utils.js';\nimport { jsx as _jsx, jsxs as _jsxs, Fragment as _Fragment } from \"react/jsx-runtime\";\nexport const resolveMessageTypes = children => {\n  return (children ?? []).map(message => message?.props?.type).reduce((acc, type) => {\n    const finalType = type === ValueState.None ? ValueState.Information : type;\n    if (acc.hasOwnProperty(finalType)) {\n      acc[finalType]++;\n    }\n    return acc;\n  }, {\n    [ValueState.Negative]: 0,\n    [ValueState.Critical]: 0,\n    [ValueState.Positive]: 0,\n    [ValueState.Information]: 0\n  });\n};\nexport const resolveMessageGroups = children => {\n  const groups = (children ?? []).reduce((acc, val) => {\n    const groupName = val?.props?.groupName ?? '';\n    if (acc.hasOwnProperty(groupName)) {\n      acc[groupName].push(val);\n    } else {\n      acc[groupName] = [val];\n    }\n    return acc;\n  }, {});\n  return Object.entries(groups).sort((a, b) => {\n    return a[0].localeCompare(b[0]);\n  });\n};\n\n/**\n * The `MessageView` is used to display a summarized list of different types of messages (error, warning, success, and information messages).\n */\nconst MessageView = /*#__PURE__*/forwardRef((props, ref) => {\n  const {\n    children,\n    groupItems,\n    showDetailsPageHeader,\n    className,\n    onItemSelect,\n    ...rest\n  } = props;\n  useStylesheet(styleData, MessageView.displayName);\n  const [componentRef, internalRef] = useSyncRef(ref);\n  const i18nBundle = useI18nBundle('@ui5/webcomponents-react');\n  const [listFilter, setListFilter] = useState('All');\n  const [selectedMessage, setSelectedMessage] = useState(null);\n  const childrenArray = Children.toArray(children);\n  const messageTypes = resolveMessageTypes(childrenArray);\n  const filledTypes = Object.values(messageTypes).filter(count => count > 0).length;\n  const filteredChildren = listFilter === 'All' ? childrenArray : childrenArray.filter(message => {\n    if (! /*#__PURE__*/isValidElement(message)) {\n      return false;\n    }\n    const castMessage = message;\n    if (listFilter === ValueState.Information) {\n      return castMessage?.props?.type === ValueState.Information || castMessage?.props?.type === ValueState.None;\n    }\n    return castMessage?.props?.type === listFilter;\n  });\n  const groupedMessages = resolveMessageGroups(filteredChildren);\n  const navigateBack = useCallback(() => {\n    setSelectedMessage(null);\n  }, [setSelectedMessage]);\n  useEffect(() => {\n    if (internalRef.current) {\n      internalRef.current.navigateBack = navigateBack;\n    }\n  }, [internalRef.current, navigateBack]);\n  const handleListFilterChange = e => {\n    setListFilter(e.detail.selectedItems.at(0).dataset.key);\n  };\n  const outerClasses = clsx(classNames.container, className, selectedMessage && classNames.showDetails);\n  return /*#__PURE__*/_jsx(\"div\", {\n    ref: componentRef,\n    ...rest,\n    className: outerClasses,\n    children: /*#__PURE__*/_jsxs(MessageViewContext.Provider, {\n      value: {\n        selectMessage: setSelectedMessage\n      },\n      children: [/*#__PURE__*/_jsx(\"div\", {\n        style: {\n          visibility: selectedMessage ? 'hidden' : 'visible'\n        },\n        className: classNames.messagesContainer,\n        children: !selectedMessage && /*#__PURE__*/_jsxs(_Fragment, {\n          children: [filledTypes > 1 && /*#__PURE__*/_jsx(Bar, {\n            startContent: /*#__PURE__*/_jsxs(SegmentedButton, {\n              onSelectionChange: handleListFilterChange,\n              children: [/*#__PURE__*/_jsx(SegmentedButtonItem, {\n                \"data-key\": \"All\",\n                selected: listFilter === 'All',\n                children: i18nBundle.getText(ALL)\n              }), Object.entries(messageTypes).map(([valueState, count]) => {\n                if (count === 0) {\n                  return null;\n                }\n                return /*#__PURE__*/_jsx(SegmentedButtonItem, {\n                  \"data-key\": valueState,\n                  selected: listFilter === valueState,\n                  icon: getIconNameForType(valueState),\n                  className: classNames.button,\n                  children: count\n                }, valueState);\n              })]\n            })\n          }), /*#__PURE__*/_jsx(List, {\n            onItemClick: onItemSelect,\n            noDataText: i18nBundle.getText(LIST_NO_DATA),\n            separators: ListSeparator.Inner,\n            children: groupItems ? groupedMessages.map(([groupName, items]) => {\n              if (!groupName) {\n                return items;\n              }\n              return /*#__PURE__*/_jsx(Fragment, {\n                children: groupName && /*#__PURE__*/_jsx(ListItemGroup, {\n                  headerText: groupName,\n                  children: items\n                })\n              }, groupName);\n            }) : filteredChildren\n          })]\n        })\n      }), /*#__PURE__*/_jsx(\"div\", {\n        className: classNames.detailsContainer,\n        children: childrenArray.length > 0 ? /*#__PURE__*/_jsxs(_Fragment, {\n          children: [showDetailsPageHeader && selectedMessage && /*#__PURE__*/_jsx(Bar, {\n            startContent: /*#__PURE__*/_jsx(Button, {\n              design: ButtonDesign.Transparent,\n              icon: iconSlimArrowLeft,\n              onClick: navigateBack\n            })\n          }), selectedMessage && /*#__PURE__*/_jsxs(FlexBox, {\n            className: classNames.details,\n            children: [/*#__PURE__*/_jsx(Icon, {\n              \"data-type\": selectedMessage.type ?? ValueState.Negative,\n              name: getIconNameForType(selectedMessage.type),\n              className: classNames.detailsIcon\n            }), /*#__PURE__*/_jsxs(FlexBox, {\n              direction: FlexBoxDirection.Column,\n              className: classNames.detailsTextContainer,\n              children: [/*#__PURE__*/_jsx(Title, {\n                level: TitleLevel.H5,\n                className: classNames.detailsTitle,\n                wrappingType: WrappingType.Normal,\n                children: selectedMessage.titleText\n              }), /*#__PURE__*/_jsx(\"div\", {\n                className: classNames.detailsText,\n                children: selectedMessage.children\n              })]\n            })]\n          })]\n        }) : null\n      })]\n    })\n  });\n});\nMessageView.displayName = 'MessageView';\nexport { MessageView };"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}