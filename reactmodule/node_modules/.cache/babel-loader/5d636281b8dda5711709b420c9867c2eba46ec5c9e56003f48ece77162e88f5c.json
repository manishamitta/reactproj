{"ast":null,"code":"var __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n    r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n    d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { isUpShift } from \"@ui5/webcomponents-base/dist/Keys.js\";\nimport getActiveElement from \"@ui5/webcomponents-base/dist/util/getActiveElement.js\";\nimport UI5Element from \"@ui5/webcomponents-base/dist/UI5Element.js\";\nimport customElement from \"@ui5/webcomponents-base/dist/decorators/customElement.js\";\nimport property from \"@ui5/webcomponents-base/dist/decorators/property.js\";\nimport event from \"@ui5/webcomponents-base/dist/decorators/event.js\";\nimport TableSelectionMode from \"./types/TableSelectionMode.js\";\nimport { isSelectionCheckbox, isHeaderSelector, findRowInPath } from \"./TableUtils.js\";\n/**\n * @class\n *\n * ### Overview\n *\n * The `ui5-table-selection` component is used inside the `ui5-table` ti add key-based selection capabilities to the `ui5-table`.\n *\n * The component offers three selection modes:\n * * Single - select a single row.\n * * Multiple - select multiple rows.\n * * None - no selection active.\n *\n * As the selection is key-based, `ui5-table-row` components need to define a unique `row-key` property.\n *\n * ### Usage\n *\n * The `ui5-table-selection` component is only used inside the `ui5-table` component as a feature.\n * It has to be slotted inside the `ui5-table` in the `features` slot.\n * The component is not intended to be used as a standalone component.\n *\n * ```html\n * <ui5-table>\n * \t<ui5-table-selection mode=\"Multiple\" slot=\"features\"></ui5-table-selection>\n * </ui5-table>\n * ```\n *\n * ### ES6 Module Import\n *\n * `import \"@ui5/webcomponents/dist/TableSelection.js\";`\n *\n * @constructor\n * @extends UI5Element\n * @since 2.0.0\n * @public\n * @experimental This web component is available since 2.0 with an experimental flag and its API and behavior are subject to change.\n */\nlet TableSelection = class TableSelection extends UI5Element {\n  constructor() {\n    super(...arguments);\n    /**\n     * Defines the selection mode.\n     *\n     * @default \"Multiple\"\n     * @public\n     */\n    this.mode = \"Multiple\";\n    /**\n     * Defines the selected rows separated by a space.\n     *\n     * @default \"\"\n     * @public\n     */\n    this.selected = \"\";\n    this.identifier = \"TableSelection\";\n  }\n  onTableActivate(table) {\n    this._table = table;\n    this._invalidateTableAndRows();\n  }\n  onExitDOM() {\n    this.mode = TableSelectionMode.None;\n    this._invalidateTableAndRows();\n    this._table = undefined;\n  }\n  onBeforeRendering() {\n    this._invalidateTableAndRows();\n  }\n  isSelectable() {\n    return this.mode !== TableSelectionMode.None;\n  }\n  isMultiSelect() {\n    return this.mode === TableSelectionMode.Multiple;\n  }\n  hasRowSelector() {\n    return this.mode !== TableSelectionMode.None;\n  }\n  getRowIdentifier(row) {\n    return row.rowKey;\n  }\n  isSelected(row) {\n    if (!this._table || !this.isSelectable()) {\n      return false;\n    }\n    if (row.isHeaderRow()) {\n      return this.areAllRowsSelected();\n    }\n    const rowIdentifier = this.getRowIdentifier(row);\n    return this.selectedAsArray.includes(rowIdentifier);\n  }\n  hasSelectedRow() {\n    if (!this._table || !this.isSelectable()) {\n      return false;\n    }\n    const selectedArray = this.selectedAsArray;\n    return this._table.rows.some(row => {\n      const rowIdentifier = this.getRowIdentifier(row);\n      return selectedArray.includes(rowIdentifier);\n    });\n  }\n  areAllRowsSelected() {\n    if (!this._table || !this._table.rows.length || this.mode !== TableSelectionMode.Multiple) {\n      return false;\n    }\n    const selectedArray = this.selectedAsArray;\n    return this._table.rows.every(row => {\n      const rowIdentifier = this.getRowIdentifier(row);\n      return selectedArray.includes(rowIdentifier);\n    });\n  }\n  informSelectionChange(row) {\n    if (this._rangeSelection?.isMouse && this._rangeSelection.shiftPressed) {\n      return;\n    }\n    if (row.isHeaderRow()) {\n      this._informHeaderRowSelectionChange();\n    } else {\n      this._informRowSelectionChange(row);\n    }\n  }\n  get selectedAsArray() {\n    return this.selected.split(\" \").filter(String);\n  }\n  set selectedAsArray(selectedArray) {\n    this.selected = selectedArray.filter(String).join(\" \");\n  }\n  get selectedAsSet() {\n    return new Set(this.selectedAsArray);\n  }\n  set selectedAsSet(selectedSet) {\n    this.selectedAsArray = [...selectedSet];\n  }\n  _selectRow(row, selected) {\n    const rowIdentifier = this.getRowIdentifier(row);\n    if (this.mode === TableSelectionMode.Multiple) {\n      const selectedSet = this.selectedAsSet;\n      selectedSet[selected ? \"add\" : \"delete\"](rowIdentifier);\n      this.selectedAsSet = selectedSet;\n    } else {\n      this.selected = selected ? rowIdentifier : \"\";\n    }\n  }\n  _informRowSelectionChange(row) {\n    const isRowSelected = this.isMultiSelect() ? !this.isSelected(row) : true;\n    this._selectRow(row, isRowSelected);\n    this.fireEvent(\"change\");\n  }\n  _informHeaderRowSelectionChange() {\n    const isRowSelected = this.areAllRowsSelected();\n    const selectedSet = this.selectedAsSet;\n    this._table.rows.forEach(row => {\n      const rowIdentifier = this.getRowIdentifier(row);\n      selectedSet[isRowSelected ? \"delete\" : \"add\"](rowIdentifier);\n    });\n    this.selectedAsSet = selectedSet;\n    this.fireEvent(\"change\");\n  }\n  _invalidateTableAndRows() {\n    if (!this._table) {\n      return;\n    }\n    if (!this.isSelectable()) {\n      this.selected = \"\";\n    } else if (!this.isMultiSelect()) {\n      this.selected = this.selectedAsArray.shift() || \"\";\n    }\n    this._table._invalidate++;\n    this._table.headerRow[0]._invalidate++;\n    this._table.rows.forEach(row => row._invalidate++);\n  }\n  _onkeydown(e) {\n    if (!this.isMultiSelect() || !this._table || !e.shiftKey) {\n      return;\n    }\n    const focusedElement = getActiveElement(); // Assumption: The focused element is always the \"next\" row after navigation.\n    if (!(focusedElement?.hasAttribute(\"ui5-table-row\") || this._rangeSelection?.isMouse || focusedElement?.hasAttribute(\"ui5-growing-row\"))) {\n      this._stopRangeSelection();\n      return;\n    }\n    if (!this._rangeSelection) {\n      // If no range selection is active, start one\n      this._startRangeSelection(focusedElement);\n    } else if (e.key === \"ArrowUp\" || e.key === \"ArrowDown\") {\n      const change = isUpShift(e) ? -1 : 1;\n      this._handleRangeSelection(focusedElement, change);\n    }\n    if (this._rangeSelection) {\n      this._rangeSelection.shiftPressed = e.shiftKey;\n    }\n  }\n  _onkeyup(e, eventOrigin) {\n    if (!this._table) {\n      return;\n    }\n    if (!eventOrigin.hasAttribute(\"ui5-table-row\") || !this._rangeSelection || !e.shiftKey) {\n      // Stop range selection if a) Shift is relased or b) the event target is not a row\n      this._stopRangeSelection();\n    }\n    if (this._rangeSelection) {\n      this._rangeSelection.shiftPressed = e.shiftKey;\n    }\n  }\n  _onclick(e) {\n    if (!this._table) {\n      return;\n    }\n    if (isHeaderSelector(e)) {\n      this._stopRangeSelection();\n      return;\n    }\n    if (!isSelectionCheckbox(e)) {\n      this._stopRangeSelection();\n      return;\n    }\n    const row = findRowInPath(e.composedPath());\n    if (e.shiftKey && this._rangeSelection?.isMouse) {\n      const startRow = this._rangeSelection.rows[0];\n      const startIndex = this._table.rows.indexOf(startRow);\n      const endIndex = this._table.rows.indexOf(row);\n      // When doing a range selection and clicking on an already selected row, the checked status should not change\n      // Therefore, we need to manually set the checked attribute again, as clicking it would deselect it and leads to\n      // a visual inconsistency.\n      row.shadowRoot?.querySelector(\"#selection-component\")?.toggleAttribute(\"checked\", true);\n      if (startIndex === -1 || endIndex === -1 || row.rowKey === startRow.rowKey || row.rowKey === this._rangeSelection.rows[this._rangeSelection.rows.length - 1].rowKey) {\n        return;\n      }\n      const change = endIndex - startIndex;\n      this._handleRangeSelection(row, change);\n    } else if (row) {\n      this._startRangeSelection(row, true);\n    }\n  }\n  /**\n   * Start the range selection and initialises the range selection state\n   * @param row starting row\n   * @private\n   */\n  _startRangeSelection(row) {\n    let isMouse = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n    const selected = this.isSelected(row);\n    if (isMouse && !selected) {\n      // Do not initiate range selection if the row is not selected\n      return;\n    }\n    this._rangeSelection = {\n      selected,\n      isUp: null,\n      rows: [row],\n      isMouse,\n      shiftPressed: false\n    };\n  }\n  /**\n   * Handles the range selection\n   * @param targetRow row that is currently focused\n   * @param change indicates direction\n   * @private\n   */\n  _handleRangeSelection(targetRow, change) {\n    if (!this._rangeSelection) {\n      return;\n    }\n    const isUp = change > 0;\n    this._rangeSelection.isUp ??= isUp;\n    const shouldReverseSelection = isUp !== this._rangeSelection.isUp && !this._rangeSelection.isMouse;\n    let selectionChanged = shouldReverseSelection && this.isSelected(targetRow);\n    if (shouldReverseSelection) {\n      this._reverseRangeSelection();\n    } else {\n      const rowIndex = this._table.rows.indexOf(targetRow);\n      const [startIndex, endIndex] = [rowIndex, rowIndex - change].sort((a, b) => a - b);\n      selectionChanged = this._table?.rows.slice(startIndex, endIndex + 1).reduce((changed, row) => {\n        const isRowNotInSelection = !this._rangeSelection?.rows.includes(row);\n        const isRowSelectionDifferent = this.isSelected(row) !== this._rangeSelection.selected;\n        if (isRowNotInSelection) {\n          this._rangeSelection?.rows.push(row);\n        }\n        this._selectRow(row, this._rangeSelection.selected);\n        return changed || isRowSelectionDifferent;\n      }, selectionChanged) || false;\n    }\n    selectionChanged && this._fireEvent(\"change\");\n  }\n  _stopRangeSelection() {\n    this._rangeSelection = null;\n  }\n  _reverseRangeSelection() {\n    const row = this._rangeSelection?.rows.pop();\n    if (row) {\n      this._selectRow(row, false);\n    }\n    if (this._rangeSelection?.rows.length === 1) {\n      this._rangeSelection.isUp = null;\n    }\n  }\n};\n__decorate([property()], TableSelection.prototype, \"mode\", void 0);\n__decorate([property()], TableSelection.prototype, \"selected\", void 0);\nTableSelection = __decorate([customElement({\n  tag: \"ui5-table-selection\"\n})\n/**\n * Fired when selection is changed by user interaction.\n *\n * @public\n */, event(\"change\")], TableSelection);\nTableSelection.define();\nexport default TableSelection;","map":{"version":3,"names":["isUpShift","getActiveElement","UI5Element","customElement","property","event","TableSelectionMode","isSelectionCheckbox","isHeaderSelector","findRowInPath","TableSelection","constructor","mode","selected","identifier","onTableActivate","table","_table","_invalidateTableAndRows","onExitDOM","None","undefined","onBeforeRendering","isSelectable","isMultiSelect","Multiple","hasRowSelector","getRowIdentifier","row","rowKey","isSelected","isHeaderRow","areAllRowsSelected","rowIdentifier","selectedAsArray","includes","hasSelectedRow","selectedArray","rows","some","length","every","informSelectionChange","_rangeSelection","isMouse","shiftPressed","_informHeaderRowSelectionChange","_informRowSelectionChange","split","filter","String","join","selectedAsSet","Set","selectedSet","_selectRow","isRowSelected","fireEvent","forEach","shift","_invalidate","headerRow","_onkeydown","e","shiftKey","focusedElement","hasAttribute","_stopRangeSelection","_startRangeSelection","key","change","_handleRangeSelection","_onkeyup","eventOrigin","_onclick","composedPath","startRow","startIndex","indexOf","endIndex","shadowRoot","querySelector","toggleAttribute","arguments","isUp","targetRow","shouldReverseSelection","selectionChanged","_reverseRangeSelection","rowIndex","sort","a","b","slice","reduce","changed","isRowNotInSelection","isRowSelectionDifferent","push","_fireEvent","pop","__decorate","tag","define"],"sources":["/home/user/projects/reactproj/node_modules/@ui5/webcomponents/src/TableSelection.ts"],"sourcesContent":["import {\n\tisUpShift,\n} from \"@ui5/webcomponents-base/dist/Keys.js\";\nimport getActiveElement from \"@ui5/webcomponents-base/dist/util/getActiveElement.js\";\nimport UI5Element from \"@ui5/webcomponents-base/dist/UI5Element.js\";\nimport customElement from \"@ui5/webcomponents-base/dist/decorators/customElement.js\";\nimport property from \"@ui5/webcomponents-base/dist/decorators/property.js\";\nimport event from \"@ui5/webcomponents-base/dist/decorators/event.js\";\nimport TableSelectionMode from \"./types/TableSelectionMode.js\";\nimport type Table from \"./Table.js\";\nimport type { ITableFeature } from \"./Table.js\";\nimport type TableRow from \"./TableRow.js\";\nimport type TableRowBase from \"./TableRowBase.js\";\nimport { isSelectionCheckbox, isHeaderSelector, findRowInPath } from \"./TableUtils.js\";\n\n/**\n * @class\n *\n * ### Overview\n *\n * The `ui5-table-selection` component is used inside the `ui5-table` ti add key-based selection capabilities to the `ui5-table`.\n *\n * The component offers three selection modes:\n * * Single - select a single row.\n * * Multiple - select multiple rows.\n * * None - no selection active.\n *\n * As the selection is key-based, `ui5-table-row` components need to define a unique `row-key` property.\n *\n * ### Usage\n *\n * The `ui5-table-selection` component is only used inside the `ui5-table` component as a feature.\n * It has to be slotted inside the `ui5-table` in the `features` slot.\n * The component is not intended to be used as a standalone component.\n *\n * ```html\n * <ui5-table>\n * \t<ui5-table-selection mode=\"Multiple\" slot=\"features\"></ui5-table-selection>\n * </ui5-table>\n * ```\n *\n * ### ES6 Module Import\n *\n * `import \"@ui5/webcomponents/dist/TableSelection.js\";`\n *\n * @constructor\n * @extends UI5Element\n * @since 2.0.0\n * @public\n * @experimental This web component is available since 2.0 with an experimental flag and its API and behavior are subject to change.\n */\n@customElement({ tag: \"ui5-table-selection\" })\n\n/**\n * Fired when selection is changed by user interaction.\n *\n * @public\n */\n@event(\"change\")\n\nclass TableSelection extends UI5Element implements ITableFeature {\n\t/**\n\t * Defines the selection mode.\n\t *\n\t * @default \"Multiple\"\n\t * @public\n\t */\n\t@property()\n\tmode: `${TableSelectionMode}` = \"Multiple\";\n\n\t/**\n\t * Defines the selected rows separated by a space.\n\t *\n\t * @default \"\"\n\t * @public\n\t */\n\t@property()\n\tselected = \"\";\n\n\treadonly identifier = \"TableSelection\";\n\t_table?: Table;\n\t_rangeSelection?: {selected: boolean, isUp: boolean | null, rows: TableRow[], isMouse: boolean, shiftPressed: boolean} | null;\n\n\tonTableActivate(table: Table) {\n\t\tthis._table = table;\n\t\tthis._invalidateTableAndRows();\n\t}\n\n\tonExitDOM() {\n\t\tthis.mode = TableSelectionMode.None;\n\t\tthis._invalidateTableAndRows();\n\t\tthis._table = undefined;\n\t}\n\n\tonBeforeRendering() {\n\t\tthis._invalidateTableAndRows();\n\t}\n\n\tisSelectable(): boolean {\n\t\treturn this.mode !== TableSelectionMode.None;\n\t}\n\n\tisMultiSelect(): boolean {\n\t\treturn this.mode === TableSelectionMode.Multiple;\n\t}\n\n\thasRowSelector(): boolean {\n\t\treturn this.mode !== TableSelectionMode.None;\n\t}\n\n\tgetRowIdentifier(row: TableRow): string {\n\t\treturn row.rowKey;\n\t}\n\n\tisSelected(row: TableRowBase): boolean {\n\t\tif (!this._table || !this.isSelectable()) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (row.isHeaderRow()) {\n\t\t\treturn this.areAllRowsSelected();\n\t\t}\n\n\t\tconst rowIdentifier = this.getRowIdentifier(row as TableRow);\n\t\treturn this.selectedAsArray.includes(rowIdentifier);\n\t}\n\n\thasSelectedRow(): boolean {\n\t\tif (!this._table || !this.isSelectable()) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst selectedArray = this.selectedAsArray;\n\t\treturn this._table.rows.some(row => {\n\t\t\tconst rowIdentifier = this.getRowIdentifier(row);\n\t\t\treturn selectedArray.includes(rowIdentifier);\n\t\t});\n\t}\n\n\tareAllRowsSelected(): boolean {\n\t\tif (!this._table || !this._table.rows.length || this.mode !== TableSelectionMode.Multiple) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst selectedArray = this.selectedAsArray;\n\t\treturn this._table.rows.every(row => {\n\t\t\tconst rowIdentifier = this.getRowIdentifier(row);\n\t\t\treturn selectedArray.includes(rowIdentifier);\n\t\t});\n\t}\n\n\tinformSelectionChange(row: TableRowBase) {\n\t\tif (this._rangeSelection?.isMouse && this._rangeSelection.shiftPressed) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (row.isHeaderRow()) {\n\t\t\tthis._informHeaderRowSelectionChange();\n\t\t} else {\n\t\t\tthis._informRowSelectionChange(row as TableRow);\n\t\t}\n\t}\n\n\tget selectedAsArray(): string[] {\n\t\treturn this.selected.split(\" \").filter(String);\n\t}\n\n\tset selectedAsArray(selectedArray: string[]) {\n\t\tthis.selected = selectedArray.filter(String).join(\" \");\n\t}\n\n\tget selectedAsSet(): Set<string> {\n\t\treturn new Set(this.selectedAsArray);\n\t}\n\n\tset selectedAsSet(selectedSet: Set<string>) {\n\t\tthis.selectedAsArray = [...selectedSet];\n\t}\n\n\t_selectRow(row: TableRow, selected: boolean) {\n\t\tconst rowIdentifier = this.getRowIdentifier(row);\n\t\tif (this.mode === TableSelectionMode.Multiple) {\n\t\t\tconst selectedSet = this.selectedAsSet;\n\t\t\tselectedSet[selected ? \"add\" : \"delete\"](rowIdentifier);\n\t\t\tthis.selectedAsSet = selectedSet;\n\t\t} else {\n\t\t\tthis.selected = selected ? rowIdentifier : \"\";\n\t\t}\n\t}\n\n\t_informRowSelectionChange(row: TableRow) {\n\t\tconst isRowSelected = this.isMultiSelect() ? !this.isSelected(row) : true;\n\t\tthis._selectRow(row, isRowSelected);\n\t\tthis.fireEvent(\"change\");\n\t}\n\n\t_informHeaderRowSelectionChange() {\n\t\tconst isRowSelected = this.areAllRowsSelected();\n\t\tconst selectedSet = this.selectedAsSet;\n\t\tthis._table!.rows.forEach(row => {\n\t\t\tconst rowIdentifier = this.getRowIdentifier(row);\n\t\t\tselectedSet[isRowSelected ? \"delete\" : \"add\"](rowIdentifier);\n\t\t});\n\t\tthis.selectedAsSet = selectedSet;\n\t\tthis.fireEvent(\"change\");\n\t}\n\n\t_invalidateTableAndRows() {\n\t\tif (!this._table) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (!this.isSelectable()) {\n\t\t\tthis.selected = \"\";\n\t\t} else if (!this.isMultiSelect()) {\n\t\t\tthis.selected = this.selectedAsArray.shift() || \"\";\n\t\t}\n\n\t\tthis._table._invalidate++;\n\t\tthis._table.headerRow[0]._invalidate++;\n\t\tthis._table.rows.forEach(row => row._invalidate++);\n\t}\n\n\t_onkeydown(e: KeyboardEvent) {\n\t\tif (!this.isMultiSelect() || !this._table || !e.shiftKey) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst focusedElement = getActiveElement(); // Assumption: The focused element is always the \"next\" row after navigation.\n\n\t\tif (!(focusedElement?.hasAttribute(\"ui5-table-row\") || this._rangeSelection?.isMouse || focusedElement?.hasAttribute(\"ui5-growing-row\"))) {\n\t\t\tthis._stopRangeSelection();\n\t\t\treturn;\n\t\t}\n\n\t\tif (!this._rangeSelection) {\n\t\t\t// If no range selection is active, start one\n\t\t\tthis._startRangeSelection(focusedElement as TableRow);\n\t\t} else if (e.key === \"ArrowUp\" || e.key === \"ArrowDown\") {\n\t\t\tconst change = isUpShift(e) ? -1 : 1;\n\t\t\tthis._handleRangeSelection(focusedElement as TableRow, change);\n\t\t}\n\n\t\tif (this._rangeSelection) {\n\t\t\tthis._rangeSelection.shiftPressed = e.shiftKey;\n\t\t}\n\t}\n\n\t_onkeyup(e: KeyboardEvent, eventOrigin: HTMLElement) {\n\t\tif (!this._table) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (!eventOrigin.hasAttribute(\"ui5-table-row\") || !this._rangeSelection || !e.shiftKey) {\n\t\t\t// Stop range selection if a) Shift is relased or b) the event target is not a row\n\t\t\tthis._stopRangeSelection();\n\t\t}\n\n\t\tif (this._rangeSelection) {\n\t\t\tthis._rangeSelection.shiftPressed = e.shiftKey;\n\t\t}\n\t}\n\n\t_onclick(e: MouseEvent) {\n\t\tif (!this._table) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (isHeaderSelector(e)) {\n\t\t\tthis._stopRangeSelection();\n\t\t\treturn;\n\t\t}\n\n\t\tif (!isSelectionCheckbox(e)) {\n\t\t\tthis._stopRangeSelection();\n\t\t\treturn;\n\t\t}\n\n\t\tconst row = findRowInPath(e.composedPath());\n\n\t\tif (e.shiftKey && this._rangeSelection?.isMouse) {\n\t\t\tconst startRow = this._rangeSelection.rows[0];\n\t\t\tconst startIndex = this._table.rows.indexOf(startRow);\n\t\t\tconst endIndex = this._table.rows.indexOf(row);\n\n\t\t\t// When doing a range selection and clicking on an already selected row, the checked status should not change\n\t\t\t// Therefore, we need to manually set the checked attribute again, as clicking it would deselect it and leads to\n\t\t\t// a visual inconsistency.\n\t\t\trow.shadowRoot?.querySelector(\"#selection-component\")?.toggleAttribute(\"checked\", true);\n\n\t\t\tif (startIndex === -1 || endIndex === -1 || row.rowKey === startRow.rowKey || row.rowKey === this._rangeSelection.rows[this._rangeSelection.rows.length - 1].rowKey) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst change = endIndex - startIndex;\n\t\t\tthis._handleRangeSelection(row, change);\n\t\t} else if (row) {\n\t\t\tthis._startRangeSelection(row, true);\n\t\t}\n\t}\n\n\t/**\n\t * Start the range selection and initialises the range selection state\n\t * @param row starting row\n\t * @private\n\t */\n\t_startRangeSelection(row: TableRow, isMouse = false) {\n\t\tconst selected = this.isSelected(row);\n\t\tif (isMouse && !selected) {\n\t\t\t// Do not initiate range selection if the row is not selected\n\t\t\treturn;\n\t\t}\n\n\t\tthis._rangeSelection = {\n\t\t\tselected,\n\t\t\tisUp: null,\n\t\t\trows: [row],\n\t\t\tisMouse,\n\t\t\tshiftPressed: false,\n\t\t};\n\t}\n\n\t/**\n\t * Handles the range selection\n\t * @param targetRow row that is currently focused\n\t * @param change indicates direction\n\t * @private\n\t */\n\t_handleRangeSelection(targetRow: TableRow, change: number) {\n\t\tif (!this._rangeSelection) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst isUp = change > 0;\n\t\tthis._rangeSelection.isUp ??= isUp;\n\n\t\tconst shouldReverseSelection = isUp !== this._rangeSelection.isUp && !this._rangeSelection.isMouse;\n\t\tlet selectionChanged = shouldReverseSelection && this.isSelected(targetRow);\n\n\t\tif (shouldReverseSelection) {\n\t\t\tthis._reverseRangeSelection();\n\t\t} else {\n\t\t\tconst rowIndex = this._table!.rows.indexOf(targetRow);\n\t\t\tconst [startIndex, endIndex] = [rowIndex, rowIndex - change].sort((a, b) => a - b);\n\n\t\t\tselectionChanged = this._table?.rows.slice(startIndex, endIndex + 1).reduce((changed, row) => {\n\t\t\t\tconst isRowNotInSelection = !this._rangeSelection?.rows.includes(row);\n\t\t\t\tconst isRowSelectionDifferent = this.isSelected(row) !== this._rangeSelection!.selected;\n\n\t\t\t\tif (isRowNotInSelection) {\n\t\t\t\t\tthis._rangeSelection?.rows.push(row);\n\t\t\t\t}\n\n\t\t\t\tthis._selectRow(row, this._rangeSelection!.selected);\n\n\t\t\t\treturn changed || isRowSelectionDifferent;\n\t\t\t}, selectionChanged) || false;\n\t\t}\n\n\t\tselectionChanged && this._fireEvent(\"change\");\n\t}\n\n\t_stopRangeSelection() {\n\t\tthis._rangeSelection = null;\n\t}\n\n\t_reverseRangeSelection() {\n\t\tconst row = this._rangeSelection?.rows.pop();\n\t\tif (row) {\n\t\t\tthis._selectRow(row, false);\n\t\t}\n\n\t\tif (this._rangeSelection?.rows.length === 1) {\n\t\t\tthis._rangeSelection.isUp = null;\n\t\t}\n\t}\n}\n\nTableSelection.define();\n\nexport default TableSelection;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}