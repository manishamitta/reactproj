{"ast":null,"code":"\"use strict\";\n\nconst o = t => {\n    s(t) && e(t);\n  },\n  e = t => {\n    if (t._internals?.form) {\n      if (n(t), !t.name) {\n        t._internals?.setFormValue(null);\n        return;\n      }\n      t._internals.setFormValue(t.formFormattedValue);\n    }\n  },\n  n = async t => {\n    if (t._internals?.form) if (t.formValidity && Object.keys(t.formValidity).some(r => r)) {\n      const r = await t.formElementAnchor?.();\n      t._internals.setValidity(t.formValidity, t.formValidityMessage, r);\n    } else t._internals.setValidity({});\n  },\n  i = t => {\n    t._internals?.form?.requestSubmit();\n  },\n  m = t => {\n    t._internals?.form?.reset();\n  },\n  s = t => \"formFormattedValue\" in t && \"name\" in t;\nexport { o as updateFormValue, e as setFormValue, n as setFormValidity, i as submitForm, m as resetForm };","map":{"version":3,"names":["o","t","s","e","_internals","form","n","name","setFormValue","formFormattedValue","formValidity","Object","keys","some","r","formElementAnchor","setValidity","formValidityMessage","i","requestSubmit","m","reset","updateFormValue","setFormValidity","submitForm","resetForm"],"sources":["/home/user/projects/reactproj/node_modules/@ui5/webcomponents-base/src/features/InputElementsFormSupport.ts"],"sourcesContent":["import type UI5Element from \"../UI5Element.js\";\n\ninterface IFormInputElement extends UI5Element {\n\tname?: string;\n\tformFormattedValue: FormData | string | null;\n\tformValidityMessage?: string;\n\tformValidity?: ValidityStateFlags;\n\tformElementAnchor?: () => HTMLElement | undefined | Promise<HTMLElement | undefined>;\n}\n\nconst updateFormValue = (element: IFormInputElement | UI5Element) => {\n\tif (isInputElement(element)) {\n\t\tsetFormValue(element);\n\t}\n};\n\nconst setFormValue = (element: IFormInputElement) => {\n\tif (!element._internals?.form) {\n\t\treturn;\n\t}\n\n\tsetFormValidity(element);\n\n\tif (!element.name) {\n\t\telement._internals?.setFormValue(null);\n\t\treturn;\n\t}\n\n\telement._internals.setFormValue(element.formFormattedValue);\n};\n\nconst setFormValidity = async (element: IFormInputElement) => {\n\tif (!element._internals?.form) {\n\t\treturn;\n\t}\n\tif (element.formValidity && Object.keys(element.formValidity).some(key => key)) {\n\t\tconst focusRef = await element.formElementAnchor?.();\n\t\telement._internals.setValidity(element.formValidity, element.formValidityMessage, focusRef);\n\t} else {\n\t\telement._internals.setValidity({});\n\t}\n};\n\nconst submitForm = (element: UI5Element) => {\n\telement._internals?.form?.requestSubmit();\n};\n\nconst resetForm = (element: UI5Element) => {\n\telement._internals?.form?.reset();\n};\n\nconst isInputElement = (element: IFormInputElement | UI5Element): element is IFormInputElement => {\n\treturn \"formFormattedValue\" in element && \"name\" in element;\n};\n\nexport {\n\tupdateFormValue,\n\tsetFormValue,\n\tsetFormValidity,\n\tsubmitForm,\n\tresetForm,\n};\n\nexport type {\n\tIFormInputElement,\n};\n"],"mappings":";;AAUA,MAAMA,CAAA,GAAmBC,CAAA,IAA4C;IAChEC,CAAA,CAAeD,CAAO,KACzBE,CAAA,CAAaF,CAAO,CAEtB;EAAA;EAEME,CAAA,GAAgBF,CAAA,IAA+B;IACpD,IAAKA,CAAA,CAAQG,UAAA,EAAYC,IAAA,EAMzB;MAAA,IAFAC,CAAA,CAAgBL,CAAO,GAEnB,CAACA,CAAA,CAAQM,IAAA,EAAM;QAClBN,CAAA,CAAQG,UAAA,EAAYI,YAAA,CAAa,IAAI;QACrC;MACD;MAEAP,CAAA,CAAQG,UAAA,CAAWI,YAAA,CAAaP,CAAA,CAAQQ,kBAAkB;IAAA;EAC3D;EAEMH,CAAA,GAAkB,MAAOL,CAAA,IAA+B;IAC7D,IAAKA,CAAA,CAAQG,UAAA,EAAYC,IAAA,EAGzB,IAAIJ,CAAA,CAAQS,YAAA,IAAgBC,MAAA,CAAOC,IAAA,CAAKX,CAAA,CAAQS,YAAY,EAAEG,IAAA,CAAKC,CAAA,IAAOA,CAAG,GAAG;MAC/E,MAAMA,CAAA,GAAW,MAAMb,CAAA,CAAQc,iBAAA,GAAoB;MACnDd,CAAA,CAAQG,UAAA,CAAWY,WAAA,CAAYf,CAAA,CAAQS,YAAA,EAAcT,CAAA,CAAQgB,mBAAA,EAAqBH,CAAQ,CAC3F;IAAA,OACCb,CAAA,CAAQG,UAAA,CAAWY,WAAA,CAAY,CAAC,CAAC,CAEnC;EAAA;EAEME,CAAA,GAAcjB,CAAA,IAAwB;IAC3CA,CAAA,CAAQG,UAAA,EAAYC,IAAA,EAAMc,aAAA,CAAc,CACzC;EAAA;EAEMC,CAAA,GAAanB,CAAA,IAAwB;IAC1CA,CAAA,CAAQG,UAAA,EAAYC,IAAA,EAAMgB,KAAA,CAAM,CACjC;EAAA;EAEMnB,CAAA,GAAkBD,CAAA,IAChB,wBAAwBA,CAAA,IAAW,UAAUA,CAAA;AAGrD,SACCD,CAAA,IAAAsB,eAAA,EACAnB,CAAA,IAAAK,YAAA,EACAF,CAAA,IAAAiB,eAAA,EACAL,CAAA,IAAAM,UAAA,EACAJ,CAAA,IAAAK,SAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}