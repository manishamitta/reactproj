{"ast":null,"code":"var __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n    r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n    d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport customElement from \"@ui5/webcomponents-base/dist/decorators/customElement.js\";\nimport property from \"@ui5/webcomponents-base/dist/decorators/property.js\";\nimport CalendarDate from \"@ui5/webcomponents-localization/dist/dates/CalendarDate.js\";\nimport modifyDateBy from \"@ui5/webcomponents-localization/dist/dates/modifyDateBy.js\";\nimport getTodayUTCTimestamp from \"@ui5/webcomponents-localization/dist/dates/getTodayUTCTimestamp.js\";\nimport UI5Date from \"@ui5/webcomponents-localization/dist/dates/UI5Date.js\";\nimport DateComponentBase from \"./DateComponentBase.js\";\n/**\n * @class\n *\n * Abstract base class for Calendar, DayPicker, MonthPicker and YearPicker that adds support for:\n *  - common properties (timestamp, selectedDates): declarations and methods that operate on them\n *  - other common code\n * @constructor\n * @extends DateComponentBase\n * @public\n */\nlet CalendarPart = class CalendarPart extends DateComponentBase {\n  get _minTimestamp() {\n    return this._minDate.valueOf() / 1000;\n  }\n  get _maxTimestamp() {\n    return this._maxDate.valueOf() / 1000;\n  }\n  /**\n   * Returns the effective timestamp to be used by the respective calendar part\n   * @protected\n   */\n  get _timestamp() {\n    let timestamp = this.timestamp !== undefined ? this.timestamp : getTodayUTCTimestamp(this._primaryCalendarType);\n    if (this._maxTimestamp && this._maxTimestamp < timestamp) {\n      timestamp = this._maxTimestamp;\n    } else if (this._minTimestamp && this._minTimestamp > timestamp) {\n      timestamp = this._minTimestamp;\n    }\n    return timestamp;\n  }\n  get _localDate() {\n    return UI5Date.getInstance(this._timestamp * 1000);\n  }\n  /**\n   * Returns a CalendarDate instance, representing the _timestamp getter - this date is central to all components' rendering logic\n   * @protected\n   */\n  get _calendarDate() {\n    return CalendarDate.fromTimestamp(this._localDate.getTime(), this._primaryCalendarType);\n  }\n  /**\n   * Change a timestamp and enforce limits\n   * @param timestamp\n   * @protected\n   */\n  _safelySetTimestamp(timestamp) {\n    const min = this._minDate.valueOf() / 1000;\n    const max = this._maxDate.valueOf() / 1000;\n    if (timestamp < min) {\n      timestamp = min;\n    }\n    if (timestamp > max) {\n      timestamp = max;\n    }\n    this.timestamp = timestamp;\n  }\n  /**\n   * Modify a timestamp by a certain amount of days/months/years and enforce limits\n   * @param amount\n   * @param unit\n   * @param preserveDate whether to preserve the day of the month (f.e. 15th of March + 1 month = 15th of April)\n   * @protected\n   */\n  _safelyModifyTimestampBy(amount, unit, preserveDate) {\n    const newDate = modifyDateBy(this._calendarDate, amount, unit, preserveDate);\n    this._safelySetTimestamp(newDate.valueOf() / 1000);\n  }\n  _getTimestampFromDom(domNode) {\n    const oMonthDomRef = domNode.getAttribute(\"data-sap-timestamp\");\n    return parseInt(oMonthDomRef);\n  }\n};\n__decorate([property({\n  type: Number\n})], CalendarPart.prototype, \"timestamp\", void 0);\nCalendarPart = __decorate([customElement()], CalendarPart);\nexport default CalendarPart;","map":{"version":3,"names":["customElement","property","CalendarDate","modifyDateBy","getTodayUTCTimestamp","UI5Date","DateComponentBase","CalendarPart","_minTimestamp","_minDate","valueOf","_maxTimestamp","_maxDate","_timestamp","timestamp","undefined","_primaryCalendarType","_localDate","getInstance","_calendarDate","fromTimestamp","getTime","_safelySetTimestamp","min","max","_safelyModifyTimestampBy","amount","unit","preserveDate","newDate","_getTimestampFromDom","domNode","oMonthDomRef","getAttribute","parseInt","__decorate","type","Number"],"sources":["/home/user/projects/reactproj/node_modules/@ui5/webcomponents/src/CalendarPart.ts"],"sourcesContent":["import customElement from \"@ui5/webcomponents-base/dist/decorators/customElement.js\";\nimport property from \"@ui5/webcomponents-base/dist/decorators/property.js\";\nimport CalendarDate from \"@ui5/webcomponents-localization/dist/dates/CalendarDate.js\";\nimport modifyDateBy from \"@ui5/webcomponents-localization/dist/dates/modifyDateBy.js\";\nimport getTodayUTCTimestamp from \"@ui5/webcomponents-localization/dist/dates/getTodayUTCTimestamp.js\";\nimport UI5Date from \"@ui5/webcomponents-localization/dist/dates/UI5Date.js\";\nimport DateComponentBase from \"./DateComponentBase.js\";\n\n/**\n * @class\n *\n * Abstract base class for Calendar, DayPicker, MonthPicker and YearPicker that adds support for:\n *  - common properties (timestamp, selectedDates): declarations and methods that operate on them\n *  - other common code\n * @constructor\n * @extends DateComponentBase\n * @public\n */\n@customElement()\nclass CalendarPart extends DateComponentBase {\n\t/**\n\t * The timestamp of the currently focused date. Set this property to move the component's focus to a certain date.\n\t * **Node:** Timestamp is 10-digit Integer representing the seconds (not milliseconds) since the Unix Epoch.\n\t * @protected\n\t */\n\t@property({ type: Number })\n\ttimestamp?: number;\n\n\tget _minTimestamp() {\n\t\treturn this._minDate.valueOf() / 1000;\n\t}\n\n\tget _maxTimestamp() {\n\t\treturn this._maxDate.valueOf() / 1000;\n\t}\n\n\t/**\n\t * Returns the effective timestamp to be used by the respective calendar part\n\t * @protected\n\t */\n\tget _timestamp() {\n\t\tlet timestamp = this.timestamp !== undefined ? this.timestamp : getTodayUTCTimestamp(this._primaryCalendarType);\n\n\t\tif (this._maxTimestamp && this._maxTimestamp < timestamp) {\n\t\t\ttimestamp = this._maxTimestamp;\n\t\t} else if (this._minTimestamp && this._minTimestamp > timestamp) {\n\t\t\ttimestamp = this._minTimestamp;\n\t\t}\n\n\t\treturn timestamp;\n\t}\n\n\tget _localDate() {\n\t\treturn UI5Date.getInstance(this._timestamp * 1000);\n\t}\n\n\t/**\n\t * Returns a CalendarDate instance, representing the _timestamp getter - this date is central to all components' rendering logic\n\t * @protected\n\t */\n\tget _calendarDate() {\n\t\treturn CalendarDate.fromTimestamp(this._localDate.getTime(), this._primaryCalendarType);\n\t}\n\n\t/**\n\t * Change a timestamp and enforce limits\n\t * @param timestamp\n\t * @protected\n\t */\n\t_safelySetTimestamp(timestamp: number) {\n\t\tconst min = this._minDate.valueOf() / 1000;\n\t\tconst max = this._maxDate.valueOf() / 1000;\n\n\t\tif (timestamp < min) {\n\t\t\ttimestamp = min;\n\t\t}\n\t\tif (timestamp > max) {\n\t\t\ttimestamp = max;\n\t\t}\n\n\t\tthis.timestamp = timestamp;\n\t}\n\n\t/**\n\t * Modify a timestamp by a certain amount of days/months/years and enforce limits\n\t * @param amount\n\t * @param unit\n\t * @param preserveDate whether to preserve the day of the month (f.e. 15th of March + 1 month = 15th of April)\n\t * @protected\n\t */\n\t_safelyModifyTimestampBy(amount: number, unit: string, preserveDate?: boolean) {\n\t\tconst newDate = modifyDateBy(this._calendarDate, amount, unit, preserveDate);\n\t\tthis._safelySetTimestamp(newDate.valueOf() / 1000);\n\t}\n\n\t_getTimestampFromDom(domNode: HTMLElement) {\n\t\tconst oMonthDomRef = domNode.getAttribute(\"data-sap-timestamp\")!;\n\t\treturn parseInt(oMonthDomRef);\n\t}\n}\n\nexport default CalendarPart;\n"],"mappings":";;;;;;;AAAA,OAAOA,aAAa,MAAM,0DAA0D;AACpF,OAAOC,QAAQ,MAAM,qDAAqD;AAC1E,OAAOC,YAAY,MAAM,4DAA4D;AACrF,OAAOC,YAAY,MAAM,4DAA4D;AACrF,OAAOC,oBAAoB,MAAM,oEAAoE;AACrG,OAAOC,OAAO,MAAM,uDAAuD;AAC3E,OAAOC,iBAAiB,MAAM,wBAAwB;AAEtD;;;;;;;;;;AAWA,IAAMC,YAAY,GAAlB,MAAMA,YAAa,SAAQD,iBAAiB;EAS3C,IAAIE,aAAaA,CAAA;IAChB,OAAO,IAAI,CAACC,QAAQ,CAACC,OAAO,EAAE,GAAG,IAAI;EACtC;EAEA,IAAIC,aAAaA,CAAA;IAChB,OAAO,IAAI,CAACC,QAAQ,CAACF,OAAO,EAAE,GAAG,IAAI;EACtC;EAEA;;;;EAIA,IAAIG,UAAUA,CAAA;IACb,IAAIC,SAAS,GAAG,IAAI,CAACA,SAAS,KAAKC,SAAS,GAAG,IAAI,CAACD,SAAS,GAAGV,oBAAoB,CAAC,IAAI,CAACY,oBAAoB,CAAC;IAE/G,IAAI,IAAI,CAACL,aAAa,IAAI,IAAI,CAACA,aAAa,GAAGG,SAAS,EAAE;MACzDA,SAAS,GAAG,IAAI,CAACH,aAAa;KAC9B,MAAM,IAAI,IAAI,CAACH,aAAa,IAAI,IAAI,CAACA,aAAa,GAAGM,SAAS,EAAE;MAChEA,SAAS,GAAG,IAAI,CAACN,aAAa;;IAG/B,OAAOM,SAAS;EACjB;EAEA,IAAIG,UAAUA,CAAA;IACb,OAAOZ,OAAO,CAACa,WAAW,CAAC,IAAI,CAACL,UAAU,GAAG,IAAI,CAAC;EACnD;EAEA;;;;EAIA,IAAIM,aAAaA,CAAA;IAChB,OAAOjB,YAAY,CAACkB,aAAa,CAAC,IAAI,CAACH,UAAU,CAACI,OAAO,EAAE,EAAE,IAAI,CAACL,oBAAoB,CAAC;EACxF;EAEA;;;;;EAKAM,mBAAmBA,CAACR,SAAiB;IACpC,MAAMS,GAAG,GAAG,IAAI,CAACd,QAAQ,CAACC,OAAO,EAAE,GAAG,IAAI;IAC1C,MAAMc,GAAG,GAAG,IAAI,CAACZ,QAAQ,CAACF,OAAO,EAAE,GAAG,IAAI;IAE1C,IAAII,SAAS,GAAGS,GAAG,EAAE;MACpBT,SAAS,GAAGS,GAAG;;IAEhB,IAAIT,SAAS,GAAGU,GAAG,EAAE;MACpBV,SAAS,GAAGU,GAAG;;IAGhB,IAAI,CAACV,SAAS,GAAGA,SAAS;EAC3B;EAEA;;;;;;;EAOAW,wBAAwBA,CAACC,MAAc,EAAEC,IAAY,EAAEC,YAAsB;IAC5E,MAAMC,OAAO,GAAG1B,YAAY,CAAC,IAAI,CAACgB,aAAa,EAAEO,MAAM,EAAEC,IAAI,EAAEC,YAAY,CAAC;IAC5E,IAAI,CAACN,mBAAmB,CAACO,OAAO,CAACnB,OAAO,EAAE,GAAG,IAAI,CAAC;EACnD;EAEAoB,oBAAoBA,CAACC,OAAoB;IACxC,MAAMC,YAAY,GAAGD,OAAO,CAACE,YAAY,CAAC,oBAAoB,CAAE;IAChE,OAAOC,QAAQ,CAACF,YAAY,CAAC;EAC9B;CACA;AAzEAG,UAAA,EADClC,QAAQ,CAAC;EAAEmC,IAAI,EAAEC;AAAM,CAAE,CAAC,C,8CACR;AAPd9B,YAAY,GAAA4B,UAAA,EADjBnC,aAAa,EAAE,C,EACVO,YAAY,CAgFjB;AAED,eAAeA,YAAY","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}