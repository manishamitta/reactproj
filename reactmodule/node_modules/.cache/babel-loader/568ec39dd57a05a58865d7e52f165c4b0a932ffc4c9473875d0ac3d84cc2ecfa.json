{"ast":null,"code":"\"use strict\";\n\nimport a from \"./isElementHidden.js\";\nconst r = e => {\n  if (!e || e.hasAttribute(\"data-sap-no-tab-ref\") || a(e)) return !1;\n  const t = e.getAttribute(\"tabindex\");\n  if (t != null) return parseInt(t) >= 0;\n  const n = e.nodeName.toLowerCase();\n  return n === \"a\" || /^(input|select|textarea|button|object)$/.test(n) ? !e.disabled : !1;\n};\nexport default r;","map":{"version":3,"names":["a","r","e","hasAttribute","t","getAttribute","parseInt","n","nodeName","toLowerCase","test","disabled"],"sources":["/home/user/projects/reactproj/node_modules/@ui5/webcomponents-base/src/util/isElementTabbable.ts"],"sourcesContent":["import isElementHidden from \"./isElementHidden.js\";\n\n/**\n * Returns if the HTMLElement is tabbable.\n *\n * @public\n * @param { HTMLElement } el the component to operate on (component that slots or contains within its shadow root the items the user navigates among)\n * @returns { boolean } true if the element is tabbable or false - if not\n */\nconst isElementTabbable = (el: HTMLElement): boolean => {\n\tif (!el) {\n\t\treturn false;\n\t}\n\n\tif (el.hasAttribute(\"data-sap-no-tab-ref\")) {\n\t\treturn false;\n\t}\n\n\tif (isElementHidden(el)) {\n\t\treturn false;\n\t}\n\n\tconst tabIndex = el.getAttribute(\"tabindex\");\n\tif (tabIndex !== null && tabIndex !== undefined) {\n\t\treturn parseInt(tabIndex) >= 0;\n\t}\n\n\tconst nodeName = el.nodeName.toLowerCase();\n\tif (nodeName === \"a\" || /^(input|select|textarea|button|object)$/.test(nodeName)) {\n\t\treturn !(el as HTMLLinkElement).disabled;\n\t}\n\n\treturn false;\n};\n\nexport default isElementTabbable;\n"],"mappings":";;AAAA,OAAOA,CAAA,MAAqB;AAS5B,MAAMC,CAAA,GAAqBC,CAAA,IAA6B;EASvD,IARI,CAACA,CAAA,IAIDA,CAAA,CAAGC,YAAA,CAAa,qBAAqB,KAIrCH,CAAA,CAAgBE,CAAE,GACrB,OAAO;EAGR,MAAME,CAAA,GAAWF,CAAA,CAAGG,YAAA,CAAa,UAAU;EAC3C,IAAID,CAAA,IAAa,MAChB,OAAOE,QAAA,CAASF,CAAQ,KAAK;EAG9B,MAAMG,CAAA,GAAWL,CAAA,CAAGM,QAAA,CAASC,WAAA,CAAY;EACzC,OAAIF,CAAA,KAAa,OAAO,0CAA0CG,IAAA,CAAKH,CAAQ,IACvE,CAAEL,CAAA,CAAuBS,QAAA,GAG1B,EACR;AAAA;AAEA,eAAeV,CAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}