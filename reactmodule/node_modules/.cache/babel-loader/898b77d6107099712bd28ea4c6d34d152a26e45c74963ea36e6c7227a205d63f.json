{"ast":null,"code":"import { isClickInRect } from \"@ui5/webcomponents-base/dist/util/PopupUtils.js\";\nimport getActiveElement from \"@ui5/webcomponents-base/dist/util/getActiveElement.js\";\nimport { instanceOfPopover } from \"../Popover.js\";\nimport { getOpenedPopups, addOpenedPopup, removeOpenedPopup } from \"./OpenedPopupsRegistry.js\";\nlet updateInterval;\nconst intervalTimeout = 300;\nconst openedRegistry = [];\nconst repositionPopovers = () => {\n  openedRegistry.forEach(popover => {\n    popover.instance.reposition();\n  });\n};\nconst closePopoversIfLostFocus = () => {\n  if (getActiveElement().tagName === \"IFRAME\") {\n    getRegistry().reverse().forEach(popup => popup.instance.closePopup(false, false, true));\n  }\n};\nconst runUpdateInterval = () => {\n  updateInterval = setInterval(() => {\n    repositionPopovers();\n    closePopoversIfLostFocus();\n  }, intervalTimeout);\n};\nconst stopUpdateInterval = () => {\n  clearInterval(updateInterval);\n};\nconst attachGlobalScrollHandler = () => {\n  document.addEventListener(\"scroll\", repositionPopovers, {\n    capture: true\n  });\n};\nconst detachGlobalScrollHandler = () => {\n  document.removeEventListener(\"scroll\", repositionPopovers, {\n    capture: true\n  });\n};\nconst attachScrollHandler = popover => {\n  popover && popover.shadowRoot.addEventListener(\"scroll\", repositionPopovers, {\n    capture: true\n  });\n};\nconst detachScrollHandler = popover => {\n  popover && popover.shadowRoot.removeEventListener(\"scroll\", repositionPopovers, {\n    capture: true\n  });\n};\nconst attachGlobalClickHandler = () => {\n  document.addEventListener(\"mousedown\", clickHandler);\n};\nconst detachGlobalClickHandler = () => {\n  document.removeEventListener(\"mousedown\", clickHandler);\n};\nconst clickHandler = event => {\n  const openedPopups = getOpenedPopups();\n  if (openedPopups.length === 0) {\n    return;\n  }\n  const isTopPopupPopover = instanceOfPopover(openedPopups[openedPopups.length - 1].instance);\n  if (!isTopPopupPopover) {\n    return;\n  }\n  // loop all open popovers\n  for (let i = openedPopups.length - 1; i !== -1; i--) {\n    const popup = openedPopups[i].instance;\n    // if popup is modal, opener is clicked, popup is dialog skip closing\n    if (popup.isModal || popup.isOpenerClicked(event)) {\n      return;\n    }\n    if (isClickInRect(event, popup.getBoundingClientRect())) {\n      break;\n    }\n    popup.closePopup();\n  }\n};\nconst addOpenedPopover = instance => {\n  const parentPopovers = getParentPopoversIfNested(instance);\n  addOpenedPopup(instance, parentPopovers);\n  openedRegistry.push({\n    instance,\n    parentPopovers\n  });\n  attachScrollHandler(instance);\n  if (openedRegistry.length === 1) {\n    attachGlobalScrollHandler();\n    attachGlobalClickHandler();\n    runUpdateInterval();\n  }\n};\nconst removeOpenedPopover = instance => {\n  const popoversToClose = [instance];\n  for (let i = 0; i < openedRegistry.length; i++) {\n    const indexOfCurrentInstance = openedRegistry[i].parentPopovers.indexOf(instance);\n    if (openedRegistry[i].parentPopovers.length > 0 && indexOfCurrentInstance > -1) {\n      popoversToClose.push(openedRegistry[i].instance);\n    }\n  }\n  for (let i = popoversToClose.length - 1; i >= 0; i--) {\n    for (let j = 0; j < openedRegistry.length; j++) {\n      let indexOfItemToRemove = -1;\n      if (popoversToClose[i] === openedRegistry[j].instance) {\n        indexOfItemToRemove = j;\n      }\n      if (indexOfItemToRemove >= 0) {\n        removeOpenedPopup(openedRegistry[indexOfItemToRemove].instance);\n        detachScrollHandler(openedRegistry[indexOfItemToRemove].instance);\n        const itemToClose = openedRegistry.splice(indexOfItemToRemove, 1);\n        itemToClose[0].instance.closePopup(false, true);\n      }\n    }\n  }\n  if (!openedRegistry.length) {\n    detachGlobalScrollHandler();\n    detachGlobalClickHandler();\n    stopUpdateInterval();\n  }\n};\nconst getRegistry = () => {\n  return openedRegistry;\n};\nconst getParentPopoversIfNested = instance => {\n  let currentElement = instance.parentNode;\n  const parentPopovers = [];\n  while (currentElement && currentElement.parentNode) {\n    for (let i = 0; i < openedRegistry.length; i++) {\n      if (currentElement === openedRegistry[i].instance) {\n        parentPopovers.push(currentElement);\n      }\n    }\n    currentElement = currentElement.parentNode;\n  }\n  return parentPopovers;\n};\nexport { addOpenedPopover, removeOpenedPopover, getRegistry };","map":{"version":3,"names":["isClickInRect","getActiveElement","instanceOfPopover","getOpenedPopups","addOpenedPopup","removeOpenedPopup","updateInterval","intervalTimeout","openedRegistry","repositionPopovers","forEach","popover","instance","reposition","closePopoversIfLostFocus","tagName","getRegistry","reverse","popup","closePopup","runUpdateInterval","setInterval","stopUpdateInterval","clearInterval","attachGlobalScrollHandler","document","addEventListener","capture","detachGlobalScrollHandler","removeEventListener","attachScrollHandler","shadowRoot","detachScrollHandler","attachGlobalClickHandler","clickHandler","detachGlobalClickHandler","event","openedPopups","length","isTopPopupPopover","i","isModal","isOpenerClicked","getBoundingClientRect","addOpenedPopover","parentPopovers","getParentPopoversIfNested","push","removeOpenedPopover","popoversToClose","indexOfCurrentInstance","indexOf","j","indexOfItemToRemove","itemToClose","splice","currentElement","parentNode"],"sources":["/home/user/projects/reactproj/node_modules/@ui5/webcomponents/src/popup-utils/PopoverRegistry.ts"],"sourcesContent":["import { isClickInRect } from \"@ui5/webcomponents-base/dist/util/PopupUtils.js\";\nimport type { Interval } from \"@ui5/webcomponents-base/dist/types.js\";\nimport getActiveElement from \"@ui5/webcomponents-base/dist/util/getActiveElement.js\";\nimport type Popover from \"../Popover.js\";\nimport { instanceOfPopover } from \"../Popover.js\";\nimport { getOpenedPopups, addOpenedPopup, removeOpenedPopup } from \"./OpenedPopupsRegistry.js\";\n\ntype RegisteredPopover = {\n\tinstance: Popover;\n\tparentPopovers: Array<Popover>;\n}\n\nlet updateInterval: Interval;\nconst intervalTimeout = 300;\nconst openedRegistry: Array<RegisteredPopover> = [];\n\nconst repositionPopovers = () => {\n\topenedRegistry.forEach(popover => {\n\t\tpopover.instance.reposition();\n\t});\n};\n\nconst closePopoversIfLostFocus = () => {\n\tif (getActiveElement()!.tagName === \"IFRAME\") {\n\t\tgetRegistry().reverse().forEach(popup => popup.instance.closePopup(false, false, true));\n\t}\n};\n\nconst runUpdateInterval = () => {\n\tupdateInterval = setInterval(() => {\n\t\trepositionPopovers();\n\n\t\tclosePopoversIfLostFocus();\n\t}, intervalTimeout);\n};\n\nconst stopUpdateInterval = () => {\n\tclearInterval(updateInterval);\n};\n\nconst attachGlobalScrollHandler = () => {\n\tdocument.addEventListener(\"scroll\", repositionPopovers, { capture: true });\n};\n\nconst detachGlobalScrollHandler = () => {\n\tdocument.removeEventListener(\"scroll\", repositionPopovers, { capture: true });\n};\n\nconst attachScrollHandler = (popover: Popover) => {\n\tpopover && popover.shadowRoot!.addEventListener(\"scroll\", repositionPopovers, { capture: true });\n};\n\nconst detachScrollHandler = (popover: Popover) => {\n\tpopover && popover.shadowRoot!.removeEventListener(\"scroll\", repositionPopovers, { capture: true });\n};\n\nconst attachGlobalClickHandler = () => {\n\tdocument.addEventListener(\"mousedown\", clickHandler);\n};\n\nconst detachGlobalClickHandler = () => {\n\tdocument.removeEventListener(\"mousedown\", clickHandler);\n};\n\nconst clickHandler = (event: MouseEvent) => {\n\tconst openedPopups = getOpenedPopups();\n\n\tif (openedPopups.length === 0) {\n\t\treturn;\n\t}\n\n\tconst isTopPopupPopover = instanceOfPopover(openedPopups[openedPopups.length - 1].instance);\n\n\tif (!isTopPopupPopover) {\n\t\treturn;\n\t}\n\n\t// loop all open popovers\n\tfor (let i = (openedPopups.length - 1); i !== -1; i--) {\n\t\tconst popup = openedPopups[i].instance;\n\n\t\t// if popup is modal, opener is clicked, popup is dialog skip closing\n\t\tif (popup.isModal || (popup as Popover).isOpenerClicked(event)) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (isClickInRect(event, popup.getBoundingClientRect())) {\n\t\t\tbreak;\n\t\t}\n\n\t\tpopup.closePopup();\n\t}\n};\n\nconst addOpenedPopover = (instance: Popover) => {\n\tconst parentPopovers = getParentPopoversIfNested(instance);\n\n\taddOpenedPopup(instance, parentPopovers);\n\topenedRegistry.push({\n\t\tinstance,\n\t\tparentPopovers,\n\t});\n\n\tattachScrollHandler(instance);\n\n\tif (openedRegistry.length === 1) {\n\t\tattachGlobalScrollHandler();\n\t\tattachGlobalClickHandler();\n\t\trunUpdateInterval();\n\t}\n};\n\nconst removeOpenedPopover = (instance: Popover) => {\n\tconst popoversToClose = [instance];\n\n\tfor (let i = 0; i < openedRegistry.length; i++) {\n\t\tconst indexOfCurrentInstance = openedRegistry[i].parentPopovers.indexOf(instance);\n\t\tif (openedRegistry[i].parentPopovers.length > 0 && indexOfCurrentInstance > -1) {\n\t\t\tpopoversToClose.push(openedRegistry[i].instance);\n\t\t}\n\t}\n\n\tfor (let i = popoversToClose.length - 1; i >= 0; i--) {\n\t\tfor (let j = 0; j < openedRegistry.length; j++) {\n\t\t\tlet indexOfItemToRemove = -1;\n\t\t\tif (popoversToClose[i] === openedRegistry[j].instance) {\n\t\t\t\tindexOfItemToRemove = j;\n\t\t\t}\n\n\t\t\tif (indexOfItemToRemove >= 0) {\n\t\t\t\tremoveOpenedPopup(openedRegistry[indexOfItemToRemove].instance);\n\t\t\t\tdetachScrollHandler(openedRegistry[indexOfItemToRemove].instance);\n\t\t\t\tconst itemToClose = openedRegistry.splice(indexOfItemToRemove, 1);\n\t\t\t\titemToClose[0].instance.closePopup(false, true);\n\t\t\t}\n\t\t}\n\t}\n\n\tif (!openedRegistry.length) {\n\t\tdetachGlobalScrollHandler();\n\t\tdetachGlobalClickHandler();\n\t\tstopUpdateInterval();\n\t}\n};\n\nconst getRegistry = () => {\n\treturn openedRegistry;\n};\n\nconst getParentPopoversIfNested = (instance: Popover) => {\n\tlet currentElement = instance.parentNode;\n\tconst parentPopovers: Array<Popover> = [];\n\n\twhile (currentElement && currentElement.parentNode) {\n\t\tfor (let i = 0; i < openedRegistry.length; i++) {\n\t\t\tif (currentElement === openedRegistry[i].instance) {\n\t\t\t\tparentPopovers.push(currentElement as Popover);\n\t\t\t}\n\t\t}\n\n\t\tcurrentElement = currentElement.parentNode;\n\t}\n\n\treturn parentPopovers;\n};\n\nexport { addOpenedPopover, removeOpenedPopover, getRegistry };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}