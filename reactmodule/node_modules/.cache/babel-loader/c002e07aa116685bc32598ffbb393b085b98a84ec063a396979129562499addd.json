{"ast":null,"code":"import { clsx } from 'clsx';\nimport { useEffect, useMemo, useRef, createElement as _createElement } from 'react';\nimport { AnalyticalTableSubComponentsBehavior } from '../../../enums/index.js';\nimport { getSubRowsByString } from '../util/index.js';\nimport { EmptyRow } from './EmptyRow.js';\nimport { RowSubComponent as SubComponent } from './RowSubComponent.js';\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nexport const VirtualTableBody = props => {\n  const {\n    alternateRowColor,\n    classes,\n    prepareRow,\n    rows,\n    scrollToRef,\n    isTreeTable,\n    internalRowHeight,\n    visibleColumns,\n    renderRowSubComponent,\n    popInRowHeight,\n    markNavigatedRow,\n    isRtl,\n    alwaysShowSubComponent,\n    dispatch,\n    subComponentsHeight,\n    columnVirtualizer,\n    manualGroupBy,\n    subRowsKey,\n    scrollContainerRef,\n    subComponentsBehavior,\n    triggerScroll,\n    rowVirtualizer\n  } = props;\n  const rowHeight = popInRowHeight !== internalRowHeight ? popInRowHeight : internalRowHeight;\n  const lastNonEmptyRow = useRef(null);\n  scrollToRef.current = {\n    ...scrollToRef.current,\n    scrollToOffset: rowVirtualizer.scrollToOffset,\n    scrollToIndex: rowVirtualizer.scrollToIndex\n  };\n  useEffect(() => {\n    if (triggerScroll && triggerScroll.direction === 'vertical') {\n      if (triggerScroll.type === 'offset') {\n        rowVirtualizer.scrollToOffset(...triggerScroll.args);\n      } else {\n        rowVirtualizer.scrollToIndex(...triggerScroll.args);\n      }\n    }\n  }, [triggerScroll]);\n  const popInColumn = useMemo(() => visibleColumns.filter(item => item.id !== '__ui5wcr__internal_highlight_column' && item.id !== '__ui5wcr__internal_selection_column' && item.id !== '__ui5wcr__internal_navigation_column')[0], [visibleColumns]);\n  return /*#__PURE__*/_jsx(\"div\", {\n    ref: scrollContainerRef,\n    \"data-component-name\": \"AnalyticalTableBodyScrollableContainer\",\n    style: {\n      position: 'relative',\n      height: `${rowVirtualizer.getTotalSize()}px`,\n      width: `${columnVirtualizer.getTotalSize()}px`\n    },\n    children: rowVirtualizer.getVirtualItems().map((virtualRow, visibleRowIndex) => {\n      const row = rows[virtualRow.index];\n      const rowIndexWithHeader = virtualRow.index + 1;\n      if (!row || row.groupByVal === 'undefined') {\n        const alternate = alternateRowColor && virtualRow.index % 2 !== 0;\n        if (!lastNonEmptyRow.current?.cells) {\n          return /*#__PURE__*/_jsx(EmptyRow, {\n            virtualRow: virtualRow,\n            className: clsx(classes.tr, alternate && classes.alternateRowColor)\n          }, `empty_row_${virtualRow.index}`);\n        }\n        const cells = lastNonEmptyRow.current.cells;\n        return /*#__PURE__*/_jsx(EmptyRow, {\n          virtualRow: virtualRow,\n          className: clsx(classes.tr, alternate && classes.alternateRowColor),\n          children: columnVirtualizer.getVirtualItems().map(item => {\n            const cell = cells[item.index];\n            const cellProps = cell.getCellProps();\n            const {\n              'aria-colindex': _0,\n              'aria-selected': _1,\n              'aria-label': _2,\n              tabIndex: _3,\n              ...emptyRowCellProps\n            } = cellProps;\n            return /*#__PURE__*/_createElement(\"div\", {\n              ...emptyRowCellProps,\n              key: `${visibleRowIndex}-${emptyRowCellProps.key}`,\n              \"data-empty-row-cell\": \"true\",\n              tabIndex: -1,\n              \"aria-hidden\": true,\n              style: {\n                ...emptyRowCellProps.style,\n                cursor: 'unset',\n                width: item.size\n              }\n            });\n          })\n        }, `empty_row_${virtualRow.index}`);\n      } else {\n        lastNonEmptyRow.current = row;\n      }\n      prepareRow(row);\n      const {\n        key,\n        ...rowProps\n      } = row.getRowProps({\n        'aria-rowindex': virtualRow.index + 1,\n        'data-virtual-row-index': virtualRow.index\n      });\n      const isNavigatedCell = typeof markNavigatedRow === 'function' ? markNavigatedRow(row) : false;\n      const RowSubComponent = typeof renderRowSubComponent === 'function' ? renderRowSubComponent(row) : undefined;\n      if ((!RowSubComponent || subComponentsBehavior === AnalyticalTableSubComponentsBehavior.IncludeHeightExpandable && !row.isExpanded) && subComponentsHeight && subComponentsHeight?.[virtualRow.index]?.subComponentHeight) {\n        dispatch({\n          type: 'SUB_COMPONENTS_HEIGHT',\n          payload: {\n            ...subComponentsHeight,\n            [virtualRow.index]: {\n              subComponentHeight: 0,\n              rowId: row.id\n            }\n          }\n        });\n      }\n      let updatedHeight = rowHeight;\n      if (renderRowSubComponent && (rows[virtualRow.index]?.isExpanded || alwaysShowSubComponent) && subComponentsHeight?.[virtualRow.index]?.rowId === rows[virtualRow.index]?.id) {\n        updatedHeight += subComponentsHeight?.[virtualRow.index]?.subComponentHeight ?? 0;\n      }\n      const measureRef = isTreeTable && renderRowSubComponent && (row.isExpanded || alwaysShowSubComponent) ? node => {\n        rowVirtualizer.measureElement(node);\n      } : rowVirtualizer.measureElement;\n      return /*#__PURE__*/(\n        // eslint-disable-next-line react/jsx-key\n        _jsxs(\"div\", {\n          ...rowProps,\n          ref: measureRef,\n          style: {\n            ...(rowProps.style ?? {}),\n            transform: `translateY(${virtualRow.start}px)`,\n            position: 'absolute',\n            boxSizing: 'border-box',\n            height: `${updatedHeight}px`\n          },\n          children: [RowSubComponent && (row.isExpanded || alwaysShowSubComponent) && /*#__PURE__*/_jsx(SubComponent, {\n            subComponentsHeight: subComponentsHeight,\n            virtualRow: virtualRow,\n            dispatch: dispatch,\n            row: row,\n            rowHeight: rowHeight,\n            rows: rows,\n            alwaysShowSubComponent: alwaysShowSubComponent,\n            rowIndex: visibleRowIndex + 1,\n            children: RowSubComponent\n          }), columnVirtualizer.getVirtualItems().map((virtualColumn, visibleColumnIndex) => {\n            const cell = row.cells[virtualColumn.index];\n            const directionStyles = isRtl ? {\n              transform: `translateX(-${virtualColumn.start}px)`,\n              insertInlineStart: 0\n            } : {\n              transform: `translateX(${virtualColumn.start}px)`,\n              insertInlineStart: 0\n            };\n            if (!cell) {\n              return null;\n            }\n            const {\n              key,\n              ...cellProps\n            } = cell.getCellProps();\n            const allCellProps = {\n              ...cellProps,\n              ['data-visible-column-index']: visibleColumnIndex,\n              ['data-column-index']: virtualColumn.index,\n              ['data-visible-row-index']: visibleRowIndex + 1,\n              ['data-row-index']: rowIndexWithHeader,\n              style: {\n                ...cellProps.style,\n                position: 'absolute',\n                width: `${virtualColumn.size}px`,\n                top: 0,\n                height: `${rowHeight}px`,\n                ...directionStyles\n              }\n            };\n            let contentToRender;\n            if (cell.column.id === '__ui5wcr__internal_highlight_column' || cell.column.id === '__ui5wcr__internal_selection_column' || cell.column.id === '__ui5wcr__internal_navigation_column') {\n              contentToRender = 'Cell';\n            } else if (isTreeTable || !alwaysShowSubComponent && RowSubComponent) {\n              contentToRender = 'Expandable';\n            } else if (cell.isGrouped || manualGroupBy && cell.column.isGrouped && getSubRowsByString(subRowsKey, row.original) != null && cell.value !== undefined) {\n              contentToRender = 'Grouped';\n            } else if (cell.isAggregated) {\n              contentToRender = 'Aggregated';\n            } else if (cell.isPlaceholder) {\n              contentToRender = 'RepeatedValue';\n            } else {\n              contentToRender = 'Cell';\n            }\n            return /*#__PURE__*/(\n              // eslint-disable-next-line react/jsx-key\n              _jsx(\"div\", {\n                ...allCellProps,\n                \"data-selection-cell\": cell.column.id === '__ui5wcr__internal_selection_column',\n                children: popInRowHeight !== internalRowHeight && popInColumn.id === cell.column.id ? cell.render('PopIn', {\n                  contentToRender,\n                  internalRowHeight\n                }) : cell.render(contentToRender, isNavigatedCell === true ? {\n                  isNavigatedCell\n                } : {})\n              }, key)\n            );\n          })]\n        }, key)\n      );\n    })\n  });\n};","map":{"version":3,"names":["clsx","useEffect","useMemo","useRef","createElement","_createElement","AnalyticalTableSubComponentsBehavior","getSubRowsByString","EmptyRow","RowSubComponent","SubComponent","jsx","_jsx","jsxs","_jsxs","VirtualTableBody","props","alternateRowColor","classes","prepareRow","rows","scrollToRef","isTreeTable","internalRowHeight","visibleColumns","renderRowSubComponent","popInRowHeight","markNavigatedRow","isRtl","alwaysShowSubComponent","dispatch","subComponentsHeight","columnVirtualizer","manualGroupBy","subRowsKey","scrollContainerRef","subComponentsBehavior","triggerScroll","rowVirtualizer","rowHeight","lastNonEmptyRow","current","scrollToOffset","scrollToIndex","direction","type","args","popInColumn","filter","item","id","ref","style","position","height","getTotalSize","width","children","getVirtualItems","map","virtualRow","visibleRowIndex","row","index","rowIndexWithHeader","groupByVal","alternate","cells","className","tr","cell","cellProps","getCellProps","_0","_1","_2","tabIndex","_3","emptyRowCellProps","key","cursor","size","rowProps","getRowProps","isNavigatedCell","undefined","IncludeHeightExpandable","isExpanded","subComponentHeight","payload","rowId","updatedHeight","measureRef","node","measureElement","transform","start","boxSizing","rowIndex","virtualColumn","visibleColumnIndex","directionStyles","insertInlineStart","allCellProps","top","contentToRender","column","isGrouped","original","value","isAggregated","isPlaceholder","render"],"sources":["/home/user/projects/reactproj/node_modules/@ui5/webcomponents-react/dist/components/AnalyticalTable/TableBody/VirtualTableBody.js"],"sourcesContent":["import { clsx } from 'clsx';\nimport { useEffect, useMemo, useRef, createElement as _createElement } from 'react';\nimport { AnalyticalTableSubComponentsBehavior } from '../../../enums/index.js';\nimport { getSubRowsByString } from '../util/index.js';\nimport { EmptyRow } from './EmptyRow.js';\nimport { RowSubComponent as SubComponent } from './RowSubComponent.js';\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nexport const VirtualTableBody = props => {\n  const {\n    alternateRowColor,\n    classes,\n    prepareRow,\n    rows,\n    scrollToRef,\n    isTreeTable,\n    internalRowHeight,\n    visibleColumns,\n    renderRowSubComponent,\n    popInRowHeight,\n    markNavigatedRow,\n    isRtl,\n    alwaysShowSubComponent,\n    dispatch,\n    subComponentsHeight,\n    columnVirtualizer,\n    manualGroupBy,\n    subRowsKey,\n    scrollContainerRef,\n    subComponentsBehavior,\n    triggerScroll,\n    rowVirtualizer\n  } = props;\n  const rowHeight = popInRowHeight !== internalRowHeight ? popInRowHeight : internalRowHeight;\n  const lastNonEmptyRow = useRef(null);\n  scrollToRef.current = {\n    ...scrollToRef.current,\n    scrollToOffset: rowVirtualizer.scrollToOffset,\n    scrollToIndex: rowVirtualizer.scrollToIndex\n  };\n  useEffect(() => {\n    if (triggerScroll && triggerScroll.direction === 'vertical') {\n      if (triggerScroll.type === 'offset') {\n        rowVirtualizer.scrollToOffset(...triggerScroll.args);\n      } else {\n        rowVirtualizer.scrollToIndex(...triggerScroll.args);\n      }\n    }\n  }, [triggerScroll]);\n  const popInColumn = useMemo(() => visibleColumns.filter(item => item.id !== '__ui5wcr__internal_highlight_column' && item.id !== '__ui5wcr__internal_selection_column' && item.id !== '__ui5wcr__internal_navigation_column')[0], [visibleColumns]);\n  return /*#__PURE__*/_jsx(\"div\", {\n    ref: scrollContainerRef,\n    \"data-component-name\": \"AnalyticalTableBodyScrollableContainer\",\n    style: {\n      position: 'relative',\n      height: `${rowVirtualizer.getTotalSize()}px`,\n      width: `${columnVirtualizer.getTotalSize()}px`\n    },\n    children: rowVirtualizer.getVirtualItems().map((virtualRow, visibleRowIndex) => {\n      const row = rows[virtualRow.index];\n      const rowIndexWithHeader = virtualRow.index + 1;\n      if (!row || row.groupByVal === 'undefined') {\n        const alternate = alternateRowColor && virtualRow.index % 2 !== 0;\n        if (!lastNonEmptyRow.current?.cells) {\n          return /*#__PURE__*/_jsx(EmptyRow, {\n            virtualRow: virtualRow,\n            className: clsx(classes.tr, alternate && classes.alternateRowColor)\n          }, `empty_row_${virtualRow.index}`);\n        }\n        const cells = lastNonEmptyRow.current.cells;\n        return /*#__PURE__*/_jsx(EmptyRow, {\n          virtualRow: virtualRow,\n          className: clsx(classes.tr, alternate && classes.alternateRowColor),\n          children: columnVirtualizer.getVirtualItems().map(item => {\n            const cell = cells[item.index];\n            const cellProps = cell.getCellProps();\n            const {\n              'aria-colindex': _0,\n              'aria-selected': _1,\n              'aria-label': _2,\n              tabIndex: _3,\n              ...emptyRowCellProps\n            } = cellProps;\n            return /*#__PURE__*/_createElement(\"div\", {\n              ...emptyRowCellProps,\n              key: `${visibleRowIndex}-${emptyRowCellProps.key}`,\n              \"data-empty-row-cell\": \"true\",\n              tabIndex: -1,\n              \"aria-hidden\": true,\n              style: {\n                ...emptyRowCellProps.style,\n                cursor: 'unset',\n                width: item.size\n              }\n            });\n          })\n        }, `empty_row_${virtualRow.index}`);\n      } else {\n        lastNonEmptyRow.current = row;\n      }\n      prepareRow(row);\n      const {\n        key,\n        ...rowProps\n      } = row.getRowProps({\n        'aria-rowindex': virtualRow.index + 1,\n        'data-virtual-row-index': virtualRow.index\n      });\n      const isNavigatedCell = typeof markNavigatedRow === 'function' ? markNavigatedRow(row) : false;\n      const RowSubComponent = typeof renderRowSubComponent === 'function' ? renderRowSubComponent(row) : undefined;\n      if ((!RowSubComponent || subComponentsBehavior === AnalyticalTableSubComponentsBehavior.IncludeHeightExpandable && !row.isExpanded) && subComponentsHeight && subComponentsHeight?.[virtualRow.index]?.subComponentHeight) {\n        dispatch({\n          type: 'SUB_COMPONENTS_HEIGHT',\n          payload: {\n            ...subComponentsHeight,\n            [virtualRow.index]: {\n              subComponentHeight: 0,\n              rowId: row.id\n            }\n          }\n        });\n      }\n      let updatedHeight = rowHeight;\n      if (renderRowSubComponent && (rows[virtualRow.index]?.isExpanded || alwaysShowSubComponent) && subComponentsHeight?.[virtualRow.index]?.rowId === rows[virtualRow.index]?.id) {\n        updatedHeight += subComponentsHeight?.[virtualRow.index]?.subComponentHeight ?? 0;\n      }\n      const measureRef = isTreeTable && renderRowSubComponent && (row.isExpanded || alwaysShowSubComponent) ? node => {\n        rowVirtualizer.measureElement(node);\n      } : rowVirtualizer.measureElement;\n      return (\n        /*#__PURE__*/\n        // eslint-disable-next-line react/jsx-key\n        _jsxs(\"div\", {\n          ...rowProps,\n          ref: measureRef,\n          style: {\n            ...(rowProps.style ?? {}),\n            transform: `translateY(${virtualRow.start}px)`,\n            position: 'absolute',\n            boxSizing: 'border-box',\n            height: `${updatedHeight}px`\n          },\n          children: [RowSubComponent && (row.isExpanded || alwaysShowSubComponent) && /*#__PURE__*/_jsx(SubComponent, {\n            subComponentsHeight: subComponentsHeight,\n            virtualRow: virtualRow,\n            dispatch: dispatch,\n            row: row,\n            rowHeight: rowHeight,\n            rows: rows,\n            alwaysShowSubComponent: alwaysShowSubComponent,\n            rowIndex: visibleRowIndex + 1,\n            children: RowSubComponent\n          }), columnVirtualizer.getVirtualItems().map((virtualColumn, visibleColumnIndex) => {\n            const cell = row.cells[virtualColumn.index];\n            const directionStyles = isRtl ? {\n              transform: `translateX(-${virtualColumn.start}px)`,\n              insertInlineStart: 0\n            } : {\n              transform: `translateX(${virtualColumn.start}px)`,\n              insertInlineStart: 0\n            };\n            if (!cell) {\n              return null;\n            }\n            const {\n              key,\n              ...cellProps\n            } = cell.getCellProps();\n            const allCellProps = {\n              ...cellProps,\n              ['data-visible-column-index']: visibleColumnIndex,\n              ['data-column-index']: virtualColumn.index,\n              ['data-visible-row-index']: visibleRowIndex + 1,\n              ['data-row-index']: rowIndexWithHeader,\n              style: {\n                ...cellProps.style,\n                position: 'absolute',\n                width: `${virtualColumn.size}px`,\n                top: 0,\n                height: `${rowHeight}px`,\n                ...directionStyles\n              }\n            };\n            let contentToRender;\n            if (cell.column.id === '__ui5wcr__internal_highlight_column' || cell.column.id === '__ui5wcr__internal_selection_column' || cell.column.id === '__ui5wcr__internal_navigation_column') {\n              contentToRender = 'Cell';\n            } else if (isTreeTable || !alwaysShowSubComponent && RowSubComponent) {\n              contentToRender = 'Expandable';\n            } else if (cell.isGrouped || manualGroupBy && cell.column.isGrouped && getSubRowsByString(subRowsKey, row.original) != null && cell.value !== undefined) {\n              contentToRender = 'Grouped';\n            } else if (cell.isAggregated) {\n              contentToRender = 'Aggregated';\n            } else if (cell.isPlaceholder) {\n              contentToRender = 'RepeatedValue';\n            } else {\n              contentToRender = 'Cell';\n            }\n            return (\n              /*#__PURE__*/\n              // eslint-disable-next-line react/jsx-key\n              _jsx(\"div\", {\n                ...allCellProps,\n                \"data-selection-cell\": cell.column.id === '__ui5wcr__internal_selection_column',\n                children: popInRowHeight !== internalRowHeight && popInColumn.id === cell.column.id ? cell.render('PopIn', {\n                  contentToRender,\n                  internalRowHeight\n                }) : cell.render(contentToRender, isNavigatedCell === true ? {\n                  isNavigatedCell\n                } : {})\n              }, key)\n            );\n          })]\n        }, key)\n      );\n    })\n  });\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}