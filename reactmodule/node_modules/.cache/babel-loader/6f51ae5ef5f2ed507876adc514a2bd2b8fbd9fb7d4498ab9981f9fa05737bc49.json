{"ast":null,"code":"'use client';\n\nimport { useVirtualizer } from '@tanstack/react-virtual';\nimport { debounce, enrichEventWithDetails, useI18nBundle, useIsomorphicLayoutEffect, useIsRTL, useStylesheet, useSyncRef } from '@ui5/webcomponents-react-base';\nimport { clsx } from 'clsx';\nimport { forwardRef, useCallback, useEffect, useId, useMemo, useRef } from 'react';\nimport { useColumnOrder, useExpanded, useFilters, useGlobalFilter, useGroupBy, useResizeColumns, useRowSelect, useSortBy, useTable } from 'react-table';\nimport { AnalyticalTableScaleWidthMode, AnalyticalTableSelectionBehavior, AnalyticalTableSelectionMode, AnalyticalTableSubComponentsBehavior, AnalyticalTableVisibleRowCountMode } from '../../enums/index.js';\nimport { COLLAPSE_NODE, COLLAPSE_PRESS_SPACE, DESELECT_ALL, EXPAND_NODE, EXPAND_PRESS_SPACE, FILTERED, GROUPED, INVALID_TABLE, LIST_NO_DATA, NO_DATA_FILTERED, SELECT_ALL, SELECT_PRESS_SPACE, UNSELECT_PRESS_SPACE } from '../../i18n/i18n-defaults.js';\nimport { BusyIndicator } from '../../webComponents/BusyIndicator/index.js';\nimport { Text } from '../../webComponents/Text/index.js';\nimport { FlexBox } from '../FlexBox/index.js';\nimport { classNames, styleData } from './AnalyticalTable.module.css.js';\nimport { ColumnHeaderContainer } from './ColumnHeader/ColumnHeaderContainer.js';\nimport { DefaultColumn } from './defaults/Column/index.js';\nimport { TablePlaceholder } from './defaults/LoadingComponent/TablePlaceholder.js';\nimport { DefaultNoDataComponent } from './defaults/NoDataComponent/index.js';\nimport { useA11y } from './hooks/useA11y.js';\nimport { useAutoResize } from './hooks/useAutoResize.js';\nimport { useColumnDragAndDrop } from './hooks/useDragAndDrop.js';\nimport { useDynamicColumnWidths } from './hooks/useDynamicColumnWidths.js';\nimport { useKeyboardNavigation } from './hooks/useKeyboardNavigation.js';\nimport { usePopIn } from './hooks/usePopIn.js';\nimport { useResizeColumnsConfig } from './hooks/useResizeColumnsConfig.js';\nimport { useRowHighlight } from './hooks/useRowHighlight.js';\nimport { useRowNavigationIndicators } from './hooks/useRowNavigationIndicator.js';\nimport { useRowSelectionColumn } from './hooks/useRowSelectionColumn.js';\nimport { useSelectionChangeCallback } from './hooks/useSelectionChangeCallback.js';\nimport { useSingleRowStateSelection } from './hooks/useSingleRowStateSelection.js';\nimport { useStyling } from './hooks/useStyling.js';\nimport { useTableScrollHandles } from './hooks/useTableScrollHandles.js';\nimport { useToggleRowExpand } from './hooks/useToggleRowExpand.js';\nimport { useVisibleColumnsWidth } from './hooks/useVisibleColumnsWidth.js';\nimport { VerticalScrollbar } from './scrollbars/VerticalScrollbar.js';\nimport { VirtualTableBody } from './TableBody/VirtualTableBody.js';\nimport { VirtualTableBodyContainer } from './TableBody/VirtualTableBodyContainer.js';\nimport { stateReducer } from './tableReducer/stateReducer.js';\nimport { TitleBar } from './TitleBar/index.js';\nimport { getRowHeight, getSubRowsByString, tagNamesWhichShouldNotSelectARow } from './util/index.js';\nimport { VerticalResizer } from './VerticalResizer.js';\n\n// When a sorted column is removed from the visible columns array (e.g. when \"popped-in\"), it doesn't clean up the sorted columns leading to an undefined `sortType`.\nimport { jsx as _jsx, Fragment as _Fragment, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst sortTypesFallback = {\n  undefined: () => undefined\n};\nconst measureElement = el => {\n  return el.offsetHeight;\n};\n\n/**\n * The `AnalyticalTable` provides a set of convenient functions for responsive table design, including virtualization of rows and columns, infinite scrolling and customizable columns that will, unless otherwise defined, distribute the available space equally among themselves.\n * It also provides several possibilities for working with the data, including sorting, filtering, grouping and aggregation.\n */\nconst AnalyticalTable = /*#__PURE__*/forwardRef((props, ref) => {\n  const {\n    alternateRowColor,\n    adjustTableHeightOnPopIn,\n    className,\n    columnOrder,\n    columns,\n    data: rawData,\n    extension,\n    filterable,\n    globalFilterValue,\n    groupBy,\n    groupable,\n    header,\n    headerRowHeight,\n    highlightField = 'status',\n    infiniteScroll,\n    infiniteScrollThreshold = 20,\n    isTreeTable,\n    loading,\n    loadingDelay,\n    markNavigatedRow,\n    minRows = 5,\n    noDataText,\n    overscanCount,\n    overscanCountHorizontal = 5,\n    retainColumnWidth,\n    reactTableOptions,\n    renderRowSubComponent,\n    rowHeight,\n    scaleWidthMode = AnalyticalTableScaleWidthMode.Default,\n    scaleXFactor,\n    selectedRowIds,\n    selectionBehavior = AnalyticalTableSelectionBehavior.Row,\n    selectionMode = AnalyticalTableSelectionMode.None,\n    showOverlay,\n    sortable,\n    style,\n    subComponentsBehavior = AnalyticalTableSubComponentsBehavior.Expandable,\n    subRowsKey = 'subRows',\n    tableHooks = [],\n    tableInstance,\n    visibleRowCountMode = AnalyticalTableVisibleRowCountMode.Fixed,\n    visibleRows = 15,\n    withNavigationHighlight,\n    withRowHighlight,\n    onColumnsReorder,\n    onGroup,\n    onLoadMore,\n    onRowClick,\n    onRowExpandChange,\n    onRowSelect,\n    onSort,\n    onTableScroll,\n    onAutoResize,\n    NoDataComponent = DefaultNoDataComponent,\n    additionalEmptyRowsCount = 0,\n    ...rest\n  } = props;\n  useStylesheet(styleData, AnalyticalTable.displayName);\n  const alwaysShowSubComponent = subComponentsBehavior === AnalyticalTableSubComponentsBehavior.Visible || subComponentsBehavior === AnalyticalTableSubComponentsBehavior.IncludeHeight;\n  const uniqueId = useId();\n  const i18nBundle = useI18nBundle('@ui5/webcomponents-react');\n  const titleBarId = useRef(`titlebar-${uniqueId}`).current;\n  const invalidTableTextId = useRef(`invalidTableText-${uniqueId}`).current;\n  const tableRef = useRef(null);\n  const parentRef = useRef(null);\n  const verticalScrollBarRef = useRef(null);\n  const getSubRows = useCallback(row => getSubRowsByString(subRowsKey, row) || [], [subRowsKey]);\n  const invalidTableA11yText = i18nBundle.getText(INVALID_TABLE);\n  const tableInstanceRef = useRef(null);\n  const scrollContainerRef = useRef(null);\n  tableInstanceRef.current = useTable({\n    columns,\n    data: rawData,\n    defaultColumn: DefaultColumn,\n    getSubRows,\n    stateReducer,\n    disableFilters: !filterable,\n    disableSortBy: !sortable,\n    disableGroupBy: isTreeTable || !alwaysShowSubComponent && renderRowSubComponent ? true : !groupable,\n    selectSubRows: false,\n    sortTypes: sortTypesFallback,\n    webComponentsReactProperties: {\n      translatableTexts: {\n        selectAllText: i18nBundle.getText(SELECT_ALL),\n        deselectAllText: i18nBundle.getText(DESELECT_ALL),\n        expandA11yText: i18nBundle.getText(EXPAND_PRESS_SPACE),\n        collapseA11yText: i18nBundle.getText(COLLAPSE_PRESS_SPACE),\n        selectA11yText: i18nBundle.getText(SELECT_PRESS_SPACE),\n        unselectA11yText: i18nBundle.getText(UNSELECT_PRESS_SPACE),\n        expandNodeA11yText: i18nBundle.getText(EXPAND_NODE),\n        collapseNodeA11yText: i18nBundle.getText(COLLAPSE_NODE),\n        filteredA11yText: i18nBundle.getText(FILTERED),\n        groupedA11yText: i18nBundle.getText(GROUPED)\n      },\n      tagNamesWhichShouldNotSelectARow,\n      tableRef,\n      selectionMode,\n      selectionBehavior,\n      classes: classNames,\n      onAutoResize,\n      onRowSelect: onRowSelect,\n      onRowClick,\n      onRowExpandChange,\n      isTreeTable,\n      alternateRowColor,\n      scaleWidthMode,\n      loading,\n      withRowHighlight,\n      highlightField,\n      withNavigationHighlight,\n      markNavigatedRow,\n      renderRowSubComponent,\n      alwaysShowSubComponent,\n      showOverlay,\n      uniqueId,\n      subRowsKey,\n      onColumnsReorder\n    },\n    ...reactTableOptions\n  }, useFilters, useGlobalFilter, useColumnOrder, useGroupBy, useSortBy, useExpanded, useRowSelect, useResizeColumns, useResizeColumnsConfig, useRowSelectionColumn, useAutoResize, useSingleRowStateSelection, useSelectionChangeCallback, useRowHighlight, useRowNavigationIndicators, useDynamicColumnWidths, useStyling, useToggleRowExpand, useA11y, usePopIn, useVisibleColumnsWidth, useKeyboardNavigation, useColumnDragAndDrop, ...tableHooks);\n  const {\n    getTableProps,\n    headerGroups,\n    rows,\n    prepareRow,\n    setColumnOrder,\n    dispatch,\n    totalColumnsWidth,\n    visibleColumns,\n    visibleColumnsWidth,\n    setGroupBy,\n    setGlobalFilter\n  } = tableInstanceRef.current;\n  const tableState = tableInstanceRef.current.state;\n  const {\n    triggerScroll\n  } = tableState;\n  const noDataTextI18n = i18nBundle.getText(LIST_NO_DATA);\n  const noDataTextFiltered = i18nBundle.getText(NO_DATA_FILTERED);\n  const noDataTextLocal = noDataText ?? (tableState.filters?.length > 0 || tableState.globalFilter ? noDataTextFiltered : noDataTextI18n);\n  const [componentRef, updatedRef] = useSyncRef(ref);\n  //@ts-expect-error: types are compatible\n  const isRtl = useIsRTL(updatedRef);\n  const columnVirtualizer = useVirtualizer({\n    count: visibleColumnsWidth.length,\n    getScrollElement: () => tableRef.current,\n    estimateSize: useCallback(index => visibleColumnsWidth[index], [visibleColumnsWidth]),\n    horizontal: true,\n    overscan: isRtl ? Infinity : overscanCountHorizontal,\n    indexAttribute: 'data-column-index',\n    // necessary as otherwise values are rounded which leads to wrong total width calculation leading to unnecessary scrollbar\n    measureElement: !scaleXFactor || scaleXFactor === 1 ? el => el.getBoundingClientRect().width : undefined\n  });\n  const [analyticalTableRef, scrollToRef] = useTableScrollHandles(updatedRef, dispatch);\n  if (parentRef.current) {\n    scrollToRef.current = {\n      ...scrollToRef.current,\n      horizontalScrollToOffset: columnVirtualizer.scrollToOffset,\n      horizontalScrollToIndex: columnVirtualizer.scrollToIndex\n    };\n  }\n  useEffect(() => {\n    if (triggerScroll && triggerScroll.direction === 'horizontal') {\n      if (triggerScroll.type === 'offset') {\n        columnVirtualizer.scrollToOffset(...triggerScroll.args);\n      } else {\n        columnVirtualizer.scrollToIndex(...triggerScroll.args);\n      }\n    }\n  }, [triggerScroll]);\n  const includeSubCompRowHeight = !!renderRowSubComponent && (subComponentsBehavior === AnalyticalTableSubComponentsBehavior.IncludeHeight || subComponentsBehavior === AnalyticalTableSubComponentsBehavior.IncludeHeightExpandable) && !!tableState.subComponentsHeight && !!Object.keys(tableState.subComponentsHeight);\n  if (tableInstance && {}.hasOwnProperty.call(tableInstance, 'current')) {\n    tableInstance.current = tableInstanceRef.current;\n  }\n  if (typeof tableInstance === 'function') {\n    tableInstance(tableInstanceRef.current);\n  }\n  const titleBarRef = useRef(null);\n  const extensionRef = useRef(null);\n  const headerRef = useRef(null);\n  const extensionsHeight = (titleBarRef.current?.offsetHeight ?? 0) + (extensionRef.current?.offsetHeight ?? 0) + (headerRef.current?.offsetHeight ?? 0);\n  const internalRowHeight = getRowHeight(rowHeight, tableRef);\n  const internalHeaderRowHeight = headerRowHeight ?? internalRowHeight;\n  const popInRowHeight = tableState?.popInColumns?.length > 0 ? internalRowHeight + tableState.popInColumns.length * (internalRowHeight + 16) : internalRowHeight;\n  const internalVisibleRowCount = tableState.visibleRows ?? visibleRows;\n  const updateTableClientWidth = useCallback(() => {\n    if (tableRef.current) {\n      dispatch({\n        type: 'TABLE_RESIZE',\n        payload: {\n          tableClientWidth: !scaleXFactor || scaleXFactor === 1 ? tableRef.current.getBoundingClientRect().width : tableRef.current.clientWidth\n        }\n      });\n    }\n  }, [tableRef.current, scaleXFactor]);\n  const updateRowsCount = useCallback(() => {\n    if ((visibleRowCountMode === AnalyticalTableVisibleRowCountMode.Auto || visibleRowCountMode === AnalyticalTableVisibleRowCountMode.AutoWithEmptyRows) && analyticalTableRef.current?.parentElement) {\n      const parentElement = analyticalTableRef.current?.parentElement;\n      const tableYPosition = parentElement && getComputedStyle(parentElement).position === 'relative' && analyticalTableRef.current?.offsetTop ? analyticalTableRef.current?.offsetTop : 0;\n      const parentHeight = parentElement?.getBoundingClientRect().height;\n      const tableHeight = parentHeight ? parentHeight - tableYPosition : 0;\n      const bodyHeight = tableHeight - extensionsHeight;\n      let subCompsRowCount = 0;\n      if (includeSubCompRowHeight) {\n        let localBodyHeight = 0;\n        let i = 0;\n        while (localBodyHeight < bodyHeight) {\n          if (tableState.subComponentsHeight[i]) {\n            localBodyHeight += tableState.subComponentsHeight[i].subComponentHeight + popInRowHeight;\n          } else if (rows[i]) {\n            localBodyHeight += popInRowHeight;\n          } else {\n            break;\n          }\n          if (localBodyHeight >= bodyHeight) {\n            break;\n          }\n          subCompsRowCount++;\n          i++;\n        }\n        dispatch({\n          type: 'VISIBLE_ROWS',\n          payload: {\n            visibleRows: Math.max(1, subCompsRowCount)\n          }\n        });\n      } else {\n        const rowCount = Math.max(1, Math.floor(bodyHeight / popInRowHeight));\n        dispatch({\n          type: 'VISIBLE_ROWS',\n          payload: {\n            visibleRows: rowCount\n          }\n        });\n      }\n    }\n  }, [analyticalTableRef.current?.parentElement?.getBoundingClientRect().height, analyticalTableRef.current?.getBoundingClientRect().y, extensionsHeight, popInRowHeight, visibleRowCountMode, includeSubCompRowHeight, tableState.subComponentsHeight]);\n  useEffect(() => {\n    setGlobalFilter(globalFilterValue);\n  }, [globalFilterValue, setGlobalFilter]);\n  useEffect(() => {\n    const debouncedWidthObserverFn = debounce(updateTableClientWidth, 60);\n    const tableWidthObserver = new ResizeObserver(debouncedWidthObserverFn);\n    tableWidthObserver.observe(tableRef.current);\n    const debouncedHeightObserverFn = debounce(updateRowsCount, 60);\n    const parentHeightObserver = new ResizeObserver(debouncedHeightObserverFn);\n    if (analyticalTableRef.current?.parentElement) {\n      parentHeightObserver.observe(analyticalTableRef.current?.parentElement);\n    }\n    return () => {\n      debouncedHeightObserverFn.cancel();\n      debouncedWidthObserverFn.cancel();\n      tableWidthObserver.disconnect();\n      parentHeightObserver.disconnect();\n    };\n  }, [updateTableClientWidth, updateRowsCount]);\n  useIsomorphicLayoutEffect(() => {\n    dispatch({\n      type: 'IS_RTL',\n      payload: {\n        isRtl\n      }\n    });\n  }, [isRtl]);\n  useIsomorphicLayoutEffect(() => {\n    updateTableClientWidth();\n  }, [updateTableClientWidth]);\n  useIsomorphicLayoutEffect(() => {\n    updateRowsCount();\n  }, [updateRowsCount]);\n  useEffect(() => {\n    if (tableState.visibleRows !== undefined && visibleRowCountMode === AnalyticalTableVisibleRowCountMode.Fixed) {\n      dispatch({\n        type: 'VISIBLE_ROWS',\n        payload: {\n          visibleRows: undefined\n        }\n      });\n    }\n  }, [visibleRowCountMode, tableState.visibleRows]);\n  useEffect(() => {\n    if (groupBy) {\n      setGroupBy(groupBy);\n    }\n  }, [groupBy, setGroupBy]);\n  useEffect(() => {\n    if (selectedRowIds) {\n      dispatch({\n        type: 'SET_SELECTED_ROW_IDS',\n        payload: {\n          selectedRowIds\n        }\n      });\n    }\n  }, [selectedRowIds]);\n  useEffect(() => {\n    if (tableState?.interactiveRowsHavePopIn && (!tableState?.popInColumns || tableState?.popInColumns?.length === 0)) {\n      dispatch({\n        type: 'WITH_POPIN',\n        payload: false\n      });\n    }\n  }, [tableState?.interactiveRowsHavePopIn, tableState?.popInColumns?.length]);\n  const tableBodyHeight = useMemo(() => {\n    if (typeof tableState.bodyHeight === 'number') {\n      return tableState.bodyHeight;\n    }\n    let rowNum;\n    if (visibleRowCountMode === AnalyticalTableVisibleRowCountMode.AutoWithEmptyRows) {\n      rowNum = internalVisibleRowCount;\n    } else {\n      rowNum = rows.length < internalVisibleRowCount ? Math.max(rows.length, minRows) : internalVisibleRowCount;\n    }\n    const rowHeight = visibleRowCountMode === AnalyticalTableVisibleRowCountMode.Auto || visibleRowCountMode === AnalyticalTableVisibleRowCountMode.AutoWithEmptyRows || tableState.interactiveRowsHavePopIn || adjustTableHeightOnPopIn ? popInRowHeight : internalRowHeight;\n    if (includeSubCompRowHeight) {\n      let initialBodyHeightWithSubComps = 0;\n      for (let i = 0; i < rowNum; i++) {\n        if (tableState.subComponentsHeight[i]) {\n          initialBodyHeightWithSubComps += tableState.subComponentsHeight[i].subComponentHeight + rowHeight;\n        } else if (rows[i]) {\n          initialBodyHeightWithSubComps += rowHeight;\n        }\n      }\n      return initialBodyHeightWithSubComps;\n    }\n    return rowHeight * rowNum;\n  }, [internalRowHeight, rows.length, internalVisibleRowCount, minRows, popInRowHeight, visibleRowCountMode, tableState.interactiveRowsHavePopIn, adjustTableHeightOnPopIn, includeSubCompRowHeight, tableState.subComponentsHeight, tableState.bodyHeight]);\n\n  // scroll bar detection\n  useEffect(() => {\n    const visibleRowCount = rows.length < internalVisibleRowCount ? Math.max(rows.length, minRows) : internalVisibleRowCount;\n    if (popInRowHeight !== internalRowHeight) {\n      dispatch({\n        type: 'TABLE_SCROLLING_ENABLED',\n        payload: {\n          isScrollable: visibleRowCount * popInRowHeight > tableBodyHeight || rows.length > visibleRowCount\n        }\n      });\n    } else {\n      dispatch({\n        type: 'TABLE_SCROLLING_ENABLED',\n        payload: {\n          isScrollable: rows.length > visibleRowCount\n        }\n      });\n    }\n  }, [rows.length, minRows, internalVisibleRowCount, popInRowHeight, tableBodyHeight]);\n  const noDataStyles = {\n    height: `${tableBodyHeight}px`,\n    width: totalColumnsWidth ? `${totalColumnsWidth}px` : '100%'\n  };\n  const onGroupByChanged = useCallback(e => {\n    const {\n      column,\n      isGrouped\n    } = e.detail;\n    let groupedColumns;\n    if (isGrouped) {\n      groupedColumns = [...tableState.groupBy, column.id];\n    } else {\n      groupedColumns = tableState.groupBy.filter(group => group !== column.id);\n    }\n    setGroupBy(groupedColumns);\n    if (typeof onGroup === 'function') {\n      onGroup(enrichEventWithDetails(e, {\n        column,\n        groupedColumns\n      }));\n    }\n  }, [tableState.groupBy, onGroup, setGroupBy]);\n  useEffect(() => {\n    if (columnOrder?.length > 0) {\n      setColumnOrder(columnOrder);\n    }\n  }, [columnOrder]);\n  const inlineStyle = useMemo(() => {\n    const tableStyles = {\n      maxWidth: '100%',\n      overflowX: 'auto',\n      display: 'flex',\n      flexDirection: 'column'\n    };\n    if (!!rowHeight) {\n      tableStyles['--_ui5wcr-AnalyticalTableRowHeight'] = `${rowHeight}px`;\n      tableStyles['--_ui5wcr-AnalyticalTableHeaderRowHeight'] = `${rowHeight}px`;\n    }\n    if (!!headerRowHeight) {\n      tableStyles['--_ui5wcr-AnalyticalTableHeaderRowHeight'] = `${headerRowHeight}px`;\n    }\n    if (tableState.tableClientWidth > 0) {\n      return {\n        ...tableStyles,\n        ...style\n      };\n    }\n    return {\n      ...tableStyles,\n      ...style,\n      visibility: 'hidden'\n    };\n  }, [tableState.tableClientWidth, style, rowHeight, headerRowHeight]);\n  useEffect(() => {\n    if (retainColumnWidth && tableState.columnResizing?.isResizingColumn && tableState.tableColResized == null) {\n      dispatch({\n        type: 'TABLE_COL_RESIZED',\n        payload: true\n      });\n    }\n    if (tableState.tableColResized && !retainColumnWidth) {\n      dispatch({\n        type: 'TABLE_COL_RESIZED',\n        payload: undefined\n      });\n    }\n  }, [tableState.columnResizing, retainColumnWidth, tableState.tableColResized]);\n  const handleBodyScroll = e => {\n    if (typeof onTableScroll === 'function') {\n      onTableScroll(e);\n    }\n    const targetScrollTop = e.currentTarget.scrollTop;\n    if (verticalScrollBarRef.current) {\n      const vertScrollbarScrollElement = verticalScrollBarRef.current.firstElementChild;\n      if (vertScrollbarScrollElement.offsetHeight !== scrollContainerRef.current?.offsetHeight) {\n        vertScrollbarScrollElement.style.height = `${scrollContainerRef.current.offsetHeight}px`;\n      }\n      if (verticalScrollBarRef.current.scrollTop !== targetScrollTop) {\n        if (!e.currentTarget.isExternalVerticalScroll) {\n          verticalScrollBarRef.current.scrollTop = targetScrollTop;\n          verticalScrollBarRef.current.isExternalVerticalScroll = true;\n        }\n        e.currentTarget.isExternalVerticalScroll = false;\n      }\n    }\n  };\n  const handleVerticalScrollBarScroll = useCallback(e => {\n    if (parentRef.current && !e.currentTarget.isExternalVerticalScroll) {\n      parentRef.current.scrollTop = e.currentTarget.scrollTop;\n      parentRef.current.isExternalVerticalScroll = true;\n    }\n    e.currentTarget.isExternalVerticalScroll = false;\n  }, []);\n  useEffect(() => {\n    columnVirtualizer.measure();\n  }, [columnVirtualizer, tableState.columnOrder, tableState.columnResizing?.isResizingColumn, columns]);\n  const totalSize = columnVirtualizer.getTotalSize();\n  const showVerticalEndBorder = tableState.tableClientWidth > totalSize;\n  const tableClasses = clsx(classNames.table, withNavigationHighlight && classNames.hasNavigationIndicator, showVerticalEndBorder && classNames.showVerticalEndBorder, className?.includes('ui5-content-native-scrollbars') && 'ui5-content-native-scrollbars');\n  const handleOnLoadMore = e => {\n    const rootNodes = rows.filter(row => row.depth === 0);\n    onLoadMore(enrichEventWithDetails(e, {\n      rowCount: rootNodes.length,\n      totalRowCount: rows.length\n    }));\n  };\n  const overscan = overscanCount ? overscanCount : Math.floor(visibleRows / 2);\n  const rHeight = popInRowHeight !== internalRowHeight ? popInRowHeight : internalRowHeight;\n  const itemCount = Math.max(minRows, rows.length, visibleRowCountMode === AnalyticalTableVisibleRowCountMode.AutoWithEmptyRows ? internalVisibleRowCount : 0) + (!tableState.isScrollable ? additionalEmptyRowsCount : 0);\n  const rowVirtualizer = useVirtualizer({\n    count: itemCount,\n    getScrollElement: () => parentRef.current,\n    estimateSize: useCallback(index => {\n      if (renderRowSubComponent && (rows[index]?.isExpanded || alwaysShowSubComponent) && tableState.subComponentsHeight?.[index]?.rowId === rows[index]?.id) {\n        return rHeight + (tableState.subComponentsHeight?.[index]?.subComponentHeight ?? 0);\n      }\n      return rHeight;\n    }, [rHeight, rows, renderRowSubComponent, alwaysShowSubComponent, tableState.subComponentsHeight]),\n    overscan,\n    measureElement,\n    indexAttribute: 'data-virtual-row-index'\n  });\n  // add range to instance for `useAutoResize` plugin hook\n  tableInstanceRef.current.virtualRowsRange = rowVirtualizer.range;\n  return /*#__PURE__*/_jsxs(_Fragment, {\n    children: [/*#__PURE__*/_jsxs(\"div\", {\n      className: className,\n      style: inlineStyle\n      //@ts-expect-error: types are compatible\n      ,\n\n      ref: componentRef,\n      ...rest,\n      children: [header && /*#__PURE__*/_jsx(TitleBar, {\n        ref: titleBarRef,\n        titleBarId: titleBarId,\n        children: header\n      }), extension && /*#__PURE__*/_jsx(\"div\", {\n        ref: extensionRef,\n        children: extension\n      }), /*#__PURE__*/_jsxs(FlexBox, {\n        className: classNames.tableContainerWithScrollBar,\n        \"data-component-name\": \"AnalyticalTableContainerWithScrollbar\",\n        children: [loading && /*#__PURE__*/_jsx(BusyIndicator, {\n          className: classNames.busyIndicator,\n          active: true,\n          delay: loadingDelay,\n          \"data-component-name\": \"AnalyticalTableBusyIndicator\",\n          children: /*#__PURE__*/_jsx(\"span\", {})\n        }), showOverlay && /*#__PURE__*/_jsxs(_Fragment, {\n          children: [/*#__PURE__*/_jsx(\"span\", {\n            id: invalidTableTextId,\n            className: classNames.hiddenA11yText,\n            \"aria-hidden\": true,\n            children: invalidTableA11yText\n          }), /*#__PURE__*/_jsx(\"div\", {\n            tabIndex: 0,\n            \"aria-labelledby\": `${titleBarId} ${invalidTableTextId}`,\n            role: \"region\",\n            \"data-component-name\": \"AnalyticalTableOverlay\",\n            className: classNames.overlay\n          })]\n        }), /*#__PURE__*/_jsxs(\"div\", {\n          \"aria-labelledby\": titleBarId,\n          ...getTableProps(),\n          tabIndex: showOverlay ? -1 : 0,\n          role: \"grid\",\n          \"aria-rowcount\": rows.length,\n          \"aria-colcount\": visibleColumns.length,\n          \"data-per-page\": internalVisibleRowCount,\n          \"data-component-name\": \"AnalyticalTableContainer\",\n          ref: tableRef,\n          className: tableClasses,\n          children: [/*#__PURE__*/_jsx(\"div\", {\n            className: classNames.tableHeaderBackgroundElement\n          }), /*#__PURE__*/_jsx(\"div\", {\n            className: classNames.tableBodyBackgroundElement\n          }), headerGroups.map(headerGroup => {\n            let headerProps = {};\n            if (headerGroup.getHeaderGroupProps) {\n              headerProps = headerGroup.getHeaderGroupProps();\n            }\n            return tableRef.current && /*#__PURE__*/_jsx(ColumnHeaderContainer, {\n              ref: headerRef,\n              resizeInfo: tableState.columnResizing,\n              headerProps: headerProps,\n              headerGroup: headerGroup,\n              onSort: onSort,\n              onGroupByChanged: onGroupByChanged,\n              isRtl: isRtl,\n              columnVirtualizer: columnVirtualizer,\n              uniqueId: uniqueId,\n              showVerticalEndBorder: showVerticalEndBorder\n            }, headerProps.key);\n          }), loading && rows?.length === 0 && /*#__PURE__*/_jsx(TablePlaceholder, {\n            columns: visibleColumns,\n            rows: minRows,\n            style: noDataStyles\n          }), !loading && rows?.length === 0 && /*#__PURE__*/_jsx(NoDataComponent, {\n            noDataText: noDataTextLocal,\n            className: classNames.noDataContainer,\n            style: noDataStyles\n          }), rows?.length > 0 && tableRef.current && /*#__PURE__*/_jsx(VirtualTableBodyContainer, {\n            rowCollapsedFlag: tableState.rowCollapsed,\n            dispatch: dispatch,\n            tableBodyHeight: tableBodyHeight,\n            totalColumnsWidth: columnVirtualizer.getTotalSize(),\n            parentRef: parentRef,\n            classes: classNames,\n            infiniteScroll: infiniteScroll,\n            infiniteScrollThreshold: infiniteScrollThreshold,\n            onLoadMore: handleOnLoadMore,\n            internalRowHeight: internalRowHeight,\n            popInRowHeight: popInRowHeight,\n            rows: rows,\n            handleExternalScroll: handleBodyScroll,\n            visibleRows: internalVisibleRowCount,\n            children: /*#__PURE__*/_jsx(VirtualTableBody, {\n              scrollContainerRef: scrollContainerRef,\n              classes: classNames,\n              prepareRow: prepareRow,\n              rows: rows,\n              scrollToRef: scrollToRef,\n              isTreeTable: isTreeTable,\n              internalRowHeight: internalRowHeight,\n              popInRowHeight: popInRowHeight,\n              alternateRowColor: alternateRowColor,\n              visibleColumns: visibleColumns,\n              renderRowSubComponent: renderRowSubComponent,\n              alwaysShowSubComponent: alwaysShowSubComponent,\n              markNavigatedRow: markNavigatedRow,\n              isRtl: isRtl,\n              subComponentsHeight: tableState.subComponentsHeight,\n              dispatch: dispatch,\n              columnVirtualizer: columnVirtualizer,\n              manualGroupBy: reactTableOptions?.manualGroupBy,\n              subRowsKey: subRowsKey,\n              subComponentsBehavior: subComponentsBehavior,\n              triggerScroll: tableState.triggerScroll,\n              rowVirtualizer: rowVirtualizer\n            })\n          })]\n        }), (additionalEmptyRowsCount || tableState.isScrollable === undefined || tableState.isScrollable) && /*#__PURE__*/_jsx(VerticalScrollbar, {\n          tableBodyHeight: tableBodyHeight,\n          internalRowHeight: internalHeaderRowHeight,\n          tableRef: tableRef,\n          handleVerticalScrollBarScroll: handleVerticalScrollBarScroll,\n          ref: verticalScrollBarRef,\n          scrollContainerRef: scrollContainerRef,\n          parentRef: parentRef,\n          nativeScrollbar: className?.includes('ui5-content-native-scrollbars')\n        })]\n      }), visibleRowCountMode === AnalyticalTableVisibleRowCountMode.Interactive && /*#__PURE__*/_jsx(VerticalResizer, {\n        popInRowHeight: popInRowHeight,\n        hasPopInColumns: tableState?.popInColumns?.length > 0,\n        analyticalTableRef: analyticalTableRef,\n        dispatch: dispatch,\n        extensionsHeight: extensionsHeight,\n        internalRowHeight: internalRowHeight,\n        rowsLength: rows.length,\n        visibleRows: internalVisibleRowCount,\n        handleOnLoadMore: handleOnLoadMore\n      })]\n    }), /*#__PURE__*/_jsx(Text, {\n      \"aria-hidden\": \"true\",\n      id: `scaleModeHelper-${uniqueId}`,\n      className: classNames.hiddenSmartColMeasure,\n      \"data-component-name\": \"AnalyticalTableScaleModeHelper\",\n      children: ''\n    }), /*#__PURE__*/_jsx(Text, {\n      \"aria-hidden\": \"true\",\n      id: `scaleModeHelperHeader-${uniqueId}`,\n      className: clsx(classNames.hiddenSmartColMeasure, classNames.hiddenSmartColMeasureHeader),\n      \"data-component-name\": \"AnalyticalTableScaleModeHelperHeader\",\n      children: ''\n    })]\n  });\n});\nAnalyticalTable.displayName = 'AnalyticalTable';\nexport { AnalyticalTable };","map":{"version":3,"names":["useVirtualizer","debounce","enrichEventWithDetails","useI18nBundle","useIsomorphicLayoutEffect","useIsRTL","useStylesheet","useSyncRef","clsx","forwardRef","useCallback","useEffect","useId","useMemo","useRef","useColumnOrder","useExpanded","useFilters","useGlobalFilter","useGroupBy","useResizeColumns","useRowSelect","useSortBy","useTable","AnalyticalTableScaleWidthMode","AnalyticalTableSelectionBehavior","AnalyticalTableSelectionMode","AnalyticalTableSubComponentsBehavior","AnalyticalTableVisibleRowCountMode","COLLAPSE_NODE","COLLAPSE_PRESS_SPACE","DESELECT_ALL","EXPAND_NODE","EXPAND_PRESS_SPACE","FILTERED","GROUPED","INVALID_TABLE","LIST_NO_DATA","NO_DATA_FILTERED","SELECT_ALL","SELECT_PRESS_SPACE","UNSELECT_PRESS_SPACE","BusyIndicator","Text","FlexBox","classNames","styleData","ColumnHeaderContainer","DefaultColumn","TablePlaceholder","DefaultNoDataComponent","useA11y","useAutoResize","useColumnDragAndDrop","useDynamicColumnWidths","useKeyboardNavigation","usePopIn","useResizeColumnsConfig","useRowHighlight","useRowNavigationIndicators","useRowSelectionColumn","useSelectionChangeCallback","useSingleRowStateSelection","useStyling","useTableScrollHandles","useToggleRowExpand","useVisibleColumnsWidth","VerticalScrollbar","VirtualTableBody","VirtualTableBodyContainer","stateReducer","TitleBar","getRowHeight","getSubRowsByString","tagNamesWhichShouldNotSelectARow","VerticalResizer","jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","sortTypesFallback","undefined","measureElement","el","offsetHeight","AnalyticalTable","props","ref","alternateRowColor","adjustTableHeightOnPopIn","className","columnOrder","columns","data","rawData","extension","filterable","globalFilterValue","groupBy","groupable","header","headerRowHeight","highlightField","infiniteScroll","infiniteScrollThreshold","isTreeTable","loading","loadingDelay","markNavigatedRow","minRows","noDataText","overscanCount","overscanCountHorizontal","retainColumnWidth","reactTableOptions","renderRowSubComponent","rowHeight","scaleWidthMode","Default","scaleXFactor","selectedRowIds","selectionBehavior","Row","selectionMode","None","showOverlay","sortable","style","subComponentsBehavior","Expandable","subRowsKey","tableHooks","tableInstance","visibleRowCountMode","Fixed","visibleRows","withNavigationHighlight","withRowHighlight","onColumnsReorder","onGroup","onLoadMore","onRowClick","onRowExpandChange","onRowSelect","onSort","onTableScroll","onAutoResize","NoDataComponent","additionalEmptyRowsCount","rest","displayName","alwaysShowSubComponent","Visible","IncludeHeight","uniqueId","i18nBundle","titleBarId","current","invalidTableTextId","tableRef","parentRef","verticalScrollBarRef","getSubRows","row","invalidTableA11yText","getText","tableInstanceRef","scrollContainerRef","defaultColumn","disableFilters","disableSortBy","disableGroupBy","selectSubRows","sortTypes","webComponentsReactProperties","translatableTexts","selectAllText","deselectAllText","expandA11yText","collapseA11yText","selectA11yText","unselectA11yText","expandNodeA11yText","collapseNodeA11yText","filteredA11yText","groupedA11yText","classes","getTableProps","headerGroups","rows","prepareRow","setColumnOrder","dispatch","totalColumnsWidth","visibleColumns","visibleColumnsWidth","setGroupBy","setGlobalFilter","tableState","state","triggerScroll","noDataTextI18n","noDataTextFiltered","noDataTextLocal","filters","length","globalFilter","componentRef","updatedRef","isRtl","columnVirtualizer","count","getScrollElement","estimateSize","index","horizontal","overscan","Infinity","indexAttribute","getBoundingClientRect","width","analyticalTableRef","scrollToRef","horizontalScrollToOffset","scrollToOffset","horizontalScrollToIndex","scrollToIndex","direction","type","args","includeSubCompRowHeight","IncludeHeightExpandable","subComponentsHeight","Object","keys","hasOwnProperty","call","titleBarRef","extensionRef","headerRef","extensionsHeight","internalRowHeight","internalHeaderRowHeight","popInRowHeight","popInColumns","internalVisibleRowCount","updateTableClientWidth","payload","tableClientWidth","clientWidth","updateRowsCount","Auto","AutoWithEmptyRows","parentElement","tableYPosition","getComputedStyle","position","offsetTop","parentHeight","height","tableHeight","bodyHeight","subCompsRowCount","localBodyHeight","i","subComponentHeight","Math","max","rowCount","floor","y","debouncedWidthObserverFn","tableWidthObserver","ResizeObserver","observe","debouncedHeightObserverFn","parentHeightObserver","cancel","disconnect","interactiveRowsHavePopIn","tableBodyHeight","rowNum","initialBodyHeightWithSubComps","visibleRowCount","isScrollable","noDataStyles","onGroupByChanged","e","column","isGrouped","detail","groupedColumns","id","filter","group","inlineStyle","tableStyles","maxWidth","overflowX","display","flexDirection","visibility","columnResizing","isResizingColumn","tableColResized","handleBodyScroll","targetScrollTop","currentTarget","scrollTop","vertScrollbarScrollElement","firstElementChild","isExternalVerticalScroll","handleVerticalScrollBarScroll","measure","totalSize","getTotalSize","showVerticalEndBorder","tableClasses","table","hasNavigationIndicator","includes","handleOnLoadMore","rootNodes","depth","totalRowCount","rHeight","itemCount","rowVirtualizer","isExpanded","rowId","virtualRowsRange","range","children","tableContainerWithScrollBar","busyIndicator","active","delay","hiddenA11yText","tabIndex","role","overlay","tableHeaderBackgroundElement","tableBodyBackgroundElement","map","headerGroup","headerProps","getHeaderGroupProps","resizeInfo","key","noDataContainer","rowCollapsedFlag","rowCollapsed","handleExternalScroll","manualGroupBy","nativeScrollbar","Interactive","hasPopInColumns","rowsLength","hiddenSmartColMeasure","hiddenSmartColMeasureHeader"],"sources":["/home/user/projects/reactproj/node_modules/@ui5/webcomponents-react/dist/components/AnalyticalTable/index.js"],"sourcesContent":["'use client';\n\nimport { useVirtualizer } from '@tanstack/react-virtual';\nimport { debounce, enrichEventWithDetails, useI18nBundle, useIsomorphicLayoutEffect, useIsRTL, useStylesheet, useSyncRef } from '@ui5/webcomponents-react-base';\nimport { clsx } from 'clsx';\nimport { forwardRef, useCallback, useEffect, useId, useMemo, useRef } from 'react';\nimport { useColumnOrder, useExpanded, useFilters, useGlobalFilter, useGroupBy, useResizeColumns, useRowSelect, useSortBy, useTable } from 'react-table';\nimport { AnalyticalTableScaleWidthMode, AnalyticalTableSelectionBehavior, AnalyticalTableSelectionMode, AnalyticalTableSubComponentsBehavior, AnalyticalTableVisibleRowCountMode } from '../../enums/index.js';\nimport { COLLAPSE_NODE, COLLAPSE_PRESS_SPACE, DESELECT_ALL, EXPAND_NODE, EXPAND_PRESS_SPACE, FILTERED, GROUPED, INVALID_TABLE, LIST_NO_DATA, NO_DATA_FILTERED, SELECT_ALL, SELECT_PRESS_SPACE, UNSELECT_PRESS_SPACE } from '../../i18n/i18n-defaults.js';\nimport { BusyIndicator } from '../../webComponents/BusyIndicator/index.js';\nimport { Text } from '../../webComponents/Text/index.js';\nimport { FlexBox } from '../FlexBox/index.js';\nimport { classNames, styleData } from './AnalyticalTable.module.css.js';\nimport { ColumnHeaderContainer } from './ColumnHeader/ColumnHeaderContainer.js';\nimport { DefaultColumn } from './defaults/Column/index.js';\nimport { TablePlaceholder } from './defaults/LoadingComponent/TablePlaceholder.js';\nimport { DefaultNoDataComponent } from './defaults/NoDataComponent/index.js';\nimport { useA11y } from './hooks/useA11y.js';\nimport { useAutoResize } from './hooks/useAutoResize.js';\nimport { useColumnDragAndDrop } from './hooks/useDragAndDrop.js';\nimport { useDynamicColumnWidths } from './hooks/useDynamicColumnWidths.js';\nimport { useKeyboardNavigation } from './hooks/useKeyboardNavigation.js';\nimport { usePopIn } from './hooks/usePopIn.js';\nimport { useResizeColumnsConfig } from './hooks/useResizeColumnsConfig.js';\nimport { useRowHighlight } from './hooks/useRowHighlight.js';\nimport { useRowNavigationIndicators } from './hooks/useRowNavigationIndicator.js';\nimport { useRowSelectionColumn } from './hooks/useRowSelectionColumn.js';\nimport { useSelectionChangeCallback } from './hooks/useSelectionChangeCallback.js';\nimport { useSingleRowStateSelection } from './hooks/useSingleRowStateSelection.js';\nimport { useStyling } from './hooks/useStyling.js';\nimport { useTableScrollHandles } from './hooks/useTableScrollHandles.js';\nimport { useToggleRowExpand } from './hooks/useToggleRowExpand.js';\nimport { useVisibleColumnsWidth } from './hooks/useVisibleColumnsWidth.js';\nimport { VerticalScrollbar } from './scrollbars/VerticalScrollbar.js';\nimport { VirtualTableBody } from './TableBody/VirtualTableBody.js';\nimport { VirtualTableBodyContainer } from './TableBody/VirtualTableBodyContainer.js';\nimport { stateReducer } from './tableReducer/stateReducer.js';\nimport { TitleBar } from './TitleBar/index.js';\nimport { getRowHeight, getSubRowsByString, tagNamesWhichShouldNotSelectARow } from './util/index.js';\nimport { VerticalResizer } from './VerticalResizer.js';\n\n// When a sorted column is removed from the visible columns array (e.g. when \"popped-in\"), it doesn't clean up the sorted columns leading to an undefined `sortType`.\nimport { jsx as _jsx, Fragment as _Fragment, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst sortTypesFallback = {\n  undefined: () => undefined\n};\nconst measureElement = el => {\n  return el.offsetHeight;\n};\n\n/**\n * The `AnalyticalTable` provides a set of convenient functions for responsive table design, including virtualization of rows and columns, infinite scrolling and customizable columns that will, unless otherwise defined, distribute the available space equally among themselves.\n * It also provides several possibilities for working with the data, including sorting, filtering, grouping and aggregation.\n */\nconst AnalyticalTable = /*#__PURE__*/forwardRef((props, ref) => {\n  const {\n    alternateRowColor,\n    adjustTableHeightOnPopIn,\n    className,\n    columnOrder,\n    columns,\n    data: rawData,\n    extension,\n    filterable,\n    globalFilterValue,\n    groupBy,\n    groupable,\n    header,\n    headerRowHeight,\n    highlightField = 'status',\n    infiniteScroll,\n    infiniteScrollThreshold = 20,\n    isTreeTable,\n    loading,\n    loadingDelay,\n    markNavigatedRow,\n    minRows = 5,\n    noDataText,\n    overscanCount,\n    overscanCountHorizontal = 5,\n    retainColumnWidth,\n    reactTableOptions,\n    renderRowSubComponent,\n    rowHeight,\n    scaleWidthMode = AnalyticalTableScaleWidthMode.Default,\n    scaleXFactor,\n    selectedRowIds,\n    selectionBehavior = AnalyticalTableSelectionBehavior.Row,\n    selectionMode = AnalyticalTableSelectionMode.None,\n    showOverlay,\n    sortable,\n    style,\n    subComponentsBehavior = AnalyticalTableSubComponentsBehavior.Expandable,\n    subRowsKey = 'subRows',\n    tableHooks = [],\n    tableInstance,\n    visibleRowCountMode = AnalyticalTableVisibleRowCountMode.Fixed,\n    visibleRows = 15,\n    withNavigationHighlight,\n    withRowHighlight,\n    onColumnsReorder,\n    onGroup,\n    onLoadMore,\n    onRowClick,\n    onRowExpandChange,\n    onRowSelect,\n    onSort,\n    onTableScroll,\n    onAutoResize,\n    NoDataComponent = DefaultNoDataComponent,\n    additionalEmptyRowsCount = 0,\n    ...rest\n  } = props;\n  useStylesheet(styleData, AnalyticalTable.displayName);\n  const alwaysShowSubComponent = subComponentsBehavior === AnalyticalTableSubComponentsBehavior.Visible || subComponentsBehavior === AnalyticalTableSubComponentsBehavior.IncludeHeight;\n  const uniqueId = useId();\n  const i18nBundle = useI18nBundle('@ui5/webcomponents-react');\n  const titleBarId = useRef(`titlebar-${uniqueId}`).current;\n  const invalidTableTextId = useRef(`invalidTableText-${uniqueId}`).current;\n  const tableRef = useRef(null);\n  const parentRef = useRef(null);\n  const verticalScrollBarRef = useRef(null);\n  const getSubRows = useCallback(row => getSubRowsByString(subRowsKey, row) || [], [subRowsKey]);\n  const invalidTableA11yText = i18nBundle.getText(INVALID_TABLE);\n  const tableInstanceRef = useRef(null);\n  const scrollContainerRef = useRef(null);\n  tableInstanceRef.current = useTable({\n    columns,\n    data: rawData,\n    defaultColumn: DefaultColumn,\n    getSubRows,\n    stateReducer,\n    disableFilters: !filterable,\n    disableSortBy: !sortable,\n    disableGroupBy: isTreeTable || !alwaysShowSubComponent && renderRowSubComponent ? true : !groupable,\n    selectSubRows: false,\n    sortTypes: sortTypesFallback,\n    webComponentsReactProperties: {\n      translatableTexts: {\n        selectAllText: i18nBundle.getText(SELECT_ALL),\n        deselectAllText: i18nBundle.getText(DESELECT_ALL),\n        expandA11yText: i18nBundle.getText(EXPAND_PRESS_SPACE),\n        collapseA11yText: i18nBundle.getText(COLLAPSE_PRESS_SPACE),\n        selectA11yText: i18nBundle.getText(SELECT_PRESS_SPACE),\n        unselectA11yText: i18nBundle.getText(UNSELECT_PRESS_SPACE),\n        expandNodeA11yText: i18nBundle.getText(EXPAND_NODE),\n        collapseNodeA11yText: i18nBundle.getText(COLLAPSE_NODE),\n        filteredA11yText: i18nBundle.getText(FILTERED),\n        groupedA11yText: i18nBundle.getText(GROUPED)\n      },\n      tagNamesWhichShouldNotSelectARow,\n      tableRef,\n      selectionMode,\n      selectionBehavior,\n      classes: classNames,\n      onAutoResize,\n      onRowSelect: onRowSelect,\n      onRowClick,\n      onRowExpandChange,\n      isTreeTable,\n      alternateRowColor,\n      scaleWidthMode,\n      loading,\n      withRowHighlight,\n      highlightField,\n      withNavigationHighlight,\n      markNavigatedRow,\n      renderRowSubComponent,\n      alwaysShowSubComponent,\n      showOverlay,\n      uniqueId,\n      subRowsKey,\n      onColumnsReorder\n    },\n    ...reactTableOptions\n  }, useFilters, useGlobalFilter, useColumnOrder, useGroupBy, useSortBy, useExpanded, useRowSelect, useResizeColumns, useResizeColumnsConfig, useRowSelectionColumn, useAutoResize, useSingleRowStateSelection, useSelectionChangeCallback, useRowHighlight, useRowNavigationIndicators, useDynamicColumnWidths, useStyling, useToggleRowExpand, useA11y, usePopIn, useVisibleColumnsWidth, useKeyboardNavigation, useColumnDragAndDrop, ...tableHooks);\n  const {\n    getTableProps,\n    headerGroups,\n    rows,\n    prepareRow,\n    setColumnOrder,\n    dispatch,\n    totalColumnsWidth,\n    visibleColumns,\n    visibleColumnsWidth,\n    setGroupBy,\n    setGlobalFilter\n  } = tableInstanceRef.current;\n  const tableState = tableInstanceRef.current.state;\n  const {\n    triggerScroll\n  } = tableState;\n  const noDataTextI18n = i18nBundle.getText(LIST_NO_DATA);\n  const noDataTextFiltered = i18nBundle.getText(NO_DATA_FILTERED);\n  const noDataTextLocal = noDataText ?? (tableState.filters?.length > 0 || tableState.globalFilter ? noDataTextFiltered : noDataTextI18n);\n  const [componentRef, updatedRef] = useSyncRef(ref);\n  //@ts-expect-error: types are compatible\n  const isRtl = useIsRTL(updatedRef);\n  const columnVirtualizer = useVirtualizer({\n    count: visibleColumnsWidth.length,\n    getScrollElement: () => tableRef.current,\n    estimateSize: useCallback(index => visibleColumnsWidth[index], [visibleColumnsWidth]),\n    horizontal: true,\n    overscan: isRtl ? Infinity : overscanCountHorizontal,\n    indexAttribute: 'data-column-index',\n    // necessary as otherwise values are rounded which leads to wrong total width calculation leading to unnecessary scrollbar\n    measureElement: !scaleXFactor || scaleXFactor === 1 ? el => el.getBoundingClientRect().width : undefined\n  });\n  const [analyticalTableRef, scrollToRef] = useTableScrollHandles(updatedRef, dispatch);\n  if (parentRef.current) {\n    scrollToRef.current = {\n      ...scrollToRef.current,\n      horizontalScrollToOffset: columnVirtualizer.scrollToOffset,\n      horizontalScrollToIndex: columnVirtualizer.scrollToIndex\n    };\n  }\n  useEffect(() => {\n    if (triggerScroll && triggerScroll.direction === 'horizontal') {\n      if (triggerScroll.type === 'offset') {\n        columnVirtualizer.scrollToOffset(...triggerScroll.args);\n      } else {\n        columnVirtualizer.scrollToIndex(...triggerScroll.args);\n      }\n    }\n  }, [triggerScroll]);\n  const includeSubCompRowHeight = !!renderRowSubComponent && (subComponentsBehavior === AnalyticalTableSubComponentsBehavior.IncludeHeight || subComponentsBehavior === AnalyticalTableSubComponentsBehavior.IncludeHeightExpandable) && !!tableState.subComponentsHeight && !!Object.keys(tableState.subComponentsHeight);\n  if (tableInstance && {}.hasOwnProperty.call(tableInstance, 'current')) {\n    tableInstance.current = tableInstanceRef.current;\n  }\n  if (typeof tableInstance === 'function') {\n    tableInstance(tableInstanceRef.current);\n  }\n  const titleBarRef = useRef(null);\n  const extensionRef = useRef(null);\n  const headerRef = useRef(null);\n  const extensionsHeight = (titleBarRef.current?.offsetHeight ?? 0) + (extensionRef.current?.offsetHeight ?? 0) + (headerRef.current?.offsetHeight ?? 0);\n  const internalRowHeight = getRowHeight(rowHeight, tableRef);\n  const internalHeaderRowHeight = headerRowHeight ?? internalRowHeight;\n  const popInRowHeight = tableState?.popInColumns?.length > 0 ? internalRowHeight + tableState.popInColumns.length * (internalRowHeight + 16) : internalRowHeight;\n  const internalVisibleRowCount = tableState.visibleRows ?? visibleRows;\n  const updateTableClientWidth = useCallback(() => {\n    if (tableRef.current) {\n      dispatch({\n        type: 'TABLE_RESIZE',\n        payload: {\n          tableClientWidth: !scaleXFactor || scaleXFactor === 1 ? tableRef.current.getBoundingClientRect().width : tableRef.current.clientWidth\n        }\n      });\n    }\n  }, [tableRef.current, scaleXFactor]);\n  const updateRowsCount = useCallback(() => {\n    if ((visibleRowCountMode === AnalyticalTableVisibleRowCountMode.Auto || visibleRowCountMode === AnalyticalTableVisibleRowCountMode.AutoWithEmptyRows) && analyticalTableRef.current?.parentElement) {\n      const parentElement = analyticalTableRef.current?.parentElement;\n      const tableYPosition = parentElement && getComputedStyle(parentElement).position === 'relative' && analyticalTableRef.current?.offsetTop ? analyticalTableRef.current?.offsetTop : 0;\n      const parentHeight = parentElement?.getBoundingClientRect().height;\n      const tableHeight = parentHeight ? parentHeight - tableYPosition : 0;\n      const bodyHeight = tableHeight - extensionsHeight;\n      let subCompsRowCount = 0;\n      if (includeSubCompRowHeight) {\n        let localBodyHeight = 0;\n        let i = 0;\n        while (localBodyHeight < bodyHeight) {\n          if (tableState.subComponentsHeight[i]) {\n            localBodyHeight += tableState.subComponentsHeight[i].subComponentHeight + popInRowHeight;\n          } else if (rows[i]) {\n            localBodyHeight += popInRowHeight;\n          } else {\n            break;\n          }\n          if (localBodyHeight >= bodyHeight) {\n            break;\n          }\n          subCompsRowCount++;\n          i++;\n        }\n        dispatch({\n          type: 'VISIBLE_ROWS',\n          payload: {\n            visibleRows: Math.max(1, subCompsRowCount)\n          }\n        });\n      } else {\n        const rowCount = Math.max(1, Math.floor(bodyHeight / popInRowHeight));\n        dispatch({\n          type: 'VISIBLE_ROWS',\n          payload: {\n            visibleRows: rowCount\n          }\n        });\n      }\n    }\n  }, [analyticalTableRef.current?.parentElement?.getBoundingClientRect().height, analyticalTableRef.current?.getBoundingClientRect().y, extensionsHeight, popInRowHeight, visibleRowCountMode, includeSubCompRowHeight, tableState.subComponentsHeight]);\n  useEffect(() => {\n    setGlobalFilter(globalFilterValue);\n  }, [globalFilterValue, setGlobalFilter]);\n  useEffect(() => {\n    const debouncedWidthObserverFn = debounce(updateTableClientWidth, 60);\n    const tableWidthObserver = new ResizeObserver(debouncedWidthObserverFn);\n    tableWidthObserver.observe(tableRef.current);\n    const debouncedHeightObserverFn = debounce(updateRowsCount, 60);\n    const parentHeightObserver = new ResizeObserver(debouncedHeightObserverFn);\n    if (analyticalTableRef.current?.parentElement) {\n      parentHeightObserver.observe(analyticalTableRef.current?.parentElement);\n    }\n    return () => {\n      debouncedHeightObserverFn.cancel();\n      debouncedWidthObserverFn.cancel();\n      tableWidthObserver.disconnect();\n      parentHeightObserver.disconnect();\n    };\n  }, [updateTableClientWidth, updateRowsCount]);\n  useIsomorphicLayoutEffect(() => {\n    dispatch({\n      type: 'IS_RTL',\n      payload: {\n        isRtl\n      }\n    });\n  }, [isRtl]);\n  useIsomorphicLayoutEffect(() => {\n    updateTableClientWidth();\n  }, [updateTableClientWidth]);\n  useIsomorphicLayoutEffect(() => {\n    updateRowsCount();\n  }, [updateRowsCount]);\n  useEffect(() => {\n    if (tableState.visibleRows !== undefined && visibleRowCountMode === AnalyticalTableVisibleRowCountMode.Fixed) {\n      dispatch({\n        type: 'VISIBLE_ROWS',\n        payload: {\n          visibleRows: undefined\n        }\n      });\n    }\n  }, [visibleRowCountMode, tableState.visibleRows]);\n  useEffect(() => {\n    if (groupBy) {\n      setGroupBy(groupBy);\n    }\n  }, [groupBy, setGroupBy]);\n  useEffect(() => {\n    if (selectedRowIds) {\n      dispatch({\n        type: 'SET_SELECTED_ROW_IDS',\n        payload: {\n          selectedRowIds\n        }\n      });\n    }\n  }, [selectedRowIds]);\n  useEffect(() => {\n    if (tableState?.interactiveRowsHavePopIn && (!tableState?.popInColumns || tableState?.popInColumns?.length === 0)) {\n      dispatch({\n        type: 'WITH_POPIN',\n        payload: false\n      });\n    }\n  }, [tableState?.interactiveRowsHavePopIn, tableState?.popInColumns?.length]);\n  const tableBodyHeight = useMemo(() => {\n    if (typeof tableState.bodyHeight === 'number') {\n      return tableState.bodyHeight;\n    }\n    let rowNum;\n    if (visibleRowCountMode === AnalyticalTableVisibleRowCountMode.AutoWithEmptyRows) {\n      rowNum = internalVisibleRowCount;\n    } else {\n      rowNum = rows.length < internalVisibleRowCount ? Math.max(rows.length, minRows) : internalVisibleRowCount;\n    }\n    const rowHeight = visibleRowCountMode === AnalyticalTableVisibleRowCountMode.Auto || visibleRowCountMode === AnalyticalTableVisibleRowCountMode.AutoWithEmptyRows || tableState.interactiveRowsHavePopIn || adjustTableHeightOnPopIn ? popInRowHeight : internalRowHeight;\n    if (includeSubCompRowHeight) {\n      let initialBodyHeightWithSubComps = 0;\n      for (let i = 0; i < rowNum; i++) {\n        if (tableState.subComponentsHeight[i]) {\n          initialBodyHeightWithSubComps += tableState.subComponentsHeight[i].subComponentHeight + rowHeight;\n        } else if (rows[i]) {\n          initialBodyHeightWithSubComps += rowHeight;\n        }\n      }\n      return initialBodyHeightWithSubComps;\n    }\n    return rowHeight * rowNum;\n  }, [internalRowHeight, rows.length, internalVisibleRowCount, minRows, popInRowHeight, visibleRowCountMode, tableState.interactiveRowsHavePopIn, adjustTableHeightOnPopIn, includeSubCompRowHeight, tableState.subComponentsHeight, tableState.bodyHeight]);\n\n  // scroll bar detection\n  useEffect(() => {\n    const visibleRowCount = rows.length < internalVisibleRowCount ? Math.max(rows.length, minRows) : internalVisibleRowCount;\n    if (popInRowHeight !== internalRowHeight) {\n      dispatch({\n        type: 'TABLE_SCROLLING_ENABLED',\n        payload: {\n          isScrollable: visibleRowCount * popInRowHeight > tableBodyHeight || rows.length > visibleRowCount\n        }\n      });\n    } else {\n      dispatch({\n        type: 'TABLE_SCROLLING_ENABLED',\n        payload: {\n          isScrollable: rows.length > visibleRowCount\n        }\n      });\n    }\n  }, [rows.length, minRows, internalVisibleRowCount, popInRowHeight, tableBodyHeight]);\n  const noDataStyles = {\n    height: `${tableBodyHeight}px`,\n    width: totalColumnsWidth ? `${totalColumnsWidth}px` : '100%'\n  };\n  const onGroupByChanged = useCallback(e => {\n    const {\n      column,\n      isGrouped\n    } = e.detail;\n    let groupedColumns;\n    if (isGrouped) {\n      groupedColumns = [...tableState.groupBy, column.id];\n    } else {\n      groupedColumns = tableState.groupBy.filter(group => group !== column.id);\n    }\n    setGroupBy(groupedColumns);\n    if (typeof onGroup === 'function') {\n      onGroup(enrichEventWithDetails(e, {\n        column,\n        groupedColumns\n      }));\n    }\n  }, [tableState.groupBy, onGroup, setGroupBy]);\n  useEffect(() => {\n    if (columnOrder?.length > 0) {\n      setColumnOrder(columnOrder);\n    }\n  }, [columnOrder]);\n  const inlineStyle = useMemo(() => {\n    const tableStyles = {\n      maxWidth: '100%',\n      overflowX: 'auto',\n      display: 'flex',\n      flexDirection: 'column'\n    };\n    if (!!rowHeight) {\n      tableStyles['--_ui5wcr-AnalyticalTableRowHeight'] = `${rowHeight}px`;\n      tableStyles['--_ui5wcr-AnalyticalTableHeaderRowHeight'] = `${rowHeight}px`;\n    }\n    if (!!headerRowHeight) {\n      tableStyles['--_ui5wcr-AnalyticalTableHeaderRowHeight'] = `${headerRowHeight}px`;\n    }\n    if (tableState.tableClientWidth > 0) {\n      return {\n        ...tableStyles,\n        ...style\n      };\n    }\n    return {\n      ...tableStyles,\n      ...style,\n      visibility: 'hidden'\n    };\n  }, [tableState.tableClientWidth, style, rowHeight, headerRowHeight]);\n  useEffect(() => {\n    if (retainColumnWidth && tableState.columnResizing?.isResizingColumn && tableState.tableColResized == null) {\n      dispatch({\n        type: 'TABLE_COL_RESIZED',\n        payload: true\n      });\n    }\n    if (tableState.tableColResized && !retainColumnWidth) {\n      dispatch({\n        type: 'TABLE_COL_RESIZED',\n        payload: undefined\n      });\n    }\n  }, [tableState.columnResizing, retainColumnWidth, tableState.tableColResized]);\n  const handleBodyScroll = e => {\n    if (typeof onTableScroll === 'function') {\n      onTableScroll(e);\n    }\n    const targetScrollTop = e.currentTarget.scrollTop;\n    if (verticalScrollBarRef.current) {\n      const vertScrollbarScrollElement = verticalScrollBarRef.current.firstElementChild;\n      if (vertScrollbarScrollElement.offsetHeight !== scrollContainerRef.current?.offsetHeight) {\n        vertScrollbarScrollElement.style.height = `${scrollContainerRef.current.offsetHeight}px`;\n      }\n      if (verticalScrollBarRef.current.scrollTop !== targetScrollTop) {\n        if (!e.currentTarget.isExternalVerticalScroll) {\n          verticalScrollBarRef.current.scrollTop = targetScrollTop;\n          verticalScrollBarRef.current.isExternalVerticalScroll = true;\n        }\n        e.currentTarget.isExternalVerticalScroll = false;\n      }\n    }\n  };\n  const handleVerticalScrollBarScroll = useCallback(e => {\n    if (parentRef.current && !e.currentTarget.isExternalVerticalScroll) {\n      parentRef.current.scrollTop = e.currentTarget.scrollTop;\n      parentRef.current.isExternalVerticalScroll = true;\n    }\n    e.currentTarget.isExternalVerticalScroll = false;\n  }, []);\n  useEffect(() => {\n    columnVirtualizer.measure();\n  }, [columnVirtualizer, tableState.columnOrder, tableState.columnResizing?.isResizingColumn, columns]);\n  const totalSize = columnVirtualizer.getTotalSize();\n  const showVerticalEndBorder = tableState.tableClientWidth > totalSize;\n  const tableClasses = clsx(classNames.table, withNavigationHighlight && classNames.hasNavigationIndicator, showVerticalEndBorder && classNames.showVerticalEndBorder, className?.includes('ui5-content-native-scrollbars') && 'ui5-content-native-scrollbars');\n  const handleOnLoadMore = e => {\n    const rootNodes = rows.filter(row => row.depth === 0);\n    onLoadMore(enrichEventWithDetails(e, {\n      rowCount: rootNodes.length,\n      totalRowCount: rows.length\n    }));\n  };\n  const overscan = overscanCount ? overscanCount : Math.floor(visibleRows / 2);\n  const rHeight = popInRowHeight !== internalRowHeight ? popInRowHeight : internalRowHeight;\n  const itemCount = Math.max(minRows, rows.length, visibleRowCountMode === AnalyticalTableVisibleRowCountMode.AutoWithEmptyRows ? internalVisibleRowCount : 0) + (!tableState.isScrollable ? additionalEmptyRowsCount : 0);\n  const rowVirtualizer = useVirtualizer({\n    count: itemCount,\n    getScrollElement: () => parentRef.current,\n    estimateSize: useCallback(index => {\n      if (renderRowSubComponent && (rows[index]?.isExpanded || alwaysShowSubComponent) && tableState.subComponentsHeight?.[index]?.rowId === rows[index]?.id) {\n        return rHeight + (tableState.subComponentsHeight?.[index]?.subComponentHeight ?? 0);\n      }\n      return rHeight;\n    }, [rHeight, rows, renderRowSubComponent, alwaysShowSubComponent, tableState.subComponentsHeight]),\n    overscan,\n    measureElement,\n    indexAttribute: 'data-virtual-row-index'\n  });\n  // add range to instance for `useAutoResize` plugin hook\n  tableInstanceRef.current.virtualRowsRange = rowVirtualizer.range;\n  return /*#__PURE__*/_jsxs(_Fragment, {\n    children: [/*#__PURE__*/_jsxs(\"div\", {\n      className: className,\n      style: inlineStyle\n      //@ts-expect-error: types are compatible\n      ,\n      ref: componentRef,\n      ...rest,\n      children: [header && /*#__PURE__*/_jsx(TitleBar, {\n        ref: titleBarRef,\n        titleBarId: titleBarId,\n        children: header\n      }), extension && /*#__PURE__*/_jsx(\"div\", {\n        ref: extensionRef,\n        children: extension\n      }), /*#__PURE__*/_jsxs(FlexBox, {\n        className: classNames.tableContainerWithScrollBar,\n        \"data-component-name\": \"AnalyticalTableContainerWithScrollbar\",\n        children: [loading && /*#__PURE__*/_jsx(BusyIndicator, {\n          className: classNames.busyIndicator,\n          active: true,\n          delay: loadingDelay,\n          \"data-component-name\": \"AnalyticalTableBusyIndicator\",\n          children: /*#__PURE__*/_jsx(\"span\", {})\n        }), showOverlay && /*#__PURE__*/_jsxs(_Fragment, {\n          children: [/*#__PURE__*/_jsx(\"span\", {\n            id: invalidTableTextId,\n            className: classNames.hiddenA11yText,\n            \"aria-hidden\": true,\n            children: invalidTableA11yText\n          }), /*#__PURE__*/_jsx(\"div\", {\n            tabIndex: 0,\n            \"aria-labelledby\": `${titleBarId} ${invalidTableTextId}`,\n            role: \"region\",\n            \"data-component-name\": \"AnalyticalTableOverlay\",\n            className: classNames.overlay\n          })]\n        }), /*#__PURE__*/_jsxs(\"div\", {\n          \"aria-labelledby\": titleBarId,\n          ...getTableProps(),\n          tabIndex: showOverlay ? -1 : 0,\n          role: \"grid\",\n          \"aria-rowcount\": rows.length,\n          \"aria-colcount\": visibleColumns.length,\n          \"data-per-page\": internalVisibleRowCount,\n          \"data-component-name\": \"AnalyticalTableContainer\",\n          ref: tableRef,\n          className: tableClasses,\n          children: [/*#__PURE__*/_jsx(\"div\", {\n            className: classNames.tableHeaderBackgroundElement\n          }), /*#__PURE__*/_jsx(\"div\", {\n            className: classNames.tableBodyBackgroundElement\n          }), headerGroups.map(headerGroup => {\n            let headerProps = {};\n            if (headerGroup.getHeaderGroupProps) {\n              headerProps = headerGroup.getHeaderGroupProps();\n            }\n            return tableRef.current && /*#__PURE__*/_jsx(ColumnHeaderContainer, {\n              ref: headerRef,\n              resizeInfo: tableState.columnResizing,\n              headerProps: headerProps,\n              headerGroup: headerGroup,\n              onSort: onSort,\n              onGroupByChanged: onGroupByChanged,\n              isRtl: isRtl,\n              columnVirtualizer: columnVirtualizer,\n              uniqueId: uniqueId,\n              showVerticalEndBorder: showVerticalEndBorder\n            }, headerProps.key);\n          }), loading && rows?.length === 0 && /*#__PURE__*/_jsx(TablePlaceholder, {\n            columns: visibleColumns,\n            rows: minRows,\n            style: noDataStyles\n          }), !loading && rows?.length === 0 && /*#__PURE__*/_jsx(NoDataComponent, {\n            noDataText: noDataTextLocal,\n            className: classNames.noDataContainer,\n            style: noDataStyles\n          }), rows?.length > 0 && tableRef.current && /*#__PURE__*/_jsx(VirtualTableBodyContainer, {\n            rowCollapsedFlag: tableState.rowCollapsed,\n            dispatch: dispatch,\n            tableBodyHeight: tableBodyHeight,\n            totalColumnsWidth: columnVirtualizer.getTotalSize(),\n            parentRef: parentRef,\n            classes: classNames,\n            infiniteScroll: infiniteScroll,\n            infiniteScrollThreshold: infiniteScrollThreshold,\n            onLoadMore: handleOnLoadMore,\n            internalRowHeight: internalRowHeight,\n            popInRowHeight: popInRowHeight,\n            rows: rows,\n            handleExternalScroll: handleBodyScroll,\n            visibleRows: internalVisibleRowCount,\n            children: /*#__PURE__*/_jsx(VirtualTableBody, {\n              scrollContainerRef: scrollContainerRef,\n              classes: classNames,\n              prepareRow: prepareRow,\n              rows: rows,\n              scrollToRef: scrollToRef,\n              isTreeTable: isTreeTable,\n              internalRowHeight: internalRowHeight,\n              popInRowHeight: popInRowHeight,\n              alternateRowColor: alternateRowColor,\n              visibleColumns: visibleColumns,\n              renderRowSubComponent: renderRowSubComponent,\n              alwaysShowSubComponent: alwaysShowSubComponent,\n              markNavigatedRow: markNavigatedRow,\n              isRtl: isRtl,\n              subComponentsHeight: tableState.subComponentsHeight,\n              dispatch: dispatch,\n              columnVirtualizer: columnVirtualizer,\n              manualGroupBy: reactTableOptions?.manualGroupBy,\n              subRowsKey: subRowsKey,\n              subComponentsBehavior: subComponentsBehavior,\n              triggerScroll: tableState.triggerScroll,\n              rowVirtualizer: rowVirtualizer\n            })\n          })]\n        }), (additionalEmptyRowsCount || tableState.isScrollable === undefined || tableState.isScrollable) && /*#__PURE__*/_jsx(VerticalScrollbar, {\n          tableBodyHeight: tableBodyHeight,\n          internalRowHeight: internalHeaderRowHeight,\n          tableRef: tableRef,\n          handleVerticalScrollBarScroll: handleVerticalScrollBarScroll,\n          ref: verticalScrollBarRef,\n          scrollContainerRef: scrollContainerRef,\n          parentRef: parentRef,\n          nativeScrollbar: className?.includes('ui5-content-native-scrollbars')\n        })]\n      }), visibleRowCountMode === AnalyticalTableVisibleRowCountMode.Interactive && /*#__PURE__*/_jsx(VerticalResizer, {\n        popInRowHeight: popInRowHeight,\n        hasPopInColumns: tableState?.popInColumns?.length > 0,\n        analyticalTableRef: analyticalTableRef,\n        dispatch: dispatch,\n        extensionsHeight: extensionsHeight,\n        internalRowHeight: internalRowHeight,\n        rowsLength: rows.length,\n        visibleRows: internalVisibleRowCount,\n        handleOnLoadMore: handleOnLoadMore\n      })]\n    }), /*#__PURE__*/_jsx(Text, {\n      \"aria-hidden\": \"true\",\n      id: `scaleModeHelper-${uniqueId}`,\n      className: classNames.hiddenSmartColMeasure,\n      \"data-component-name\": \"AnalyticalTableScaleModeHelper\",\n      children: ''\n    }), /*#__PURE__*/_jsx(Text, {\n      \"aria-hidden\": \"true\",\n      id: `scaleModeHelperHeader-${uniqueId}`,\n      className: clsx(classNames.hiddenSmartColMeasure, classNames.hiddenSmartColMeasureHeader),\n      \"data-component-name\": \"AnalyticalTableScaleModeHelperHeader\",\n      children: ''\n    })]\n  });\n});\nAnalyticalTable.displayName = 'AnalyticalTable';\nexport { AnalyticalTable };"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}