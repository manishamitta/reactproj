{"ast":null,"code":"'use client';\n\nimport LinkAccessibleRole from '@ui5/webcomponents/dist/types/LinkAccessibleRole.js';\nimport { useI18nBundle, useStylesheet } from '@ui5/webcomponents-react-base';\nimport { clsx } from 'clsx';\nimport { forwardRef, useId, useState } from 'react';\nimport { CLOSE_POPOVER, SHOW_FULL_TEXT, SHOW_LESS, SHOW_MORE } from '../../i18n/i18n-defaults.js';\nimport { Link } from '../../webComponents/index.js';\nimport { ResponsivePopover } from '../../webComponents/ResponsivePopover/index.js';\nimport { Text } from '../../webComponents/Text/index.js';\nimport { classNames, styleData } from './ExpandableText.module.css.js';\nimport { jsx as _jsx, Fragment as _Fragment, jsxs as _jsxs } from \"react/jsx-runtime\";\n/**\n * The `ExpandableText` component can be used to display long texts inside a table, list or form.\n *\n * Initially, only the first characters from the text are shown with a \"Show More\" link which allows the full text to be displayed. The `showOverflowInPopover` property determines if the full text will be displayed expanded in place (default) or in a popover (`showOverflowInPopover: true`). If the text is expanded a \"Show Less\" link is displayed, which allows collapsing the text field.\n *\n * @since 1.23.0\n */\nconst ExpandableText = /*#__PURE__*/forwardRef((props, ref) => {\n  const {\n    children,\n    showOverflowInPopover,\n    maxCharacters = 100,\n    renderWhitespace,\n    className,\n    ...rest\n  } = props;\n  useStylesheet(styleData, ExpandableText.displayName);\n  const [collapsed, setCollapsed] = useState(true);\n  const [popoverOpen, setPopoverOpen] = useState(false);\n  const uniqueId = useId();\n  const i18nBundle = useI18nBundle('@ui5/webcomponents-react');\n  const trimmedChildren = renderWhitespace ? children : children?.replace(/\\s+/g, ' ').trim();\n  const isOverflow = trimmedChildren?.length >= maxCharacters;\n  const strippedChildren = isOverflow && (collapsed || showOverflowInPopover) ? trimmedChildren?.slice(0, maxCharacters) : children;\n  const handleClick = () => {\n    if (showOverflowInPopover) {\n      setPopoverOpen(prev => !prev);\n    }\n    setCollapsed(prev => !prev);\n  };\n  const closePopover = () => {\n    setCollapsed(true);\n    setPopoverOpen(false);\n  };\n  return /*#__PURE__*/_jsxs(_Fragment, {\n    children: [/*#__PURE__*/_jsxs(\"span\", {\n      className: clsx(classNames.expandableText, className),\n      ...rest,\n      ref: ref,\n      children: [/*#__PURE__*/_jsx(Text, {\n        className: clsx(classNames.text, renderWhitespace && classNames.renderWhitespace),\n        children: strippedChildren\n      }), isOverflow && /*#__PURE__*/_jsxs(_Fragment, {\n        children: [/*#__PURE__*/_jsx(\"span\", {\n          className: classNames.ellipsis,\n          children: showOverflowInPopover || collapsed ? '… ' : ' '\n        }), /*#__PURE__*/_jsx(Link, {\n          accessibleName: showOverflowInPopover ? collapsed ? i18nBundle.getText(SHOW_FULL_TEXT) : i18nBundle.getText(CLOSE_POPOVER) : undefined,\n          accessibleRole: LinkAccessibleRole.Button,\n          accessibilityAttributes: showOverflowInPopover ? {\n            hasPopup: 'dialog'\n          } : {\n            expanded: !collapsed\n          },\n          onClick: handleClick,\n          id: `${uniqueId}-link`,\n          children: collapsed ? i18nBundle.getText(SHOW_MORE) : i18nBundle.getText(SHOW_LESS)\n        })]\n      })]\n    }), showOverflowInPopover && popoverOpen && /*#__PURE__*/_jsx(ResponsivePopover, {\n      opener: `${uniqueId}-link`,\n      open: true,\n      onClose: closePopover,\n      className: classNames.popover,\n      children: /*#__PURE__*/_jsx(Text, {\n        className: clsx(classNames.text, renderWhitespace && classNames.renderWhitespace),\n        children: children\n      })\n    })]\n  });\n});\nExpandableText.displayName = 'ExpandableText';\nexport { ExpandableText };","map":{"version":3,"names":["LinkAccessibleRole","useI18nBundle","useStylesheet","clsx","forwardRef","useId","useState","CLOSE_POPOVER","SHOW_FULL_TEXT","SHOW_LESS","SHOW_MORE","Link","ResponsivePopover","Text","classNames","styleData","jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","ExpandableText","props","ref","children","showOverflowInPopover","maxCharacters","renderWhitespace","className","rest","displayName","collapsed","setCollapsed","popoverOpen","setPopoverOpen","uniqueId","i18nBundle","trimmedChildren","replace","trim","isOverflow","length","strippedChildren","slice","handleClick","prev","closePopover","expandableText","text","ellipsis","accessibleName","getText","undefined","accessibleRole","Button","accessibilityAttributes","hasPopup","expanded","onClick","id","opener","open","onClose","popover"],"sources":["/home/user/projects/reactproj/node_modules/@ui5/webcomponents-react/dist/components/ExpandableText/index.js"],"sourcesContent":["'use client';\n\nimport LinkAccessibleRole from '@ui5/webcomponents/dist/types/LinkAccessibleRole.js';\nimport { useI18nBundle, useStylesheet } from '@ui5/webcomponents-react-base';\nimport { clsx } from 'clsx';\nimport { forwardRef, useId, useState } from 'react';\nimport { CLOSE_POPOVER, SHOW_FULL_TEXT, SHOW_LESS, SHOW_MORE } from '../../i18n/i18n-defaults.js';\nimport { Link } from '../../webComponents/index.js';\nimport { ResponsivePopover } from '../../webComponents/ResponsivePopover/index.js';\nimport { Text } from '../../webComponents/Text/index.js';\nimport { classNames, styleData } from './ExpandableText.module.css.js';\nimport { jsx as _jsx, Fragment as _Fragment, jsxs as _jsxs } from \"react/jsx-runtime\";\n/**\n * The `ExpandableText` component can be used to display long texts inside a table, list or form.\n *\n * Initially, only the first characters from the text are shown with a \"Show More\" link which allows the full text to be displayed. The `showOverflowInPopover` property determines if the full text will be displayed expanded in place (default) or in a popover (`showOverflowInPopover: true`). If the text is expanded a \"Show Less\" link is displayed, which allows collapsing the text field.\n *\n * @since 1.23.0\n */\nconst ExpandableText = /*#__PURE__*/forwardRef((props, ref) => {\n  const {\n    children,\n    showOverflowInPopover,\n    maxCharacters = 100,\n    renderWhitespace,\n    className,\n    ...rest\n  } = props;\n  useStylesheet(styleData, ExpandableText.displayName);\n  const [collapsed, setCollapsed] = useState(true);\n  const [popoverOpen, setPopoverOpen] = useState(false);\n  const uniqueId = useId();\n  const i18nBundle = useI18nBundle('@ui5/webcomponents-react');\n  const trimmedChildren = renderWhitespace ? children : children?.replace(/\\s+/g, ' ').trim();\n  const isOverflow = trimmedChildren?.length >= maxCharacters;\n  const strippedChildren = isOverflow && (collapsed || showOverflowInPopover) ? trimmedChildren?.slice(0, maxCharacters) : children;\n  const handleClick = () => {\n    if (showOverflowInPopover) {\n      setPopoverOpen(prev => !prev);\n    }\n    setCollapsed(prev => !prev);\n  };\n  const closePopover = () => {\n    setCollapsed(true);\n    setPopoverOpen(false);\n  };\n  return /*#__PURE__*/_jsxs(_Fragment, {\n    children: [/*#__PURE__*/_jsxs(\"span\", {\n      className: clsx(classNames.expandableText, className),\n      ...rest,\n      ref: ref,\n      children: [/*#__PURE__*/_jsx(Text, {\n        className: clsx(classNames.text, renderWhitespace && classNames.renderWhitespace),\n        children: strippedChildren\n      }), isOverflow && /*#__PURE__*/_jsxs(_Fragment, {\n        children: [/*#__PURE__*/_jsx(\"span\", {\n          className: classNames.ellipsis,\n          children: showOverflowInPopover || collapsed ? '… ' : ' '\n        }), /*#__PURE__*/_jsx(Link, {\n          accessibleName: showOverflowInPopover ? collapsed ? i18nBundle.getText(SHOW_FULL_TEXT) : i18nBundle.getText(CLOSE_POPOVER) : undefined,\n          accessibleRole: LinkAccessibleRole.Button,\n          accessibilityAttributes: showOverflowInPopover ? {\n            hasPopup: 'dialog'\n          } : {\n            expanded: !collapsed\n          },\n          onClick: handleClick,\n          id: `${uniqueId}-link`,\n          children: collapsed ? i18nBundle.getText(SHOW_MORE) : i18nBundle.getText(SHOW_LESS)\n        })]\n      })]\n    }), showOverflowInPopover && popoverOpen && /*#__PURE__*/_jsx(ResponsivePopover, {\n      opener: `${uniqueId}-link`,\n      open: true,\n      onClose: closePopover,\n      className: classNames.popover,\n      children: /*#__PURE__*/_jsx(Text, {\n        className: clsx(classNames.text, renderWhitespace && classNames.renderWhitespace),\n        children: children\n      })\n    })]\n  });\n});\nExpandableText.displayName = 'ExpandableText';\nexport { ExpandableText };"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}