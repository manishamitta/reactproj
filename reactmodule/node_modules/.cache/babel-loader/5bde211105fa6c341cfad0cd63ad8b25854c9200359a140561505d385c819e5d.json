{"ast":null,"code":"import { CssSizeVariablesNames, enrichEventWithDetails } from '@ui5/webcomponents-react-base';\nimport { AnalyticalTableSelectionBehavior, AnalyticalTableSelectionMode } from '../../../enums/index.js';\nimport { CheckBox } from '../../../webComponents/CheckBox/index.js';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst customCheckBoxStyling = {\n  verticalAlign: 'middle',\n  pointerEvents: 'none',\n  display: 'block'\n};\n\n/*\n * COMPONENTS\n */\n\nconst Header = instance => {\n  const {\n    getToggleAllRowsSelectedProps,\n    webComponentsReactProperties: {\n      selectionMode\n    }\n  } = instance;\n  if (selectionMode === AnalyticalTableSelectionMode.Single) {\n    return null;\n  }\n  const checkBoxProps = getToggleAllRowsSelectedProps();\n  return /*#__PURE__*/_jsx(CheckBox, {\n    ...checkBoxProps,\n    style: customCheckBoxStyling,\n    tabIndex: -1,\n    onChange: undefined,\n    checked: checkBoxProps.indeterminate ? true : checkBoxProps.checked,\n    \"aria-hidden\": \"true\"\n  });\n};\nconst Cell = _ref => {\n  let {\n    row,\n    webComponentsReactProperties: {\n      selectionMode\n    }\n  } = _ref;\n  if (selectionMode === AnalyticalTableSelectionMode.Single || row.isGrouped) {\n    return null;\n  }\n  return /*#__PURE__*/_jsx(CheckBox, {\n    ...row.getToggleRowSelectedProps(),\n    tabIndex: -1,\n    \"aria-hidden\": \"true\",\n    style: customCheckBoxStyling,\n    \"data-name\": \"internal_selection_column\"\n  });\n};\nfunction getNextSelectedRowIds(rowsById) {\n  return Object.keys(rowsById).reduce((acc, cur) => {\n    acc[cur] = true;\n    return acc;\n  }, {});\n}\nconst headerProps = (props, _ref2) => {\n  let {\n    instance\n  } = _ref2;\n  const {\n    webComponentsReactProperties: {\n      onRowSelect,\n      selectionMode,\n      translatableTexts: {\n        selectAllText,\n        deselectAllText\n      }\n    },\n    toggleAllRowsSelected,\n    isAllRowsSelected,\n    rowsById,\n    preFilteredRowsById,\n    dispatch,\n    state: {\n      filters,\n      globalFilter\n    }\n  } = instance;\n  const style = {\n    ...props.style,\n    cursor: 'pointer',\n    display: 'flex',\n    justifyContent: 'center'\n  };\n  const isFiltered = filters?.length > 0 || !!globalFilter;\n  const _rowsById = isFiltered ? preFilteredRowsById : rowsById;\n  if (props.key === 'header___ui5wcr__internal_selection_column' && selectionMode === AnalyticalTableSelectionMode.Multiple) {\n    const onClick = e => {\n      if (typeof props.onClick === 'function') {\n        props.onClick(e);\n      }\n      toggleAllRowsSelected(!isAllRowsSelected);\n      if (typeof onRowSelect === 'function') {\n        if (isFiltered) {\n          dispatch({\n            type: 'SELECT_ROW_CB',\n            payload: {\n              event: e,\n              row: undefined,\n              selectAll: true,\n              fired: true\n            }\n          });\n        } else {\n          onRowSelect(\n          // cannot use instance.selectedFlatRows here as it only returns all rows on the first level\n          enrichEventWithDetails(e, {\n            rowsById: _rowsById,\n            allRowsSelected: !isAllRowsSelected,\n            selectedRowIds: !isAllRowsSelected ? getNextSelectedRowIds(rowsById) : {}\n          }));\n        }\n      }\n    };\n    const onKeyDown = e => {\n      if (typeof props.onKeyDown === 'function') {\n        props.onKeyDown(e);\n      }\n      if (e.code === 'Enter' || e.code === 'Space') {\n        e.preventDefault();\n        if (e.code === 'Enter') {\n          onClick(e);\n        }\n      }\n    };\n    const onKeyUp = e => {\n      if (typeof props.onKeyUp === 'function') {\n        props.onKeyUp(e);\n      }\n      if (e.code === 'Space') {\n        e.preventDefault();\n        onClick(e);\n      }\n    };\n    return [props, {\n      onClick,\n      onKeyDown,\n      onKeyUp,\n      style,\n      title: isAllRowsSelected ? deselectAllText : selectAllText\n    }];\n  }\n  return props;\n};\nconst columnDeps = (deps, _ref3) => {\n  let {\n    instance: {\n      webComponentsReactProperties\n    }\n  } = _ref3;\n  return [...deps, webComponentsReactProperties.selectionMode, webComponentsReactProperties.selectionBehavior];\n};\nconst visibleColumnsDeps = (deps, _ref4) => {\n  let {\n    instance\n  } = _ref4;\n  return [...deps, instance.webComponentsReactProperties.selectionMode, instance.webComponentsReactProperties.selectionBehavior];\n};\nconst visibleColumns = (currentVisibleColumns, _ref5) => {\n  let {\n    instance: {\n      webComponentsReactProperties\n    }\n  } = _ref5;\n  if (webComponentsReactProperties.selectionMode === AnalyticalTableSelectionMode.None || webComponentsReactProperties.selectionBehavior === AnalyticalTableSelectionBehavior.RowOnly) {\n    return currentVisibleColumns;\n  }\n  const selectionColumn = currentVisibleColumns.find(_ref6 => {\n    let {\n      id\n    } = _ref6;\n    return id === '__ui5wcr__internal_selection_column';\n  });\n  return [selectionColumn, ...currentVisibleColumns.filter(_ref7 => {\n    let {\n      id\n    } = _ref7;\n    return id !== '__ui5wcr__internal_selection_column';\n  })];\n};\nconst columns = (currentColumns, _ref8) => {\n  let {\n    instance\n  } = _ref8;\n  const {\n    webComponentsReactProperties\n  } = instance;\n  const {\n    selectionMode,\n    selectionBehavior,\n    tableRef\n  } = webComponentsReactProperties;\n  if (selectionMode === AnalyticalTableSelectionMode.None || selectionBehavior === AnalyticalTableSelectionBehavior.RowOnly) {\n    return currentColumns;\n  }\n  const tableSelectionColumnWidth = tableRef.current && parseInt(getComputedStyle(tableRef.current).getPropertyValue(CssSizeVariablesNames.ui5WcrAnalyticalTableSelectionColumnWidth), 10);\n  const selectionColumnWidth = !isNaN(tableSelectionColumnWidth) ? tableSelectionColumnWidth : 47;\n  return [{\n    id: '__ui5wcr__internal_selection_column',\n    disableFilters: true,\n    disableSortBy: true,\n    disableGroupBy: true,\n    disableResizing: true,\n    disableDragAndDrop: true,\n    width: selectionColumnWidth,\n    minWidth: selectionColumnWidth,\n    maxWidth: selectionColumnWidth,\n    Header,\n    Cell\n  }, ...currentColumns];\n};\nconst getCellProps = (props, _ref9) => {\n  let {\n    cell\n  } = _ref9;\n  if (cell.column.id === '__ui5wcr__internal_selection_column') {\n    const style = {\n      ...props.style,\n      cursor: 'pointer',\n      justifyContent: 'center'\n    };\n    return [props, {\n      style\n    }];\n  }\n  return props;\n};\nconst setToggleAllRowsSelectedProps = (props, _ref10) => {\n  let {\n    instance: {\n      webComponentsReactProperties\n    }\n  } = _ref10;\n  const {\n    classes\n  } = webComponentsReactProperties;\n  return [props, {\n    className: classes.checkBox,\n    title: undefined\n  }];\n};\nconst setToggleRowSelectedProps = (props, _ref11) => {\n  let {\n    instance: {\n      webComponentsReactProperties\n    }\n  } = _ref11;\n  const {\n    classes\n  } = webComponentsReactProperties;\n  return [props, {\n    className: classes.checkBox,\n    title: undefined\n  }];\n};\nexport const useRowSelectionColumn = hooks => {\n  hooks.getCellProps.push(getCellProps);\n  hooks.getHeaderProps.push(headerProps);\n  hooks.getToggleRowSelectedProps.push(setToggleRowSelectedProps);\n  hooks.getToggleAllRowsSelectedProps.push(setToggleAllRowsSelectedProps);\n  hooks.columns.push(columns);\n  hooks.columnsDeps.push(columnDeps);\n  hooks.visibleColumnsDeps.push(visibleColumnsDeps);\n  hooks.visibleColumns.push(visibleColumns);\n};\nuseRowSelectionColumn.pluginName = 'useRowSelectionColumn';","map":{"version":3,"names":["CssSizeVariablesNames","enrichEventWithDetails","AnalyticalTableSelectionBehavior","AnalyticalTableSelectionMode","CheckBox","jsx","_jsx","customCheckBoxStyling","verticalAlign","pointerEvents","display","Header","instance","getToggleAllRowsSelectedProps","webComponentsReactProperties","selectionMode","Single","checkBoxProps","style","tabIndex","onChange","undefined","checked","indeterminate","Cell","_ref","row","isGrouped","getToggleRowSelectedProps","getNextSelectedRowIds","rowsById","Object","keys","reduce","acc","cur","headerProps","props","_ref2","onRowSelect","translatableTexts","selectAllText","deselectAllText","toggleAllRowsSelected","isAllRowsSelected","preFilteredRowsById","dispatch","state","filters","globalFilter","cursor","justifyContent","isFiltered","length","_rowsById","key","Multiple","onClick","e","type","payload","event","selectAll","fired","allRowsSelected","selectedRowIds","onKeyDown","code","preventDefault","onKeyUp","title","columnDeps","deps","_ref3","selectionBehavior","visibleColumnsDeps","_ref4","visibleColumns","currentVisibleColumns","_ref5","None","RowOnly","selectionColumn","find","_ref6","id","filter","_ref7","columns","currentColumns","_ref8","tableRef","tableSelectionColumnWidth","current","parseInt","getComputedStyle","getPropertyValue","ui5WcrAnalyticalTableSelectionColumnWidth","selectionColumnWidth","isNaN","disableFilters","disableSortBy","disableGroupBy","disableResizing","disableDragAndDrop","width","minWidth","maxWidth","getCellProps","_ref9","cell","column","setToggleAllRowsSelectedProps","_ref10","classes","className","checkBox","setToggleRowSelectedProps","_ref11","useRowSelectionColumn","hooks","push","getHeaderProps","columnsDeps","pluginName"],"sources":["/home/user/projects/reactproj/node_modules/@ui5/webcomponents-react/dist/components/AnalyticalTable/hooks/useRowSelectionColumn.js"],"sourcesContent":["import { CssSizeVariablesNames, enrichEventWithDetails } from '@ui5/webcomponents-react-base';\nimport { AnalyticalTableSelectionBehavior, AnalyticalTableSelectionMode } from '../../../enums/index.js';\nimport { CheckBox } from '../../../webComponents/CheckBox/index.js';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst customCheckBoxStyling = {\n  verticalAlign: 'middle',\n  pointerEvents: 'none',\n  display: 'block'\n};\n\n/*\n * COMPONENTS\n */\n\nconst Header = instance => {\n  const {\n    getToggleAllRowsSelectedProps,\n    webComponentsReactProperties: {\n      selectionMode\n    }\n  } = instance;\n  if (selectionMode === AnalyticalTableSelectionMode.Single) {\n    return null;\n  }\n  const checkBoxProps = getToggleAllRowsSelectedProps();\n  return /*#__PURE__*/_jsx(CheckBox, {\n    ...checkBoxProps,\n    style: customCheckBoxStyling,\n    tabIndex: -1,\n    onChange: undefined,\n    checked: checkBoxProps.indeterminate ? true : checkBoxProps.checked,\n    \"aria-hidden\": \"true\"\n  });\n};\nconst Cell = ({\n  row,\n  webComponentsReactProperties: {\n    selectionMode\n  }\n}) => {\n  if (selectionMode === AnalyticalTableSelectionMode.Single || row.isGrouped) {\n    return null;\n  }\n  return /*#__PURE__*/_jsx(CheckBox, {\n    ...row.getToggleRowSelectedProps(),\n    tabIndex: -1,\n    \"aria-hidden\": \"true\",\n    style: customCheckBoxStyling,\n    \"data-name\": \"internal_selection_column\"\n  });\n};\nfunction getNextSelectedRowIds(rowsById) {\n  return Object.keys(rowsById).reduce((acc, cur) => {\n    acc[cur] = true;\n    return acc;\n  }, {});\n}\nconst headerProps = (props, {\n  instance\n}) => {\n  const {\n    webComponentsReactProperties: {\n      onRowSelect,\n      selectionMode,\n      translatableTexts: {\n        selectAllText,\n        deselectAllText\n      }\n    },\n    toggleAllRowsSelected,\n    isAllRowsSelected,\n    rowsById,\n    preFilteredRowsById,\n    dispatch,\n    state: {\n      filters,\n      globalFilter\n    }\n  } = instance;\n  const style = {\n    ...props.style,\n    cursor: 'pointer',\n    display: 'flex',\n    justifyContent: 'center'\n  };\n  const isFiltered = filters?.length > 0 || !!globalFilter;\n  const _rowsById = isFiltered ? preFilteredRowsById : rowsById;\n  if (props.key === 'header___ui5wcr__internal_selection_column' && selectionMode === AnalyticalTableSelectionMode.Multiple) {\n    const onClick = e => {\n      if (typeof props.onClick === 'function') {\n        props.onClick(e);\n      }\n      toggleAllRowsSelected(!isAllRowsSelected);\n      if (typeof onRowSelect === 'function') {\n        if (isFiltered) {\n          dispatch({\n            type: 'SELECT_ROW_CB',\n            payload: {\n              event: e,\n              row: undefined,\n              selectAll: true,\n              fired: true\n            }\n          });\n        } else {\n          onRowSelect(\n          // cannot use instance.selectedFlatRows here as it only returns all rows on the first level\n          enrichEventWithDetails(e, {\n            rowsById: _rowsById,\n            allRowsSelected: !isAllRowsSelected,\n            selectedRowIds: !isAllRowsSelected ? getNextSelectedRowIds(rowsById) : {}\n          }));\n        }\n      }\n    };\n    const onKeyDown = e => {\n      if (typeof props.onKeyDown === 'function') {\n        props.onKeyDown(e);\n      }\n      if (e.code === 'Enter' || e.code === 'Space') {\n        e.preventDefault();\n        if (e.code === 'Enter') {\n          onClick(e);\n        }\n      }\n    };\n    const onKeyUp = e => {\n      if (typeof props.onKeyUp === 'function') {\n        props.onKeyUp(e);\n      }\n      if (e.code === 'Space') {\n        e.preventDefault();\n        onClick(e);\n      }\n    };\n    return [props, {\n      onClick,\n      onKeyDown,\n      onKeyUp,\n      style,\n      title: isAllRowsSelected ? deselectAllText : selectAllText\n    }];\n  }\n  return props;\n};\nconst columnDeps = (deps, {\n  instance: {\n    webComponentsReactProperties\n  }\n}) => {\n  return [...deps, webComponentsReactProperties.selectionMode, webComponentsReactProperties.selectionBehavior];\n};\nconst visibleColumnsDeps = (deps, {\n  instance\n}) => [...deps, instance.webComponentsReactProperties.selectionMode, instance.webComponentsReactProperties.selectionBehavior];\nconst visibleColumns = (currentVisibleColumns, {\n  instance: {\n    webComponentsReactProperties\n  }\n}) => {\n  if (webComponentsReactProperties.selectionMode === AnalyticalTableSelectionMode.None || webComponentsReactProperties.selectionBehavior === AnalyticalTableSelectionBehavior.RowOnly) {\n    return currentVisibleColumns;\n  }\n  const selectionColumn = currentVisibleColumns.find(({\n    id\n  }) => id === '__ui5wcr__internal_selection_column');\n  return [selectionColumn, ...currentVisibleColumns.filter(({\n    id\n  }) => id !== '__ui5wcr__internal_selection_column')];\n};\nconst columns = (currentColumns, {\n  instance\n}) => {\n  const {\n    webComponentsReactProperties\n  } = instance;\n  const {\n    selectionMode,\n    selectionBehavior,\n    tableRef\n  } = webComponentsReactProperties;\n  if (selectionMode === AnalyticalTableSelectionMode.None || selectionBehavior === AnalyticalTableSelectionBehavior.RowOnly) {\n    return currentColumns;\n  }\n  const tableSelectionColumnWidth = tableRef.current && parseInt(getComputedStyle(tableRef.current).getPropertyValue(CssSizeVariablesNames.ui5WcrAnalyticalTableSelectionColumnWidth), 10);\n  const selectionColumnWidth = !isNaN(tableSelectionColumnWidth) ? tableSelectionColumnWidth : 47;\n  return [{\n    id: '__ui5wcr__internal_selection_column',\n    disableFilters: true,\n    disableSortBy: true,\n    disableGroupBy: true,\n    disableResizing: true,\n    disableDragAndDrop: true,\n    width: selectionColumnWidth,\n    minWidth: selectionColumnWidth,\n    maxWidth: selectionColumnWidth,\n    Header,\n    Cell\n  }, ...currentColumns];\n};\nconst getCellProps = (props, {\n  cell\n}) => {\n  if (cell.column.id === '__ui5wcr__internal_selection_column') {\n    const style = {\n      ...props.style,\n      cursor: 'pointer',\n      justifyContent: 'center'\n    };\n    return [props, {\n      style\n    }];\n  }\n  return props;\n};\nconst setToggleAllRowsSelectedProps = (props, {\n  instance: {\n    webComponentsReactProperties\n  }\n}) => {\n  const {\n    classes\n  } = webComponentsReactProperties;\n  return [props, {\n    className: classes.checkBox,\n    title: undefined\n  }];\n};\nconst setToggleRowSelectedProps = (props, {\n  instance: {\n    webComponentsReactProperties\n  }\n}) => {\n  const {\n    classes\n  } = webComponentsReactProperties;\n  return [props, {\n    className: classes.checkBox,\n    title: undefined\n  }];\n};\nexport const useRowSelectionColumn = hooks => {\n  hooks.getCellProps.push(getCellProps);\n  hooks.getHeaderProps.push(headerProps);\n  hooks.getToggleRowSelectedProps.push(setToggleRowSelectedProps);\n  hooks.getToggleAllRowsSelectedProps.push(setToggleAllRowsSelectedProps);\n  hooks.columns.push(columns);\n  hooks.columnsDeps.push(columnDeps);\n  hooks.visibleColumnsDeps.push(visibleColumnsDeps);\n  hooks.visibleColumns.push(visibleColumns);\n};\nuseRowSelectionColumn.pluginName = 'useRowSelectionColumn';"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}