{"ast":null,"code":"'use client';\n\nimport { Device, useIsomorphicLayoutEffect, useSyncRef, useStylesheet } from '@ui5/webcomponents-react-base';\nimport { clsx } from 'clsx';\nimport { forwardRef, useContext, useEffect, useState } from 'react';\nimport { SplitterLayoutContext } from '../../internal/SplitterLayoutContext.js';\nimport { classNames, styleData } from './SplitterElement.module.css.js';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n/**\n * The `SplitterElement` holds the component of the content area. Allowed size values are of the type css property width or\n * height according to the orientation of the `SplitterLayout`. If `size` isn't passed to the element, the width or\n * height of the content area will be calculated automatically according to the size of the given `SplitterLayout`.\n * The `minSize` defines the minimum width or height of the area and is set to 0 when no minimum size is given, so the\n * content can be completely collapsed.\n */\nconst SplitterElement = /*#__PURE__*/forwardRef((props, ref) => {\n  const {\n    children,\n    style,\n    className,\n    minSize = 0,\n    size = 'auto',\n    resizable: _0,\n    ...rest\n  } = props;\n  const [componentRef, splitterElementRef] = useSyncRef(ref);\n  const {\n    vertical,\n    reset\n  } = useContext(SplitterLayoutContext);\n  const safariStyles = Device.isSafari() ? {\n    width: 'min-content',\n    flex: '1 1 auto'\n  } : {};\n  const defaultFlexStyles = size !== 'auto' ? {\n    flex: `0 1 ${size}`\n  } : {\n    flex: '1 0 min-content',\n    ...safariStyles\n  };\n  const [flexStyles, setFlexStyles] = useState(defaultFlexStyles);\n  const [flexBasisApplied, setFlexBasisApplied] = useState(false);\n  useStylesheet(styleData, SplitterElement.displayName);\n  useEffect(() => {\n    const elementObserver = new ResizeObserver(_ref => {\n      let [element] = _ref;\n      if (element.target.getBoundingClientRect().width !== 0 && !flexBasisApplied) {\n        const resetSafariStyles = Device.isSafari() ? {\n          width: 'unset'\n        } : {};\n        setFlexStyles({\n          flex: `0 0 ${element.target.getBoundingClientRect()[vertical ? 'height' : 'width']}px`,\n          ...resetSafariStyles\n        });\n        setFlexBasisApplied(true);\n      }\n    });\n    if (size === 'auto' && splitterElementRef.current) {\n      elementObserver.observe(splitterElementRef.current);\n    } else {\n      setFlexStyles({\n        flex: `0 1 ${size}`\n      });\n    }\n    return () => {\n      elementObserver.disconnect();\n    };\n  }, [size, flexBasisApplied, vertical]);\n  useIsomorphicLayoutEffect(() => {\n    if (reset) {\n      setFlexStyles(undefined);\n      setFlexBasisApplied(false);\n    }\n  }, [reset, size]);\n  useIsomorphicLayoutEffect(() => {\n    if (flexStyles === undefined) {\n      setFlexStyles(defaultFlexStyles);\n    }\n  }, [flexStyles]);\n  return /*#__PURE__*/_jsx(\"div\", {\n    ref: componentRef,\n    className: clsx(classNames.splitterElement, className),\n    style: {\n      minHeight: vertical && minSize ? `${minSize}px` : undefined,\n      minWidth: !vertical && minSize ? `${minSize}px` : undefined,\n      ...flexStyles,\n      ...style\n    },\n    ...rest,\n    \"data-min-size\": minSize,\n    children: children\n  });\n});\nSplitterElement.displayName = 'SplitterElement';\nexport { SplitterElement };","map":{"version":3,"names":["Device","useIsomorphicLayoutEffect","useSyncRef","useStylesheet","clsx","forwardRef","useContext","useEffect","useState","SplitterLayoutContext","classNames","styleData","jsx","_jsx","SplitterElement","props","ref","children","style","className","minSize","size","resizable","_0","rest","componentRef","splitterElementRef","vertical","reset","safariStyles","isSafari","width","flex","defaultFlexStyles","flexStyles","setFlexStyles","flexBasisApplied","setFlexBasisApplied","displayName","elementObserver","ResizeObserver","_ref","element","target","getBoundingClientRect","resetSafariStyles","current","observe","disconnect","undefined","splitterElement","minHeight","minWidth"],"sources":["/home/user/projects/reactproj/node_modules/@ui5/webcomponents-react/dist/components/SplitterElement/index.js"],"sourcesContent":["'use client';\n\nimport { Device, useIsomorphicLayoutEffect, useSyncRef, useStylesheet } from '@ui5/webcomponents-react-base';\nimport { clsx } from 'clsx';\nimport { forwardRef, useContext, useEffect, useState } from 'react';\nimport { SplitterLayoutContext } from '../../internal/SplitterLayoutContext.js';\nimport { classNames, styleData } from './SplitterElement.module.css.js';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n/**\n * The `SplitterElement` holds the component of the content area. Allowed size values are of the type css property width or\n * height according to the orientation of the `SplitterLayout`. If `size` isn't passed to the element, the width or\n * height of the content area will be calculated automatically according to the size of the given `SplitterLayout`.\n * The `minSize` defines the minimum width or height of the area and is set to 0 when no minimum size is given, so the\n * content can be completely collapsed.\n */\nconst SplitterElement = /*#__PURE__*/forwardRef((props, ref) => {\n  const {\n    children,\n    style,\n    className,\n    minSize = 0,\n    size = 'auto',\n    resizable: _0,\n    ...rest\n  } = props;\n  const [componentRef, splitterElementRef] = useSyncRef(ref);\n  const {\n    vertical,\n    reset\n  } = useContext(SplitterLayoutContext);\n  const safariStyles = Device.isSafari() ? {\n    width: 'min-content',\n    flex: '1 1 auto'\n  } : {};\n  const defaultFlexStyles = size !== 'auto' ? {\n    flex: `0 1 ${size}`\n  } : {\n    flex: '1 0 min-content',\n    ...safariStyles\n  };\n  const [flexStyles, setFlexStyles] = useState(defaultFlexStyles);\n  const [flexBasisApplied, setFlexBasisApplied] = useState(false);\n  useStylesheet(styleData, SplitterElement.displayName);\n  useEffect(() => {\n    const elementObserver = new ResizeObserver(([element]) => {\n      if (element.target.getBoundingClientRect().width !== 0 && !flexBasisApplied) {\n        const resetSafariStyles = Device.isSafari() ? {\n          width: 'unset'\n        } : {};\n        setFlexStyles({\n          flex: `0 0 ${element.target.getBoundingClientRect()[vertical ? 'height' : 'width']}px`,\n          ...resetSafariStyles\n        });\n        setFlexBasisApplied(true);\n      }\n    });\n    if (size === 'auto' && splitterElementRef.current) {\n      elementObserver.observe(splitterElementRef.current);\n    } else {\n      setFlexStyles({\n        flex: `0 1 ${size}`\n      });\n    }\n    return () => {\n      elementObserver.disconnect();\n    };\n  }, [size, flexBasisApplied, vertical]);\n  useIsomorphicLayoutEffect(() => {\n    if (reset) {\n      setFlexStyles(undefined);\n      setFlexBasisApplied(false);\n    }\n  }, [reset, size]);\n  useIsomorphicLayoutEffect(() => {\n    if (flexStyles === undefined) {\n      setFlexStyles(defaultFlexStyles);\n    }\n  }, [flexStyles]);\n  return /*#__PURE__*/_jsx(\"div\", {\n    ref: componentRef,\n    className: clsx(classNames.splitterElement, className),\n    style: {\n      minHeight: vertical && minSize ? `${minSize}px` : undefined,\n      minWidth: !vertical && minSize ? `${minSize}px` : undefined,\n      ...flexStyles,\n      ...style\n    },\n    ...rest,\n    \"data-min-size\": minSize,\n    children: children\n  });\n});\nSplitterElement.displayName = 'SplitterElement';\nexport { SplitterElement };"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}