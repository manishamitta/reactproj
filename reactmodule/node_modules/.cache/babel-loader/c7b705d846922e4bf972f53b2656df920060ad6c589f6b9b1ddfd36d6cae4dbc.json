{"ast":null,"code":"import { useEffect, useRef } from 'react';\nexport const useTableScrollHandles = (ref, dispatch) => {\n  let analyticalTableRef = useRef(null);\n  if (ref) {\n    analyticalTableRef = ref;\n  }\n  const scrollToRef = useRef({});\n  useEffect(() => {\n    if (analyticalTableRef.current) {\n      Object.assign(analyticalTableRef.current, {\n        scrollTo: (offset, align) => {\n          if (typeof scrollToRef.current?.scrollToOffset === 'function') {\n            scrollToRef.current.scrollToOffset(offset, {\n              align\n            });\n          } else {\n            dispatch({\n              type: 'TRIGGER_PROG_SCROLL',\n              payload: {\n                direction: 'vertical',\n                type: 'offset',\n                args: [offset, {\n                  align\n                }]\n              }\n            });\n          }\n        },\n        scrollToItem: (index, align) => {\n          if (typeof scrollToRef.current?.scrollToIndex === 'function') {\n            scrollToRef.current.scrollToIndex(index, {\n              align\n            });\n          } else {\n            dispatch({\n              type: 'TRIGGER_PROG_SCROLL',\n              payload: {\n                direction: 'vertical',\n                type: 'item',\n                args: [index, {\n                  align\n                }]\n              }\n            });\n          }\n        },\n        horizontalScrollTo: (offset, align) => {\n          if (typeof scrollToRef.current?.horizontalScrollToOffset === 'function') {\n            scrollToRef.current.horizontalScrollToOffset(offset, {\n              align\n            });\n          } else {\n            dispatch({\n              type: 'TRIGGER_PROG_SCROLL',\n              payload: {\n                direction: 'horizontal',\n                type: 'offset',\n                args: [offset, {\n                  align\n                }]\n              }\n            });\n          }\n        },\n        horizontalScrollToItem: (index, align) => {\n          if (typeof scrollToRef.current?.horizontalScrollToIndex === 'function') {\n            scrollToRef.current.horizontalScrollToIndex(index, {\n              align\n            });\n          } else {\n            dispatch({\n              type: 'TRIGGER_PROG_SCROLL',\n              payload: {\n                direction: 'horizontal',\n                type: 'item',\n                args: [index, {\n                  align\n                }]\n              }\n            });\n          }\n        }\n      });\n    }\n  }, []);\n  return [analyticalTableRef, scrollToRef];\n};","map":{"version":3,"names":["useEffect","useRef","useTableScrollHandles","ref","dispatch","analyticalTableRef","scrollToRef","current","Object","assign","scrollTo","offset","align","scrollToOffset","type","payload","direction","args","scrollToItem","index","scrollToIndex","horizontalScrollTo","horizontalScrollToOffset","horizontalScrollToItem","horizontalScrollToIndex"],"sources":["/home/user/projects/reactproj/node_modules/@ui5/webcomponents-react/dist/components/AnalyticalTable/hooks/useTableScrollHandles.js"],"sourcesContent":["import { useEffect, useRef } from 'react';\nexport const useTableScrollHandles = (ref, dispatch) => {\n  let analyticalTableRef = useRef(null);\n  if (ref) {\n    analyticalTableRef = ref;\n  }\n  const scrollToRef = useRef({});\n  useEffect(() => {\n    if (analyticalTableRef.current) {\n      Object.assign(analyticalTableRef.current, {\n        scrollTo: (offset, align) => {\n          if (typeof scrollToRef.current?.scrollToOffset === 'function') {\n            scrollToRef.current.scrollToOffset(offset, {\n              align\n            });\n          } else {\n            dispatch({\n              type: 'TRIGGER_PROG_SCROLL',\n              payload: {\n                direction: 'vertical',\n                type: 'offset',\n                args: [offset, {\n                  align\n                }]\n              }\n            });\n          }\n        },\n        scrollToItem: (index, align) => {\n          if (typeof scrollToRef.current?.scrollToIndex === 'function') {\n            scrollToRef.current.scrollToIndex(index, {\n              align\n            });\n          } else {\n            dispatch({\n              type: 'TRIGGER_PROG_SCROLL',\n              payload: {\n                direction: 'vertical',\n                type: 'item',\n                args: [index, {\n                  align\n                }]\n              }\n            });\n          }\n        },\n        horizontalScrollTo: (offset, align) => {\n          if (typeof scrollToRef.current?.horizontalScrollToOffset === 'function') {\n            scrollToRef.current.horizontalScrollToOffset(offset, {\n              align\n            });\n          } else {\n            dispatch({\n              type: 'TRIGGER_PROG_SCROLL',\n              payload: {\n                direction: 'horizontal',\n                type: 'offset',\n                args: [offset, {\n                  align\n                }]\n              }\n            });\n          }\n        },\n        horizontalScrollToItem: (index, align) => {\n          if (typeof scrollToRef.current?.horizontalScrollToIndex === 'function') {\n            scrollToRef.current.horizontalScrollToIndex(index, {\n              align\n            });\n          } else {\n            dispatch({\n              type: 'TRIGGER_PROG_SCROLL',\n              payload: {\n                direction: 'horizontal',\n                type: 'item',\n                args: [index, {\n                  align\n                }]\n              }\n            });\n          }\n        }\n      });\n    }\n  }, []);\n  return [analyticalTableRef, scrollToRef];\n};"],"mappings":"AAAA,SAASA,SAAS,EAAEC,MAAM,QAAQ,OAAO;AACzC,OAAO,MAAMC,qBAAqB,GAAGA,CAACC,GAAG,EAAEC,QAAQ,KAAK;EACtD,IAAIC,kBAAkB,GAAGJ,MAAM,CAAC,IAAI,CAAC;EACrC,IAAIE,GAAG,EAAE;IACPE,kBAAkB,GAAGF,GAAG;EAC1B;EACA,MAAMG,WAAW,GAAGL,MAAM,CAAC,CAAC,CAAC,CAAC;EAC9BD,SAAS,CAAC,MAAM;IACd,IAAIK,kBAAkB,CAACE,OAAO,EAAE;MAC9BC,MAAM,CAACC,MAAM,CAACJ,kBAAkB,CAACE,OAAO,EAAE;QACxCG,QAAQ,EAAEA,CAACC,MAAM,EAAEC,KAAK,KAAK;UAC3B,IAAI,OAAON,WAAW,CAACC,OAAO,EAAEM,cAAc,KAAK,UAAU,EAAE;YAC7DP,WAAW,CAACC,OAAO,CAACM,cAAc,CAACF,MAAM,EAAE;cACzCC;YACF,CAAC,CAAC;UACJ,CAAC,MAAM;YACLR,QAAQ,CAAC;cACPU,IAAI,EAAE,qBAAqB;cAC3BC,OAAO,EAAE;gBACPC,SAAS,EAAE,UAAU;gBACrBF,IAAI,EAAE,QAAQ;gBACdG,IAAI,EAAE,CAACN,MAAM,EAAE;kBACbC;gBACF,CAAC;cACH;YACF,CAAC,CAAC;UACJ;QACF,CAAC;QACDM,YAAY,EAAEA,CAACC,KAAK,EAAEP,KAAK,KAAK;UAC9B,IAAI,OAAON,WAAW,CAACC,OAAO,EAAEa,aAAa,KAAK,UAAU,EAAE;YAC5Dd,WAAW,CAACC,OAAO,CAACa,aAAa,CAACD,KAAK,EAAE;cACvCP;YACF,CAAC,CAAC;UACJ,CAAC,MAAM;YACLR,QAAQ,CAAC;cACPU,IAAI,EAAE,qBAAqB;cAC3BC,OAAO,EAAE;gBACPC,SAAS,EAAE,UAAU;gBACrBF,IAAI,EAAE,MAAM;gBACZG,IAAI,EAAE,CAACE,KAAK,EAAE;kBACZP;gBACF,CAAC;cACH;YACF,CAAC,CAAC;UACJ;QACF,CAAC;QACDS,kBAAkB,EAAEA,CAACV,MAAM,EAAEC,KAAK,KAAK;UACrC,IAAI,OAAON,WAAW,CAACC,OAAO,EAAEe,wBAAwB,KAAK,UAAU,EAAE;YACvEhB,WAAW,CAACC,OAAO,CAACe,wBAAwB,CAACX,MAAM,EAAE;cACnDC;YACF,CAAC,CAAC;UACJ,CAAC,MAAM;YACLR,QAAQ,CAAC;cACPU,IAAI,EAAE,qBAAqB;cAC3BC,OAAO,EAAE;gBACPC,SAAS,EAAE,YAAY;gBACvBF,IAAI,EAAE,QAAQ;gBACdG,IAAI,EAAE,CAACN,MAAM,EAAE;kBACbC;gBACF,CAAC;cACH;YACF,CAAC,CAAC;UACJ;QACF,CAAC;QACDW,sBAAsB,EAAEA,CAACJ,KAAK,EAAEP,KAAK,KAAK;UACxC,IAAI,OAAON,WAAW,CAACC,OAAO,EAAEiB,uBAAuB,KAAK,UAAU,EAAE;YACtElB,WAAW,CAACC,OAAO,CAACiB,uBAAuB,CAACL,KAAK,EAAE;cACjDP;YACF,CAAC,CAAC;UACJ,CAAC,MAAM;YACLR,QAAQ,CAAC;cACPU,IAAI,EAAE,qBAAqB;cAC3BC,OAAO,EAAE;gBACPC,SAAS,EAAE,YAAY;gBACvBF,IAAI,EAAE,MAAM;gBACZG,IAAI,EAAE,CAACE,KAAK,EAAE;kBACZP;gBACF,CAAC;cACH;YACF,CAAC,CAAC;UACJ;QACF;MACF,CAAC,CAAC;IACJ;EACF,CAAC,EAAE,EAAE,CAAC;EACN,OAAO,CAACP,kBAAkB,EAAEC,WAAW,CAAC;AAC1C,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}