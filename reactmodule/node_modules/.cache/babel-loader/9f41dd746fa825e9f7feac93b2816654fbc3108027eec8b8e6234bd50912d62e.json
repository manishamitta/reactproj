{"ast":null,"code":"/**\n * Returns a timestamp with only the year, month and day (with zero hours, minutes and seconds) and without 000 for milliseconds\n * @param { number } millisecondsUTC\n * @returns { number }\n */\nconst getRoundedTimestamp = millisecondsUTC => {\n  if (!millisecondsUTC) {\n    // no need to replace with UI5Date, as we don't use any non-UTC functions\n    millisecondsUTC = new Date().getTime();\n  }\n  const rounded = millisecondsUTC - millisecondsUTC % (24 * 60 * 60 * 1000);\n  return rounded / 1000;\n};\nexport default getRoundedTimestamp;","map":{"version":3,"names":["getRoundedTimestamp","millisecondsUTC","Date","getTime","rounded"],"sources":["/home/user/projects/reactproj/node_modules/@ui5/webcomponents-localization/src/dates/getRoundedTimestamp.ts"],"sourcesContent":["/**\n * Returns a timestamp with only the year, month and day (with zero hours, minutes and seconds) and without 000 for milliseconds\n * @param { number } millisecondsUTC\n * @returns { number }\n */\nconst getRoundedTimestamp = (millisecondsUTC: number) => {\n\tif (!millisecondsUTC) {\n\t\t// no need to replace with UI5Date, as we don't use any non-UTC functions\n\t\tmillisecondsUTC = new Date().getTime();\n\t}\n\tconst rounded = millisecondsUTC - (millisecondsUTC % (24 * 60 * 60 * 1000));\n\treturn rounded / 1000;\n};\n\nexport default getRoundedTimestamp;\n"],"mappings":"AAAA;;;;;AAKA,MAAMA,mBAAmB,GAAIC,eAAuB,IAAI;EACvD,IAAI,CAACA,eAAe,EAAE;IACrB;IACAA,eAAe,GAAG,IAAIC,IAAI,EAAE,CAACC,OAAO,EAAE;;EAEvC,MAAMC,OAAO,GAAGH,eAAe,GAAIA,eAAe,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,IAAI,CAAE;EAC3E,OAAOG,OAAO,GAAG,IAAI;AACtB,CAAC;AAED,eAAeJ,mBAAmB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}