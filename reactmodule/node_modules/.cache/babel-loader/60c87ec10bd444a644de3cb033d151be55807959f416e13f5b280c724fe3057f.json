{"ast":null,"code":"var __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n    r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n    d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar CheckBox_1;\nimport { isDesktop } from \"@ui5/webcomponents-base/dist/Device.js\";\nimport UI5Element from \"@ui5/webcomponents-base/dist/UI5Element.js\";\nimport customElement from \"@ui5/webcomponents-base/dist/decorators/customElement.js\";\nimport property from \"@ui5/webcomponents-base/dist/decorators/property.js\";\nimport event from \"@ui5/webcomponents-base/dist/decorators/event.js\";\nimport litRender from \"@ui5/webcomponents-base/dist/renderer/LitRenderer.js\";\nimport { getI18nBundle } from \"@ui5/webcomponents-base/dist/i18nBundle.js\";\nimport ValueState from \"@ui5/webcomponents-base/dist/types/ValueState.js\";\nimport { getEffectiveAriaLabelText } from \"@ui5/webcomponents-base/dist/util/AriaLabelHelper.js\";\nimport { isSpace, isEnter } from \"@ui5/webcomponents-base/dist/Keys.js\";\nimport \"@ui5/webcomponents-icons/dist/accept.js\";\nimport \"@ui5/webcomponents-icons/dist/complete.js\";\nimport \"@ui5/webcomponents-icons/dist/border.js\";\nimport \"@ui5/webcomponents-icons/dist/tri-state.js\";\nimport Icon from \"./Icon.js\";\nimport Label from \"./Label.js\";\nimport { VALUE_STATE_ERROR, VALUE_STATE_WARNING, VALUE_STATE_SUCCESS, FORM_CHECKABLE_REQUIRED } from \"./generated/i18n/i18n-defaults.js\";\n// Styles\nimport checkboxCss from \"./generated/themes/CheckBox.css.js\";\n// Template\nimport CheckBoxTemplate from \"./generated/templates/CheckBoxTemplate.lit.js\";\nlet isGlobalHandlerAttached = false;\nlet activeCb;\n/**\n * @class\n *\n * ### Overview\n *\n * Allows the user to set a binary value, such as true/false or yes/no for an item.\n *\n * The `ui5-checkbox` component consists of a box and a label that describes its purpose.\n * If it's checked, an indicator is displayed inside the box.\n * To check/uncheck the `ui5-checkbox`, the user has to click or tap the square\n * box or its label.\n *\n * The `ui5-checkbox` component only has 2 states - checked and unchecked.\n * Clicking or tapping toggles the `ui5-checkbox` between checked and unchecked state.\n *\n * ### Usage\n *\n * You can define the checkbox text with via the `text` property. If the text exceeds the available width, it is truncated by default.\n * In case you prefer text to truncate, set the `wrappingType` property to \"None\".\n * The touchable area for toggling the `ui5-checkbox` ends where the text ends.\n *\n * You can disable the `ui5-checkbox` by setting the `disabled` property to\n * `true`,\n * or use the `ui5-checkbox` in read-only mode by setting the `readonly`\n * property to `true`.\n *\n * ### Keyboard Handling\n *\n * The user can use the following keyboard shortcuts to toggle the checked state of the `ui5-checkbox`.\n *\n * - [Space],[Enter] - Toggles between different states: checked, not checked.\n *\n * ### ES6 Module Import\n *\n * `import \"@ui5/webcomponents/dist/CheckBox.js\";`\n * @constructor\n * @extends UI5Element\n * @public\n * @csspart root - Used to style the outermost wrapper of the `ui5-checkbox`\n * @csspart label - Used to style the label of the `ui5-checkbox`\n * @csspart icon - Used to style the icon of the `ui5-checkbox`\n */\nlet CheckBox = CheckBox_1 = class CheckBox extends UI5Element {\n  get formValidityMessage() {\n    return CheckBox_1.i18nBundle.getText(FORM_CHECKABLE_REQUIRED);\n  }\n  get formValidity() {\n    return {\n      valueMissing: this.required && !this.checked\n    };\n  }\n  async formElementAnchor() {\n    return this.getFocusDomRefAsync();\n  }\n  get formFormattedValue() {\n    return this.checked ? \"on\" : null;\n  }\n  constructor() {\n    super();\n    /**\n     * Defines whether the component is disabled.\n     *\n     * **Note:** A disabled component is completely noninteractive.\n     * @default false\n     * @public\n     */\n    this.disabled = false;\n    /**\n     * Defines whether the component is read-only.\n     *\n     * **Note:** A read-only component is not editable,\n     * but still provides visual feedback upon user interaction.\n     * @default false\n     * @public\n     */\n    this.readonly = false;\n    /**\n     * Determines whether the `ui5-checkbox` is in display only state.\n     *\n     * When set to `true`, the `ui5-checkbox` is not interactive, not editable, not focusable\n     * and not in the tab chain. This setting is used for forms in review mode.\n     *\n     * **Note:** When the property `disabled` is set to `true` this property has no effect.\n     * @since 1.22.0\n     * @public\n     * @default false\n     */\n    this.displayOnly = false;\n    /**\n     * Defines whether the component is required.\n     * @default false\n     * @public\n     * @since 1.3.0\n     */\n    this.required = false;\n    /**\n    * Defines whether the component is displayed as partially checked.\n    *\n    * **Note:** The indeterminate state can be set only programmatically and canâ€™t be achieved by user\n    * interaction and the resulting visual state depends on the values of the `indeterminate`\n    * and `checked` properties:\n    *\n    * -  If the component is checked and indeterminate, it will be displayed as partially checked\n    * -  If the component is checked and it is not indeterminate, it will be displayed as checked\n    * -  If the component is not checked, it will be displayed as not checked regardless value of the indeterminate attribute\n    * @default false\n    * @public\n    * @since 1.0.0-rc.15\n    */\n    this.indeterminate = false;\n    /**\n     * Defines if the component is checked.\n     *\n     * **Note:** The property can be changed with user interaction,\n     * either by cliking/tapping on the component, or by\n     * pressing the Enter or Space key.\n     * @default false\n     * @formEvents change\n     * @formProperty\n     * @public\n     */\n    this.checked = false;\n    /**\n     * Defines the value state of the component.\n     * @default \"None\"\n     * @public\n     */\n    this.valueState = \"None\";\n    /**\n     * Defines whether the component text wraps when there is not enough space.\n     *\n     * **Note:** for option \"Normal\" the text will wrap and the words will not be broken based on hyphenation.\n     * **Note:** for option \"None\" the text will be truncated with an ellipsis.\n     * @default \"Normal\"\n     * @public\n     */\n    this.wrappingType = \"Normal\";\n    /**\n     * Defines the active state (pressed or not) of the component.\n     * @private\n     */\n    this.active = false;\n    this._deactivate = () => {\n      if (activeCb) {\n        activeCb.active = false;\n      }\n    };\n    if (!isGlobalHandlerAttached) {\n      document.addEventListener(\"mouseup\", this._deactivate);\n      isGlobalHandlerAttached = true;\n    }\n  }\n  onEnterDOM() {\n    if (isDesktop()) {\n      this.setAttribute(\"desktop\", \"\");\n    }\n  }\n  _onclick() {\n    this.toggle();\n  }\n  _onmousedown() {\n    if (this.readonly || this.disabled) {\n      return;\n    }\n    this.active = true;\n    activeCb = this; // eslint-disable-line\n  }\n  _onmouseup() {\n    this.active = false;\n  }\n  _onfocusout() {\n    this.active = false;\n  }\n  _onkeydown(e) {\n    if (isSpace(e)) {\n      e.preventDefault();\n    }\n    if (this.readonly || this.disabled) {\n      return;\n    }\n    if (isEnter(e)) {\n      this.toggle();\n    }\n    this.active = true;\n  }\n  _onkeyup(e) {\n    if (isSpace(e)) {\n      this.toggle();\n    }\n    this.active = false;\n  }\n  toggle() {\n    if (this.canToggle()) {\n      const lastState = {\n        checked: this.checked,\n        indeterminate: this.indeterminate\n      };\n      if (this.indeterminate) {\n        this.indeterminate = false;\n        this.checked = true;\n      } else {\n        this.checked = !this.checked;\n      }\n      const changePrevented = !this.fireEvent(\"change\", null, true);\n      // Angular two way data binding\n      const valueChagnePrevented = !this.fireEvent(\"value-changed\", null, true);\n      if (changePrevented || valueChagnePrevented) {\n        this.checked = lastState.checked;\n        this.indeterminate = lastState.indeterminate;\n      }\n    }\n    return this;\n  }\n  canToggle() {\n    return !(this.disabled || this.readonly || this.displayOnly);\n  }\n  valueStateTextMappings() {\n    return {\n      \"Negative\": CheckBox_1.i18nBundle.getText(VALUE_STATE_ERROR),\n      \"Critical\": CheckBox_1.i18nBundle.getText(VALUE_STATE_WARNING),\n      \"Positive\": CheckBox_1.i18nBundle.getText(VALUE_STATE_SUCCESS)\n    };\n  }\n  get ariaLabelText() {\n    return getEffectiveAriaLabelText(this);\n  }\n  get classes() {\n    return {\n      main: {\n        \"ui5-checkbox--hoverable\": !this.disabled && !this.readonly && isDesktop()\n      }\n    };\n  }\n  get ariaReadonly() {\n    return this.readonly || this.displayOnly ? \"true\" : undefined;\n  }\n  get effectiveAriaDisabled() {\n    return this.disabled ? \"true\" : undefined;\n  }\n  get effectiveAriaChecked() {\n    return this.indeterminate && this.checked ? \"mixed\" : this.checked;\n  }\n  get ariaLabelledBy() {\n    if (!this.ariaLabelText) {\n      return this.text ? `${this._id}-label` : undefined;\n    }\n    return undefined;\n  }\n  get ariaDescribedBy() {\n    return this.hasValueState ? `${this._id}-descr` : undefined;\n  }\n  get hasValueState() {\n    return this.valueState !== ValueState.None;\n  }\n  get valueStateText() {\n    if (this.valueState !== ValueState.None && this.valueState !== ValueState.Information) {\n      return this.valueStateTextMappings()[this.valueState];\n    }\n  }\n  get effectiveTabIndex() {\n    const tabindex = this.getAttribute(\"tabindex\");\n    return this.disabled || this.displayOnly ? undefined : tabindex || \"0\";\n  }\n  get isCompletelyChecked() {\n    return this.checked && !this.indeterminate;\n  }\n  get isDisplayOnly() {\n    return this.displayOnly && !this.disabled;\n  }\n  get displayOnlyIcon() {\n    if (this.isCompletelyChecked) {\n      return \"complete\";\n    }\n    if (this.checked && this.indeterminate) {\n      return \"tri-state\";\n    }\n    return \"border\";\n  }\n  static async onDefine() {\n    CheckBox_1.i18nBundle = await getI18nBundle(\"@ui5/webcomponents\");\n  }\n};\n__decorate([property()], CheckBox.prototype, \"accessibleNameRef\", void 0);\n__decorate([property()], CheckBox.prototype, \"accessibleName\", void 0);\n__decorate([property({\n  type: Boolean\n})], CheckBox.prototype, \"disabled\", void 0);\n__decorate([property({\n  type: Boolean\n})], CheckBox.prototype, \"readonly\", void 0);\n__decorate([property({\n  type: Boolean\n})], CheckBox.prototype, \"displayOnly\", void 0);\n__decorate([property({\n  type: Boolean\n})], CheckBox.prototype, \"required\", void 0);\n__decorate([property({\n  type: Boolean\n})], CheckBox.prototype, \"indeterminate\", void 0);\n__decorate([property({\n  type: Boolean\n})], CheckBox.prototype, \"checked\", void 0);\n__decorate([property()], CheckBox.prototype, \"text\", void 0);\n__decorate([property()], CheckBox.prototype, \"valueState\", void 0);\n__decorate([property()], CheckBox.prototype, \"wrappingType\", void 0);\n__decorate([property()], CheckBox.prototype, \"name\", void 0);\n__decorate([property({\n  type: Boolean\n})], CheckBox.prototype, \"active\", void 0);\nCheckBox = CheckBox_1 = __decorate([customElement({\n  tag: \"ui5-checkbox\",\n  languageAware: true,\n  formAssociated: true,\n  renderer: litRender,\n  template: CheckBoxTemplate,\n  styles: checkboxCss,\n  dependencies: [Label, Icon]\n})\n/**\n * Fired when the component checked state changes.\n * @public\n * @allowPreventDefault\n */, event(\"change\")], CheckBox);\nCheckBox.define();\nexport default CheckBox;","map":{"version":3,"names":["isDesktop","UI5Element","customElement","property","event","litRender","getI18nBundle","ValueState","getEffectiveAriaLabelText","isSpace","isEnter","Icon","Label","VALUE_STATE_ERROR","VALUE_STATE_WARNING","VALUE_STATE_SUCCESS","FORM_CHECKABLE_REQUIRED","checkboxCss","CheckBoxTemplate","isGlobalHandlerAttached","activeCb","CheckBox","CheckBox_1","formValidityMessage","i18nBundle","getText","formValidity","valueMissing","required","checked","formElementAnchor","getFocusDomRefAsync","formFormattedValue","constructor","disabled","readonly","displayOnly","indeterminate","valueState","wrappingType","active","_deactivate","document","addEventListener","onEnterDOM","setAttribute","_onclick","toggle","_onmousedown","_onmouseup","_onfocusout","_onkeydown","e","preventDefault","_onkeyup","canToggle","lastState","changePrevented","fireEvent","valueChagnePrevented","valueStateTextMappings","ariaLabelText","classes","main","ariaReadonly","undefined","effectiveAriaDisabled","effectiveAriaChecked","ariaLabelledBy","text","_id","ariaDescribedBy","hasValueState","None","valueStateText","Information","effectiveTabIndex","tabindex","getAttribute","isCompletelyChecked","isDisplayOnly","displayOnlyIcon","onDefine","__decorate","type","Boolean","tag","languageAware","formAssociated","renderer","template","styles","dependencies","define"],"sources":["/home/user/projects/reactproj/node_modules/@ui5/webcomponents/src/CheckBox.ts"],"sourcesContent":["import { isDesktop } from \"@ui5/webcomponents-base/dist/Device.js\";\nimport UI5Element from \"@ui5/webcomponents-base/dist/UI5Element.js\";\nimport customElement from \"@ui5/webcomponents-base/dist/decorators/customElement.js\";\nimport property from \"@ui5/webcomponents-base/dist/decorators/property.js\";\nimport event from \"@ui5/webcomponents-base/dist/decorators/event.js\";\nimport litRender from \"@ui5/webcomponents-base/dist/renderer/LitRenderer.js\";\nimport { getI18nBundle } from \"@ui5/webcomponents-base/dist/i18nBundle.js\";\nimport type I18nBundle from \"@ui5/webcomponents-base/dist/i18nBundle.js\";\nimport ValueState from \"@ui5/webcomponents-base/dist/types/ValueState.js\";\nimport { getEffectiveAriaLabelText } from \"@ui5/webcomponents-base/dist/util/AriaLabelHelper.js\";\nimport { isSpace, isEnter } from \"@ui5/webcomponents-base/dist/Keys.js\";\nimport \"@ui5/webcomponents-icons/dist/accept.js\";\nimport \"@ui5/webcomponents-icons/dist/complete.js\";\nimport \"@ui5/webcomponents-icons/dist/border.js\";\nimport \"@ui5/webcomponents-icons/dist/tri-state.js\";\nimport type { IFormInputElement } from \"@ui5/webcomponents-base/dist/features/InputElementsFormSupport.js\";\nimport Icon from \"./Icon.js\";\nimport Label from \"./Label.js\";\nimport type WrappingType from \"./types/WrappingType.js\";\nimport {\n\tVALUE_STATE_ERROR,\n\tVALUE_STATE_WARNING,\n\tVALUE_STATE_SUCCESS,\n\tFORM_CHECKABLE_REQUIRED,\n} from \"./generated/i18n/i18n-defaults.js\";\n\n// Styles\nimport checkboxCss from \"./generated/themes/CheckBox.css.js\";\n\n// Template\nimport CheckBoxTemplate from \"./generated/templates/CheckBoxTemplate.lit.js\";\n\nlet isGlobalHandlerAttached = false;\nlet activeCb: CheckBox;\n\n/**\n * @class\n *\n * ### Overview\n *\n * Allows the user to set a binary value, such as true/false or yes/no for an item.\n *\n * The `ui5-checkbox` component consists of a box and a label that describes its purpose.\n * If it's checked, an indicator is displayed inside the box.\n * To check/uncheck the `ui5-checkbox`, the user has to click or tap the square\n * box or its label.\n *\n * The `ui5-checkbox` component only has 2 states - checked and unchecked.\n * Clicking or tapping toggles the `ui5-checkbox` between checked and unchecked state.\n *\n * ### Usage\n *\n * You can define the checkbox text with via the `text` property. If the text exceeds the available width, it is truncated by default.\n * In case you prefer text to truncate, set the `wrappingType` property to \"None\".\n * The touchable area for toggling the `ui5-checkbox` ends where the text ends.\n *\n * You can disable the `ui5-checkbox` by setting the `disabled` property to\n * `true`,\n * or use the `ui5-checkbox` in read-only mode by setting the `readonly`\n * property to `true`.\n *\n * ### Keyboard Handling\n *\n * The user can use the following keyboard shortcuts to toggle the checked state of the `ui5-checkbox`.\n *\n * - [Space],[Enter] - Toggles between different states: checked, not checked.\n *\n * ### ES6 Module Import\n *\n * `import \"@ui5/webcomponents/dist/CheckBox.js\";`\n * @constructor\n * @extends UI5Element\n * @public\n * @csspart root - Used to style the outermost wrapper of the `ui5-checkbox`\n * @csspart label - Used to style the label of the `ui5-checkbox`\n * @csspart icon - Used to style the icon of the `ui5-checkbox`\n */\n@customElement({\n\ttag: \"ui5-checkbox\",\n\tlanguageAware: true,\n\tformAssociated: true,\n\trenderer: litRender,\n\ttemplate: CheckBoxTemplate,\n\tstyles: checkboxCss,\n\tdependencies: [\n\t\tLabel,\n\t\tIcon,\n\t],\n})\n/**\n * Fired when the component checked state changes.\n * @public\n * @allowPreventDefault\n */\n@event(\"change\")\n\nclass CheckBox extends UI5Element implements IFormInputElement {\n\t/**\n\t * Receives id(or many ids) of the elements that label the component\n\t * @default undefined\n\t * @public\n\t * @since 1.1.0\n\t */\n\t@property()\n\taccessibleNameRef?: string;\n\n\t/**\n\t * Defines the accessible ARIA name of the component.\n\t * @public\n\t * @default undefined\n\t * @since 1.1.0\n\t */\n\t@property()\n\taccessibleName?: string;\n\n\t/**\n\t * Defines whether the component is disabled.\n\t *\n\t * **Note:** A disabled component is completely noninteractive.\n\t * @default false\n\t * @public\n\t */\n\t@property({ type: Boolean })\n\tdisabled = false;\n\n\t/**\n\t * Defines whether the component is read-only.\n\t *\n\t * **Note:** A read-only component is not editable,\n\t * but still provides visual feedback upon user interaction.\n\t * @default false\n\t * @public\n\t */\n\t@property({ type: Boolean })\n\treadonly = false;\n\n\t/**\n\t * Determines whether the `ui5-checkbox` is in display only state.\n\t *\n\t * When set to `true`, the `ui5-checkbox` is not interactive, not editable, not focusable\n\t * and not in the tab chain. This setting is used for forms in review mode.\n\t *\n\t * **Note:** When the property `disabled` is set to `true` this property has no effect.\n\t * @since 1.22.0\n\t * @public\n\t * @default false\n\t */\n\t@property({ type: Boolean })\n\tdisplayOnly = false;\n\n\t/**\n\t * Defines whether the component is required.\n\t * @default false\n\t * @public\n\t * @since 1.3.0\n\t */\n\t@property({ type: Boolean })\n\trequired = false;\n\n\t/**\n\t* Defines whether the component is displayed as partially checked.\n\t*\n\t* **Note:** The indeterminate state can be set only programmatically and canâ€™t be achieved by user\n\t* interaction and the resulting visual state depends on the values of the `indeterminate`\n\t* and `checked` properties:\n\t*\n\t* -  If the component is checked and indeterminate, it will be displayed as partially checked\n\t* -  If the component is checked and it is not indeterminate, it will be displayed as checked\n\t* -  If the component is not checked, it will be displayed as not checked regardless value of the indeterminate attribute\n\t* @default false\n\t* @public\n\t* @since 1.0.0-rc.15\n\t*/\n\t@property({ type: Boolean })\n\tindeterminate = false;\n\n\t/**\n\t * Defines if the component is checked.\n\t *\n\t * **Note:** The property can be changed with user interaction,\n\t * either by cliking/tapping on the component, or by\n\t * pressing the Enter or Space key.\n\t * @default false\n\t * @formEvents change\n\t * @formProperty\n\t * @public\n\t */\n\t@property({ type: Boolean })\n\tchecked = false;\n\n\t/**\n\t * Defines the text of the component.\n\t * @default undefined\n\t * @public\n\t */\n\t@property()\n\ttext?: string;\n\n\t/**\n\t * Defines the value state of the component.\n\t * @default \"None\"\n\t * @public\n\t */\n\t@property()\n\tvalueState: `${ValueState}` = \"None\";\n\n\t/**\n\t * Defines whether the component text wraps when there is not enough space.\n\t *\n\t * **Note:** for option \"Normal\" the text will wrap and the words will not be broken based on hyphenation.\n\t * **Note:** for option \"None\" the text will be truncated with an ellipsis.\n\t * @default \"Normal\"\n\t * @public\n\t */\n\t@property()\n\twrappingType: `${WrappingType}` = \"Normal\";\n\n\t/**\n\t * Determines the name by which the component will be identified upon submission in an HTML form.\n\t *\n\t * **Note:** This property is only applicable within the context of an HTML Form element.\n\t * @default undefined\n\t * @public\n\t */\n\t@property()\n\tname?: string;\n\n\t/**\n\t * Defines the active state (pressed or not) of the component.\n\t * @private\n\t */\n\t@property({ type: Boolean })\n\tactive = false;\n\n\tstatic i18nBundle: I18nBundle;\n\t_deactivate: () => void;\n\n\tget formValidityMessage() {\n\t\treturn CheckBox.i18nBundle.getText(FORM_CHECKABLE_REQUIRED);\n\t}\n\n\tget formValidity(): ValidityStateFlags {\n\t\treturn { valueMissing: this.required && !this.checked };\n\t}\n\n\tasync formElementAnchor() {\n\t\treturn this.getFocusDomRefAsync();\n\t}\n\n\tget formFormattedValue() {\n\t\treturn this.checked ? \"on\" : null;\n\t}\n\n\tconstructor() {\n\t\tsuper();\n\n\t\tthis._deactivate = () => {\n\t\t\tif (activeCb) {\n\t\t\t\tactiveCb.active = false;\n\t\t\t}\n\t\t};\n\n\t\tif (!isGlobalHandlerAttached) {\n\t\t\tdocument.addEventListener(\"mouseup\", this._deactivate);\n\t\t\tisGlobalHandlerAttached = true;\n\t\t}\n\t}\n\n\tonEnterDOM() {\n\t\tif (isDesktop()) {\n\t\t\tthis.setAttribute(\"desktop\", \"\");\n\t\t}\n\t}\n\n\t_onclick() {\n\t\tthis.toggle();\n\t}\n\n\t_onmousedown() {\n\t\tif (this.readonly || this.disabled) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.active = true;\n\t\tactiveCb = this; // eslint-disable-line\n\t}\n\n\t_onmouseup() {\n\t\tthis.active = false;\n\t}\n\n\t_onfocusout() {\n\t\tthis.active = false;\n\t}\n\n\t_onkeydown(e: KeyboardEvent) {\n\t\tif (isSpace(e)) {\n\t\t\te.preventDefault();\n\t\t}\n\n\t\tif (this.readonly || this.disabled) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (isEnter(e)) {\n\t\t\tthis.toggle();\n\t\t}\n\n\t\tthis.active = true;\n\t}\n\n\t_onkeyup(e: KeyboardEvent) {\n\t\tif (isSpace(e)) {\n\t\t\tthis.toggle();\n\t\t}\n\n\t\tthis.active = false;\n\t}\n\n\ttoggle() {\n\t\tif (this.canToggle()) {\n\t\t\tconst lastState = {\n\t\t\t\tchecked: this.checked,\n\t\t\t\tindeterminate: this.indeterminate,\n\t\t\t};\n\t\t\tif (this.indeterminate) {\n\t\t\t\tthis.indeterminate = false;\n\t\t\t\tthis.checked = true;\n\t\t\t} else {\n\t\t\t\tthis.checked = !this.checked;\n\t\t\t}\n\n\t\t\tconst changePrevented = !this.fireEvent(\"change\", null, true);\n\t\t\t// Angular two way data binding\n\t\t\tconst valueChagnePrevented = !this.fireEvent(\"value-changed\", null, true);\n\n\t\t\tif (changePrevented || valueChagnePrevented) {\n\t\t\t\tthis.checked = lastState.checked;\n\t\t\t\tthis.indeterminate = lastState.indeterminate;\n\t\t\t}\n\t\t}\n\t\treturn this;\n\t}\n\n\tcanToggle() {\n\t\treturn !(this.disabled || this.readonly || this.displayOnly);\n\t}\n\n\tvalueStateTextMappings() {\n\t\treturn {\n\t\t\t\"Negative\": CheckBox.i18nBundle.getText(VALUE_STATE_ERROR),\n\t\t\t\"Critical\": CheckBox.i18nBundle.getText(VALUE_STATE_WARNING),\n\t\t\t\"Positive\": CheckBox.i18nBundle.getText(VALUE_STATE_SUCCESS),\n\t\t};\n\t}\n\n\tget ariaLabelText() {\n\t\treturn getEffectiveAriaLabelText(this);\n\t}\n\n\tget classes() {\n\t\treturn {\n\t\t\tmain: {\n\t\t\t\t\"ui5-checkbox--hoverable\": !this.disabled && !this.readonly && isDesktop(),\n\t\t\t},\n\t\t};\n\t}\n\n\tget ariaReadonly() {\n\t\treturn this.readonly || this.displayOnly ? \"true\" : undefined;\n\t}\n\n\tget effectiveAriaDisabled() {\n\t\treturn this.disabled ? \"true\" : undefined;\n\t}\n\n\tget effectiveAriaChecked() {\n\t\treturn this.indeterminate && this.checked ? \"mixed\" : this.checked;\n\t}\n\n\tget ariaLabelledBy() {\n\t\tif (!this.ariaLabelText) {\n\t\t\treturn this.text ? `${this._id}-label` : undefined;\n\t\t}\n\n\t\treturn undefined;\n\t}\n\n\tget ariaDescribedBy() {\n\t\treturn this.hasValueState ? `${this._id}-descr` : undefined;\n\t}\n\n\tget hasValueState() {\n\t\treturn this.valueState !== ValueState.None;\n\t}\n\n\tget valueStateText() {\n\t\tif (this.valueState !== ValueState.None && this.valueState !== ValueState.Information) {\n\t\t\treturn this.valueStateTextMappings()[this.valueState];\n\t\t}\n\t}\n\n\tget effectiveTabIndex() {\n\t\tconst tabindex = this.getAttribute(\"tabindex\");\n\t\treturn this.disabled || this.displayOnly ? undefined : tabindex || \"0\";\n\t}\n\n\tget isCompletelyChecked() {\n\t\treturn this.checked && !this.indeterminate;\n\t}\n\n\tget isDisplayOnly() {\n\t\treturn this.displayOnly && !this.disabled;\n\t}\n\n\tget displayOnlyIcon() {\n\t\tif (this.isCompletelyChecked) {\n\t\t\treturn \"complete\";\n\t\t}\n\t\tif (this.checked && this.indeterminate) {\n\t\t\treturn \"tri-state\";\n\t\t}\n\t\treturn \"border\";\n\t}\n\n\tstatic async onDefine() {\n\t\tCheckBox.i18nBundle = await getI18nBundle(\"@ui5/webcomponents\");\n\t}\n}\n\nCheckBox.define();\n\nexport default CheckBox;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}