{"ast":null,"code":"var __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n    r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n    d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar Popup_1;\nimport customElement from \"@ui5/webcomponents-base/dist/decorators/customElement.js\";\nimport { renderFinished } from \"@ui5/webcomponents-base/dist/Render.js\";\nimport event from \"@ui5/webcomponents-base/dist/decorators/event.js\";\nimport slot from \"@ui5/webcomponents-base/dist/decorators/slot.js\";\nimport property from \"@ui5/webcomponents-base/dist/decorators/property.js\";\nimport litRender from \"@ui5/webcomponents-base/dist/renderer/LitRenderer.js\";\nimport UI5Element from \"@ui5/webcomponents-base/dist/UI5Element.js\";\nimport { isChrome, isDesktop, isPhone } from \"@ui5/webcomponents-base/dist/Device.js\";\nimport { getFirstFocusableElement, getLastFocusableElement } from \"@ui5/webcomponents-base/dist/util/FocusableElements.js\";\nimport { getEffectiveAriaLabelText } from \"@ui5/webcomponents-base/dist/util/AriaLabelHelper.js\";\nimport { hasStyle, createStyle } from \"@ui5/webcomponents-base/dist/ManagedStyles.js\";\nimport { isEnter, isTabPrevious } from \"@ui5/webcomponents-base/dist/Keys.js\";\nimport { getFocusedElement, isFocusedElementWithinNode } from \"@ui5/webcomponents-base/dist/util/PopupUtils.js\";\nimport ResizeHandler from \"@ui5/webcomponents-base/dist/delegate/ResizeHandler.js\";\nimport MediaRange from \"@ui5/webcomponents-base/dist/MediaRange.js\";\nimport Title from \"./Title.js\";\nimport PopupTemplate from \"./generated/templates/PopupTemplate.lit.js\";\nimport PopupAccessibleRole from \"./types/PopupAccessibleRole.js\";\nimport { addOpenedPopup, removeOpenedPopup } from \"./popup-utils/OpenedPopupsRegistry.js\";\n// Styles\nimport popupStlyes from \"./generated/themes/Popup.css.js\";\nimport popupBlockLayerStyles from \"./generated/themes/PopupBlockLayer.css.js\";\nimport globalStyles from \"./generated/themes/PopupGlobal.css.js\";\nconst createBlockingStyle = () => {\n  if (!hasStyle(\"data-ui5-popup-scroll-blocker\")) {\n    createStyle(globalStyles, \"data-ui5-popup-scroll-blocker\");\n  }\n};\ncreateBlockingStyle();\nconst pageScrollingBlockers = new Set();\n/**\n * @class\n * ### Overview\n * Base class for all popup Web Components.\n *\n * If you need to create your own popup-like custom UI5 Web Components.\n *\n * 1. The Popup class handles modality:\n *  - The \"isModal\" getter can be overridden by derivatives to provide their own conditions when they are modal or not\n *  - Derivatives may call the \"blockPageScrolling\" and \"unblockPageScrolling\" static methods to temporarily remove scrollbars on the html element\n *  - Derivatives may call the \"openPopup\" and \"closePopup\" methods which handle focus, manage the popup registry and for modal popups, manage the blocking layer\n *\n *  2. Provides blocking layer (relevant for modal popups only):\n *   - Controlled by the \"open\" and \"close\" methods\n *\n * 3. The Popup class \"traps\" focus:\n *  - Derivatives may call the \"applyInitialFocus\" method (usually when opening, to transfer focus inside the popup)\n *\n * 4. The template of this component exposes two inline partials you can override in derivatives:\n *  - beforeContent (upper part of the box, useful for header/title/close button)\n *  - afterContent (lower part, useful for footer/action buttons)\n * @constructor\n * @extends UI5Element\n * @public\n */\nlet Popup = Popup_1 = class Popup extends UI5Element {\n  constructor() {\n    super();\n    /**\n     * Defines if the focus should be returned to the previously focused element,\n     * when the popup closes.\n     * @default false\n     * @public\n     * @since 1.0.0-rc.8\n    */\n    this.preventFocusRestore = false;\n    /**\n     * Allows setting a custom role.\n     * @default \"Dialog\"\n     * @public\n     * @since 1.10.0\n     */\n    this.accessibleRole = \"Dialog\";\n    /**\n     * Indicates whether initial focus should be prevented.\n     * @public\n     * @default false\n     * @since 2.0.0\n     */\n    this.preventInitialFocus = false;\n    /**\n     * Indicates if the element is the top modal popup\n     *\n     * This property is calculated automatically\n     * @private\n     * @default false\n     */\n    this.isTopModalPopup = false;\n    /**\n     * @private\n     */\n    this.onPhone = false;\n    /**\n     * @private\n     */\n    this.onDesktop = false;\n    this._opened = false;\n    this._open = false;\n    this._resizeHandler = this._resize.bind(this);\n    this._getRealDomRef = () => {\n      return this.shadowRoot.querySelector(\"[root-element]\");\n    };\n  }\n  onBeforeRendering() {\n    this.onPhone = isPhone();\n    this.onDesktop = isDesktop();\n  }\n  onAfterRendering() {\n    renderFinished().then(() => {\n      this._updateMediaRange();\n    });\n  }\n  onEnterDOM() {\n    this.setAttribute(\"popover\", \"manual\");\n    ResizeHandler.register(this, this._resizeHandler);\n    if (isDesktop()) {\n      this.setAttribute(\"desktop\", \"\");\n    }\n    this.tabIndex = -1;\n    if (this.open) {\n      this.showPopover();\n    }\n  }\n  onExitDOM() {\n    if (this._opened) {\n      Popup_1.unblockPageScrolling(this);\n      this._removeOpenedPopup();\n    }\n    ResizeHandler.deregister(this, this._resizeHandler);\n  }\n  /**\n   * Indicates if the element is open\n   * @public\n   * @default false\n   * @since 1.2.0\n   */\n  set open(value) {\n    if (this._open === value) {\n      return;\n    }\n    this._open = value;\n    if (value) {\n      this.openPopup();\n    } else {\n      this.closePopup();\n    }\n  }\n  get open() {\n    return this._open;\n  }\n  async openPopup() {\n    if (this._opened) {\n      return;\n    }\n    const prevented = !this.fireEvent(\"before-open\", {}, true, false);\n    if (prevented || this._opened) {\n      return;\n    }\n    this._opened = true;\n    if (this.isModal) {\n      Popup_1.blockPageScrolling(this);\n    }\n    this._focusedElementBeforeOpen = getFocusedElement();\n    this._show();\n    if (this.getDomRef()) {\n      this._updateMediaRange();\n    }\n    this._addOpenedPopup();\n    this.open = true;\n    // initial focus, if focused element is statically created\n    await this.applyInitialFocus();\n    await renderFinished();\n    // initial focus, if focused element is dynamically created\n    await this.applyInitialFocus();\n    if (this.isConnected) {\n      this.fireEvent(\"open\", {}, false, false);\n    }\n  }\n  _resize() {\n    this._updateMediaRange();\n  }\n  /**\n   * Prevents the user from interacting with the content under the block layer\n   */\n  _preventBlockLayerFocus(e) {\n    e.preventDefault();\n  }\n  /**\n   * Temporarily removes scrollbars from the html element\n   * @protected\n   */\n  static blockPageScrolling(popup) {\n    pageScrollingBlockers.add(popup);\n    if (pageScrollingBlockers.size !== 1) {\n      return;\n    }\n    document.documentElement.classList.add(\"ui5-popup-scroll-blocker\");\n  }\n  /**\n   * Restores scrollbars on the html element, if needed\n   * @protected\n   */\n  static unblockPageScrolling(popup) {\n    pageScrollingBlockers.delete(popup);\n    if (pageScrollingBlockers.size !== 0) {\n      return;\n    }\n    document.documentElement.classList.remove(\"ui5-popup-scroll-blocker\");\n  }\n  _scroll(e) {\n    this.fireEvent(\"scroll\", {\n      scrollTop: e.target.scrollTop,\n      targetRef: e.target\n    });\n  }\n  _onkeydown(e) {\n    const isTabOutAttempt = e.target === this._root && isTabPrevious(e);\n    // if the popup is closed, focus is already moved, so Enter keydown may result in click on the newly focused element\n    const isEnterOnClosedPopupChild = isEnter(e) && !this.open;\n    if (isTabOutAttempt || isEnterOnClosedPopupChild) {\n      e.preventDefault();\n    }\n  }\n  _onfocusout(e) {\n    // relatedTarget is the element, which will get focus. If no such element exists, focus the root.\n    // This happens after the mouse is released in order to not interrupt text selection.\n    if (!e.relatedTarget) {\n      this._shouldFocusRoot = true;\n    }\n  }\n  _onmousedown(e) {\n    if (this.shadowRoot.contains(e.target)) {\n      this._shouldFocusRoot = true;\n    } else {\n      this._shouldFocusRoot = false;\n    }\n  }\n  _onmouseup() {\n    if (this._shouldFocusRoot) {\n      if (isChrome()) {\n        this._root.focus();\n      }\n      this._shouldFocusRoot = false;\n    }\n  }\n  /**\n   * Focus trapping\n   * @private\n   */\n  async forwardToFirst() {\n    const firstFocusable = await getFirstFocusableElement(this);\n    if (firstFocusable) {\n      firstFocusable.focus();\n    } else {\n      this._root.focus();\n    }\n  }\n  /**\n   * Focus trapping\n   * @private\n   */\n  async forwardToLast() {\n    const lastFocusable = await getLastFocusableElement(this);\n    if (lastFocusable) {\n      lastFocusable.focus();\n    } else {\n      this._root.focus();\n    }\n  }\n  /**\n   * Use this method to focus the element denoted by \"initialFocus\", if provided,\n   * or the first focusable element otherwise.\n   * @protected\n   */\n  async applyInitialFocus() {\n    if (!this.preventInitialFocus) {\n      await this.applyFocus();\n    }\n  }\n  /**\n   * Focuses the element denoted by `initialFocus`, if provided,\n   * or the first focusable element otherwise.\n   * @public\n   * @returns Promise that resolves when the focus is applied\n   */\n  async applyFocus() {\n    // do nothing if the standard HTML autofocus is used\n    if (this.querySelector(\"[autofocus]\")) {\n      return;\n    }\n    await this._waitForDomRef();\n    if (this.getRootNode() === this) {\n      return;\n    }\n    let element;\n    if (this.initialFocus) {\n      element = this.getRootNode().getElementById(this.initialFocus) || document.getElementById(this.initialFocus);\n    }\n    element = element || (await getFirstFocusableElement(this)) || this._root; // in case of no focusable content focus the root\n    if (element) {\n      if (element === this._root) {\n        element.tabIndex = -1;\n      }\n      element.focus();\n    }\n  }\n  isFocusWithin() {\n    return isFocusedElementWithinNode(this._root);\n  }\n  _updateMediaRange() {\n    this.mediaRange = MediaRange.getCurrentRange(MediaRange.RANGESETS.RANGE_4STEPS, this.getDomRef().offsetWidth);\n  }\n  /**\n   * Adds the popup to the \"opened popups registry\"\n   * @protected\n   */\n  _addOpenedPopup() {\n    addOpenedPopup(this);\n  }\n  /**\n   * Closes the popup.\n   */\n  closePopup() {\n    let escPressed = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n    let preventRegistryUpdate = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n    let preventFocusRestore = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n    if (!this._opened) {\n      return;\n    }\n    const prevented = !this.fireEvent(\"before-close\", {\n      escPressed\n    }, true, false);\n    if (prevented) {\n      return;\n    }\n    this._opened = false;\n    if (this.isModal) {\n      Popup_1.unblockPageScrolling(this);\n    }\n    this.hide();\n    this.open = false;\n    if (!preventRegistryUpdate) {\n      this._removeOpenedPopup();\n    }\n    if (!this.preventFocusRestore && !preventFocusRestore) {\n      this.resetFocus();\n    }\n    this.fireEvent(\"close\", {}, false, false);\n  }\n  /**\n   * Removes the popup from the \"opened popups registry\"\n   * @protected\n   */\n  _removeOpenedPopup() {\n    removeOpenedPopup(this);\n  }\n  /**\n   * Returns the focus to the previously focused element\n   * @protected\n   */\n  resetFocus() {\n    if (!this._focusedElementBeforeOpen) {\n      return;\n    }\n    this._focusedElementBeforeOpen.focus();\n    this._focusedElementBeforeOpen = null;\n  }\n  /**\n   * Sets \"block\" display to the popup. The property can be overriden by derivatives of Popup.\n   * @protected\n   */\n  _show() {\n    if (this.isConnected) {\n      this.setAttribute(\"popover\", \"manual\");\n      this.showPopover();\n    }\n  }\n  /**\n   * Sets \"none\" display to the popup\n   * @protected\n   */\n  hide() {\n    this.isConnected && this.hidePopover();\n  }\n  /**\n   * Ensures ariaLabel is never null or empty string\n   * @protected\n   */\n  get _ariaLabel() {\n    return getEffectiveAriaLabelText(this);\n  }\n  get _root() {\n    return this.shadowRoot.querySelector(\".ui5-popup-root\");\n  }\n  get _role() {\n    return this.accessibleRole === PopupAccessibleRole.None ? undefined : this.accessibleRole.toLowerCase();\n  }\n  get _ariaModal() {\n    return this.accessibleRole === PopupAccessibleRole.None ? undefined : \"true\";\n  }\n  get contentDOM() {\n    return this.shadowRoot.querySelector(\".ui5-popup-content\");\n  }\n  get styles() {\n    return {\n      root: {},\n      content: {}\n    };\n  }\n  get classes() {\n    return {\n      root: {\n        \"ui5-popup-root\": true\n      },\n      content: {\n        \"ui5-popup-content\": true\n      }\n    };\n  }\n};\n__decorate([property()], Popup.prototype, \"initialFocus\", void 0);\n__decorate([property({\n  type: Boolean\n})], Popup.prototype, \"preventFocusRestore\", void 0);\n__decorate([property()], Popup.prototype, \"accessibleName\", void 0);\n__decorate([property()], Popup.prototype, \"accessibleNameRef\", void 0);\n__decorate([property()], Popup.prototype, \"accessibleRole\", void 0);\n__decorate([property()], Popup.prototype, \"mediaRange\", void 0);\n__decorate([property({\n  type: Boolean\n})], Popup.prototype, \"preventInitialFocus\", void 0);\n__decorate([property({\n  type: Boolean,\n  noAttribute: true\n})], Popup.prototype, \"isTopModalPopup\", void 0);\n__decorate([slot({\n  type: HTMLElement,\n  \"default\": true\n})], Popup.prototype, \"content\", void 0);\n__decorate([property({\n  type: Boolean\n})], Popup.prototype, \"onPhone\", void 0);\n__decorate([property({\n  type: Boolean\n})], Popup.prototype, \"onDesktop\", void 0);\n__decorate([property({\n  type: Boolean\n})], Popup.prototype, \"open\", null);\nPopup = Popup_1 = __decorate([customElement({\n  renderer: litRender,\n  styles: [popupStlyes, popupBlockLayerStyles],\n  template: PopupTemplate,\n  dependencies: [Title]\n})\n/**\n * Fired before the component is opened. This event can be cancelled, which will prevent the popup from opening. **This event does not bubble.**\n * @public\n * @allowPreventDefault\n */, event(\"before-open\")\n/**\n * Fired after the component is opened. **This event does not bubble.**\n * @public\n */, event(\"open\")\n/**\n * Fired before the component is closed. This event can be cancelled, which will prevent the popup from closing. **This event does not bubble.**\n * @public\n * @allowPreventDefault\n * @param {boolean} escPressed Indicates that `ESC` key has triggered the event.\n */, event(\"before-close\", {\n  detail: {\n    /**\n     * @public\n     */\n    escPressed: {\n      type: Boolean\n    }\n  }\n})\n/**\n * Fired after the component is closed. **This event does not bubble.**\n * @public\n */, event(\"close\")\n/**\n * Fired whenever the popup content area is scrolled\n * @private\n */, event(\"scroll\")], Popup);\nexport default Popup;","map":{"version":3,"names":["customElement","renderFinished","event","slot","property","litRender","UI5Element","isChrome","isDesktop","isPhone","getFirstFocusableElement","getLastFocusableElement","getEffectiveAriaLabelText","hasStyle","createStyle","isEnter","isTabPrevious","getFocusedElement","isFocusedElementWithinNode","ResizeHandler","MediaRange","Title","PopupTemplate","PopupAccessibleRole","addOpenedPopup","removeOpenedPopup","popupStlyes","popupBlockLayerStyles","globalStyles","createBlockingStyle","pageScrollingBlockers","Set","Popup","Popup_1","constructor","preventFocusRestore","accessibleRole","preventInitialFocus","isTopModalPopup","onPhone","onDesktop","_opened","_open","_resizeHandler","_resize","bind","_getRealDomRef","shadowRoot","querySelector","onBeforeRendering","onAfterRendering","then","_updateMediaRange","onEnterDOM","setAttribute","register","tabIndex","open","showPopover","onExitDOM","unblockPageScrolling","_removeOpenedPopup","deregister","value","openPopup","closePopup","prevented","fireEvent","isModal","blockPageScrolling","_focusedElementBeforeOpen","_show","getDomRef","_addOpenedPopup","applyInitialFocus","isConnected","_preventBlockLayerFocus","e","preventDefault","popup","add","size","document","documentElement","classList","delete","remove","_scroll","scrollTop","target","targetRef","_onkeydown","isTabOutAttempt","_root","isEnterOnClosedPopupChild","_onfocusout","relatedTarget","_shouldFocusRoot","_onmousedown","contains","_onmouseup","focus","forwardToFirst","firstFocusable","forwardToLast","lastFocusable","applyFocus","_waitForDomRef","getRootNode","element","initialFocus","getElementById","isFocusWithin","mediaRange","getCurrentRange","RANGESETS","RANGE_4STEPS","offsetWidth","escPressed","arguments","length","undefined","preventRegistryUpdate","hide","resetFocus","hidePopover","_ariaLabel","_role","None","toLowerCase","_ariaModal","contentDOM","styles","root","content","classes","__decorate","type","Boolean","noAttribute","HTMLElement","renderer","template","dependencies","detail"],"sources":["/home/user/projects/reactproj/node_modules/@ui5/webcomponents/src/Popup.ts"],"sourcesContent":["import customElement from \"@ui5/webcomponents-base/dist/decorators/customElement.js\";\nimport { renderFinished } from \"@ui5/webcomponents-base/dist/Render.js\";\nimport event from \"@ui5/webcomponents-base/dist/decorators/event.js\";\nimport slot from \"@ui5/webcomponents-base/dist/decorators/slot.js\";\nimport property from \"@ui5/webcomponents-base/dist/decorators/property.js\";\nimport type { ClassMap } from \"@ui5/webcomponents-base/dist/types.js\";\nimport litRender from \"@ui5/webcomponents-base/dist/renderer/LitRenderer.js\";\nimport UI5Element from \"@ui5/webcomponents-base/dist/UI5Element.js\";\nimport {\n\tisChrome,\n\tisDesktop,\n\tisPhone,\n} from \"@ui5/webcomponents-base/dist/Device.js\";\nimport { getFirstFocusableElement, getLastFocusableElement } from \"@ui5/webcomponents-base/dist/util/FocusableElements.js\";\nimport { getEffectiveAriaLabelText } from \"@ui5/webcomponents-base/dist/util/AriaLabelHelper.js\";\nimport { hasStyle, createStyle } from \"@ui5/webcomponents-base/dist/ManagedStyles.js\";\nimport { isEnter, isTabPrevious } from \"@ui5/webcomponents-base/dist/Keys.js\";\nimport { getFocusedElement, isFocusedElementWithinNode } from \"@ui5/webcomponents-base/dist/util/PopupUtils.js\";\nimport ResizeHandler from \"@ui5/webcomponents-base/dist/delegate/ResizeHandler.js\";\nimport type { ResizeObserverCallback } from \"@ui5/webcomponents-base/dist/delegate/ResizeHandler.js\";\nimport MediaRange from \"@ui5/webcomponents-base/dist/MediaRange.js\";\nimport Title from \"./Title.js\";\nimport PopupTemplate from \"./generated/templates/PopupTemplate.lit.js\";\nimport PopupAccessibleRole from \"./types/PopupAccessibleRole.js\";\nimport { addOpenedPopup, removeOpenedPopup } from \"./popup-utils/OpenedPopupsRegistry.js\";\n\n// Styles\nimport popupStlyes from \"./generated/themes/Popup.css.js\";\nimport popupBlockLayerStyles from \"./generated/themes/PopupBlockLayer.css.js\";\nimport globalStyles from \"./generated/themes/PopupGlobal.css.js\";\n\nconst createBlockingStyle = (): void => {\n\tif (!hasStyle(\"data-ui5-popup-scroll-blocker\")) {\n\t\tcreateStyle(globalStyles, \"data-ui5-popup-scroll-blocker\");\n\t}\n};\n\ncreateBlockingStyle();\n\nconst pageScrollingBlockers = new Set<Popup>();\n\ntype PopupScrollEventDetail = {\n\tscrollTop: number;\n\ttargetRef: HTMLElement;\n}\n\ntype PopupBeforeCloseEventDetail = {\n\tescPressed: boolean;\n}\n\n/**\n * @class\n * ### Overview\n * Base class for all popup Web Components.\n *\n * If you need to create your own popup-like custom UI5 Web Components.\n *\n * 1. The Popup class handles modality:\n *  - The \"isModal\" getter can be overridden by derivatives to provide their own conditions when they are modal or not\n *  - Derivatives may call the \"blockPageScrolling\" and \"unblockPageScrolling\" static methods to temporarily remove scrollbars on the html element\n *  - Derivatives may call the \"openPopup\" and \"closePopup\" methods which handle focus, manage the popup registry and for modal popups, manage the blocking layer\n *\n *  2. Provides blocking layer (relevant for modal popups only):\n *   - Controlled by the \"open\" and \"close\" methods\n *\n * 3. The Popup class \"traps\" focus:\n *  - Derivatives may call the \"applyInitialFocus\" method (usually when opening, to transfer focus inside the popup)\n *\n * 4. The template of this component exposes two inline partials you can override in derivatives:\n *  - beforeContent (upper part of the box, useful for header/title/close button)\n *  - afterContent (lower part, useful for footer/action buttons)\n * @constructor\n * @extends UI5Element\n * @public\n */\n@customElement({\n\trenderer: litRender,\n\tstyles: [popupStlyes, popupBlockLayerStyles],\n\ttemplate: PopupTemplate,\n\tdependencies: [\n\t\tTitle,\n\t],\n})\n/**\n * Fired before the component is opened. This event can be cancelled, which will prevent the popup from opening. **This event does not bubble.**\n * @public\n * @allowPreventDefault\n */\n@event(\"before-open\")\n\n/**\n * Fired after the component is opened. **This event does not bubble.**\n * @public\n */\n@event(\"open\")\n\n/**\n * Fired before the component is closed. This event can be cancelled, which will prevent the popup from closing. **This event does not bubble.**\n * @public\n * @allowPreventDefault\n * @param {boolean} escPressed Indicates that `ESC` key has triggered the event.\n */\n@event<PopupBeforeCloseEventDetail>(\"before-close\", {\n\tdetail: {\n\t\t/**\n\t\t * @public\n\t\t */\n\t\tescPressed: {\n\t\t\ttype: Boolean,\n\t\t},\n\t},\n})\n\n/**\n * Fired after the component is closed. **This event does not bubble.**\n * @public\n */\n@event(\"close\")\n\n/**\n * Fired whenever the popup content area is scrolled\n * @private\n */\n@event(\"scroll\")\nabstract class Popup extends UI5Element {\n\t/**\n\t * Defines the ID of the HTML Element, which will get the initial focus.\n\t *\n\t * **Note:** If an element with `autofocus` attribute is added inside the component,\n\t * `initialFocus` won't take effect.\n\t * @default undefined\n\t * @public\n\t */\n\t@property()\n\tinitialFocus?: string;\n\n\t/**\n\t * Defines if the focus should be returned to the previously focused element,\n\t * when the popup closes.\n\t * @default false\n\t * @public\n\t * @since 1.0.0-rc.8\n\t*/\n\t@property({ type: Boolean })\n\tpreventFocusRestore = false;\n\n\t/**\n\t * Defines the accessible name of the component.\n\t * @default undefined\n\t * @public\n\t * @since 1.0.0-rc.15\n\t */\n\t@property()\n\taccessibleName?: string;\n\n\t/**\n\t * Defines the IDs of the elements that label the component.\n\t * @default undefined\n\t * @public\n\t * @since 1.1.0\n\t */\n\t@property()\n\taccessibleNameRef?: string;\n\n\t/**\n\t * Allows setting a custom role.\n\t * @default \"Dialog\"\n\t * @public\n\t * @since 1.10.0\n\t */\n\t@property()\n\taccessibleRole: `${PopupAccessibleRole}` = \"Dialog\";\n\n\t/**\n\t * Defines the current media query size.\n\t * @private\n\t */\n\t@property()\n\tmediaRange?: string;\n\n\t/**\n\t * Indicates whether initial focus should be prevented.\n\t * @public\n\t * @default false\n\t * @since 2.0.0\n\t */\n\t@property({ type: Boolean })\n\tpreventInitialFocus = false;\n\n\t/**\n\t * Indicates if the element is the top modal popup\n\t *\n\t * This property is calculated automatically\n\t * @private\n\t * @default false\n\t */\n\t@property({ type: Boolean, noAttribute: true })\n\tisTopModalPopup = false;\n\n\t/**\n\t * Defines the content of the Popup.\n\t * @public\n\t */\n\t@slot({ type: HTMLElement, \"default\": true })\n\tcontent!: Array<HTMLElement>;\n\n\t/**\n\t * @private\n\t */\n\t@property({ type: Boolean })\n\tonPhone = false;\n\n\t/**\n\t * @private\n\t */\n\t@property({ type: Boolean })\n\tonDesktop = false;\n\n\t_resizeHandler: ResizeObserverCallback;\n\t_shouldFocusRoot?: boolean;\n\t_focusedElementBeforeOpen?: HTMLElement | null;\n\t_opened = false;\n\t_open = false;\n\n\tconstructor() {\n\t\tsuper();\n\n\t\tthis._resizeHandler = this._resize.bind(this);\n\n\t\tthis._getRealDomRef = () => {\n\t\t\treturn this.shadowRoot!.querySelector<HTMLElement>(\"[root-element]\")!;\n\t\t};\n\t}\n\n\tonBeforeRendering() {\n\t\tthis.onPhone = isPhone();\n\t\tthis.onDesktop = isDesktop();\n\t}\n\n\tonAfterRendering() {\n\t\trenderFinished().then(() => {\n\t\t\tthis._updateMediaRange();\n\t\t});\n\t}\n\n\tonEnterDOM() {\n\t\tthis.setAttribute(\"popover\", \"manual\");\n\t\tResizeHandler.register(this, this._resizeHandler);\n\t\tif (isDesktop()) {\n\t\t\tthis.setAttribute(\"desktop\", \"\");\n\t\t}\n\n\t\tthis.tabIndex = -1;\n\n\t\tif (this.open) {\n\t\t\tthis.showPopover();\n\t\t}\n\t}\n\n\tonExitDOM() {\n\t\tif (this._opened) {\n\t\t\tPopup.unblockPageScrolling(this);\n\t\t\tthis._removeOpenedPopup();\n\t\t}\n\n\t\tResizeHandler.deregister(this, this._resizeHandler);\n\t}\n\n\t/**\n\t * Indicates if the element is open\n\t * @public\n\t * @default false\n\t * @since 1.2.0\n\t */\n\t@property({ type: Boolean })\n\tset open(value: boolean) {\n\t\tif (this._open === value) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._open = value;\n\n\t\tif (value) {\n\t\t\tthis.openPopup();\n\t\t} else {\n\t\t\tthis.closePopup();\n\t\t}\n\t}\n\n\tget open() : boolean {\n\t\treturn this._open;\n\t}\n\n\tasync openPopup() {\n\t\tif (this._opened) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst prevented = !this.fireEvent(\"before-open\", {}, true, false);\n\n\t\tif (prevented || this._opened) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._opened = true;\n\n\t\tif (this.isModal) {\n\t\t\tPopup.blockPageScrolling(this);\n\t\t}\n\n\t\tthis._focusedElementBeforeOpen = getFocusedElement();\n\n\t\tthis._show();\n\n\t\tif (this.getDomRef()) {\n\t\t\tthis._updateMediaRange();\n\t\t}\n\n\t\tthis._addOpenedPopup();\n\n\t\tthis.open = true;\n\n\t\t// initial focus, if focused element is statically created\n\t\tawait this.applyInitialFocus();\n\n\t\tawait renderFinished();\n\n\t\t// initial focus, if focused element is dynamically created\n\t\tawait this.applyInitialFocus();\n\n\t\tif (this.isConnected) {\n\t\t\tthis.fireEvent(\"open\", {}, false, false);\n\t\t}\n\t}\n\n\t_resize() {\n\t\tthis._updateMediaRange();\n\t}\n\n\t/**\n\t * Prevents the user from interacting with the content under the block layer\n\t */\n\t_preventBlockLayerFocus(e: KeyboardEvent | MouseEvent) {\n\t\te.preventDefault();\n\t}\n\n\t/**\n\t * Temporarily removes scrollbars from the html element\n\t * @protected\n\t */\n\tstatic blockPageScrolling(popup: Popup) {\n\t\tpageScrollingBlockers.add(popup);\n\n\t\tif (pageScrollingBlockers.size !== 1) {\n\t\t\treturn;\n\t\t}\n\n\t\tdocument.documentElement.classList.add(\"ui5-popup-scroll-blocker\");\n\t}\n\n\t/**\n\t * Restores scrollbars on the html element, if needed\n\t * @protected\n\t */\n\tstatic unblockPageScrolling(popup: Popup) {\n\t\tpageScrollingBlockers.delete(popup);\n\n\t\tif (pageScrollingBlockers.size !== 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tdocument.documentElement.classList.remove(\"ui5-popup-scroll-blocker\");\n\t}\n\n\t_scroll(e: Event) {\n\t\tthis.fireEvent<PopupScrollEventDetail>(\"scroll\", {\n\t\t\tscrollTop: (e.target as HTMLElement).scrollTop,\n\t\t\ttargetRef: e.target as HTMLElement,\n\t\t});\n\t}\n\n\t_onkeydown(e: KeyboardEvent) {\n\t\tconst isTabOutAttempt = e.target === this._root && isTabPrevious(e);\n\t\t// if the popup is closed, focus is already moved, so Enter keydown may result in click on the newly focused element\n\t\tconst isEnterOnClosedPopupChild = isEnter(e) && !this.open;\n\n\t\tif (isTabOutAttempt || isEnterOnClosedPopupChild) {\n\t\t\te.preventDefault();\n\t\t}\n\t}\n\n\t_onfocusout(e: FocusEvent) {\n\t\t// relatedTarget is the element, which will get focus. If no such element exists, focus the root.\n\t\t// This happens after the mouse is released in order to not interrupt text selection.\n\t\tif (!e.relatedTarget) {\n\t\t\tthis._shouldFocusRoot = true;\n\t\t}\n\t}\n\n\t_onmousedown(e: MouseEvent) {\n\t\tif (this.shadowRoot!.contains(e.target as HTMLElement)) {\n\t\t\tthis._shouldFocusRoot = true;\n\t\t} else {\n\t\t\tthis._shouldFocusRoot = false;\n\t\t}\n\t}\n\n\t_onmouseup() {\n\t\tif (this._shouldFocusRoot) {\n\t\t\tif (isChrome()) {\n\t\t\t\tthis._root.focus();\n\t\t\t}\n\t\t\tthis._shouldFocusRoot = false;\n\t\t}\n\t}\n\n\t/**\n\t * Focus trapping\n\t * @private\n\t */\n\tasync forwardToFirst() {\n\t\tconst firstFocusable = await getFirstFocusableElement(this);\n\n\t\tif (firstFocusable) {\n\t\t\tfirstFocusable.focus();\n\t\t} else {\n\t\t\tthis._root.focus();\n\t\t}\n\t}\n\n\t/**\n\t * Focus trapping\n\t * @private\n\t */\n\tasync forwardToLast() {\n\t\tconst lastFocusable = await getLastFocusableElement(this);\n\n\t\tif (lastFocusable) {\n\t\t\tlastFocusable.focus();\n\t\t} else {\n\t\t\tthis._root.focus();\n\t\t}\n\t}\n\n\t/**\n\t * Use this method to focus the element denoted by \"initialFocus\", if provided,\n\t * or the first focusable element otherwise.\n\t * @protected\n\t */\n\tasync applyInitialFocus() {\n\t\tif (!this.preventInitialFocus) {\n\t\t\tawait this.applyFocus();\n\t\t}\n\t}\n\n\t/**\n\t * Focuses the element denoted by `initialFocus`, if provided,\n\t * or the first focusable element otherwise.\n\t * @public\n\t * @returns Promise that resolves when the focus is applied\n\t */\n\tasync applyFocus(): Promise<void> {\n\t\t// do nothing if the standard HTML autofocus is used\n\t\tif (this.querySelector(\"[autofocus]\")) {\n\t\t\treturn;\n\t\t}\n\n\t\tawait this._waitForDomRef();\n\n\t\tif (this.getRootNode() === this) {\n\t\t\treturn;\n\t\t}\n\n\t\tlet element;\n\n\t\tif (this.initialFocus) {\n\t\t\telement = (this.getRootNode() as Document).getElementById(this.initialFocus)\n\t\t\t|| document.getElementById(this.initialFocus);\n\t\t}\n\n\t\telement = element || await getFirstFocusableElement(this) || this._root; // in case of no focusable content focus the root\n\n\t\tif (element) {\n\t\t\tif (element === this._root) {\n\t\t\t\telement.tabIndex = -1;\n\t\t\t}\n\t\t\telement.focus();\n\t\t}\n\t}\n\n\tisFocusWithin() {\n\t\treturn isFocusedElementWithinNode(this._root);\n\t}\n\n\t_updateMediaRange() {\n\t\tthis.mediaRange = MediaRange.getCurrentRange(MediaRange.RANGESETS.RANGE_4STEPS, this.getDomRef()!.offsetWidth);\n\t}\n\n\t/**\n\t * Adds the popup to the \"opened popups registry\"\n\t * @protected\n\t */\n\t_addOpenedPopup() {\n\t\taddOpenedPopup(this);\n\t}\n\n\t/**\n\t * Closes the popup.\n\t */\n\tclosePopup(escPressed = false, preventRegistryUpdate = false, preventFocusRestore = false): void {\n\t\tif (!this._opened) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst prevented = !this.fireEvent<PopupBeforeCloseEventDetail>(\"before-close\", { escPressed }, true, false);\n\t\tif (prevented) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._opened = false;\n\n\t\tif (this.isModal) {\n\t\t\tPopup.unblockPageScrolling(this);\n\t\t}\n\n\t\tthis.hide();\n\t\tthis.open = false;\n\n\t\tif (!preventRegistryUpdate) {\n\t\t\tthis._removeOpenedPopup();\n\t\t}\n\n\t\tif (!this.preventFocusRestore && !preventFocusRestore) {\n\t\t\tthis.resetFocus();\n\t\t}\n\n\t\tthis.fireEvent(\"close\", {}, false, false);\n\t}\n\n\t/**\n\t * Removes the popup from the \"opened popups registry\"\n\t * @protected\n\t */\n\t_removeOpenedPopup() {\n\t\tremoveOpenedPopup(this);\n\t}\n\n\t/**\n\t * Returns the focus to the previously focused element\n\t * @protected\n\t */\n\tresetFocus() {\n\t\tif (!this._focusedElementBeforeOpen) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._focusedElementBeforeOpen.focus();\n\t\tthis._focusedElementBeforeOpen = null;\n\t}\n\n\t/**\n\t * Sets \"block\" display to the popup. The property can be overriden by derivatives of Popup.\n\t * @protected\n\t */\n\t_show() {\n\t\tif (this.isConnected) {\n\t\t\tthis.setAttribute(\"popover\", \"manual\");\n\t\t\tthis.showPopover();\n\t\t}\n\t}\n\n\t/**\n\t * Sets \"none\" display to the popup\n\t * @protected\n\t */\n\thide() {\n\t\tthis.isConnected && this.hidePopover();\n\t}\n\n\t/**\n\t * Implement this getter with relevant logic regarding the modality of the popup (e.g. based on a public property)\n\t * @protected\n\t */\n\tabstract get isModal(): boolean\n\n\t/**\n\t * Return the ID of an element in the shadow DOM that is going to label this popup\n\t * @protected\n\t */\n\tabstract get _ariaLabelledBy(): string | undefined\n\n\t/**\n\t * Ensures ariaLabel is never null or empty string\n\t * @protected\n\t */\n\tget _ariaLabel() {\n\t\treturn getEffectiveAriaLabelText(this);\n\t}\n\n\tget _root(): HTMLElement {\n\t\treturn this.shadowRoot!.querySelector(\".ui5-popup-root\")!;\n\t}\n\n\tget _role(): string | undefined {\n\t\treturn (this.accessibleRole === PopupAccessibleRole.None) ? undefined : this.accessibleRole.toLowerCase();\n\t}\n\n\tget _ariaModal(): string | undefined {\n\t\treturn this.accessibleRole === PopupAccessibleRole.None ? undefined : \"true\";\n\t}\n\n\tget contentDOM(): HTMLElement {\n\t\treturn this.shadowRoot!.querySelector(\".ui5-popup-content\")!;\n\t}\n\n\tget styles() {\n\t\treturn {\n\t\t\troot: {},\n\t\t\tcontent: {},\n\t\t};\n\t}\n\n\tget classes(): ClassMap {\n\t\treturn {\n\t\t\troot: {\n\t\t\t\t\"ui5-popup-root\": true,\n\t\t\t},\n\t\t\tcontent: {\n\t\t\t\t\"ui5-popup-content\": true,\n\t\t\t},\n\t\t};\n\t}\n}\n\nexport default Popup;\n\nexport type {\n\tPopupScrollEventDetail,\n\tPopupBeforeCloseEventDetail,\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}