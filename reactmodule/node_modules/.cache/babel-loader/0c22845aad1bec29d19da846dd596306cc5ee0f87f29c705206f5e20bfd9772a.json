{"ast":null,"code":"import { ARIA_LABEL_EMPTY_CELL } from '@ui5/webcomponents/dist/generated/i18n/i18n-defaults.js';\nimport { useI18nBundle } from '@ui5/webcomponents-react-base';\nimport { useCallback } from 'react';\n/**\n * The `useAnnounceEmptyCells` plugin hook adds screen reader announcements for empty cells.\n *\n * **Note:** Some screen readers (depending on their configuration) automatically detect empty cells, potentially resulting in duplicate announcements of empty cells.\n */\nexport const useAnnounceEmptyCells = hooks => {\n  const i18nBundleWc = useI18nBundle('@ui5/webcomponents');\n  const emptyCellLabel = i18nBundleWc.getText(ARIA_LABEL_EMPTY_CELL);\n  const setCellProps = useCallback((cellProps, _ref) => {\n    let {\n      cell: {\n        value\n      }\n    } = _ref;\n    if (typeof value !== 'number' && !value) {\n      return [cellProps, {\n        'aria-label': `${cellProps['aria-label']} ${emptyCellLabel}`\n      }];\n    }\n    return cellProps;\n  }, [emptyCellLabel]);\n  hooks.getCellProps.push(setCellProps);\n};\nuseAnnounceEmptyCells.pluginName = 'useAnnounceEmptyCells';","map":{"version":3,"names":["ARIA_LABEL_EMPTY_CELL","useI18nBundle","useCallback","useAnnounceEmptyCells","hooks","i18nBundleWc","emptyCellLabel","getText","setCellProps","cellProps","_ref","cell","value","getCellProps","push","pluginName"],"sources":["/home/user/projects/reactproj/node_modules/@ui5/webcomponents-react/dist/components/AnalyticalTable/pluginHooks/useAnnounceEmptyCells.js"],"sourcesContent":["import { ARIA_LABEL_EMPTY_CELL } from '@ui5/webcomponents/dist/generated/i18n/i18n-defaults.js';\nimport { useI18nBundle } from '@ui5/webcomponents-react-base';\nimport { useCallback } from 'react';\n/**\n * The `useAnnounceEmptyCells` plugin hook adds screen reader announcements for empty cells.\n *\n * **Note:** Some screen readers (depending on their configuration) automatically detect empty cells, potentially resulting in duplicate announcements of empty cells.\n */\nexport const useAnnounceEmptyCells = hooks => {\n  const i18nBundleWc = useI18nBundle('@ui5/webcomponents');\n  const emptyCellLabel = i18nBundleWc.getText(ARIA_LABEL_EMPTY_CELL);\n  const setCellProps = useCallback((cellProps, {\n    cell: {\n      value\n    }\n  }) => {\n    if (typeof value !== 'number' && !value) {\n      return [cellProps, {\n        'aria-label': `${cellProps['aria-label']} ${emptyCellLabel}`\n      }];\n    }\n    return cellProps;\n  }, [emptyCellLabel]);\n  hooks.getCellProps.push(setCellProps);\n};\nuseAnnounceEmptyCells.pluginName = 'useAnnounceEmptyCells';"],"mappings":"AAAA,SAASA,qBAAqB,QAAQ,yDAAyD;AAC/F,SAASC,aAAa,QAAQ,+BAA+B;AAC7D,SAASC,WAAW,QAAQ,OAAO;AACnC;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMC,qBAAqB,GAAGC,KAAK,IAAI;EAC5C,MAAMC,YAAY,GAAGJ,aAAa,CAAC,oBAAoB,CAAC;EACxD,MAAMK,cAAc,GAAGD,YAAY,CAACE,OAAO,CAACP,qBAAqB,CAAC;EAClE,MAAMQ,YAAY,GAAGN,WAAW,CAAC,CAACO,SAAS,EAAAC,IAAA,KAIrC;IAAA,IAJuC;MAC3CC,IAAI,EAAE;QACJC;MACF;IACF,CAAC,GAAAF,IAAA;IACC,IAAI,OAAOE,KAAK,KAAK,QAAQ,IAAI,CAACA,KAAK,EAAE;MACvC,OAAO,CAACH,SAAS,EAAE;QACjB,YAAY,EAAE,GAAGA,SAAS,CAAC,YAAY,CAAC,IAAIH,cAAc;MAC5D,CAAC,CAAC;IACJ;IACA,OAAOG,SAAS;EAClB,CAAC,EAAE,CAACH,cAAc,CAAC,CAAC;EACpBF,KAAK,CAACS,YAAY,CAACC,IAAI,CAACN,YAAY,CAAC;AACvC,CAAC;AACDL,qBAAqB,CAACY,UAAU,GAAG,uBAAuB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}