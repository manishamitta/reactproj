{"ast":null,"code":"import { getCustomElementsScopingSuffix, getEffectiveScopingSuffixForTag, getScopedVarName } from '@ui5/webcomponents-base/dist/CustomElementsScope.js';\nimport { Children, cloneElement, Fragment } from 'react';\nexport function flattenFragments(children) {\n  let depth = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n  const flatChildren = [];\n  const removeFragments = function (element) {\n    let level = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n    let key = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\n    if (!element) {\n      return;\n    }\n    if (Array.isArray(element)) {\n      Children.toArray(element).forEach((child, index) => {\n        removeFragments(child, level + 1, [...key, index]);\n      });\n      return;\n    }\n    if (element.type === Fragment && level <= depth) {\n      Children.toArray(element.props?.children).forEach((item, index) => {\n        removeFragments(item, level + 1, [...key, index]);\n      });\n    } else if (typeof element === 'string' || typeof element === 'number') {\n      flatChildren.push(element);\n    } else {\n      flatChildren.push(/*#__PURE__*/cloneElement(element, {\n        key: key.join('.')\n      }));\n    }\n  };\n  removeFragments(children);\n  return flatChildren;\n}\nexport const capitalizeFirstLetter = s => s.charAt(0).toUpperCase() + s.slice(1);\nexport const lowercaseFirstLetter = s => s.charAt(0).toLowerCase() + s.slice(1);\nexport const camelToKebabCase = s => s.replace(/([A-Z])/g, (a, b) => `-${b.toLowerCase()}`);\nexport const kebabToCamelCase = str => str.replace(/([-_]\\w)/g, g => g[1].toUpperCase());\nexport function getUi5TagWithSuffix(baseTagName) {\n  const tagNameSuffix = getEffectiveScopingSuffixForTag(baseTagName);\n  return tagNameSuffix ? `${baseTagName}-${tagNameSuffix}` : baseTagName;\n}\nexport const isSSR = () => typeof window === 'undefined';\nexport function trimAndRemoveSpaces(value) {\n  return value.trim().replace(/\\s\\s+/g, ' ');\n}\nexport const cssVarVersionInfoPrefix = getScopedVarName('--_ui5_').replace('--_ui5_', '');\nexport function getTagNameWithoutScopingSuffix(tagName) {\n  const tagNameSuffix = getCustomElementsScopingSuffix();\n  return tagNameSuffix ? tagName.replace(`-${tagNameSuffix.toUpperCase()}`, '') : tagName;\n}\nconst SEMVER_REGEX = /^(?<major>0|[1-9]\\d*)\\.(?<minor>0|[1-9]\\d*)\\.(?<patch>0|[1-9]\\d*)(?:-(?<prerelease>(?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\\.(?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\\+(?<buildmetadata>[0-9a-zA-Z-]+(?:\\.[0-9a-zA-Z-]+)*))?$/;\nexport function parseSemVer(version) {\n  const parsed = SEMVER_REGEX.exec(version).groups;\n  return {\n    version,\n    major: parseInt(parsed.major),\n    minor: parseInt(parsed.minor),\n    patch: parseInt(parsed.patch),\n    prerelease: parsed.prerelease,\n    buildMetadata: parsed.buildmetadata\n  };\n}","map":{"version":3,"names":["getCustomElementsScopingSuffix","getEffectiveScopingSuffixForTag","getScopedVarName","Children","cloneElement","Fragment","flattenFragments","children","depth","arguments","length","undefined","flatChildren","removeFragments","element","level","key","Array","isArray","toArray","forEach","child","index","type","props","item","push","join","capitalizeFirstLetter","s","charAt","toUpperCase","slice","lowercaseFirstLetter","toLowerCase","camelToKebabCase","replace","a","b","kebabToCamelCase","str","g","getUi5TagWithSuffix","baseTagName","tagNameSuffix","isSSR","window","trimAndRemoveSpaces","value","trim","cssVarVersionInfoPrefix","getTagNameWithoutScopingSuffix","tagName","SEMVER_REGEX","parseSemVer","version","parsed","exec","groups","major","parseInt","minor","patch","prerelease","buildMetadata","buildmetadata"],"sources":["/home/user/projects/reactproj/node_modules/@ui5/webcomponents-react/dist/internal/utils.js"],"sourcesContent":["import { getCustomElementsScopingSuffix, getEffectiveScopingSuffixForTag, getScopedVarName } from '@ui5/webcomponents-base/dist/CustomElementsScope.js';\nimport { Children, cloneElement, Fragment } from 'react';\nexport function flattenFragments(children, depth = 1) {\n  const flatChildren = [];\n  const removeFragments = (element, level = 0, key = []) => {\n    if (!element) {\n      return;\n    }\n    if (Array.isArray(element)) {\n      Children.toArray(element).forEach((child, index) => {\n        removeFragments(child, level + 1, [...key, index]);\n      });\n      return;\n    }\n    if (element.type === Fragment && level <= depth) {\n      Children.toArray(element.props?.children).forEach((item, index) => {\n        removeFragments(item, level + 1, [...key, index]);\n      });\n    } else if (typeof element === 'string' || typeof element === 'number') {\n      flatChildren.push(element);\n    } else {\n      flatChildren.push( /*#__PURE__*/cloneElement(element, {\n        key: key.join('.')\n      }));\n    }\n  };\n  removeFragments(children);\n  return flatChildren;\n}\nexport const capitalizeFirstLetter = s => s.charAt(0).toUpperCase() + s.slice(1);\nexport const lowercaseFirstLetter = s => s.charAt(0).toLowerCase() + s.slice(1);\nexport const camelToKebabCase = s => s.replace(/([A-Z])/g, (a, b) => `-${b.toLowerCase()}`);\nexport const kebabToCamelCase = str => str.replace(/([-_]\\w)/g, g => g[1].toUpperCase());\nexport function getUi5TagWithSuffix(baseTagName) {\n  const tagNameSuffix = getEffectiveScopingSuffixForTag(baseTagName);\n  return tagNameSuffix ? `${baseTagName}-${tagNameSuffix}` : baseTagName;\n}\nexport const isSSR = () => typeof window === 'undefined';\nexport function trimAndRemoveSpaces(value) {\n  return value.trim().replace(/\\s\\s+/g, ' ');\n}\nexport const cssVarVersionInfoPrefix = getScopedVarName('--_ui5_').replace('--_ui5_', '');\nexport function getTagNameWithoutScopingSuffix(tagName) {\n  const tagNameSuffix = getCustomElementsScopingSuffix();\n  return tagNameSuffix ? tagName.replace(`-${tagNameSuffix.toUpperCase()}`, '') : tagName;\n}\nconst SEMVER_REGEX = /^(?<major>0|[1-9]\\d*)\\.(?<minor>0|[1-9]\\d*)\\.(?<patch>0|[1-9]\\d*)(?:-(?<prerelease>(?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\\.(?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\\+(?<buildmetadata>[0-9a-zA-Z-]+(?:\\.[0-9a-zA-Z-]+)*))?$/;\nexport function parseSemVer(version) {\n  const parsed = SEMVER_REGEX.exec(version).groups;\n  return {\n    version,\n    major: parseInt(parsed.major),\n    minor: parseInt(parsed.minor),\n    patch: parseInt(parsed.patch),\n    prerelease: parsed.prerelease,\n    buildMetadata: parsed.buildmetadata\n  };\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}