{"ast":null,"code":"var __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n    r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n    d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar Select_1;\nimport UI5Element from \"@ui5/webcomponents-base/dist/UI5Element.js\";\nimport customElement from \"@ui5/webcomponents-base/dist/decorators/customElement.js\";\nimport property from \"@ui5/webcomponents-base/dist/decorators/property.js\";\nimport event from \"@ui5/webcomponents-base/dist/decorators/event.js\";\nimport slot from \"@ui5/webcomponents-base/dist/decorators/slot.js\";\nimport litRender from \"@ui5/webcomponents-base/dist/renderer/LitRenderer.js\";\nimport { isSpace, isUp, isDown, isEnter, isEscape, isHome, isEnd, isShow, isTabNext, isTabPrevious } from \"@ui5/webcomponents-base/dist/Keys.js\";\nimport announce from \"@ui5/webcomponents-base/dist/util/InvisibleMessage.js\";\nimport { getEffectiveAriaLabelText } from \"@ui5/webcomponents-base/dist/util/AriaLabelHelper.js\";\nimport ValueState from \"@ui5/webcomponents-base/dist/types/ValueState.js\";\nimport \"@ui5/webcomponents-icons/dist/slim-arrow-down.js\";\nimport \"@ui5/webcomponents-icons/dist/error.js\";\nimport \"@ui5/webcomponents-icons/dist/alert.js\";\nimport \"@ui5/webcomponents-icons/dist/sys-enter-2.js\";\nimport \"@ui5/webcomponents-icons/dist/information.js\";\nimport { isPhone } from \"@ui5/webcomponents-base/dist/Device.js\";\nimport { getI18nBundle } from \"@ui5/webcomponents-base/dist/i18nBundle.js\";\nimport \"@ui5/webcomponents-icons/dist/decline.js\";\nimport InvisibleMessageMode from \"@ui5/webcomponents-base/dist/types/InvisibleMessageMode.js\";\nimport { getScopedVarName } from \"@ui5/webcomponents-base/dist/CustomElementsScope.js\";\nimport List from \"./List.js\";\nimport { VALUE_STATE_SUCCESS, VALUE_STATE_INFORMATION, VALUE_STATE_ERROR, VALUE_STATE_WARNING, VALUE_STATE_TYPE_SUCCESS, VALUE_STATE_TYPE_INFORMATION, VALUE_STATE_TYPE_ERROR, VALUE_STATE_TYPE_WARNING, INPUT_SUGGESTIONS_TITLE, LIST_ITEM_POSITION, SELECT_ROLE_DESCRIPTION, FORM_SELECTABLE_REQUIRED } from \"./generated/i18n/i18n-defaults.js\";\nimport Label from \"./Label.js\";\nimport ResponsivePopover from \"./ResponsivePopover.js\";\nimport Popover from \"./Popover.js\";\nimport Icon from \"./Icon.js\";\nimport Button from \"./Button.js\";\n// Templates\nimport SelectTemplate from \"./generated/templates/SelectTemplate.lit.js\";\n// Styles\nimport selectCss from \"./generated/themes/Select.css.js\";\nimport ResponsivePopoverCommonCss from \"./generated/themes/ResponsivePopoverCommon.css.js\";\nimport ValueStateMessageCss from \"./generated/themes/ValueStateMessage.css.js\";\nimport SelectPopoverCss from \"./generated/themes/SelectPopover.css.js\";\n/**\n * @class\n *\n * ### Overview\n *\n * The `ui5-select` component is used to create a drop-down list.\n *\n * ### Usage\n *\n * There are two main usages of the `ui5-select>`.\n *\n * 1. With Option (`ui5-option`) web component:\n *\n * The available options of the Select are defined by using the Option component.\n * The Option comes with predefined design and layout, including `icon`, `text` and `additional-text`.\n *\n * 2. With OptionCustom (`ui5-option-custom`) web component.\n *\n * Options with custom content are defined by using the OptionCustom component\n * The OptionCustom component comes with no predefined layout and it expects consumers to define it.\n *\n * ### Keyboard Handling\n * The `ui5-select` provides advanced keyboard handling.\n *\n * - [F4] / [Alt] + [Up] / [Alt] + [Down] / [Space] or [Enter] - Opens/closes the drop-down.\n * - [Up] or [Down] - If the drop-down is closed - changes selection to the next or the previous option. If the drop-down is opened - moves focus to the next or the previous option.\n * - [Space], [Enter] - If the drop-down is opened - selects the focused option.\n * - [Escape] - Closes the drop-down without changing the selection.\n * - [Home] - Navigates to first option\n * - [End] - Navigates to the last option\n *\n * ### ES6 Module Import\n * `import \"@ui5/webcomponents/dist/Select\";`\n *\n * `import \"@ui5/webcomponents/dist/Option\";`\n * `import \"@ui5/webcomponents/dist/OptionCustom\";`\n * @constructor\n * @extends UI5Element\n * @public\n * @csspart popover - Used to style the popover element\n * @since 0.8.0\n */\nlet Select = Select_1 = class Select extends UI5Element {\n  constructor() {\n    super(...arguments);\n    /**\n     * Defines whether the component is in disabled state.\n     *\n     * **Note:** A disabled component is noninteractive.\n     * @default false\n     * @public\n     */\n    this.disabled = false;\n    /**\n     * Defines the value state of the component.\n     * @default \"None\"\n     * @public\n     */\n    this.valueState = \"None\";\n    /**\n     * Defines whether the component is required.\n     * @since 1.0.0-rc.9\n     * @default false\n     * @public\n     */\n    this.required = false;\n    /**\n     * Defines whether the component is read-only.\n     *\n     * **Note:** A read-only component is not editable,\n     * but still provides visual feedback upon user interaction.\n     * @default false\n     * @since 1.21.0\n     * @public\n     */\n    this.readonly = false;\n    /**\n     * @private\n     */\n    this._iconPressed = false;\n    /**\n     * @private\n     */\n    this.opened = false;\n    /**\n     * @private\n     */\n    this._listWidth = 0;\n    /**\n     * @private\n     */\n    this.focused = false;\n    this._selectedIndexBeforeOpen = -1;\n    this._escapePressed = false;\n    this._lastSelectedOption = null;\n    this._typedChars = \"\";\n  }\n  get formValidityMessage() {\n    return Select_1.i18nBundle.getText(FORM_SELECTABLE_REQUIRED);\n  }\n  get formValidity() {\n    const selectedOption = this.selectedOption;\n    return {\n      valueMissing: this.required && selectedOption && selectedOption.getAttribute(\"value\") === \"\"\n    };\n  }\n  async formElementAnchor() {\n    return this.getFocusDomRefAsync();\n  }\n  get formFormattedValue() {\n    const selectedOption = this.selectedOption;\n    if (selectedOption) {\n      return selectedOption.hasAttribute(\"value\") ? selectedOption.value : selectedOption.textContent;\n    }\n    return \"\";\n  }\n  onBeforeRendering() {\n    this._ensureSingleSelection();\n    this.style.setProperty(getScopedVarName(\"--_ui5-input-icons-count\"), `${this.iconsCount}`);\n  }\n  onAfterRendering() {\n    this.toggleValueStatePopover(this.shouldOpenValueStateMessagePopover);\n    if (this._isPickerOpen) {\n      if (!this._listWidth) {\n        this._listWidth = this.responsivePopover.offsetWidth;\n      }\n    }\n  }\n  _ensureSingleSelection() {\n    // if no item is selected => select the first one\n    // if multiple items are selected => select the last selected one\n    let selectedIndex = this.options.findLastIndex(option => option.selected);\n    selectedIndex = selectedIndex === -1 ? 0 : selectedIndex;\n    for (let i = 0; i < this.options.length; i++) {\n      this.options[i].selected = selectedIndex === i;\n      if (selectedIndex === i) {\n        break;\n      }\n    }\n  }\n  _onfocusin() {\n    this.focused = true;\n  }\n  _onfocusout() {\n    this.focused = false;\n  }\n  get _isPickerOpen() {\n    return !!this.responsivePopover && this.responsivePopover.open;\n  }\n  _respPopover() {\n    return this.shadowRoot.querySelector(\"[ui5-responsive-popover]\");\n  }\n  /**\n   * Defines the value of the component:\n   *\n   * - when get - returns the value of the component, e.g. the `value` property of the selected option or its text content.\n   *\n   * - when set - selects the option with matching `value` property or text content.\n   *\n   * **Note:** If the given value does not match any existing option,\n   * the first option will get selected.\n   * @public\n   * @default \"\"\n   * @since 1.20.0\n   * @formProperty\n   * @formEvents change liveChange\n   */\n  set value(newValue) {\n    const options = Array.from(this.children);\n    options.forEach(option => {\n      option.selected = !!((option.getAttribute(\"value\") || option.textContent) === newValue);\n    });\n  }\n  get value() {\n    return this.selectedOption?.value || this.selectedOption?.textContent || \"\";\n  }\n  get _selectedIndex() {\n    return this.options.findIndex(option => option.selected);\n  }\n  /**\n   * Currently selected `ui5-option` element.\n   * @public\n   * @default undefined\n   */\n  get selectedOption() {\n    return this.options.find(option => option.selected);\n  }\n  get text() {\n    return this.selectedOption?.effectiveDisplayText;\n  }\n  _toggleRespPopover() {\n    if (this.disabled || this.readonly) {\n      return;\n    }\n    this._iconPressed = true;\n    this.responsivePopover = this._respPopover();\n    if (this._isPickerOpen) {\n      this.responsivePopover.open = false;\n    } else {\n      this.responsivePopover.opener = this;\n      this.responsivePopover.open = true;\n    }\n  }\n  _onkeydown(e) {\n    const isTab = isTabNext(e) || isTabPrevious(e);\n    if (isTab && this._isPickerOpen) {\n      this.responsivePopover.open = false;\n    } else if (isShow(e)) {\n      e.preventDefault();\n      this._toggleRespPopover();\n    } else if (isSpace(e)) {\n      e.preventDefault();\n    } else if (isEscape(e) && this._isPickerOpen) {\n      this._escapePressed = true;\n    } else if (isHome(e)) {\n      this._handleHomeKey(e);\n    } else if (isEnd(e)) {\n      this._handleEndKey(e);\n    } else if (isEnter(e)) {\n      this._handleSelectionChange();\n    } else if (isUp(e) || isDown(e)) {\n      this._handleArrowNavigation(e);\n    }\n  }\n  _handleKeyboardNavigation(e) {\n    if (isEnter(e) || this.readonly) {\n      return;\n    }\n    const typedCharacter = e.key.toLowerCase();\n    this._typedChars += typedCharacter;\n    // We check if we have more than one characters and they are all duplicate, we set the\n    // text to be the last input character (typedCharacter). If not, we set the text to be\n    // the whole input string.\n    const text = /^(.)\\1+$/i.test(this._typedChars) ? typedCharacter : this._typedChars;\n    clearTimeout(this._typingTimeoutID);\n    this._typingTimeoutID = setTimeout(() => {\n      this._typedChars = \"\";\n      this._typingTimeoutID = -1;\n    }, 1000);\n    this._selectTypedItem(text);\n  }\n  _selectTypedItem(text) {\n    const currentIndex = this._selectedIndex;\n    const itemToSelect = this._searchNextItemByText(text);\n    if (itemToSelect) {\n      const nextIndex = this.options.indexOf(itemToSelect);\n      this._changeSelectedItem(this._selectedIndex, nextIndex);\n      if (currentIndex !== this._selectedIndex) {\n        this.itemSelectionAnnounce();\n        this._scrollSelectedItem();\n      }\n    }\n  }\n  _searchNextItemByText(text) {\n    let orderedOptions = this.options.slice(0);\n    const optionsAfterSelected = orderedOptions.splice(this._selectedIndex + 1, orderedOptions.length - this._selectedIndex);\n    const optionsBeforeSelected = orderedOptions.splice(0, orderedOptions.length - 1);\n    orderedOptions = optionsAfterSelected.concat(optionsBeforeSelected);\n    return orderedOptions.find(option => option.effectiveDisplayText.toLowerCase().startsWith(text));\n  }\n  _handleHomeKey(e) {\n    e.preventDefault();\n    if (this.readonly) {\n      return;\n    }\n    this._changeSelectedItem(this._selectedIndex, 0);\n  }\n  _handleEndKey(e) {\n    e.preventDefault();\n    if (this.readonly) {\n      return;\n    }\n    const lastIndex = this.options.length - 1;\n    this._changeSelectedItem(this._selectedIndex, lastIndex);\n  }\n  _onkeyup(e) {\n    if (isSpace(e)) {\n      if (this._isPickerOpen) {\n        this._handleSelectionChange();\n      } else {\n        this._toggleRespPopover();\n      }\n    }\n  }\n  _getItemIndex(item) {\n    return this.options.indexOf(item);\n  }\n  _select(index) {\n    const selectedIndex = this._selectedIndex;\n    if (index < 0 || index >= this.options.length || this.options.length === 0) {\n      return;\n    }\n    if (this.options[selectedIndex]) {\n      this.options[selectedIndex].selected = false;\n    }\n    if (selectedIndex !== index) {\n      this.fireEvent(\"live-change\", {\n        selectedOption: this.options[index]\n      });\n    }\n    this.options[index].selected = true;\n  }\n  /**\n   * The user clicked on an item from the list\n   * @private\n   */\n  _handleItemPress(e) {\n    const listItem = e.detail.item;\n    const selectedItemIndex = this._getItemIndex(listItem);\n    this._handleSelectionChange(selectedItemIndex);\n  }\n  _itemMousedown(e) {\n    // prevent actual focus of items\n    e.preventDefault();\n  }\n  _onclick() {\n    this.getFocusDomRef().focus();\n    this._toggleRespPopover();\n  }\n  /**\n   * The user selected an item with Enter or Space\n   * @private\n   */\n  _handleSelectionChange() {\n    let index = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this._selectedIndex;\n    this._select(index);\n    this._toggleRespPopover();\n  }\n  _scrollSelectedItem() {\n    if (this._isPickerOpen) {\n      const itemRef = this._currentlySelectedOption?.getDomRef();\n      if (itemRef) {\n        itemRef.scrollIntoView({\n          behavior: \"auto\",\n          block: \"nearest\",\n          inline: \"nearest\"\n        });\n      }\n    }\n  }\n  _handleArrowNavigation(e) {\n    e.preventDefault();\n    if (this.readonly) {\n      return;\n    }\n    let nextIndex = -1;\n    const currentIndex = this._selectedIndex;\n    const isDownKey = isDown(e);\n    if (isDownKey) {\n      nextIndex = this._getNextOptionIndex();\n    } else {\n      nextIndex = this._getPreviousOptionIndex();\n    }\n    this._changeSelectedItem(this._selectedIndex, nextIndex);\n    if (currentIndex !== this._selectedIndex) {\n      // Announce new item even if picker is opened.\n      // The aria-activedescendents attribute can't be used,\n      // because listitem elements are in different shadow dom\n      this.itemSelectionAnnounce();\n      this._scrollSelectedItem();\n    }\n  }\n  _changeSelectedItem(oldIndex, newIndex) {\n    const options = this.options;\n    const previousOption = options[oldIndex];\n    const nextOption = options[newIndex];\n    if (previousOption === nextOption) {\n      return;\n    }\n    previousOption.selected = false;\n    previousOption.focused = false;\n    nextOption.selected = true;\n    nextOption.focused = true;\n    this.fireEvent(\"live-change\", {\n      selectedOption: nextOption\n    });\n    if (!this._isPickerOpen) {\n      // arrow pressed on closed picker - do selection change\n      this._fireChangeEvent(nextOption);\n    }\n  }\n  _getNextOptionIndex() {\n    return this._selectedIndex === this.options.length - 1 ? this._selectedIndex : this._selectedIndex + 1;\n  }\n  _getPreviousOptionIndex() {\n    return this._selectedIndex === 0 ? this._selectedIndex : this._selectedIndex - 1;\n  }\n  _beforeOpen() {\n    this._selectedIndexBeforeOpen = this._selectedIndex;\n    this._lastSelectedOption = this.options[this._selectedIndex];\n  }\n  _afterOpen() {\n    this.opened = true;\n    this.fireEvent(\"open\");\n    this.itemSelectionAnnounce();\n    this._scrollSelectedItem();\n    this._applyFocusToSelectedItem();\n  }\n  _applyFocusToSelectedItem() {\n    this.options.forEach(option => {\n      option.focused = option.selected;\n    });\n  }\n  _afterClose() {\n    this.opened = false;\n    this._iconPressed = false;\n    this._listWidth = 0;\n    if (this._escapePressed) {\n      this._select(this._selectedIndexBeforeOpen);\n      this._escapePressed = false;\n    } else if (this._lastSelectedOption !== this.options[this._selectedIndex]) {\n      this._fireChangeEvent(this.options[this._selectedIndex]);\n      this._lastSelectedOption = this.options[this._selectedIndex];\n    }\n    this.fireEvent(\"close\");\n  }\n  get hasCustomLabel() {\n    return !!this.label.length;\n  }\n  _fireChangeEvent(selectedOption) {\n    const changePrevented = !this.fireEvent(\"change\", {\n      selectedOption\n    }, true);\n    //  Angular two way data binding\n    this.fireEvent(\"selected-item-changed\");\n    if (changePrevented) {\n      this._select(this._selectedIndexBeforeOpen);\n    }\n  }\n  get valueStateTextMappings() {\n    return {\n      [ValueState.Positive]: Select_1.i18nBundle.getText(VALUE_STATE_SUCCESS),\n      [ValueState.Information]: Select_1.i18nBundle.getText(VALUE_STATE_INFORMATION),\n      [ValueState.Negative]: Select_1.i18nBundle.getText(VALUE_STATE_ERROR),\n      [ValueState.Critical]: Select_1.i18nBundle.getText(VALUE_STATE_WARNING)\n    };\n  }\n  get valueStateTypeMappings() {\n    return {\n      [ValueState.Positive]: Select_1.i18nBundle.getText(VALUE_STATE_TYPE_SUCCESS),\n      [ValueState.Information]: Select_1.i18nBundle.getText(VALUE_STATE_TYPE_INFORMATION),\n      [ValueState.Negative]: Select_1.i18nBundle.getText(VALUE_STATE_TYPE_ERROR),\n      [ValueState.Critical]: Select_1.i18nBundle.getText(VALUE_STATE_TYPE_WARNING)\n    };\n  }\n  get valueStateText() {\n    let valueStateText;\n    if (this.shouldDisplayDefaultValueStateMessage) {\n      valueStateText = this.valueStateDefaultText;\n    } else {\n      valueStateText = this.valueStateMessage.map(el => el.textContent).join(\" \");\n    }\n    return `${this.valueStateTypeText} ${valueStateText}`;\n  }\n  get valueStateDefaultText() {\n    return this.valueState !== ValueState.None ? this.valueStateTextMappings[this.valueState] : \"\";\n  }\n  get valueStateTypeText() {\n    return this.valueState !== ValueState.None ? this.valueStateTypeMappings[this.valueState] : \"\";\n  }\n  get hasValueState() {\n    return this.valueState !== ValueState.None;\n  }\n  get valueStateTextId() {\n    return this.hasValueState ? `${this._id}-valueStateDesc` : undefined;\n  }\n  get isDisabled() {\n    return this.disabled || undefined;\n  }\n  get _headerTitleText() {\n    return Select_1.i18nBundle.getText(INPUT_SUGGESTIONS_TITLE);\n  }\n  get _currentlySelectedOption() {\n    return this.options[this._selectedIndex];\n  }\n  get _effectiveTabIndex() {\n    return this.disabled || this.responsivePopover // Handles focus on Tab/Shift + Tab when the popover is opened\n    && this.responsivePopover.open ? \"-1\" : \"0\";\n  }\n  /**\n  * This method is relevant for sap_horizon theme only\n  */\n  get _valueStateMessageInputIcon() {\n    const iconPerValueState = {\n      Negative: \"error\",\n      Critical: \"alert\",\n      Positive: \"sys-enter-2\",\n      Information: \"information\"\n    };\n    return this.valueState !== ValueState.None ? iconPerValueState[this.valueState] : \"\";\n  }\n  get iconsCount() {\n    return this.selectedOptionIcon ? 2 : 1;\n  }\n  get classes() {\n    return {\n      popoverValueState: {\n        \"ui5-valuestatemessage-root\": true,\n        \"ui5-valuestatemessage--success\": this.valueState === ValueState.Positive,\n        \"ui5-valuestatemessage--error\": this.valueState === ValueState.Negative,\n        \"ui5-valuestatemessage--warning\": this.valueState === ValueState.Critical,\n        \"ui5-valuestatemessage--information\": this.valueState === ValueState.Information\n      },\n      popover: {\n        \"ui5-select-popover-valuestate\": this.hasValueState\n      }\n    };\n  }\n  get styles() {\n    return {\n      popoverHeader: {\n        \"max-width\": `${this.offsetWidth}px`\n      },\n      responsivePopoverHeader: {\n        \"display\": this.options.length && this._listWidth === 0 ? \"none\" : \"inline-block\",\n        \"width\": `${this.options.length ? this._listWidth : this.offsetWidth}px`\n      },\n      responsivePopover: {\n        \"min-width\": `${this.offsetWidth}px`\n      }\n    };\n  }\n  get ariaLabelText() {\n    return getEffectiveAriaLabelText(this);\n  }\n  get shouldDisplayDefaultValueStateMessage() {\n    return !this.valueStateMessage.length && this.hasValueStateText;\n  }\n  get hasValueStateText() {\n    return this.hasValueState && this.valueState !== ValueState.Positive;\n  }\n  get shouldOpenValueStateMessagePopover() {\n    return this.focused && this.hasValueStateText && !this._iconPressed && !this._isPickerOpen && !this._isPhone;\n  }\n  get _ariaRoleDescription() {\n    return Select_1.i18nBundle.getText(SELECT_ROLE_DESCRIPTION);\n  }\n  get _isPhone() {\n    return isPhone();\n  }\n  itemSelectionAnnounce() {\n    let text;\n    const optionsCount = this.options.length;\n    const itemPositionText = Select_1.i18nBundle.getText(LIST_ITEM_POSITION, this._selectedIndex + 1, optionsCount);\n    if (this.focused && this._currentlySelectedOption) {\n      text = `${this._currentlySelectedOption.textContent} ${this._isPickerOpen ? itemPositionText : \"\"}`;\n      announce(text, InvisibleMessageMode.Polite);\n    }\n  }\n  openValueStatePopover() {\n    this.valueStatePopover = this._getPopover();\n    if (this.valueStatePopover) {\n      this.valueStatePopover.opener = this;\n      this.valueStatePopover.open = true;\n    }\n  }\n  closeValueStatePopover() {\n    this.valueStatePopover && (this.valueStatePopover.open = false);\n  }\n  toggleValueStatePopover(open) {\n    if (open) {\n      this.openValueStatePopover();\n    } else {\n      this.closeValueStatePopover();\n    }\n  }\n  get selectedOptionIcon() {\n    return this.selectedOption && this.selectedOption.icon;\n  }\n  _getPopover() {\n    return this.shadowRoot.querySelector(\"[ui5-popover]\");\n  }\n  static async onDefine() {\n    Select_1.i18nBundle = await getI18nBundle(\"@ui5/webcomponents\");\n  }\n};\n__decorate([property({\n  type: Boolean\n})], Select.prototype, \"disabled\", void 0);\n__decorate([property()], Select.prototype, \"name\", void 0);\n__decorate([property()], Select.prototype, \"valueState\", void 0);\n__decorate([property({\n  type: Boolean\n})], Select.prototype, \"required\", void 0);\n__decorate([property({\n  type: Boolean\n})], Select.prototype, \"readonly\", void 0);\n__decorate([property()], Select.prototype, \"accessibleName\", void 0);\n__decorate([property()], Select.prototype, \"accessibleNameRef\", void 0);\n__decorate([property({\n  type: Boolean,\n  noAttribute: true\n})], Select.prototype, \"_iconPressed\", void 0);\n__decorate([property({\n  type: Boolean\n})], Select.prototype, \"opened\", void 0);\n__decorate([property({\n  type: Number,\n  noAttribute: true\n})], Select.prototype, \"_listWidth\", void 0);\n__decorate([property({\n  type: Boolean\n})], Select.prototype, \"focused\", void 0);\n__decorate([slot({\n  \"default\": true,\n  type: HTMLElement,\n  invalidateOnChildChange: true\n})], Select.prototype, \"options\", void 0);\n__decorate([slot()], Select.prototype, \"valueStateMessage\", void 0);\n__decorate([slot()], Select.prototype, \"label\", void 0);\n__decorate([property({\n  noAttribute: true\n})], Select.prototype, \"value\", null);\nSelect = Select_1 = __decorate([customElement({\n  tag: \"ui5-select\",\n  languageAware: true,\n  formAssociated: true,\n  renderer: litRender,\n  template: SelectTemplate,\n  styles: [selectCss, ResponsivePopoverCommonCss, ValueStateMessageCss, SelectPopoverCss],\n  dependencies: [Label, ResponsivePopover, Popover, List, Icon, Button]\n})\n/**\n * Fired when the selected option changes.\n * @allowPreventDefault\n * @param {IOption} selectedOption the selected option.\n * @public\n */, event(\"change\", {\n  detail: {\n    /**\n    * @public\n    */\n    selectedOption: {\n      type: HTMLElement\n    }\n  }\n})\n/**\n * Fired when the user navigates through the options, but the selection is not finalized,\n * or when pressing the ESC key to revert the current selection.\n * @param {IOption} selectedOption the selected option.\n * @public\n * @since 1.17.0\n */, event(\"live-change\", {\n  detail: {\n    /**\n    * @public\n    */\n    selectedOption: {\n      type: HTMLElement\n    }\n  }\n})\n/**\n * Fired after the component's dropdown menu opens.\n * @public\n */, event(\"open\")\n/**\n * Fired after the component's dropdown menu closes.\n * @public\n */, event(\"close\")], Select);\nSelect.define();\nexport default Select;","map":{"version":3,"names":["UI5Element","customElement","property","event","slot","litRender","isSpace","isUp","isDown","isEnter","isEscape","isHome","isEnd","isShow","isTabNext","isTabPrevious","announce","getEffectiveAriaLabelText","ValueState","isPhone","getI18nBundle","InvisibleMessageMode","getScopedVarName","List","VALUE_STATE_SUCCESS","VALUE_STATE_INFORMATION","VALUE_STATE_ERROR","VALUE_STATE_WARNING","VALUE_STATE_TYPE_SUCCESS","VALUE_STATE_TYPE_INFORMATION","VALUE_STATE_TYPE_ERROR","VALUE_STATE_TYPE_WARNING","INPUT_SUGGESTIONS_TITLE","LIST_ITEM_POSITION","SELECT_ROLE_DESCRIPTION","FORM_SELECTABLE_REQUIRED","Label","ResponsivePopover","Popover","Icon","Button","SelectTemplate","selectCss","ResponsivePopoverCommonCss","ValueStateMessageCss","SelectPopoverCss","Select","Select_1","constructor","disabled","valueState","required","readonly","_iconPressed","opened","_listWidth","focused","_selectedIndexBeforeOpen","_escapePressed","_lastSelectedOption","_typedChars","formValidityMessage","i18nBundle","getText","formValidity","selectedOption","valueMissing","getAttribute","formElementAnchor","getFocusDomRefAsync","formFormattedValue","hasAttribute","value","textContent","onBeforeRendering","_ensureSingleSelection","style","setProperty","iconsCount","onAfterRendering","toggleValueStatePopover","shouldOpenValueStateMessagePopover","_isPickerOpen","responsivePopover","offsetWidth","selectedIndex","options","findLastIndex","option","selected","i","length","_onfocusin","_onfocusout","open","_respPopover","shadowRoot","querySelector","newValue","Array","from","children","forEach","_selectedIndex","findIndex","find","text","effectiveDisplayText","_toggleRespPopover","opener","_onkeydown","e","isTab","preventDefault","_handleHomeKey","_handleEndKey","_handleSelectionChange","_handleArrowNavigation","_handleKeyboardNavigation","typedCharacter","key","toLowerCase","test","clearTimeout","_typingTimeoutID","setTimeout","_selectTypedItem","currentIndex","itemToSelect","_searchNextItemByText","nextIndex","indexOf","_changeSelectedItem","itemSelectionAnnounce","_scrollSelectedItem","orderedOptions","slice","optionsAfterSelected","splice","optionsBeforeSelected","concat","startsWith","lastIndex","_onkeyup","_getItemIndex","item","_select","index","fireEvent","_handleItemPress","listItem","detail","selectedItemIndex","_itemMousedown","_onclick","getFocusDomRef","focus","arguments","undefined","itemRef","_currentlySelectedOption","getDomRef","scrollIntoView","behavior","block","inline","isDownKey","_getNextOptionIndex","_getPreviousOptionIndex","oldIndex","newIndex","previousOption","nextOption","_fireChangeEvent","_beforeOpen","_afterOpen","_applyFocusToSelectedItem","_afterClose","hasCustomLabel","label","changePrevented","valueStateTextMappings","Positive","Information","Negative","Critical","valueStateTypeMappings","valueStateText","shouldDisplayDefaultValueStateMessage","valueStateDefaultText","valueStateMessage","map","el","join","valueStateTypeText","None","hasValueState","valueStateTextId","_id","isDisabled","_headerTitleText","_effectiveTabIndex","_valueStateMessageInputIcon","iconPerValueState","selectedOptionIcon","classes","popoverValueState","popover","styles","popoverHeader","responsivePopoverHeader","ariaLabelText","hasValueStateText","_isPhone","_ariaRoleDescription","optionsCount","itemPositionText","Polite","openValueStatePopover","valueStatePopover","_getPopover","closeValueStatePopover","icon","onDefine","__decorate","type","Boolean","noAttribute","Number","HTMLElement","invalidateOnChildChange","tag","languageAware","formAssociated","renderer","template","dependencies","define"],"sources":["/home/user/projects/reactproj/node_modules/@ui5/webcomponents/src/Select.ts"],"sourcesContent":["import UI5Element from \"@ui5/webcomponents-base/dist/UI5Element.js\";\nimport customElement from \"@ui5/webcomponents-base/dist/decorators/customElement.js\";\nimport property from \"@ui5/webcomponents-base/dist/decorators/property.js\";\nimport event from \"@ui5/webcomponents-base/dist/decorators/event.js\";\nimport slot from \"@ui5/webcomponents-base/dist/decorators/slot.js\";\nimport litRender from \"@ui5/webcomponents-base/dist/renderer/LitRenderer.js\";\nimport {\n\tisSpace,\n\tisUp,\n\tisDown,\n\tisEnter,\n\tisEscape,\n\tisHome,\n\tisEnd,\n\tisShow,\n\tisTabNext,\n\tisTabPrevious,\n} from \"@ui5/webcomponents-base/dist/Keys.js\";\nimport announce from \"@ui5/webcomponents-base/dist/util/InvisibleMessage.js\";\nimport { getEffectiveAriaLabelText } from \"@ui5/webcomponents-base/dist/util/AriaLabelHelper.js\";\nimport ValueState from \"@ui5/webcomponents-base/dist/types/ValueState.js\";\nimport \"@ui5/webcomponents-icons/dist/slim-arrow-down.js\";\nimport \"@ui5/webcomponents-icons/dist/error.js\";\nimport \"@ui5/webcomponents-icons/dist/alert.js\";\nimport \"@ui5/webcomponents-icons/dist/sys-enter-2.js\";\nimport \"@ui5/webcomponents-icons/dist/information.js\";\nimport { isPhone } from \"@ui5/webcomponents-base/dist/Device.js\";\nimport type I18nBundle from \"@ui5/webcomponents-base/dist/i18nBundle.js\";\nimport { getI18nBundle } from \"@ui5/webcomponents-base/dist/i18nBundle.js\";\nimport \"@ui5/webcomponents-icons/dist/decline.js\";\nimport type { Timeout } from \"@ui5/webcomponents-base/dist/types.js\";\nimport InvisibleMessageMode from \"@ui5/webcomponents-base/dist/types/InvisibleMessageMode.js\";\nimport { getScopedVarName } from \"@ui5/webcomponents-base/dist/CustomElementsScope.js\";\nimport type { IFormInputElement } from \"@ui5/webcomponents-base/dist/features/InputElementsFormSupport.js\";\nimport List from \"./List.js\";\nimport type { ListItemClickEventDetail } from \"./List.js\";\nimport {\n\tVALUE_STATE_SUCCESS,\n\tVALUE_STATE_INFORMATION,\n\tVALUE_STATE_ERROR,\n\tVALUE_STATE_WARNING,\n\tVALUE_STATE_TYPE_SUCCESS,\n\tVALUE_STATE_TYPE_INFORMATION,\n\tVALUE_STATE_TYPE_ERROR,\n\tVALUE_STATE_TYPE_WARNING,\n\tINPUT_SUGGESTIONS_TITLE,\n\tLIST_ITEM_POSITION,\n\tSELECT_ROLE_DESCRIPTION,\n\tFORM_SELECTABLE_REQUIRED,\n} from \"./generated/i18n/i18n-defaults.js\";\nimport Label from \"./Label.js\";\nimport ResponsivePopover from \"./ResponsivePopover.js\";\nimport Popover from \"./Popover.js\";\nimport Icon from \"./Icon.js\";\nimport Button from \"./Button.js\";\nimport type ListItemBase from \"./ListItemBase.js\";\n\n// Templates\nimport SelectTemplate from \"./generated/templates/SelectTemplate.lit.js\";\n\n// Styles\nimport selectCss from \"./generated/themes/Select.css.js\";\nimport ResponsivePopoverCommonCss from \"./generated/themes/ResponsivePopoverCommon.css.js\";\nimport ValueStateMessageCss from \"./generated/themes/ValueStateMessage.css.js\";\nimport SelectPopoverCss from \"./generated/themes/SelectPopover.css.js\";\n\n/**\n * Interface for components that may be slotted inside `ui5-select` as options\n * @public\n */\ntype IOption = ListItemBase & {\n\ttooltip?: string,\n\ticon?: string,\n\tvalue?: string,\n\tadditionalText?: string,\n\tfocused?: boolean,\n\teffectiveDisplayText: string,\n};\n\ntype SelectChangeEventDetail = {\n\tselectedOption: IOption,\n}\ntype SelectLiveChangeEventDetail = {\n\tselectedOption: IOption,\n}\n\n/**\n * @class\n *\n * ### Overview\n *\n * The `ui5-select` component is used to create a drop-down list.\n *\n * ### Usage\n *\n * There are two main usages of the `ui5-select>`.\n *\n * 1. With Option (`ui5-option`) web component:\n *\n * The available options of the Select are defined by using the Option component.\n * The Option comes with predefined design and layout, including `icon`, `text` and `additional-text`.\n *\n * 2. With OptionCustom (`ui5-option-custom`) web component.\n *\n * Options with custom content are defined by using the OptionCustom component\n * The OptionCustom component comes with no predefined layout and it expects consumers to define it.\n *\n * ### Keyboard Handling\n * The `ui5-select` provides advanced keyboard handling.\n *\n * - [F4] / [Alt] + [Up] / [Alt] + [Down] / [Space] or [Enter] - Opens/closes the drop-down.\n * - [Up] or [Down] - If the drop-down is closed - changes selection to the next or the previous option. If the drop-down is opened - moves focus to the next or the previous option.\n * - [Space], [Enter] - If the drop-down is opened - selects the focused option.\n * - [Escape] - Closes the drop-down without changing the selection.\n * - [Home] - Navigates to first option\n * - [End] - Navigates to the last option\n *\n * ### ES6 Module Import\n * `import \"@ui5/webcomponents/dist/Select\";`\n *\n * `import \"@ui5/webcomponents/dist/Option\";`\n * `import \"@ui5/webcomponents/dist/OptionCustom\";`\n * @constructor\n * @extends UI5Element\n * @public\n * @csspart popover - Used to style the popover element\n * @since 0.8.0\n */\n@customElement({\n\ttag: \"ui5-select\",\n\tlanguageAware: true,\n\tformAssociated: true,\n\trenderer: litRender,\n\ttemplate: SelectTemplate,\n\tstyles: [\n\t\tselectCss,\n\t\tResponsivePopoverCommonCss,\n\t\tValueStateMessageCss,\n\t\tSelectPopoverCss,\n\t],\n\tdependencies: [\n\t\tLabel,\n\t\tResponsivePopover,\n\t\tPopover,\n\t\tList,\n\t\tIcon,\n\t\tButton,\n\t],\n})\n/**\n * Fired when the selected option changes.\n * @allowPreventDefault\n * @param {IOption} selectedOption the selected option.\n * @public\n */\n@event<SelectChangeEventDetail>(\"change\", {\n\tdetail: {\n\t\t/**\n\t\t* @public\n\t\t*/\n\t\tselectedOption: { type: HTMLElement },\n\t},\n})\n/**\n * Fired when the user navigates through the options, but the selection is not finalized,\n * or when pressing the ESC key to revert the current selection.\n * @param {IOption} selectedOption the selected option.\n * @public\n * @since 1.17.0\n */\n@event<SelectLiveChangeEventDetail>(\"live-change\", {\n\tdetail: {\n\t\t/**\n\t\t* @public\n\t\t*/\n\t\tselectedOption: { type: HTMLElement },\n\t},\n})\n/**\n * Fired after the component's dropdown menu opens.\n * @public\n */\n@event(\"open\")\n/**\n * Fired after the component's dropdown menu closes.\n * @public\n */\n@event(\"close\")\nclass Select extends UI5Element implements IFormInputElement {\n\tstatic i18nBundle: I18nBundle;\n\n\t/**\n\t * Defines whether the component is in disabled state.\n\t *\n\t * **Note:** A disabled component is noninteractive.\n\t * @default false\n\t * @public\n\t */\n\t@property({ type: Boolean })\n\tdisabled = false;\n\n\t/**\n\t * Determines the name by which the component will be identified upon submission in an HTML form.\n\t *\n\t * **Note:** This property is only applicable within the context of an HTML Form element.\n\t * @default undefined\n\t * @public\n\t */\n\t@property()\n\tname?: string;\n\n\t/**\n\t * Defines the value state of the component.\n\t * @default \"None\"\n\t * @public\n\t */\n\t@property()\n\tvalueState: `${ValueState}` = \"None\";\n\n\t/**\n\t * Defines whether the component is required.\n\t * @since 1.0.0-rc.9\n\t * @default false\n\t * @public\n\t */\n\t@property({ type: Boolean })\n\trequired = false;\n\n\t/**\n\t * Defines whether the component is read-only.\n\t *\n\t * **Note:** A read-only component is not editable,\n\t * but still provides visual feedback upon user interaction.\n\t * @default false\n\t * @since 1.21.0\n\t * @public\n\t */\n\t@property({ type: Boolean })\n\treadonly = false;\n\n\t/**\n\t * Defines the accessible ARIA name of the component.\n\t * @since 1.0.0-rc.9\n\t * @public\n\t * @default undefined\n\t */\n\t@property()\n\taccessibleName?: string;\n\n\t/**\n\t * Receives id(or many ids) of the elements that label the select.\n\t * @default undefined\n\t * @public\n\t * @since 1.0.0-rc.15\n\t */\n\t@property()\n\taccessibleNameRef?: string;\n\n\t/**\n\t * @private\n\t */\n\t@property({ type: Boolean, noAttribute: true })\n\t_iconPressed = false;\n\n\t/**\n\t * @private\n\t */\n\t@property({ type: Boolean })\n\topened = false;\n\n\t/**\n\t * @private\n\t */\n\t@property({ type: Number, noAttribute: true })\n\t_listWidth = 0;\n\n\t/**\n\t * @private\n\t */\n\t@property({ type: Boolean })\n\tfocused = false;\n\n\t_selectedIndexBeforeOpen = -1;\n\t_escapePressed = false;\n\t_lastSelectedOption: IOption | null = null;;\n\t_typedChars = \"\";\n\t_typingTimeoutID?: Timeout | number;\n\tresponsivePopover!: ResponsivePopover;\n\tvalueStatePopover?: Popover;\n\n\t/**\n\t * Defines the component options.\n\t *\n\t * **Note:** Only one selected option is allowed.\n\t * If more than one option is defined as selected, the last one would be considered as the selected one.\n\t *\n\t * **Note:** Use the `ui5-option` component to define the desired options.\n\t * @public\n\t */\n\t@slot({ \"default\": true, type: HTMLElement, invalidateOnChildChange: true })\n\toptions!: Array<IOption>;\n\n\t/**\n\t * Defines the value state message that will be displayed as pop up under the component.\n\t *\n\t * **Note:** If not specified, a default text (in the respective language) will be displayed.\n\t *\n\t * **Note:** The `valueStateMessage` would be displayed,\n\t * when the component is in `Information`, `Critical` or `Negative` value state.\n\t *\n\t * **Note:** If the component has `suggestionItems`,\n\t * the `valueStateMessage` would be displayed as part of the same popover, if used on desktop, or dialog - on phone.\n\t * @public\n\t*/\n\t@slot()\n\tvalueStateMessage!: Array<HTMLElement>;\n\n\t/**\n\t * Defines the HTML element that will be displayed in the component input part,\n\t * representing the selected option.\n\t *\n\t * **Note:** If not specified and `ui5-option-custom` is used,\n\t * either the option's `display-text` or its textContent will be displayed.\n\t *\n\t * **Note:** If not specified and `ui5-option` is used,\n\t * the option's textContent will be displayed.\n\t * @public\n\t * @since 1.17.0\n\t*/\n\t@slot()\n\tlabel!: Array<HTMLElement>;\n\n\tget formValidityMessage() {\n\t\treturn Select.i18nBundle.getText(FORM_SELECTABLE_REQUIRED);\n\t}\n\n\tget formValidity(): ValidityStateFlags {\n\t\tconst selectedOption = this.selectedOption;\n\n\t\treturn { valueMissing: this.required && (selectedOption && selectedOption.getAttribute(\"value\") === \"\") };\n\t}\n\n\tasync formElementAnchor() {\n\t\treturn this.getFocusDomRefAsync();\n\t}\n\n\tget formFormattedValue() {\n\t\tconst selectedOption = this.selectedOption;\n\n\t\tif (selectedOption) {\n\t\t\treturn selectedOption.hasAttribute(\"value\") ? selectedOption.value! : selectedOption.textContent;\n\t\t}\n\n\t\treturn \"\";\n\t}\n\n\tonBeforeRendering() {\n\t\tthis._ensureSingleSelection();\n\n\t\tthis.style.setProperty(getScopedVarName(\"--_ui5-input-icons-count\"), `${this.iconsCount}`);\n\t}\n\n\tonAfterRendering() {\n\t\tthis.toggleValueStatePopover(this.shouldOpenValueStateMessagePopover);\n\n\t\tif (this._isPickerOpen) {\n\t\t\tif (!this._listWidth) {\n\t\t\t\tthis._listWidth = this.responsivePopover.offsetWidth;\n\t\t\t}\n\t\t}\n\t}\n\n\t_ensureSingleSelection() {\n\t\t// if no item is selected => select the first one\n\t\t// if multiple items are selected => select the last selected one\n\t\tlet selectedIndex = this.options.findLastIndex(option => option.selected);\n\t\tselectedIndex = selectedIndex === -1 ? 0 : selectedIndex;\n\t\tfor (let i = 0; i < this.options.length; i++) {\n\t\t\tthis.options[i].selected = selectedIndex === i;\n\t\t\tif (selectedIndex === i) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\t_onfocusin() {\n\t\tthis.focused = true;\n\t}\n\n\t_onfocusout() {\n\t\tthis.focused = false;\n\t}\n\n\tget _isPickerOpen() {\n\t\treturn !!this.responsivePopover && this.responsivePopover.open;\n\t}\n\n\t_respPopover() {\n\t\treturn this.shadowRoot!.querySelector<ResponsivePopover>(\"[ui5-responsive-popover]\")!;\n\t}\n\n\t/**\n\t * Defines the value of the component:\n\t *\n\t * - when get - returns the value of the component, e.g. the `value` property of the selected option or its text content.\n\t *\n\t * - when set - selects the option with matching `value` property or text content.\n\t *\n\t * **Note:** If the given value does not match any existing option,\n\t * the first option will get selected.\n\t * @public\n\t * @default \"\"\n\t * @since 1.20.0\n\t * @formProperty\n\t * @formEvents change liveChange\n\t */\n\t@property({ noAttribute: true })\n\tset value(newValue: string) {\n\t\tconst options = Array.from(this.children) as Array<IOption>;\n\n\t\toptions.forEach(option => {\n\t\t\toption.selected = !!((option.getAttribute(\"value\") || option.textContent) === newValue);\n\t\t});\n\t}\n\n\tget value(): string {\n\t\treturn this.selectedOption?.value || this.selectedOption?.textContent || \"\";\n\t}\n\n\tget _selectedIndex() {\n\t\treturn this.options.findIndex(option => option.selected);\n\t}\n\n\t/**\n\t * Currently selected `ui5-option` element.\n\t * @public\n\t * @default undefined\n\t */\n\tget selectedOption(): IOption | undefined {\n\t\treturn this.options.find(option => option.selected);\n\t}\n\n\tget text() {\n\t\treturn this.selectedOption?.effectiveDisplayText;\n\t}\n\n\t_toggleRespPopover() {\n\t\tif (this.disabled || this.readonly) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._iconPressed = true;\n\n\t\tthis.responsivePopover = this._respPopover();\n\t\tif (this._isPickerOpen) {\n\t\t\tthis.responsivePopover.open = false;\n\t\t} else {\n\t\t\tthis.responsivePopover.opener = this;\n\t\t\tthis.responsivePopover.open = true;\n\t\t}\n\t}\n\n\t_onkeydown(e: KeyboardEvent) {\n\t\tconst isTab = (isTabNext(e) || isTabPrevious(e));\n\n\t\tif (isTab && this._isPickerOpen) {\n\t\t\tthis.responsivePopover.open = false;\n\t\t} else if (isShow(e)) {\n\t\t\te.preventDefault();\n\t\t\tthis._toggleRespPopover();\n\t\t} else if (isSpace(e)) {\n\t\t\te.preventDefault();\n\t\t} else if (isEscape(e) && this._isPickerOpen) {\n\t\t\tthis._escapePressed = true;\n\t\t} else if (isHome(e)) {\n\t\t\tthis._handleHomeKey(e);\n\t\t} else if (isEnd(e)) {\n\t\t\tthis._handleEndKey(e);\n\t\t} else if (isEnter(e)) {\n\t\t\tthis._handleSelectionChange();\n\t\t} else if (isUp(e) || isDown(e)) {\n\t\t\tthis._handleArrowNavigation(e);\n\t\t}\n\t}\n\n\t_handleKeyboardNavigation(e: KeyboardEvent) {\n\t\tif (isEnter(e) || this.readonly) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst typedCharacter = e.key.toLowerCase();\n\n\t\tthis._typedChars += typedCharacter;\n\n\t\t// We check if we have more than one characters and they are all duplicate, we set the\n\t\t// text to be the last input character (typedCharacter). If not, we set the text to be\n\t\t// the whole input string.\n\n\t\tconst text = (/^(.)\\1+$/i).test(this._typedChars) ? typedCharacter : this._typedChars;\n\n\t\tclearTimeout(this._typingTimeoutID);\n\n\t\tthis._typingTimeoutID = setTimeout(() => {\n\t\t\tthis._typedChars = \"\";\n\t\t\tthis._typingTimeoutID = -1;\n\t\t}, 1000);\n\n\t\tthis._selectTypedItem(text);\n\t}\n\n\t_selectTypedItem(text: string) {\n\t\tconst currentIndex = this._selectedIndex;\n\t\tconst itemToSelect = this._searchNextItemByText(text);\n\n\t\tif (itemToSelect) {\n\t\t\tconst nextIndex = this.options.indexOf(itemToSelect);\n\n\t\t\tthis._changeSelectedItem(this._selectedIndex, nextIndex);\n\n\t\t\tif (currentIndex !== this._selectedIndex) {\n\t\t\t\tthis.itemSelectionAnnounce();\n\t\t\t\tthis._scrollSelectedItem();\n\t\t\t}\n\t\t}\n\t}\n\n\t_searchNextItemByText(text: string) {\n\t\tlet orderedOptions = this.options.slice(0);\n\t\tconst optionsAfterSelected = orderedOptions.splice(this._selectedIndex + 1, orderedOptions.length - this._selectedIndex);\n\t\tconst optionsBeforeSelected = orderedOptions.splice(0, orderedOptions.length - 1);\n\n\t\torderedOptions = optionsAfterSelected.concat(optionsBeforeSelected);\n\n\t\treturn orderedOptions.find(option => option.effectiveDisplayText.toLowerCase().startsWith(text));\n\t}\n\n\t_handleHomeKey(e: KeyboardEvent) {\n\t\te.preventDefault();\n\n\t\tif (this.readonly) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._changeSelectedItem(this._selectedIndex, 0);\n\t}\n\n\t_handleEndKey(e: KeyboardEvent) {\n\t\te.preventDefault();\n\n\t\tif (this.readonly) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst lastIndex = this.options.length - 1;\n\t\tthis._changeSelectedItem(this._selectedIndex, lastIndex);\n\t}\n\n\t_onkeyup(e: KeyboardEvent) {\n\t\tif (isSpace(e)) {\n\t\t\tif (this._isPickerOpen) {\n\t\t\t\tthis._handleSelectionChange();\n\t\t\t} else {\n\t\t\t\tthis._toggleRespPopover();\n\t\t\t}\n\t\t}\n\t}\n\n\t_getItemIndex(item: IOption) {\n\t\treturn this.options.indexOf(item);\n\t}\n\n\t_select(index: number) {\n\t\tconst selectedIndex = this._selectedIndex;\n\t\tif (index < 0 || index >= this.options.length || this.options.length === 0) {\n\t\t\treturn;\n\t\t}\n\t\tif (this.options[selectedIndex]) {\n\t\t\tthis.options[selectedIndex].selected = false;\n\t\t}\n\n\t\tif (selectedIndex !== index) {\n\t\t\tthis.fireEvent<SelectLiveChangeEventDetail>(\"live-change\", { selectedOption: this.options[index] });\n\t\t}\n\n\t\tthis.options[index].selected = true;\n\t}\n\n\t/**\n\t * The user clicked on an item from the list\n\t * @private\n\t */\n\t_handleItemPress(e: CustomEvent<ListItemClickEventDetail>) {\n\t\tconst listItem = e.detail.item;\n\t\tconst selectedItemIndex = this._getItemIndex(listItem as IOption);\n\n\t\tthis._handleSelectionChange(selectedItemIndex);\n\t}\n\n\t_itemMousedown(e: MouseEvent) {\n\t\t// prevent actual focus of items\n\t\te.preventDefault();\n\t}\n\n\t_onclick() {\n\t\tthis.getFocusDomRef()!.focus();\n\t\tthis._toggleRespPopover();\n\t}\n\n\t/**\n\t * The user selected an item with Enter or Space\n\t * @private\n\t */\n\t_handleSelectionChange(index = this._selectedIndex) {\n\t\tthis._select(index);\n\n\t\tthis._toggleRespPopover();\n\t}\n\n\t_scrollSelectedItem() {\n\t\tif (this._isPickerOpen) {\n\t\t\tconst itemRef = this._currentlySelectedOption?.getDomRef();\n\t\t\tif (itemRef) {\n\t\t\t\titemRef.scrollIntoView({\n\t\t\t\t\tbehavior: \"auto\",\n\t\t\t\t\tblock: \"nearest\",\n\t\t\t\t\tinline: \"nearest\",\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t}\n\n\t_handleArrowNavigation(e: KeyboardEvent) {\n\t\te.preventDefault();\n\n\t\tif (this.readonly) {\n\t\t\treturn;\n\t\t}\n\n\t\tlet nextIndex = -1;\n\t\tconst currentIndex = this._selectedIndex;\n\t\tconst isDownKey = isDown(e);\n\n\t\tif (isDownKey) {\n\t\t\tnextIndex = this._getNextOptionIndex();\n\t\t} else {\n\t\t\tnextIndex = this._getPreviousOptionIndex();\n\t\t}\n\n\t\tthis._changeSelectedItem(this._selectedIndex, nextIndex);\n\n\t\tif (currentIndex !== this._selectedIndex) {\n\t\t\t// Announce new item even if picker is opened.\n\t\t\t// The aria-activedescendents attribute can't be used,\n\t\t\t// because listitem elements are in different shadow dom\n\t\t\tthis.itemSelectionAnnounce();\n\t\t\tthis._scrollSelectedItem();\n\t\t}\n\t}\n\n\t_changeSelectedItem(oldIndex: number, newIndex: number) {\n\t\tconst options: Array<IOption> = this.options;\n\n\t\tconst previousOption = options[oldIndex];\n\t\tconst nextOption = options[newIndex];\n\n\t\tif (previousOption === nextOption) {\n\t\t\treturn;\n\t\t}\n\n\t\tpreviousOption.selected = false;\n\t\tpreviousOption.focused = false;\n\n\t\tnextOption.selected = true;\n\t\tnextOption.focused = true;\n\n\t\tthis.fireEvent<SelectLiveChangeEventDetail>(\"live-change\", { selectedOption: nextOption });\n\n\t\tif (!this._isPickerOpen) {\n\t\t\t// arrow pressed on closed picker - do selection change\n\t\t\tthis._fireChangeEvent(nextOption);\n\t\t}\n\t}\n\n\t_getNextOptionIndex() {\n\t\treturn this._selectedIndex === (this.options.length - 1) ? this._selectedIndex : (this._selectedIndex + 1);\n\t}\n\n\t_getPreviousOptionIndex() {\n\t\treturn this._selectedIndex === 0 ? this._selectedIndex : (this._selectedIndex - 1);\n\t}\n\n\t_beforeOpen() {\n\t\tthis._selectedIndexBeforeOpen = this._selectedIndex;\n\t\tthis._lastSelectedOption = this.options[this._selectedIndex];\n\t}\n\n\t_afterOpen() {\n\t\tthis.opened = true;\n\t\tthis.fireEvent<CustomEvent>(\"open\");\n\t\tthis.itemSelectionAnnounce();\n\t\tthis._scrollSelectedItem();\n\t\tthis._applyFocusToSelectedItem();\n\t}\n\n\t_applyFocusToSelectedItem() {\n\t\tthis.options.forEach(option => {\n\t\t\toption.focused = option.selected;\n\t\t});\n\t}\n\n\t_afterClose() {\n\t\tthis.opened = false;\n\t\tthis._iconPressed = false;\n\t\tthis._listWidth = 0;\n\n\t\tif (this._escapePressed) {\n\t\t\tthis._select(this._selectedIndexBeforeOpen);\n\t\t\tthis._escapePressed = false;\n\t\t} else if (this._lastSelectedOption !== this.options[this._selectedIndex]) {\n\t\t\tthis._fireChangeEvent(this.options[this._selectedIndex]);\n\t\t\tthis._lastSelectedOption = this.options[this._selectedIndex];\n\t\t}\n\t\tthis.fireEvent<CustomEvent>(\"close\");\n\t}\n\n\tget hasCustomLabel() {\n\t\treturn !!this.label.length;\n\t}\n\n\t_fireChangeEvent(selectedOption: IOption) {\n\t\tconst changePrevented = !this.fireEvent<SelectChangeEventDetail>(\"change\", { selectedOption }, true);\n\n\t\t//  Angular two way data binding\n\t\tthis.fireEvent(\"selected-item-changed\");\n\n\t\tif (changePrevented) {\n\t\t\tthis._select(this._selectedIndexBeforeOpen);\n\t\t}\n\t}\n\n\tget valueStateTextMappings() {\n\t\treturn {\n\t\t\t[ValueState.Positive]: Select.i18nBundle.getText(VALUE_STATE_SUCCESS),\n\t\t\t[ValueState.Information]: Select.i18nBundle.getText(VALUE_STATE_INFORMATION),\n\t\t\t[ValueState.Negative]: Select.i18nBundle.getText(VALUE_STATE_ERROR),\n\t\t\t[ValueState.Critical]: Select.i18nBundle.getText(VALUE_STATE_WARNING),\n\t\t};\n\t}\n\n\tget valueStateTypeMappings() {\n\t\treturn {\n\t\t\t[ValueState.Positive]: Select.i18nBundle.getText(VALUE_STATE_TYPE_SUCCESS),\n\t\t\t[ValueState.Information]: Select.i18nBundle.getText(VALUE_STATE_TYPE_INFORMATION),\n\t\t\t[ValueState.Negative]: Select.i18nBundle.getText(VALUE_STATE_TYPE_ERROR),\n\t\t\t[ValueState.Critical]: Select.i18nBundle.getText(VALUE_STATE_TYPE_WARNING),\n\t\t};\n\t}\n\n\tget valueStateText() {\n\t\tlet valueStateText;\n\n\t\tif (this.shouldDisplayDefaultValueStateMessage) {\n\t\t\tvalueStateText = this.valueStateDefaultText;\n\t\t} else {\n\t\t\tvalueStateText = this.valueStateMessage.map(el => el.textContent).join(\" \");\n\t\t}\n\n\t\treturn `${this.valueStateTypeText} ${valueStateText}`;\n\t}\n\n\tget valueStateDefaultText() {\n\t\treturn this.valueState !== ValueState.None ? this.valueStateTextMappings[this.valueState] : \"\";\n\t}\n\n\tget valueStateTypeText() {\n\t\treturn this.valueState !== ValueState.None ? this.valueStateTypeMappings[this.valueState] : \"\";\n\t}\n\n\tget hasValueState() {\n\t\treturn this.valueState !== ValueState.None;\n\t}\n\n\tget valueStateTextId() {\n\t\treturn this.hasValueState ? `${this._id}-valueStateDesc` : undefined;\n\t}\n\n\tget isDisabled() {\n\t\treturn this.disabled || undefined;\n\t}\n\n\tget _headerTitleText() {\n\t\treturn Select.i18nBundle.getText(INPUT_SUGGESTIONS_TITLE);\n\t}\n\n\tget _currentlySelectedOption() {\n\t\treturn this.options[this._selectedIndex];\n\t}\n\n\tget _effectiveTabIndex() {\n\t\treturn this.disabled\n\t\t|| (this.responsivePopover // Handles focus on Tab/Shift + Tab when the popover is opened\n\t\t&& this.responsivePopover.open) ? \"-1\" : \"0\";\n\t}\n\n\t /**\n\t * This method is relevant for sap_horizon theme only\n\t */\n\tget _valueStateMessageInputIcon() {\n\t\tconst iconPerValueState = {\n\t\t\tNegative: \"error\",\n\t\t\tCritical: \"alert\",\n\t\t\tPositive: \"sys-enter-2\",\n\t\t\tInformation: \"information\",\n\t\t};\n\n\t\treturn this.valueState !== ValueState.None ? iconPerValueState[this.valueState] : \"\";\n\t}\n\n\tget iconsCount(): number {\n\t\treturn this.selectedOptionIcon ? 2 : 1;\n\t}\n\n\tget classes() {\n\t\treturn {\n\t\t\tpopoverValueState: {\n\t\t\t\t\"ui5-valuestatemessage-root\": true,\n\t\t\t\t\"ui5-valuestatemessage--success\": this.valueState === ValueState.Positive,\n\t\t\t\t\"ui5-valuestatemessage--error\": this.valueState === ValueState.Negative,\n\t\t\t\t\"ui5-valuestatemessage--warning\": this.valueState === ValueState.Critical,\n\t\t\t\t\"ui5-valuestatemessage--information\": this.valueState === ValueState.Information,\n\t\t\t},\n\t\t\tpopover: {\n\t\t\t\t\"ui5-select-popover-valuestate\": this.hasValueState,\n\t\t\t},\n\t\t};\n\t}\n\n\tget styles() {\n\t\treturn {\n\t\t\tpopoverHeader: {\n\t\t\t\t\"max-width\": `${this.offsetWidth}px`,\n\t\t\t},\n\t\t\tresponsivePopoverHeader: {\n\t\t\t\t\"display\": this.options.length && this._listWidth === 0 ? \"none\" : \"inline-block\",\n\t\t\t\t\"width\": `${this.options.length ? this._listWidth : this.offsetWidth}px`,\n\t\t\t},\n\t\t\tresponsivePopover: {\n\t\t\t\t\"min-width\": `${this.offsetWidth}px`,\n\t\t\t},\n\t\t};\n\t}\n\n\tget ariaLabelText() {\n\t\treturn getEffectiveAriaLabelText(this);\n\t}\n\n\tget shouldDisplayDefaultValueStateMessage() {\n\t\treturn !this.valueStateMessage.length && this.hasValueStateText;\n\t}\n\n\tget hasValueStateText() {\n\t\treturn this.hasValueState && this.valueState !== ValueState.Positive;\n\t}\n\n\tget shouldOpenValueStateMessagePopover() {\n\t\treturn this.focused && this.hasValueStateText && !this._iconPressed\n\t\t\t&& !this._isPickerOpen && !this._isPhone;\n\t}\n\n\tget _ariaRoleDescription() {\n\t\treturn Select.i18nBundle.getText(SELECT_ROLE_DESCRIPTION);\n\t}\n\n\tget _isPhone() {\n\t\treturn isPhone();\n\t}\n\n\titemSelectionAnnounce() {\n\t\tlet text;\n\t\tconst optionsCount = this.options.length;\n\t\tconst itemPositionText = Select.i18nBundle.getText(LIST_ITEM_POSITION, this._selectedIndex + 1, optionsCount);\n\n\t\tif (this.focused && this._currentlySelectedOption) {\n\t\t\ttext = `${this._currentlySelectedOption.textContent as string} ${this._isPickerOpen ? itemPositionText : \"\"}`;\n\n\t\t\tannounce(text, InvisibleMessageMode.Polite);\n\t\t}\n\t}\n\n\topenValueStatePopover() {\n\t\tthis.valueStatePopover = this._getPopover() as Popover;\n\t\tif (this.valueStatePopover) {\n\t\t\tthis.valueStatePopover.opener = this;\n\t\t\tthis.valueStatePopover.open = true;\n\t\t}\n\t}\n\n\tcloseValueStatePopover() {\n\t\tthis.valueStatePopover && (this.valueStatePopover.open = false);\n\t}\n\n\ttoggleValueStatePopover(open: boolean) {\n\t\tif (open) {\n\t\t\tthis.openValueStatePopover();\n\t\t} else {\n\t\t\tthis.closeValueStatePopover();\n\t\t}\n\t}\n\n\tget selectedOptionIcon() {\n\t\treturn this.selectedOption && this.selectedOption.icon;\n\t}\n\n\t_getPopover() {\n\t\treturn this.shadowRoot!.querySelector<Popover>(\"[ui5-popover]\");\n\t}\n\n\tstatic async onDefine() {\n\t\tSelect.i18nBundle = await getI18nBundle(\"@ui5/webcomponents\");\n\t}\n}\n\nSelect.define();\n\nexport default Select;\nexport type {\n\tIOption,\n\tSelectChangeEventDetail,\n\tSelectLiveChangeEventDetail,\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}