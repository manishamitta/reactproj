{"ast":null,"code":"\"use strict\";\n\nconst s = new Map(),\n  o = new Map(),\n  n = new Map(),\n  c = e => {\n    if (!s.has(e)) {\n      const a = p(e.split(\"-\"));\n      s.set(e, a);\n    }\n    return s.get(e);\n  },\n  l = e => {\n    if (!o.has(e)) {\n      const a = e.replace(/([a-z])([A-Z])/g, \"$1-$2\").toLowerCase();\n      o.set(e, a);\n    }\n    return o.get(e);\n  },\n  p = e => e.map((a, t) => t === 0 ? a.toLowerCase() : a.charAt(0).toUpperCase() + a.slice(1).toLowerCase()).join(\"\"),\n  b = e => {\n    const a = n.get(e);\n    if (a) return a;\n    const t = c(e),\n      r = t.charAt(0).toUpperCase() + t.slice(1);\n    return n.set(e, r), r;\n  };\nexport { c as kebabToCamelCase, l as camelToKebabCase, b as kebabToPascalCase };","map":{"version":3,"names":["s","Map","o","n","c","e","has","a","p","split","set","get","l","replace","toLowerCase","map","t","charAt","toUpperCase","slice","join","b","r","kebabToCamelCase","camelToKebabCase","kebabToPascalCase"],"sources":["/home/user/projects/reactproj/node_modules/@ui5/webcomponents-base/src/util/StringHelper.ts"],"sourcesContent":["const kebabToCamelMap = new Map<string, string>();\nconst camelToKebabMap = new Map<string, string>();\nconst kebabToPascalMap = new Map<string, string>();\n\nconst kebabToCamelCase = (string: string) => {\n\tif (!kebabToCamelMap.has(string)) {\n\t\tconst result = toCamelCase(string.split(\"-\"));\n\t\tkebabToCamelMap.set(string, result);\n\t}\n\treturn kebabToCamelMap.get(string)!;\n};\n\nconst camelToKebabCase = (string: string) => {\n\tif (!camelToKebabMap.has(string)) {\n\t\tconst result = string.replace(/([a-z])([A-Z])/g, \"$1-$2\").toLowerCase();\n\t\tcamelToKebabMap.set(string, result);\n\t}\n\treturn camelToKebabMap.get(string)!;\n};\n\nconst toCamelCase = (parts: Array<string>) => {\n\treturn parts.map((string, index) => {\n\t\treturn index === 0 ? string.toLowerCase() : string.charAt(0).toUpperCase() + string.slice(1).toLowerCase();\n\t}).join(\"\");\n};\n\nconst kebabToPascalCase = (src: string) => {\n\tconst cachedName = kebabToPascalMap.get(src);\n\tif (cachedName) {\n\t\treturn cachedName;\n\t}\n\n\tconst camelStr = kebabToCamelCase(src);\n\tconst result = camelStr.charAt(0).toUpperCase() + camelStr.slice(1);\n\tkebabToPascalMap.set(src, result);\n\treturn result;\n};\n\nexport { kebabToCamelCase, camelToKebabCase, kebabToPascalCase };\n"],"mappings":";;AAAA,MAAMA,CAAA,GAAkB,IAAIC,GAAA;EACtBC,CAAA,GAAkB,IAAID,GAAA;EACtBE,CAAA,GAAmB,IAAIF,GAAA;EAEvBG,CAAA,GAAoBC,CAAA,IAAmB;IAC5C,IAAI,CAACL,CAAA,CAAgBM,GAAA,CAAID,CAAM,GAAG;MACjC,MAAME,CAAA,GAASC,CAAA,CAAYH,CAAA,CAAOI,KAAA,CAAM,GAAG,CAAC;MAC5CT,CAAA,CAAgBU,GAAA,CAAIL,CAAA,EAAQE,CAAM,CACnC;IAAA;IACA,OAAOP,CAAA,CAAgBW,GAAA,CAAIN,CAAM,CAClC;EAAA;EAEMO,CAAA,GAAoBP,CAAA,IAAmB;IAC5C,IAAI,CAACH,CAAA,CAAgBI,GAAA,CAAID,CAAM,GAAG;MACjC,MAAME,CAAA,GAASF,CAAA,CAAOQ,OAAA,CAAQ,mBAAmB,OAAO,EAAEC,WAAA,CAAY;MACtEZ,CAAA,CAAgBQ,GAAA,CAAIL,CAAA,EAAQE,CAAM,CACnC;IAAA;IACA,OAAOL,CAAA,CAAgBS,GAAA,CAAIN,CAAM,CAClC;EAAA;EAEMG,CAAA,GAAeH,CAAA,IACbA,CAAA,CAAMU,GAAA,CAAI,CAACR,CAAA,EAAQS,CAAA,KAClBA,CAAA,KAAU,IAAIT,CAAA,CAAOO,WAAA,CAAY,IAAIP,CAAA,CAAOU,MAAA,CAAO,CAAC,EAAEC,WAAA,CAAY,IAAIX,CAAA,CAAOY,KAAA,CAAM,CAAC,EAAEL,WAAA,CAAY,CACzG,EAAEM,IAAA,CAAK,EAAE;EAGLC,CAAA,GAAqBhB,CAAA,IAAgB;IAC1C,MAAME,CAAA,GAAaJ,CAAA,CAAiBQ,GAAA,CAAIN,CAAG;IAC3C,IAAIE,CAAA,EACH,OAAOA,CAAA;IAGR,MAAMS,CAAA,GAAWZ,CAAA,CAAiBC,CAAG;MAC/BiB,CAAA,GAASN,CAAA,CAASC,MAAA,CAAO,CAAC,EAAEC,WAAA,CAAY,IAAIF,CAAA,CAASG,KAAA,CAAM,CAAC;IAClE,OAAAhB,CAAA,CAAiBO,GAAA,CAAIL,CAAA,EAAKiB,CAAM,GACzBA,CACR;EAAA;AAEA,SAASlB,CAAA,IAAAmB,gBAAA,EAAkBX,CAAA,IAAAY,gBAAA,EAAkBH,CAAA,IAAAI,iBAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}