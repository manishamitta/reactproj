{"ast":null,"code":"import { enrichEventWithDetails } from '@ui5/webcomponents-react-base';\nimport { AnalyticalTableSelectionBehavior, AnalyticalTableSelectionMode } from '../../../enums/index.js';\nimport { CheckBox } from '../../../webComponents/CheckBox/index.js';\nimport { getBy } from '../util/index.js';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst customCheckBoxStyling = {\n  verticalAlign: 'middle'\n};\nconst headerProps = (props, _ref) => {\n  let {\n    instance: {\n      webComponentsReactProperties: {\n        selectionMode\n      }\n    }\n  } = _ref;\n  if (props.key === 'header___ui5wcr__internal_selection_column' && selectionMode === AnalyticalTableSelectionMode.Multiple) {\n    const style = {\n      ...props.style,\n      cursor: 'auto'\n    };\n    return [props, {\n      onClick: undefined,\n      onKeyDown: undefined,\n      title: undefined,\n      style\n    }];\n  }\n  return props;\n};\nconst columns = columns => {\n  return columns.map(column => {\n    if (column.id === '__ui5wcr__internal_selection_column') {\n      return {\n        ...column,\n        Cell: instance => {\n          const {\n            webComponentsReactProperties,\n            row\n          } = instance;\n          if (row.disableSelect === true) {\n            if (row.isGrouped && webComponentsReactProperties.selectionMode === AnalyticalTableSelectionMode.Single) {\n              return null;\n            }\n            if (webComponentsReactProperties.selectionMode === AnalyticalTableSelectionMode.Single) {\n              return /*#__PURE__*/_jsx(\"div\", {\n                onClick: undefined,\n                \"data-name\": \"internal_selection_column\"\n              });\n            }\n            return /*#__PURE__*/_jsx(CheckBox, {\n              ...row.getToggleRowSelectedProps(),\n              disabled: true,\n              style: customCheckBoxStyling,\n              \"data-name\": \"internal_selection_column\",\n              tabIndex: -1\n            });\n          }\n          return column.Cell(instance);\n        },\n        Header: () => null\n      };\n    }\n    return column;\n  });\n};\n\n/**\n * A plugin hook for disabling row selection of specific rows.\n *\n * __Note:__ The \"Select All\" checkbox is not available with this hook.\n *\n * @param disableRowSelection - Can be either a `string` or a `function`. `string:` Defines the key in the dataset for disabling rows. If the value of the key is `true`, then the row will not be selectable. `function:` Programmatically disable rows for selection. The function receives the current row as parameter.\n *\n * @deprecated It is not recommended to disable table rows, mainly because of the following reasons:\n *\n * * Users are not informed why items cannot be selected.\n * * ARIA lacks built-in support for selective item selection, complicating accessibility.\n * * Consistency to other applications which do not offer disabled items.\n */\nexport const useRowDisableSelection = disableRowSelection => {\n  const disableRowAccessor = typeof disableRowSelection === 'function' ? disableRowSelection : d => getBy(d.original, disableRowSelection, undefined);\n  const getRowProps = (rowProps, _ref2) => {\n    let {\n      row,\n      instance\n    } = _ref2;\n    const {\n      webComponentsReactProperties\n    } = instance;\n    if (disableRowAccessor(row) === true) {\n      row.disableSelect = true;\n      const handleClick = e => {\n        if (typeof webComponentsReactProperties.onRowClick === 'function') {\n          webComponentsReactProperties.onRowClick(enrichEventWithDetails(e, {\n            row\n          }));\n        }\n      };\n      const onKeyDown = e => {\n        if (e.code === 'Enter' || e.code === 'Space') {\n          e.preventDefault();\n          if (e.code === 'Enter' && typeof webComponentsReactProperties.onRowClick === 'function') {\n            webComponentsReactProperties.onRowClick(enrichEventWithDetails(e, {\n              row\n            }));\n          }\n        }\n      };\n      const onKeyUp = e => {\n        if (e.code === 'Space') {\n          e.preventDefault();\n          if (typeof webComponentsReactProperties.onRowClick === 'function') {\n            webComponentsReactProperties.onRowClick(enrichEventWithDetails(e, {\n              row\n            }));\n          }\n        }\n      };\n      return {\n        ...rowProps,\n        onClick: handleClick,\n        onKeyDown,\n        onKeyUp,\n        className: webComponentsReactProperties.classes.tr\n      };\n    }\n    return rowProps;\n  };\n  const columnDeps = deps => {\n    return [...deps, disableRowSelection];\n  };\n  const cellProps = (cellProps, _ref3) => {\n    let {\n      cell: {\n        row,\n        column\n      },\n      instance\n    } = _ref3;\n    const {\n      selectionMode,\n      selectionBehavior\n    } = instance.webComponentsReactProperties;\n    if (disableRowAccessor(row) === true && selectionMode !== AnalyticalTableSelectionMode.None && (selectionBehavior !== AnalyticalTableSelectionBehavior.RowSelector || column.id === '__ui5wcr__internal_selection_column')) {\n      const {\n        'aria-label': _0,\n        ...updatedCellProps\n      } = cellProps;\n      if (column.id === '__ui5wcr__internal_selection_column') {\n        const style = {\n          ...cellProps.style,\n          cursor: 'auto'\n        };\n        return {\n          ...updatedCellProps,\n          'aria-disabled': true,\n          style\n        };\n      }\n      const {\n        'aria-selected': _1,\n        ...updatedCellProsWithOutSelected\n      } = updatedCellProps;\n      return updatedCellProsWithOutSelected;\n    }\n    return cellProps;\n  };\n  const toggleRowSelectedProps = (rowProps, _ref4) => {\n    let {\n      row\n    } = _ref4;\n    if (disableRowAccessor(row) === true) {\n      const {\n        title: _0,\n        ...updatedRowProps\n      } = rowProps;\n      return updatedRowProps;\n    }\n    return rowProps;\n  };\n  const useDisableSelectionRow = hooks => {\n    hooks.getHeaderProps.push(headerProps);\n    hooks.getRowProps.push(getRowProps);\n    hooks.columns.push(columns);\n    hooks.columnsDeps.push(columnDeps);\n    hooks.getCellProps.push(cellProps);\n    hooks.getToggleRowSelectedProps.push(toggleRowSelectedProps);\n  };\n  useDisableSelectionRow.pluginName = 'useRowDisableSelection';\n  return useDisableSelectionRow;\n};","map":{"version":3,"names":["enrichEventWithDetails","AnalyticalTableSelectionBehavior","AnalyticalTableSelectionMode","CheckBox","getBy","jsx","_jsx","customCheckBoxStyling","verticalAlign","headerProps","props","_ref","instance","webComponentsReactProperties","selectionMode","key","Multiple","style","cursor","onClick","undefined","onKeyDown","title","columns","map","column","id","Cell","row","disableSelect","isGrouped","Single","getToggleRowSelectedProps","disabled","tabIndex","Header","useRowDisableSelection","disableRowSelection","disableRowAccessor","d","original","getRowProps","rowProps","_ref2","handleClick","e","onRowClick","code","preventDefault","onKeyUp","className","classes","tr","columnDeps","deps","cellProps","_ref3","cell","selectionBehavior","None","RowSelector","_0","updatedCellProps","_1","updatedCellProsWithOutSelected","toggleRowSelectedProps","_ref4","updatedRowProps","useDisableSelectionRow","hooks","getHeaderProps","push","columnsDeps","getCellProps","pluginName"],"sources":["/home/user/projects/reactproj/node_modules/@ui5/webcomponents-react/dist/components/AnalyticalTable/pluginHooks/useRowDisableSelection.js"],"sourcesContent":["import { enrichEventWithDetails } from '@ui5/webcomponents-react-base';\nimport { AnalyticalTableSelectionBehavior, AnalyticalTableSelectionMode } from '../../../enums/index.js';\nimport { CheckBox } from '../../../webComponents/CheckBox/index.js';\nimport { getBy } from '../util/index.js';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst customCheckBoxStyling = {\n  verticalAlign: 'middle'\n};\nconst headerProps = (props, {\n  instance: {\n    webComponentsReactProperties: {\n      selectionMode\n    }\n  }\n}) => {\n  if (props.key === 'header___ui5wcr__internal_selection_column' && selectionMode === AnalyticalTableSelectionMode.Multiple) {\n    const style = {\n      ...props.style,\n      cursor: 'auto'\n    };\n    return [props, {\n      onClick: undefined,\n      onKeyDown: undefined,\n      title: undefined,\n      style\n    }];\n  }\n  return props;\n};\nconst columns = columns => {\n  return columns.map(column => {\n    if (column.id === '__ui5wcr__internal_selection_column') {\n      return {\n        ...column,\n        Cell: instance => {\n          const {\n            webComponentsReactProperties,\n            row\n          } = instance;\n          if (row.disableSelect === true) {\n            if (row.isGrouped && webComponentsReactProperties.selectionMode === AnalyticalTableSelectionMode.Single) {\n              return null;\n            }\n            if (webComponentsReactProperties.selectionMode === AnalyticalTableSelectionMode.Single) {\n              return /*#__PURE__*/_jsx(\"div\", {\n                onClick: undefined,\n                \"data-name\": \"internal_selection_column\"\n              });\n            }\n            return /*#__PURE__*/_jsx(CheckBox, {\n              ...row.getToggleRowSelectedProps(),\n              disabled: true,\n              style: customCheckBoxStyling,\n              \"data-name\": \"internal_selection_column\",\n              tabIndex: -1\n            });\n          }\n          return column.Cell(instance);\n        },\n        Header: () => null\n      };\n    }\n    return column;\n  });\n};\n\n/**\n * A plugin hook for disabling row selection of specific rows.\n *\n * __Note:__ The \"Select All\" checkbox is not available with this hook.\n *\n * @param disableRowSelection - Can be either a `string` or a `function`. `string:` Defines the key in the dataset for disabling rows. If the value of the key is `true`, then the row will not be selectable. `function:` Programmatically disable rows for selection. The function receives the current row as parameter.\n *\n * @deprecated It is not recommended to disable table rows, mainly because of the following reasons:\n *\n * * Users are not informed why items cannot be selected.\n * * ARIA lacks built-in support for selective item selection, complicating accessibility.\n * * Consistency to other applications which do not offer disabled items.\n */\nexport const useRowDisableSelection = disableRowSelection => {\n  const disableRowAccessor = typeof disableRowSelection === 'function' ? disableRowSelection : d => getBy(d.original, disableRowSelection, undefined);\n  const getRowProps = (rowProps, {\n    row,\n    instance\n  }) => {\n    const {\n      webComponentsReactProperties\n    } = instance;\n    if (disableRowAccessor(row) === true) {\n      row.disableSelect = true;\n      const handleClick = e => {\n        if (typeof webComponentsReactProperties.onRowClick === 'function') {\n          webComponentsReactProperties.onRowClick(enrichEventWithDetails(e, {\n            row\n          }));\n        }\n      };\n      const onKeyDown = e => {\n        if (e.code === 'Enter' || e.code === 'Space') {\n          e.preventDefault();\n          if (e.code === 'Enter' && typeof webComponentsReactProperties.onRowClick === 'function') {\n            webComponentsReactProperties.onRowClick(enrichEventWithDetails(e, {\n              row\n            }));\n          }\n        }\n      };\n      const onKeyUp = e => {\n        if (e.code === 'Space') {\n          e.preventDefault();\n          if (typeof webComponentsReactProperties.onRowClick === 'function') {\n            webComponentsReactProperties.onRowClick(enrichEventWithDetails(e, {\n              row\n            }));\n          }\n        }\n      };\n      return {\n        ...rowProps,\n        onClick: handleClick,\n        onKeyDown,\n        onKeyUp,\n        className: webComponentsReactProperties.classes.tr\n      };\n    }\n    return rowProps;\n  };\n  const columnDeps = deps => {\n    return [...deps, disableRowSelection];\n  };\n  const cellProps = (cellProps, {\n    cell: {\n      row,\n      column\n    },\n    instance\n  }) => {\n    const {\n      selectionMode,\n      selectionBehavior\n    } = instance.webComponentsReactProperties;\n    if (disableRowAccessor(row) === true && selectionMode !== AnalyticalTableSelectionMode.None && (selectionBehavior !== AnalyticalTableSelectionBehavior.RowSelector || column.id === '__ui5wcr__internal_selection_column')) {\n      const {\n        'aria-label': _0,\n        ...updatedCellProps\n      } = cellProps;\n      if (column.id === '__ui5wcr__internal_selection_column') {\n        const style = {\n          ...cellProps.style,\n          cursor: 'auto'\n        };\n        return {\n          ...updatedCellProps,\n          'aria-disabled': true,\n          style\n        };\n      }\n      const {\n        'aria-selected': _1,\n        ...updatedCellProsWithOutSelected\n      } = updatedCellProps;\n      return updatedCellProsWithOutSelected;\n    }\n    return cellProps;\n  };\n  const toggleRowSelectedProps = (rowProps, {\n    row\n  }) => {\n    if (disableRowAccessor(row) === true) {\n      const {\n        title: _0,\n        ...updatedRowProps\n      } = rowProps;\n      return updatedRowProps;\n    }\n    return rowProps;\n  };\n  const useDisableSelectionRow = hooks => {\n    hooks.getHeaderProps.push(headerProps);\n    hooks.getRowProps.push(getRowProps);\n    hooks.columns.push(columns);\n    hooks.columnsDeps.push(columnDeps);\n    hooks.getCellProps.push(cellProps);\n    hooks.getToggleRowSelectedProps.push(toggleRowSelectedProps);\n  };\n  useDisableSelectionRow.pluginName = 'useRowDisableSelection';\n  return useDisableSelectionRow;\n};"],"mappings":"AAAA,SAASA,sBAAsB,QAAQ,+BAA+B;AACtE,SAASC,gCAAgC,EAAEC,4BAA4B,QAAQ,yBAAyB;AACxG,SAASC,QAAQ,QAAQ,0CAA0C;AACnE,SAASC,KAAK,QAAQ,kBAAkB;AACxC,SAASC,GAAG,IAAIC,IAAI,QAAQ,mBAAmB;AAC/C,MAAMC,qBAAqB,GAAG;EAC5BC,aAAa,EAAE;AACjB,CAAC;AACD,MAAMC,WAAW,GAAGA,CAACC,KAAK,EAAAC,IAAA,KAMpB;EAAA,IANsB;IAC1BC,QAAQ,EAAE;MACRC,4BAA4B,EAAE;QAC5BC;MACF;IACF;EACF,CAAC,GAAAH,IAAA;EACC,IAAID,KAAK,CAACK,GAAG,KAAK,4CAA4C,IAAID,aAAa,KAAKZ,4BAA4B,CAACc,QAAQ,EAAE;IACzH,MAAMC,KAAK,GAAG;MACZ,GAAGP,KAAK,CAACO,KAAK;MACdC,MAAM,EAAE;IACV,CAAC;IACD,OAAO,CAACR,KAAK,EAAE;MACbS,OAAO,EAAEC,SAAS;MAClBC,SAAS,EAAED,SAAS;MACpBE,KAAK,EAAEF,SAAS;MAChBH;IACF,CAAC,CAAC;EACJ;EACA,OAAOP,KAAK;AACd,CAAC;AACD,MAAMa,OAAO,GAAGA,OAAO,IAAI;EACzB,OAAOA,OAAO,CAACC,GAAG,CAACC,MAAM,IAAI;IAC3B,IAAIA,MAAM,CAACC,EAAE,KAAK,qCAAqC,EAAE;MACvD,OAAO;QACL,GAAGD,MAAM;QACTE,IAAI,EAAEf,QAAQ,IAAI;UAChB,MAAM;YACJC,4BAA4B;YAC5Be;UACF,CAAC,GAAGhB,QAAQ;UACZ,IAAIgB,GAAG,CAACC,aAAa,KAAK,IAAI,EAAE;YAC9B,IAAID,GAAG,CAACE,SAAS,IAAIjB,4BAA4B,CAACC,aAAa,KAAKZ,4BAA4B,CAAC6B,MAAM,EAAE;cACvG,OAAO,IAAI;YACb;YACA,IAAIlB,4BAA4B,CAACC,aAAa,KAAKZ,4BAA4B,CAAC6B,MAAM,EAAE;cACtF,OAAO,aAAazB,IAAI,CAAC,KAAK,EAAE;gBAC9Ba,OAAO,EAAEC,SAAS;gBAClB,WAAW,EAAE;cACf,CAAC,CAAC;YACJ;YACA,OAAO,aAAad,IAAI,CAACH,QAAQ,EAAE;cACjC,GAAGyB,GAAG,CAACI,yBAAyB,CAAC,CAAC;cAClCC,QAAQ,EAAE,IAAI;cACdhB,KAAK,EAAEV,qBAAqB;cAC5B,WAAW,EAAE,2BAA2B;cACxC2B,QAAQ,EAAE,CAAC;YACb,CAAC,CAAC;UACJ;UACA,OAAOT,MAAM,CAACE,IAAI,CAACf,QAAQ,CAAC;QAC9B,CAAC;QACDuB,MAAM,EAAEA,CAAA,KAAM;MAChB,CAAC;IACH;IACA,OAAOV,MAAM;EACf,CAAC,CAAC;AACJ,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMW,sBAAsB,GAAGC,mBAAmB,IAAI;EAC3D,MAAMC,kBAAkB,GAAG,OAAOD,mBAAmB,KAAK,UAAU,GAAGA,mBAAmB,GAAGE,CAAC,IAAInC,KAAK,CAACmC,CAAC,CAACC,QAAQ,EAAEH,mBAAmB,EAAEjB,SAAS,CAAC;EACnJ,MAAMqB,WAAW,GAAGA,CAACC,QAAQ,EAAAC,KAAA,KAGvB;IAAA,IAHyB;MAC7Bf,GAAG;MACHhB;IACF,CAAC,GAAA+B,KAAA;IACC,MAAM;MACJ9B;IACF,CAAC,GAAGD,QAAQ;IACZ,IAAI0B,kBAAkB,CAACV,GAAG,CAAC,KAAK,IAAI,EAAE;MACpCA,GAAG,CAACC,aAAa,GAAG,IAAI;MACxB,MAAMe,WAAW,GAAGC,CAAC,IAAI;QACvB,IAAI,OAAOhC,4BAA4B,CAACiC,UAAU,KAAK,UAAU,EAAE;UACjEjC,4BAA4B,CAACiC,UAAU,CAAC9C,sBAAsB,CAAC6C,CAAC,EAAE;YAChEjB;UACF,CAAC,CAAC,CAAC;QACL;MACF,CAAC;MACD,MAAMP,SAAS,GAAGwB,CAAC,IAAI;QACrB,IAAIA,CAAC,CAACE,IAAI,KAAK,OAAO,IAAIF,CAAC,CAACE,IAAI,KAAK,OAAO,EAAE;UAC5CF,CAAC,CAACG,cAAc,CAAC,CAAC;UAClB,IAAIH,CAAC,CAACE,IAAI,KAAK,OAAO,IAAI,OAAOlC,4BAA4B,CAACiC,UAAU,KAAK,UAAU,EAAE;YACvFjC,4BAA4B,CAACiC,UAAU,CAAC9C,sBAAsB,CAAC6C,CAAC,EAAE;cAChEjB;YACF,CAAC,CAAC,CAAC;UACL;QACF;MACF,CAAC;MACD,MAAMqB,OAAO,GAAGJ,CAAC,IAAI;QACnB,IAAIA,CAAC,CAACE,IAAI,KAAK,OAAO,EAAE;UACtBF,CAAC,CAACG,cAAc,CAAC,CAAC;UAClB,IAAI,OAAOnC,4BAA4B,CAACiC,UAAU,KAAK,UAAU,EAAE;YACjEjC,4BAA4B,CAACiC,UAAU,CAAC9C,sBAAsB,CAAC6C,CAAC,EAAE;cAChEjB;YACF,CAAC,CAAC,CAAC;UACL;QACF;MACF,CAAC;MACD,OAAO;QACL,GAAGc,QAAQ;QACXvB,OAAO,EAAEyB,WAAW;QACpBvB,SAAS;QACT4B,OAAO;QACPC,SAAS,EAAErC,4BAA4B,CAACsC,OAAO,CAACC;MAClD,CAAC;IACH;IACA,OAAOV,QAAQ;EACjB,CAAC;EACD,MAAMW,UAAU,GAAGC,IAAI,IAAI;IACzB,OAAO,CAAC,GAAGA,IAAI,EAAEjB,mBAAmB,CAAC;EACvC,CAAC;EACD,MAAMkB,SAAS,GAAGA,CAACA,SAAS,EAAAC,KAAA,KAMtB;IAAA,IANwB;MAC5BC,IAAI,EAAE;QACJ7B,GAAG;QACHH;MACF,CAAC;MACDb;IACF,CAAC,GAAA4C,KAAA;IACC,MAAM;MACJ1C,aAAa;MACb4C;IACF,CAAC,GAAG9C,QAAQ,CAACC,4BAA4B;IACzC,IAAIyB,kBAAkB,CAACV,GAAG,CAAC,KAAK,IAAI,IAAId,aAAa,KAAKZ,4BAA4B,CAACyD,IAAI,KAAKD,iBAAiB,KAAKzD,gCAAgC,CAAC2D,WAAW,IAAInC,MAAM,CAACC,EAAE,KAAK,qCAAqC,CAAC,EAAE;MAC1N,MAAM;QACJ,YAAY,EAAEmC,EAAE;QAChB,GAAGC;MACL,CAAC,GAAGP,SAAS;MACb,IAAI9B,MAAM,CAACC,EAAE,KAAK,qCAAqC,EAAE;QACvD,MAAMT,KAAK,GAAG;UACZ,GAAGsC,SAAS,CAACtC,KAAK;UAClBC,MAAM,EAAE;QACV,CAAC;QACD,OAAO;UACL,GAAG4C,gBAAgB;UACnB,eAAe,EAAE,IAAI;UACrB7C;QACF,CAAC;MACH;MACA,MAAM;QACJ,eAAe,EAAE8C,EAAE;QACnB,GAAGC;MACL,CAAC,GAAGF,gBAAgB;MACpB,OAAOE,8BAA8B;IACvC;IACA,OAAOT,SAAS;EAClB,CAAC;EACD,MAAMU,sBAAsB,GAAGA,CAACvB,QAAQ,EAAAwB,KAAA,KAElC;IAAA,IAFoC;MACxCtC;IACF,CAAC,GAAAsC,KAAA;IACC,IAAI5B,kBAAkB,CAACV,GAAG,CAAC,KAAK,IAAI,EAAE;MACpC,MAAM;QACJN,KAAK,EAAEuC,EAAE;QACT,GAAGM;MACL,CAAC,GAAGzB,QAAQ;MACZ,OAAOyB,eAAe;IACxB;IACA,OAAOzB,QAAQ;EACjB,CAAC;EACD,MAAM0B,sBAAsB,GAAGC,KAAK,IAAI;IACtCA,KAAK,CAACC,cAAc,CAACC,IAAI,CAAC9D,WAAW,CAAC;IACtC4D,KAAK,CAAC5B,WAAW,CAAC8B,IAAI,CAAC9B,WAAW,CAAC;IACnC4B,KAAK,CAAC9C,OAAO,CAACgD,IAAI,CAAChD,OAAO,CAAC;IAC3B8C,KAAK,CAACG,WAAW,CAACD,IAAI,CAAClB,UAAU,CAAC;IAClCgB,KAAK,CAACI,YAAY,CAACF,IAAI,CAAChB,SAAS,CAAC;IAClCc,KAAK,CAACrC,yBAAyB,CAACuC,IAAI,CAACN,sBAAsB,CAAC;EAC9D,CAAC;EACDG,sBAAsB,CAACM,UAAU,GAAG,wBAAwB;EAC5D,OAAON,sBAAsB;AAC/B,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}