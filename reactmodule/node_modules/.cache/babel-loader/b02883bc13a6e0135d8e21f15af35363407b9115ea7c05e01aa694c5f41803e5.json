{"ast":null,"code":"var __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n    r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n    d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport customElement from \"@ui5/webcomponents-base/dist/decorators/customElement.js\";\nimport property from \"@ui5/webcomponents-base/dist/decorators/property.js\";\nimport slot from \"@ui5/webcomponents-base/dist/decorators/slot.js\";\nimport event from \"@ui5/webcomponents-base/dist/decorators/event.js\";\nimport { registerToolbarItem } from \"./ToolbarRegistry.js\";\n// Templates\nimport ToolbarSelectTemplate from \"./generated/templates/ToolbarSelectTemplate.lit.js\";\nimport ToolbarPopoverSelectTemplate from \"./generated/templates/ToolbarPopoverSelectTemplate.lit.js\";\nimport ToolbarItem from \"./ToolbarItem.js\";\nimport Select from \"./Select.js\";\nimport Option from \"./Option.js\";\n/**\n * @class\n *\n * ### Overview\n * The `ui5-toolbar-select` component is used to create a toolbar drop-down list.\n * The items inside the `ui5-toolbar-select` define the available options by using the `ui5-toolbar-select-option` component.\n *\n * ### ES6 Module Import\n * `import \"@ui5/webcomponents/dist/ToolbarSelect.js\";`\n *\n * `import \"@ui5/webcomponents/dist/ToolbarSelectOption.js\";` (comes with `ui5-toolbar-select`)\n * @constructor\n * @abstract\n * @extends ToolbarItem\n * @public\n * @since 1.17.0\n */\nlet ToolbarSelect = class ToolbarSelect extends ToolbarItem {\n  static get toolbarTemplate() {\n    return ToolbarSelectTemplate;\n  }\n  static get toolbarPopoverTemplate() {\n    return ToolbarPopoverSelectTemplate;\n  }\n  get subscribedEvents() {\n    const map = new Map();\n    map.set(\"click\", {\n      preventClosing: true\n    });\n    map.set(\"ui5-change\", {\n      preventClosing: false\n    });\n    map.set(\"ui5-open\", {\n      preventClosing: true\n    });\n    map.set(\"ui5-close\", {\n      preventClosing: true\n    });\n    return map;\n  }\n  constructor() {\n    super();\n    /**\n     * Defines the value state of the component.\n     * @default \"None\"\n     * @public\n     */\n    this.valueState = \"None\";\n    /**\n     * Defines whether the component is in disabled state.\n     *\n     * **Note:** A disabled component is noninteractive.\n     * @default false\n     * @public\n     */\n    this.disabled = false;\n    this._onEvent = this._onEventHandler.bind(this);\n  }\n  onEnterDOM() {\n    this.attachEventListeners();\n  }\n  onExitDOM() {\n    this.detachEventListeners();\n  }\n  attachEventListeners() {\n    [...this.subscribedEvents.keys()].forEach(e => {\n      this.addEventListener(e, this._onEvent);\n    });\n  }\n  detachEventListeners() {\n    [...this.subscribedEvents.keys()].forEach(e => {\n      this.removeEventListener(e, this._onEvent);\n    });\n  }\n  _onEventHandler(e) {\n    if (e.type === \"ui5-change\") {\n      // update options\n      const selectedOption = e.detail.selectedOption;\n      const selectedOptionIndex = Number(selectedOption?.getAttribute(\"data-ui5-external-action-item-index\"));\n      this.options.forEach((option, index) => {\n        if (index === selectedOptionIndex) {\n          option.setAttribute(\"selected\", \"\");\n        } else {\n          option.removeAttribute(\"selected\");\n        }\n      });\n    }\n  }\n  get styles() {\n    return {\n      width: this.width\n    };\n  }\n};\n__decorate([property()], ToolbarSelect.prototype, \"width\", void 0);\n__decorate([slot({\n  \"default\": true,\n  type: HTMLElement,\n  invalidateOnChildChange: true\n})], ToolbarSelect.prototype, \"options\", void 0);\n__decorate([property()], ToolbarSelect.prototype, \"valueState\", void 0);\n__decorate([property({\n  type: Boolean\n})], ToolbarSelect.prototype, \"disabled\", void 0);\n__decorate([property()], ToolbarSelect.prototype, \"accessibleName\", void 0);\n__decorate([property()], ToolbarSelect.prototype, \"accessibleNameRef\", void 0);\nToolbarSelect = __decorate([customElement({\n  tag: \"ui5-toolbar-select\",\n  dependencies: [Select, Option]\n})\n/**\n * Fired when the selected option changes.\n * @allowPreventDefault\n * @param {HTMLElement} selectedOption the selected option.\n * @public\n */, event(\"change\", {\n  detail: {\n    /**\n    * @public\n    */\n    selectedOption: {\n      type: HTMLElement\n    }\n  }\n})\n/**\n * Fired after the component's dropdown menu opens.\n * @public\n */, event(\"open\")\n/**\n * Fired after the component's dropdown menu closes.\n * @public\n */, event(\"close\")], ToolbarSelect);\nregisterToolbarItem(ToolbarSelect);\nToolbarSelect.define();\nexport default ToolbarSelect;","map":{"version":3,"names":["customElement","property","slot","event","registerToolbarItem","ToolbarSelectTemplate","ToolbarPopoverSelectTemplate","ToolbarItem","Select","Option","ToolbarSelect","toolbarTemplate","toolbarPopoverTemplate","subscribedEvents","map","Map","set","preventClosing","constructor","valueState","disabled","_onEvent","_onEventHandler","bind","onEnterDOM","attachEventListeners","onExitDOM","detachEventListeners","keys","forEach","e","addEventListener","removeEventListener","type","selectedOption","detail","selectedOptionIndex","Number","getAttribute","options","option","index","setAttribute","removeAttribute","styles","width","__decorate","HTMLElement","invalidateOnChildChange","Boolean","tag","dependencies","define"],"sources":["/home/user/projects/reactproj/node_modules/@ui5/webcomponents/src/ToolbarSelect.ts"],"sourcesContent":["import customElement from \"@ui5/webcomponents-base/dist/decorators/customElement.js\";\nimport property from \"@ui5/webcomponents-base/dist/decorators/property.js\";\nimport slot from \"@ui5/webcomponents-base/dist/decorators/slot.js\";\nimport event from \"@ui5/webcomponents-base/dist/decorators/event.js\";\nimport type ValueState from \"@ui5/webcomponents-base/dist/types/ValueState.js\";\n\nimport { registerToolbarItem } from \"./ToolbarRegistry.js\";\n\n// Templates\n\nimport ToolbarSelectTemplate from \"./generated/templates/ToolbarSelectTemplate.lit.js\";\nimport ToolbarPopoverSelectTemplate from \"./generated/templates/ToolbarPopoverSelectTemplate.lit.js\";\nimport ToolbarItem from \"./ToolbarItem.js\";\nimport Select from \"./Select.js\";\nimport Option from \"./Option.js\";\nimport type ToolbarSelectOption from \"./ToolbarSelectOption.js\";\nimport type { SelectChangeEventDetail } from \"./Select.js\";\n\ntype ToolbarSelectChangeEventDetail = SelectChangeEventDetail;\n\n/**\n * @class\n *\n * ### Overview\n * The `ui5-toolbar-select` component is used to create a toolbar drop-down list.\n * The items inside the `ui5-toolbar-select` define the available options by using the `ui5-toolbar-select-option` component.\n *\n * ### ES6 Module Import\n * `import \"@ui5/webcomponents/dist/ToolbarSelect.js\";`\n *\n * `import \"@ui5/webcomponents/dist/ToolbarSelectOption.js\";` (comes with `ui5-toolbar-select`)\n * @constructor\n * @abstract\n * @extends ToolbarItem\n * @public\n * @since 1.17.0\n */\n@customElement({\n\ttag: \"ui5-toolbar-select\",\n\tdependencies: [Select, Option],\n})\n\n/**\n * Fired when the selected option changes.\n * @allowPreventDefault\n * @param {HTMLElement} selectedOption the selected option.\n * @public\n */\n@event<ToolbarSelectChangeEventDetail>(\"change\", {\n\tdetail: {\n\t\t/**\n\t\t* @public\n\t\t*/\n\t\tselectedOption: { type: HTMLElement },\n\t},\n})\n\n/**\n * Fired after the component's dropdown menu opens.\n * @public\n */\n@event(\"open\")\n/**\n * Fired after the component's dropdown menu closes.\n * @public\n */\n@event(\"close\")\n\nclass ToolbarSelect extends ToolbarItem {\n\t/**\n\t * Defines the width of the select.\n\t *\n\t * **Note:** all CSS sizes are supported - 'percentage', 'px', 'rem', 'auto', etc.\n\t * @default undefined\n\t * @public\n\t */\n\t@property()\n\twidth?: string;\n\n\t/**\n\t * Defines the component options.\n\t *\n\t * **Note:** Only one selected option is allowed.\n\t * If more than one option is defined as selected, the last one would be considered as the selected one.\n\t *\n\t * **Note:** Use the `ui5-toolbar-select-option` component to define the desired options.\n\t * @public\n\t */\n\t@slot({ \"default\": true, type: HTMLElement, invalidateOnChildChange: true })\n\toptions!: Array<ToolbarSelectOption>;\n\n\t/**\n\t * Defines the value state of the component.\n\t * @default \"None\"\n\t * @public\n\t */\n\t@property()\n\tvalueState: `${ValueState}` = \"None\";\n\n\t/**\n\t * Defines whether the component is in disabled state.\n\t *\n\t * **Note:** A disabled component is noninteractive.\n\t * @default false\n\t * @public\n\t */\n\t@property({ type: Boolean })\n\tdisabled = false;\n\n\t/**\n\t * Defines the accessible ARIA name of the component.\n\t * @public\n\t * @default undefined\n\t */\n\t@property()\n\taccessibleName?: string\n\n\t/**\n\t * Receives id(or many ids) of the elements that label the select.\n\t * @default undefined\n\t * @public\n\t */\n\t@property()\n\taccessibleNameRef?: string;\n\n\t_onEvent: EventListener\n\n\tstatic get toolbarTemplate() {\n\t\treturn ToolbarSelectTemplate;\n\t}\n\n\tstatic get toolbarPopoverTemplate() {\n\t\treturn ToolbarPopoverSelectTemplate;\n\t}\n\n\tget subscribedEvents() {\n\t\tconst map = new Map();\n\n\t\tmap.set(\"click\", { preventClosing: true });\n\t\tmap.set(\"ui5-change\", { preventClosing: false });\n\t\tmap.set(\"ui5-open\", { preventClosing: true });\n\t\tmap.set(\"ui5-close\", { preventClosing: true });\n\n\t\treturn map;\n\t}\n\n\tconstructor() {\n\t\tsuper();\n\n\t\tthis._onEvent = this._onEventHandler.bind(this);\n\t}\n\n\tonEnterDOM(): void {\n\t\tthis.attachEventListeners();\n\t}\n\n\tonExitDOM(): void {\n\t\tthis.detachEventListeners();\n\t}\n\n\tattachEventListeners(): void {\n\t\t[...this.subscribedEvents.keys()].forEach(e => {\n\t\t\tthis.addEventListener(e, this._onEvent);\n\t\t});\n\t}\n\n\tdetachEventListeners(): void {\n\t\t[...this.subscribedEvents.keys()].forEach(e => {\n\t\t\tthis.removeEventListener(e, this._onEvent);\n\t\t});\n\t}\n\n\t_onEventHandler(e: Event): void {\n\t\tif (e.type === \"ui5-change\") {\n\t\t\t// update options\n\t\t\tconst selectedOption = (e as CustomEvent<ToolbarSelectChangeEventDetail>).detail.selectedOption;\n\t\t\tconst selectedOptionIndex = Number(selectedOption?.getAttribute(\"data-ui5-external-action-item-index\"));\n\t\t\tthis.options.forEach((option: ToolbarSelectOption, index: number) => {\n\t\t\t\tif (index === selectedOptionIndex) {\n\t\t\t\t\toption.setAttribute(\"selected\", \"\");\n\t\t\t\t} else {\n\t\t\t\t\toption.removeAttribute(\"selected\");\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\n\tget styles() {\n\t\treturn {\n\t\t\twidth: this.width,\n\t\t};\n\t}\n}\n\nregisterToolbarItem(ToolbarSelect);\n\nToolbarSelect.define();\n\nexport default ToolbarSelect;\n\nexport type {\n\tToolbarSelectChangeEventDetail,\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}