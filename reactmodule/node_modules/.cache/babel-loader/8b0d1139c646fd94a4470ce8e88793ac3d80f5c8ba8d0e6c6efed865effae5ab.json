{"ast":null,"code":"var __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n    r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n    d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar RadioButton_1;\nimport { isDesktop } from \"@ui5/webcomponents-base/dist/Device.js\";\nimport UI5Element from \"@ui5/webcomponents-base/dist/UI5Element.js\";\nimport property from \"@ui5/webcomponents-base/dist/decorators/property.js\";\nimport customElement from \"@ui5/webcomponents-base/dist/decorators/customElement.js\";\nimport event from \"@ui5/webcomponents-base/dist/decorators/event.js\";\nimport litRender from \"@ui5/webcomponents-base/dist/renderer/LitRenderer.js\";\nimport { getI18nBundle } from \"@ui5/webcomponents-base/dist/i18nBundle.js\";\nimport ValueState from \"@ui5/webcomponents-base/dist/types/ValueState.js\";\nimport { getEffectiveAriaLabelText } from \"@ui5/webcomponents-base/dist/util/AriaLabelHelper.js\";\nimport { isSpace, isEnter, isDown, isLeft, isUp, isRight } from \"@ui5/webcomponents-base/dist/Keys.js\";\nimport Label from \"./Label.js\";\nimport RadioButtonGroup from \"./RadioButtonGroup.js\";\n// Template\nimport RadioButtonTemplate from \"./generated/templates/RadioButtonTemplate.lit.js\";\n// i18n\nimport { VALUE_STATE_ERROR, VALUE_STATE_WARNING, VALUE_STATE_SUCCESS, VALUE_STATE_INFORMATION, FORM_SELECTABLE_REQUIRED2 } from \"./generated/i18n/i18n-defaults.js\";\n// Styles\nimport radioButtonCss from \"./generated/themes/RadioButton.css.js\";\nlet isGlobalHandlerAttached = false;\nlet activeRadio;\n/**\n * @class\n *\n * ### Overview\n *\n * The `ui5-radio-button` component enables users to select a single option from a set of options.\n * When a `ui5-radio-button` is selected by the user, the\n * `change` event is fired.\n * When a `ui5-radio-button` that is within a group is selected, the one\n * that was previously selected gets automatically deselected. You can group radio buttons by using the `name` property.\n *\n * **Note:** If `ui5-radio-button` is not part of a group, it can be selected once, but can not be deselected back.\n *\n * ### Keyboard Handling\n *\n * Once the `ui5-radio-button` is on focus, it might be selected by pressing the Space and Enter keys.\n *\n * The Arrow Down/Arrow Up and Arrow Left/Arrow Right keys can be used to change selection between next/previous radio buttons in one group,\n * while TAB and SHIFT + TAB can be used to enter or leave the radio button group.\n *\n * **Note:** On entering radio button group, the focus goes to the currently selected radio button.\n *\n * ### ES6 Module Import\n *\n * `import \"@ui5/webcomponents/dist/RadioButton\";`\n * @constructor\n * @extends UI5Element\n * @public\n * @csspart outer-ring - Used to style the outer ring of the `ui5-radio-button`.\n * @csspart inner-ring - Used to style the inner ring of the `ui5-radio-button`.\n */\nlet RadioButton = RadioButton_1 = class RadioButton extends UI5Element {\n  get formValidityMessage() {\n    return RadioButton_1.i18nBundle.getText(FORM_SELECTABLE_REQUIRED2);\n  }\n  get formValidity() {\n    return {\n      valueMissing: this._groupRequired && !this._groupChecked\n    };\n  }\n  async formElementAnchor() {\n    return this.getFocusDomRefAsync();\n  }\n  get formFormattedValue() {\n    return this.checked ? this.value || \"on\" : null;\n  }\n  constructor() {\n    super();\n    /**\n     * Defines whether the component is disabled.\n     *\n     * **Note:** A disabled component is completely noninteractive.\n     * @default false\n     * @public\n     */\n    this.disabled = false;\n    /**\n     * Defines whether the component is read-only.\n     *\n     * **Note:** A read-only component is not editable,\n     * but still provides visual feedback upon user interaction.\n     * @default false\n     * @public\n     */\n    this.readonly = false;\n    /**\n     * Defines whether the component is required.\n     * @default false\n     * @public\n     * @since 1.9.0\n     */\n    this.required = false;\n    /**\n     * Defines whether the component is checked or not.\n     *\n     * **Note:** The property value can be changed with user interaction,\n     * either by clicking/tapping on the component,\n     * or by using the Space or Enter key.\n     * @default false\n     * @formEvents change\n     * @formProperty\n     * @public\n     * @since 1.0.0-rc.15\n     */\n    this.checked = false;\n    /**\n     * Defines the value state of the component.\n     * @default \"None\"\n     * @public\n     */\n    this.valueState = \"None\";\n    /**\n     * Defines the form value of the component.\n     * When a form with a radio button group is submitted, the group's value\n     * will be the value of the currently selected radio button.\n     * @default \"\"\n     * @public\n     */\n    this.value = \"\";\n    /**\n     * Defines whether the component text wraps when there is not enough space.\n     *\n     * **Note:** for option \"Normal\" the text will wrap and the words will not be broken based on hyphenation.\n     * @default \"Normal\"\n     * @public\n     */\n    this.wrappingType = \"Normal\";\n    /**\n     * Defines the active state (pressed or not) of the component.\n     * @default false\n     * @private\n     */\n    this.active = false;\n    /**\n     * Defines if the component is selected in specific group\n     * @default false\n     * @private\n     */\n    this._groupChecked = false;\n    this._groupRequired = false;\n    this._name = \"\";\n    this._checked = false;\n    this._deactivate = () => {\n      if (activeRadio) {\n        activeRadio.active = false;\n      }\n    };\n    if (!isGlobalHandlerAttached) {\n      document.addEventListener(\"mouseup\", this._deactivate);\n      isGlobalHandlerAttached = true;\n    }\n  }\n  static async onDefine() {\n    RadioButton_1.i18nBundle = await getI18nBundle(\"@ui5/webcomponents\");\n  }\n  onAfterRendering() {\n    this.syncGroup();\n  }\n  onEnterDOM() {\n    if (isDesktop()) {\n      this.setAttribute(\"desktop\", \"\");\n    }\n  }\n  onExitDOM() {\n    this.syncGroup(true);\n  }\n  syncGroup(forceRemove) {\n    const oldGroup = this._name;\n    const currentGroup = this.name;\n    const oldChecked = this._checked;\n    const currentChecked = this.checked;\n    if (forceRemove) {\n      RadioButtonGroup.removeFromGroup(this, oldGroup);\n    }\n    if (currentGroup !== oldGroup) {\n      if (oldGroup) {\n        // remove the control from the previous group\n        RadioButtonGroup.removeFromGroup(this, oldGroup);\n      }\n      if (currentGroup) {\n        // add the control to the existing group\n        RadioButtonGroup.addToGroup(this, currentGroup);\n      }\n    } else if (currentGroup && this.isConnected) {\n      RadioButtonGroup.enforceSingleSelection(this, currentGroup);\n    }\n    if (this.name && currentChecked !== oldChecked) {\n      RadioButtonGroup.updateTabOrder(this.name);\n    }\n    this._name = this.name || \"\";\n    this._checked = this.checked;\n  }\n  _onclick() {\n    return this.toggle();\n  }\n  _handleDown(e) {\n    const currentGroup = this.name;\n    if (!currentGroup) {\n      return;\n    }\n    e.preventDefault();\n    RadioButtonGroup.selectNextItem(this, currentGroup);\n  }\n  _handleUp(e) {\n    const currentGroup = this.name;\n    if (!currentGroup) {\n      return;\n    }\n    e.preventDefault();\n    RadioButtonGroup.selectPreviousItem(this, currentGroup);\n  }\n  _onkeydown(e) {\n    if (isSpace(e)) {\n      this.active = true;\n      return e.preventDefault();\n    }\n    if (isEnter(e)) {\n      this.active = true;\n      return this.toggle();\n    }\n    const isRTL = this.effectiveDir === \"rtl\";\n    if (isDown(e) || !isRTL && isRight(e) || isRTL && isLeft(e)) {\n      this._handleDown(e);\n    }\n    if (isUp(e) || !isRTL && isLeft(e) || isRTL && isRight(e)) {\n      this._handleUp(e);\n    }\n  }\n  _onkeyup(e) {\n    if (isSpace(e)) {\n      this.toggle();\n    }\n    this.active = false;\n  }\n  _onmousedown() {\n    this.active = true;\n    activeRadio = this; // eslint-disable-line\n  }\n  _onmouseup() {\n    this.active = false;\n  }\n  _onfocusout() {\n    this.active = false;\n  }\n  toggle() {\n    if (!this.canToggle()) {\n      return this;\n    }\n    if (!this.name) {\n      this.checked = !this.checked;\n      this.fireEvent(\"change\");\n      return this;\n    }\n    RadioButtonGroup.selectItem(this, this.name);\n    return this;\n  }\n  canToggle() {\n    return !(this.disabled || this.readonly || this.checked);\n  }\n  get classes() {\n    return {\n      inner: {\n        \"ui5-radio-inner--hoverable\": !this.disabled && !this.readonly && isDesktop()\n      }\n    };\n  }\n  get effectiveAriaDisabled() {\n    return this.disabled ? \"true\" : null;\n  }\n  get ariaLabelText() {\n    return [getEffectiveAriaLabelText(this), this.text].filter(Boolean).join(\" \");\n  }\n  get effectiveAriaDescribedBy() {\n    return this.hasValueState ? `${this._id}-descr` : undefined;\n  }\n  get hasValueState() {\n    return this.valueState !== ValueState.None;\n  }\n  get valueStateText() {\n    switch (this.valueState) {\n      case ValueState.Negative:\n        return RadioButton_1.i18nBundle.getText(VALUE_STATE_ERROR);\n      case ValueState.Critical:\n        return RadioButton_1.i18nBundle.getText(VALUE_STATE_WARNING);\n      case ValueState.Positive:\n        return RadioButton_1.i18nBundle.getText(VALUE_STATE_SUCCESS);\n      case ValueState.Information:\n        return RadioButton_1.i18nBundle.getText(VALUE_STATE_INFORMATION);\n      default:\n        return \"\";\n    }\n  }\n  get effectiveTabIndex() {\n    const tabindex = this.getAttribute(\"tabindex\");\n    if (this.disabled) {\n      return \"-1\";\n    }\n    if (this.name) {\n      return this._tabIndex;\n    }\n    return tabindex || \"0\";\n  }\n};\n__decorate([property({\n  type: Boolean\n})], RadioButton.prototype, \"disabled\", void 0);\n__decorate([property({\n  type: Boolean\n})], RadioButton.prototype, \"readonly\", void 0);\n__decorate([property({\n  type: Boolean\n})], RadioButton.prototype, \"required\", void 0);\n__decorate([property({\n  type: Boolean\n})], RadioButton.prototype, \"checked\", void 0);\n__decorate([property()], RadioButton.prototype, \"text\", void 0);\n__decorate([property()], RadioButton.prototype, \"valueState\", void 0);\n__decorate([property()], RadioButton.prototype, \"name\", void 0);\n__decorate([property()], RadioButton.prototype, \"value\", void 0);\n__decorate([property()], RadioButton.prototype, \"wrappingType\", void 0);\n__decorate([property()], RadioButton.prototype, \"accessibleName\", void 0);\n__decorate([property()], RadioButton.prototype, \"accessibleNameRef\", void 0);\n__decorate([property()], RadioButton.prototype, \"_tabIndex\", void 0);\n__decorate([property({\n  type: Boolean\n})], RadioButton.prototype, \"active\", void 0);\n__decorate([property({\n  type: Boolean,\n  noAttribute: true\n})], RadioButton.prototype, \"_groupChecked\", void 0);\n__decorate([property({\n  type: Boolean,\n  noAttribute: true\n})], RadioButton.prototype, \"_groupRequired\", void 0);\nRadioButton = RadioButton_1 = __decorate([customElement({\n  tag: \"ui5-radio-button\",\n  languageAware: true,\n  formAssociated: true,\n  renderer: litRender,\n  template: RadioButtonTemplate,\n  styles: radioButtonCss,\n  dependencies: [Label]\n})\n/**\n * Fired when the component checked state changes.\n * @public\n * @since 1.0.0-rc.15\n */, event(\"change\")], RadioButton);\nRadioButton.define();\nexport default RadioButton;","map":{"version":3,"names":["isDesktop","UI5Element","property","customElement","event","litRender","getI18nBundle","ValueState","getEffectiveAriaLabelText","isSpace","isEnter","isDown","isLeft","isUp","isRight","Label","RadioButtonGroup","RadioButtonTemplate","VALUE_STATE_ERROR","VALUE_STATE_WARNING","VALUE_STATE_SUCCESS","VALUE_STATE_INFORMATION","FORM_SELECTABLE_REQUIRED2","radioButtonCss","isGlobalHandlerAttached","activeRadio","RadioButton","RadioButton_1","formValidityMessage","i18nBundle","getText","formValidity","valueMissing","_groupRequired","_groupChecked","formElementAnchor","getFocusDomRefAsync","formFormattedValue","checked","value","constructor","disabled","readonly","required","valueState","wrappingType","active","_name","_checked","_deactivate","document","addEventListener","onDefine","onAfterRendering","syncGroup","onEnterDOM","setAttribute","onExitDOM","forceRemove","oldGroup","currentGroup","name","oldChecked","currentChecked","removeFromGroup","addToGroup","isConnected","enforceSingleSelection","updateTabOrder","_onclick","toggle","_handleDown","e","preventDefault","selectNextItem","_handleUp","selectPreviousItem","_onkeydown","isRTL","effectiveDir","_onkeyup","_onmousedown","_onmouseup","_onfocusout","canToggle","fireEvent","selectItem","classes","inner","effectiveAriaDisabled","ariaLabelText","text","filter","Boolean","join","effectiveAriaDescribedBy","hasValueState","_id","undefined","None","valueStateText","Negative","Critical","Positive","Information","effectiveTabIndex","tabindex","getAttribute","_tabIndex","__decorate","type","noAttribute","tag","languageAware","formAssociated","renderer","template","styles","dependencies","define"],"sources":["/home/user/projects/reactproj/node_modules/@ui5/webcomponents/src/RadioButton.ts"],"sourcesContent":["import { isDesktop } from \"@ui5/webcomponents-base/dist/Device.js\";\nimport UI5Element from \"@ui5/webcomponents-base/dist/UI5Element.js\";\nimport property from \"@ui5/webcomponents-base/dist/decorators/property.js\";\nimport customElement from \"@ui5/webcomponents-base/dist/decorators/customElement.js\";\nimport event from \"@ui5/webcomponents-base/dist/decorators/event.js\";\nimport litRender from \"@ui5/webcomponents-base/dist/renderer/LitRenderer.js\";\nimport { getI18nBundle } from \"@ui5/webcomponents-base/dist/i18nBundle.js\";\nimport type I18nBundle from \"@ui5/webcomponents-base/dist/i18nBundle.js\";\nimport ValueState from \"@ui5/webcomponents-base/dist/types/ValueState.js\";\nimport { getEffectiveAriaLabelText } from \"@ui5/webcomponents-base/dist/util/AriaLabelHelper.js\";\nimport type { IFormInputElement } from \"@ui5/webcomponents-base/dist/features/InputElementsFormSupport.js\";\nimport {\n\tisSpace,\n\tisEnter,\n\tisDown,\n\tisLeft,\n\tisUp,\n\tisRight,\n} from \"@ui5/webcomponents-base/dist/Keys.js\";\nimport Label from \"./Label.js\";\nimport RadioButtonGroup from \"./RadioButtonGroup.js\";\nimport type WrappingType from \"./types/WrappingType.js\";\n\n// Template\nimport RadioButtonTemplate from \"./generated/templates/RadioButtonTemplate.lit.js\";\n\n// i18n\nimport {\n\tVALUE_STATE_ERROR,\n\tVALUE_STATE_WARNING,\n\tVALUE_STATE_SUCCESS,\n\tVALUE_STATE_INFORMATION,\n\tFORM_SELECTABLE_REQUIRED2,\n} from \"./generated/i18n/i18n-defaults.js\";\n\n// Styles\nimport radioButtonCss from \"./generated/themes/RadioButton.css.js\";\n\nlet isGlobalHandlerAttached = false;\nlet activeRadio: RadioButton;\n\n/**\n * @class\n *\n * ### Overview\n *\n * The `ui5-radio-button` component enables users to select a single option from a set of options.\n * When a `ui5-radio-button` is selected by the user, the\n * `change` event is fired.\n * When a `ui5-radio-button` that is within a group is selected, the one\n * that was previously selected gets automatically deselected. You can group radio buttons by using the `name` property.\n *\n * **Note:** If `ui5-radio-button` is not part of a group, it can be selected once, but can not be deselected back.\n *\n * ### Keyboard Handling\n *\n * Once the `ui5-radio-button` is on focus, it might be selected by pressing the Space and Enter keys.\n *\n * The Arrow Down/Arrow Up and Arrow Left/Arrow Right keys can be used to change selection between next/previous radio buttons in one group,\n * while TAB and SHIFT + TAB can be used to enter or leave the radio button group.\n *\n * **Note:** On entering radio button group, the focus goes to the currently selected radio button.\n *\n * ### ES6 Module Import\n *\n * `import \"@ui5/webcomponents/dist/RadioButton\";`\n * @constructor\n * @extends UI5Element\n * @public\n * @csspart outer-ring - Used to style the outer ring of the `ui5-radio-button`.\n * @csspart inner-ring - Used to style the inner ring of the `ui5-radio-button`.\n */\n@customElement({\n\ttag: \"ui5-radio-button\",\n\tlanguageAware: true,\n\tformAssociated: true,\n\trenderer: litRender,\n\ttemplate: RadioButtonTemplate,\n\tstyles: radioButtonCss,\n\tdependencies: [Label],\n})\n/**\n * Fired when the component checked state changes.\n * @public\n * @since 1.0.0-rc.15\n */\n@event(\"change\")\n\nclass RadioButton extends UI5Element implements IFormInputElement {\n\t/**\n\t * Defines whether the component is disabled.\n\t *\n\t * **Note:** A disabled component is completely noninteractive.\n\t * @default false\n\t * @public\n\t */\n\t@property({ type: Boolean })\n\tdisabled = false;\n\n\t/**\n\t * Defines whether the component is read-only.\n\t *\n\t * **Note:** A read-only component is not editable,\n\t * but still provides visual feedback upon user interaction.\n\t * @default false\n\t * @public\n\t */\n\t@property({ type: Boolean })\n\treadonly = false;\n\n\t/**\n\t * Defines whether the component is required.\n\t * @default false\n\t * @public\n\t * @since 1.9.0\n\t */\n\t@property({ type: Boolean })\n\trequired = false;\n\n\t/**\n\t * Defines whether the component is checked or not.\n\t *\n\t * **Note:** The property value can be changed with user interaction,\n\t * either by clicking/tapping on the component,\n\t * or by using the Space or Enter key.\n\t * @default false\n\t * @formEvents change\n\t * @formProperty\n\t * @public\n\t * @since 1.0.0-rc.15\n\t */\n\t@property({ type: Boolean })\n\tchecked = false;\n\n\t/**\n\t * Defines the text of the component.\n\t * @default undefined\n\t * @public\n\t */\n\t@property()\n\ttext?: string;\n\n\t/**\n\t * Defines the value state of the component.\n\t * @default \"None\"\n\t * @public\n\t */\n\t@property()\n\tvalueState: `${ValueState}` = \"None\";\n\n\t/**\n\t * Determines the name by which the component will be identified upon submission in an HTML form.\n\t *\n\t * Radio buttons with the same `name` will form a radio button group.\n\t *\n\t * **Note:** By this name the component will be identified upon submission in an HTML form.\n\t *\n\t * **Note:** The selection can be changed with `ARROW_UP/DOWN` and `ARROW_LEFT/RIGHT` keys between radio buttons in same group.\n\t *\n\t * **Note:** Only one radio button can be selected per group.\n\t * @default undefined\n\t * @public\n\t */\n\t@property()\n\tname?: string;\n\n\t/**\n\t * Defines the form value of the component.\n\t * When a form with a radio button group is submitted, the group's value\n\t * will be the value of the currently selected radio button.\n\t * @default \"\"\n\t * @public\n\t */\n\t@property()\n\tvalue = \"\";\n\n\t/**\n\t * Defines whether the component text wraps when there is not enough space.\n\t *\n\t * **Note:** for option \"Normal\" the text will wrap and the words will not be broken based on hyphenation.\n\t * @default \"Normal\"\n\t * @public\n\t */\n\t@property()\n\twrappingType: `${WrappingType}` = \"Normal\";\n\n\t/**\n\t * Defines the accessible ARIA name of the component.\n\t * @default undefined\n\t * @public\n\t * @since 1.6.0\n\t */\n\t@property()\n\taccessibleName?: string;\n\n\t/**\n\t * Defines the IDs of the elements that label the component.\n\t * @default undefined\n\t * @public\n\t * @since 1.1.0\n\t */\n\t@property()\n\taccessibleNameRef?: string;\n\n\t@property()\n\t_tabIndex?: string;\n\n\t/**\n\t * Defines the active state (pressed or not) of the component.\n\t * @default false\n\t * @private\n\t */\n\t@property({ type: Boolean })\n\tactive = false;\n\n\t/**\n\t * Defines if the component is selected in specific group\n\t * @default false\n\t * @private\n\t */\n\t@property({ type: Boolean, noAttribute: true })\n\t_groupChecked = false;\n\t@property({ type: Boolean, noAttribute: true })\n\t_groupRequired = false;\n\n\t_deactivate: () => void;\n\t_name = \"\";\n\t_checked = false;\n\n\tget formValidityMessage() {\n\t\treturn RadioButton.i18nBundle.getText(FORM_SELECTABLE_REQUIRED2);\n\t}\n\n\tget formValidity(): ValidityStateFlags {\n\t\treturn { valueMissing: this._groupRequired && !this._groupChecked };\n\t}\n\n\tasync formElementAnchor() {\n\t\treturn this.getFocusDomRefAsync();\n\t}\n\n\tget formFormattedValue() {\n\t\treturn this.checked ? (this.value || \"on\") : null;\n\t}\n\n\tstatic i18nBundle: I18nBundle;\n\n\tconstructor() {\n\t\tsuper();\n\n\t\tthis._deactivate = () => {\n\t\t\tif (activeRadio) {\n\t\t\t\tactiveRadio.active = false;\n\t\t\t}\n\t\t};\n\n\t\tif (!isGlobalHandlerAttached) {\n\t\t\tdocument.addEventListener(\"mouseup\", this._deactivate);\n\t\t\tisGlobalHandlerAttached = true;\n\t\t}\n\t}\n\n\tstatic async onDefine() {\n\t\tRadioButton.i18nBundle = await getI18nBundle(\"@ui5/webcomponents\");\n\t}\n\n\tonAfterRendering() {\n\t\tthis.syncGroup();\n\t}\n\n\tonEnterDOM() {\n\t\tif (isDesktop()) {\n\t\t\tthis.setAttribute(\"desktop\", \"\");\n\t\t}\n\t}\n\n\tonExitDOM() {\n\t\tthis.syncGroup(true);\n\t}\n\n\tsyncGroup(forceRemove?: boolean) {\n\t\tconst oldGroup = this._name;\n\t\tconst currentGroup = this.name;\n\t\tconst oldChecked = this._checked;\n\t\tconst currentChecked = this.checked;\n\n\t\tif (forceRemove) {\n\t\t\tRadioButtonGroup.removeFromGroup(this, oldGroup);\n\t\t}\n\n\t\tif (currentGroup !== oldGroup) {\n\t\t\tif (oldGroup) {\n\t\t\t\t// remove the control from the previous group\n\t\t\t\tRadioButtonGroup.removeFromGroup(this, oldGroup);\n\t\t\t}\n\n\t\t\tif (currentGroup) {\n\t\t\t\t// add the control to the existing group\n\t\t\t\tRadioButtonGroup.addToGroup(this, currentGroup);\n\t\t\t}\n\t\t} else if (currentGroup && this.isConnected) {\n\t\t\tRadioButtonGroup.enforceSingleSelection(this, currentGroup);\n\t\t}\n\n\t\tif (this.name && currentChecked !== oldChecked) {\n\t\t\tRadioButtonGroup.updateTabOrder(this.name);\n\t\t}\n\n\t\tthis._name = this.name || \"\";\n\t\tthis._checked = this.checked;\n\t}\n\n\t_onclick() {\n\t\treturn this.toggle();\n\t}\n\n\t_handleDown(e: KeyboardEvent) {\n\t\tconst currentGroup = this.name;\n\n\t\tif (!currentGroup) {\n\t\t\treturn;\n\t\t}\n\n\t\te.preventDefault();\n\t\tRadioButtonGroup.selectNextItem(this, currentGroup);\n\t}\n\n\t_handleUp(e: KeyboardEvent) {\n\t\tconst currentGroup = this.name;\n\n\t\tif (!currentGroup) {\n\t\t\treturn;\n\t\t}\n\n\t\te.preventDefault();\n\t\tRadioButtonGroup.selectPreviousItem(this, currentGroup);\n\t}\n\n\t_onkeydown(e: KeyboardEvent) {\n\t\tif (isSpace(e)) {\n\t\t\tthis.active = true;\n\t\t\treturn e.preventDefault();\n\t\t}\n\n\t\tif (isEnter(e)) {\n\t\t\tthis.active = true;\n\t\t\treturn this.toggle();\n\t\t}\n\n\t\tconst isRTL = this.effectiveDir === \"rtl\";\n\n\t\tif (isDown(e) || (!isRTL && isRight(e)) || (isRTL && isLeft(e))) {\n\t\t\tthis._handleDown(e);\n\t\t}\n\n\t\tif (isUp(e) || (!isRTL && isLeft(e)) || (isRTL && isRight(e))) {\n\t\t\tthis._handleUp(e);\n\t\t}\n\t}\n\n\t_onkeyup(e: KeyboardEvent) {\n\t\tif (isSpace(e)) {\n\t\t\tthis.toggle();\n\t\t}\n\n\t\tthis.active = false;\n\t}\n\n\t_onmousedown() {\n\t\tthis.active = true;\n\t\tactiveRadio = this; // eslint-disable-line\n\t}\n\n\t_onmouseup() {\n\t\tthis.active = false;\n\t}\n\n\t_onfocusout() {\n\t\tthis.active = false;\n\t}\n\n\ttoggle() {\n\t\tif (!this.canToggle()) {\n\t\t\treturn this;\n\t\t}\n\n\t\tif (!this.name) {\n\t\t\tthis.checked = !this.checked;\n\t\t\tthis.fireEvent(\"change\");\n\t\t\treturn this;\n\t\t}\n\n\t\tRadioButtonGroup.selectItem(this, this.name);\n\t\treturn this;\n\t}\n\n\tcanToggle() {\n\t\treturn !(this.disabled || this.readonly || this.checked);\n\t}\n\n\tget classes() {\n\t\treturn {\n\t\t\tinner: {\n\t\t\t\t\"ui5-radio-inner--hoverable\": !this.disabled && !this.readonly && isDesktop(),\n\t\t\t},\n\t\t};\n\t}\n\n\tget effectiveAriaDisabled() {\n\t\treturn this.disabled ? \"true\" : null;\n\t}\n\n\tget ariaLabelText() {\n\t\treturn [getEffectiveAriaLabelText(this), this.text].filter(Boolean).join(\" \");\n\t}\n\n\tget effectiveAriaDescribedBy() {\n\t\treturn this.hasValueState ? `${this._id}-descr` : undefined;\n\t}\n\n\tget hasValueState() {\n\t\treturn this.valueState !== ValueState.None;\n\t}\n\n\tget valueStateText() {\n\t\tswitch (this.valueState) {\n\t\tcase ValueState.Negative:\n\t\t\treturn RadioButton.i18nBundle.getText(VALUE_STATE_ERROR);\n\t\tcase ValueState.Critical:\n\t\t\treturn RadioButton.i18nBundle.getText(VALUE_STATE_WARNING);\n\t\tcase ValueState.Positive:\n\t\t\treturn RadioButton.i18nBundle.getText(VALUE_STATE_SUCCESS);\n\t\tcase ValueState.Information:\n\t\t\treturn RadioButton.i18nBundle.getText(VALUE_STATE_INFORMATION);\n\t\tdefault:\n\t\t\treturn \"\";\n\t\t}\n\t}\n\n\tget effectiveTabIndex() {\n\t\tconst tabindex = this.getAttribute(\"tabindex\");\n\n\t\tif (this.disabled) {\n\t\t\treturn \"-1\";\n\t\t}\n\n\t\tif (this.name) {\n\t\t\treturn this._tabIndex;\n\t\t}\n\n\t\treturn tabindex || \"0\";\n\t}\n}\n\nRadioButton.define();\n\nexport default RadioButton;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}